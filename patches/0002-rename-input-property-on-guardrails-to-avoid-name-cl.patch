From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Venelin <venelin@pulumi.com>
Date: Fri, 3 Jan 2025 16:37:43 +0200
Subject: [PATCH] rename input property on guardrails to avoid name clash


diff --git a/internal/service/serving_tf/legacy_model.go b/internal/service/serving_tf/legacy_model.go
index faa0dbe8..3f3f370c 100755
--- a/internal/service/serving_tf/legacy_model.go
+++ b/internal/service/serving_tf/legacy_model.go
@@ -443,7 +443,7 @@ func (o AiGatewayGuardrailPiiBehavior_SdkV2) Type(ctx context.Context) attr.Type
 
 type AiGatewayGuardrails_SdkV2 struct {
 	// Configuration for input guardrail filters.
-	Input types.List `tfsdk:"input" tf:"optional,object"`
+	Input types.List `tfsdk:"input_properties" tf:"optional,object"`
 	// Configuration for output guardrail filters.
 	Output types.List `tfsdk:"output" tf:"optional,object"`
 }
@@ -463,7 +463,7 @@ func (newState *AiGatewayGuardrails_SdkV2) SyncEffectiveFieldsDuringRead(existin
 // SDK values.
 func (a AiGatewayGuardrails_SdkV2) GetComplexFieldTypes(ctx context.Context) map[string]reflect.Type {
 	return map[string]reflect.Type{
-		"input":  reflect.TypeOf(AiGatewayGuardrailParameters_SdkV2{}),
+		"input_properties":  reflect.TypeOf(AiGatewayGuardrailParameters_SdkV2{}),
 		"output": reflect.TypeOf(AiGatewayGuardrailParameters_SdkV2{}),
 	}
 }
@@ -475,7 +475,7 @@ func (o AiGatewayGuardrails_SdkV2) ToObjectValue(ctx context.Context) basetypes.
 	return types.ObjectValueMust(
 		o.Type(ctx).(basetypes.ObjectType).AttrTypes,
 		map[string]attr.Value{
-			"input":  o.Input,
+			"input_properties":  o.Input,
 			"output": o.Output,
 		})
 }
@@ -484,7 +484,7 @@ func (o AiGatewayGuardrails_SdkV2) ToObjectValue(ctx context.Context) basetypes.
 func (o AiGatewayGuardrails_SdkV2) Type(ctx context.Context) attr.Type {
 	return types.ObjectType{
 		AttrTypes: map[string]attr.Type{
-			"input": basetypes.ListType{
+			"input_properties": basetypes.ListType{
 				ElemType: AiGatewayGuardrailParameters_SdkV2{}.Type(ctx),
 			},
 			"output": basetypes.ListType{
@@ -516,7 +516,7 @@ func (o *AiGatewayGuardrails_SdkV2) GetInput(ctx context.Context) (AiGatewayGuar
 // SetInput sets the value of the Input field in AiGatewayGuardrails_SdkV2.
 func (o *AiGatewayGuardrails_SdkV2) SetInput(ctx context.Context, v AiGatewayGuardrailParameters_SdkV2) {
 	vs := []attr.Value{v.ToObjectValue(ctx)}
-	t := o.Type(ctx).(basetypes.ObjectType).AttrTypes["input"]
+	t := o.Type(ctx).(basetypes.ObjectType).AttrTypes["input_properties"]
 	o.Input = types.ListValueMust(t, vs)
 }
 
diff --git a/internal/service/serving_tf/model.go b/internal/service/serving_tf/model.go
index f9bf0ddb..a8ef50bb 100755
--- a/internal/service/serving_tf/model.go
+++ b/internal/service/serving_tf/model.go
@@ -443,7 +443,7 @@ func (o AiGatewayGuardrailPiiBehavior) Type(ctx context.Context) attr.Type {
 
 type AiGatewayGuardrails struct {
 	// Configuration for input guardrail filters.
-	Input types.Object `tfsdk:"input" tf:"optional,object"`
+	Input types.Object `tfsdk:"input_properties" tf:"optional,object"`
 	// Configuration for output guardrail filters.
 	Output types.Object `tfsdk:"output" tf:"optional,object"`
 }
@@ -463,7 +463,7 @@ func (newState *AiGatewayGuardrails) SyncEffectiveFieldsDuringRead(existingState
 // SDK values.
 func (a AiGatewayGuardrails) GetComplexFieldTypes(ctx context.Context) map[string]reflect.Type {
 	return map[string]reflect.Type{
-		"input":  reflect.TypeOf(AiGatewayGuardrailParameters{}),
+		"input_properties":  reflect.TypeOf(AiGatewayGuardrailParameters{}),
 		"output": reflect.TypeOf(AiGatewayGuardrailParameters{}),
 	}
 }
@@ -475,7 +475,7 @@ func (o AiGatewayGuardrails) ToObjectValue(ctx context.Context) basetypes.Object
 	return types.ObjectValueMust(
 		o.Type(ctx).(basetypes.ObjectType).AttrTypes,
 		map[string]attr.Value{
-			"input":  o.Input,
+			"input_properties":  o.Input,
 			"output": o.Output,
 		})
 }
@@ -484,7 +484,7 @@ func (o AiGatewayGuardrails) ToObjectValue(ctx context.Context) basetypes.Object
 func (o AiGatewayGuardrails) Type(ctx context.Context) attr.Type {
 	return types.ObjectType{
 		AttrTypes: map[string]attr.Type{
-			"input":  AiGatewayGuardrailParameters{}.Type(ctx),
+			"input_properties":  AiGatewayGuardrailParameters{}.Type(ctx),
 			"output": AiGatewayGuardrailParameters{}.Type(ctx),
 		},
 	}
