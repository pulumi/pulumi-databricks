{
    "auto-aliasing": {
        "resources": {
            "databricks_catalog": {
                "current": "databricks:index/catalog:Catalog"
            },
            "databricks_cluster": {
                "current": "databricks:index/cluster:Cluster",
                "fields": {
                    "autoscale": {
                        "maxItemsOne": true
                    },
                    "aws_attributes": {
                        "maxItemsOne": true
                    },
                    "azure_attributes": {
                        "maxItemsOne": true
                    },
                    "cluster_log_conf": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dbfs": {
                                    "maxItemsOne": true
                                },
                                "s3": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "cluster_mount_info": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "network_filesystem_info": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "docker_image": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "basic_auth": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "gcp_attributes": {
                        "maxItemsOne": true
                    },
                    "init_scripts": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "abfss": {
                                    "maxItemsOne": true
                                },
                                "dbfs": {
                                    "maxItemsOne": true
                                },
                                "file": {
                                    "maxItemsOne": true
                                },
                                "gcs": {
                                    "maxItemsOne": true
                                },
                                "s3": {
                                    "maxItemsOne": true
                                },
                                "workspace": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "library": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cran": {
                                    "maxItemsOne": true
                                },
                                "maven": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "exclusions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pypi": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "ssh_public_keys": {
                        "maxItemsOne": false
                    },
                    "workload_type": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "clients": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "databricks_cluster_policy": {
                "current": "databricks:index/clusterPolicy:ClusterPolicy"
            },
            "databricks_dbfs_file": {
                "current": "databricks:index/dbfsFile:DbfsFile"
            },
            "databricks_directory": {
                "current": "databricks:index/directory:Directory"
            },
            "databricks_entitlements": {
                "current": "databricks:index/entitlements:Entitlements"
            },
            "databricks_external_location": {
                "current": "databricks:index/externalLocation:ExternalLocation"
            },
            "databricks_git_credential": {
                "current": "databricks:index/gitCredential:GitCredential"
            },
            "databricks_global_init_script": {
                "current": "databricks:index/globalInitScript:GlobalInitScript"
            },
            "databricks_grants": {
                "current": "databricks:index/grants:Grants",
                "fields": {
                    "grant": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "privileges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_group": {
                "current": "databricks:index/group:Group"
            },
            "databricks_group_instance_profile": {
                "current": "databricks:index/groupInstanceProfile:GroupInstanceProfile"
            },
            "databricks_group_member": {
                "current": "databricks:index/groupMember:GroupMember"
            },
            "databricks_group_role": {
                "current": "databricks:index/groupRole:GroupRole"
            },
            "databricks_instance_pool": {
                "current": "databricks:index/instancePool:InstancePool",
                "fields": {
                    "aws_attributes": {
                        "maxItemsOne": true
                    },
                    "azure_attributes": {
                        "maxItemsOne": true
                    },
                    "disk_spec": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disk_type": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "gcp_attributes": {
                        "maxItemsOne": true
                    },
                    "instance_pool_fleet_attributes": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "fleet_on_demand_option": {
                                    "maxItemsOne": true
                                },
                                "fleet_spot_option": {
                                    "maxItemsOne": true
                                },
                                "launch_template_override": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "preloaded_docker_image": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "basic_auth": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "preloaded_spark_versions": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_instance_profile": {
                "current": "databricks:index/instanceProfile:InstanceProfile"
            },
            "databricks_ip_access_list": {
                "current": "databricks:index/ipAccessList:IpAccessList",
                "fields": {
                    "ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_job": {
                "current": "databricks:index/job:Job",
                "fields": {
                    "continuous": {
                        "maxItemsOne": true
                    },
                    "dbt_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "commands": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "email_notifications": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "on_failure": {
                                    "maxItemsOne": false
                                },
                                "on_start": {
                                    "maxItemsOne": false
                                },
                                "on_success": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "git_source": {
                        "maxItemsOne": true
                    },
                    "job_cluster": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "new_cluster": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true
                                            },
                                            "aws_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "azure_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "cluster_log_conf": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "dbfs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "s3": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "cluster_mount_info": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "network_filesystem_info": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "docker_image": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "basic_auth": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "gcp_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "init_scripts": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "abfss": {
                                                            "maxItemsOne": true
                                                        },
                                                        "dbfs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "file": {
                                                            "maxItemsOne": true
                                                        },
                                                        "gcs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "s3": {
                                                            "maxItemsOne": true
                                                        },
                                                        "workspace": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "ssh_public_keys": {
                                                "maxItemsOne": false
                                            },
                                            "workload_type": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "clients": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "library": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cran": {
                                    "maxItemsOne": true
                                },
                                "maven": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "exclusions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pypi": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "new_cluster": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "autoscale": {
                                    "maxItemsOne": true
                                },
                                "aws_attributes": {
                                    "maxItemsOne": true
                                },
                                "azure_attributes": {
                                    "maxItemsOne": true
                                },
                                "cluster_log_conf": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dbfs": {
                                                "maxItemsOne": true
                                            },
                                            "s3": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "cluster_mount_info": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "network_filesystem_info": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "docker_image": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "basic_auth": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "gcp_attributes": {
                                    "maxItemsOne": true
                                },
                                "init_scripts": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "abfss": {
                                                "maxItemsOne": true
                                            },
                                            "dbfs": {
                                                "maxItemsOne": true
                                            },
                                            "file": {
                                                "maxItemsOne": true
                                            },
                                            "gcs": {
                                                "maxItemsOne": true
                                            },
                                            "s3": {
                                                "maxItemsOne": true
                                            },
                                            "workspace": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "ssh_public_keys": {
                                    "maxItemsOne": false
                                },
                                "workload_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "clients": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notebook_task": {
                        "maxItemsOne": true
                    },
                    "notification_settings": {
                        "maxItemsOne": true
                    },
                    "pipeline_task": {
                        "maxItemsOne": true
                    },
                    "python_wheel_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "queue": {
                        "maxItemsOne": true
                    },
                    "schedule": {
                        "maxItemsOne": true
                    },
                    "spark_jar_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "spark_python_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "spark_submit_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "task": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dbt_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "commands": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "depends_on": {
                                    "maxItemsOne": false
                                },
                                "email_notifications": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "on_failure": {
                                                "maxItemsOne": false
                                            },
                                            "on_start": {
                                                "maxItemsOne": false
                                            },
                                            "on_success": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "library": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "cran": {
                                                "maxItemsOne": true
                                            },
                                            "maven": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "exclusions": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "pypi": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "new_cluster": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true
                                            },
                                            "aws_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "azure_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "cluster_log_conf": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "dbfs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "s3": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "cluster_mount_info": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "network_filesystem_info": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "docker_image": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "basic_auth": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "gcp_attributes": {
                                                "maxItemsOne": true
                                            },
                                            "init_scripts": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "abfss": {
                                                            "maxItemsOne": true
                                                        },
                                                        "dbfs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "file": {
                                                            "maxItemsOne": true
                                                        },
                                                        "gcs": {
                                                            "maxItemsOne": true
                                                        },
                                                        "s3": {
                                                            "maxItemsOne": true
                                                        },
                                                        "workspace": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "ssh_public_keys": {
                                                "maxItemsOne": false
                                            },
                                            "workload_type": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "clients": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "notebook_task": {
                                    "maxItemsOne": true
                                },
                                "pipeline_task": {
                                    "maxItemsOne": true
                                },
                                "python_wheel_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "spark_jar_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "spark_python_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "spark_submit_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "sql_task": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "alert": {
                                                "maxItemsOne": true
                                            },
                                            "dashboard": {
                                                "maxItemsOne": true
                                            },
                                            "file": {
                                                "maxItemsOne": true
                                            },
                                            "query": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "trigger": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "file_arrival": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "webhook_notifications": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "on_failure": {
                                    "maxItemsOne": false
                                },
                                "on_start": {
                                    "maxItemsOne": false
                                },
                                "on_success": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_library": {
                "current": "databricks:index/library:Library",
                "fields": {
                    "cran": {
                        "maxItemsOne": true
                    },
                    "maven": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "exclusions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "pypi": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_metastore": {
                "current": "databricks:index/metastore:Metastore"
            },
            "databricks_metastore_assignment": {
                "current": "databricks:index/metastoreAssignment:MetastoreAssignment"
            },
            "databricks_metastore_data_access": {
                "current": "databricks:index/metastoreDataAccess:MetastoreDataAccess",
                "fields": {
                    "aws_iam_role": {
                        "maxItemsOne": true
                    },
                    "azure_managed_identity": {
                        "maxItemsOne": true
                    },
                    "azure_service_principal": {
                        "maxItemsOne": true
                    },
                    "databricks_gcp_service_account": {
                        "maxItemsOne": true
                    },
                    "gcp_service_account_key": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_mlflow_experiment": {
                "current": "databricks:index/mlflowExperiment:MlflowExperiment"
            },
            "databricks_mlflow_model": {
                "current": "databricks:index/mlflowModel:MlflowModel",
                "fields": {
                    "tags": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_mlflow_webhook": {
                "current": "databricks:index/mlflowWebhook:MlflowWebhook",
                "fields": {
                    "events": {
                        "maxItemsOne": false
                    },
                    "http_url_spec": {
                        "maxItemsOne": true
                    },
                    "job_spec": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_model_serving": {
                "current": "databricks:index/modelServing:ModelServing",
                "fields": {
                    "config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "served_models": {
                                    "maxItemsOne": false
                                },
                                "traffic_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "routes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "databricks_mount": {
                "current": "databricks:index/mount:Mount",
                "fields": {
                    "abfs": {
                        "maxItemsOne": true
                    },
                    "adl": {
                        "maxItemsOne": true
                    },
                    "gs": {
                        "maxItemsOne": true
                    },
                    "s3": {
                        "maxItemsOne": true
                    },
                    "wasb": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_mws_credentials": {
                "current": "databricks:index/mwsCredentials:MwsCredentials"
            },
            "databricks_mws_customer_managed_keys": {
                "current": "databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys",
                "fields": {
                    "aws_key_info": {
                        "maxItemsOne": true
                    },
                    "gcp_key_info": {
                        "maxItemsOne": true
                    },
                    "use_cases": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_mws_log_delivery": {
                "current": "databricks:index/mwsLogDelivery:MwsLogDelivery",
                "fields": {
                    "workspace_ids_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_mws_networks": {
                "current": "databricks:index/mwsNetworks:MwsNetworks",
                "fields": {
                    "error_messages": {
                        "maxItemsOne": false
                    },
                    "gcp_network_info": {
                        "maxItemsOne": true
                    },
                    "security_group_ids": {
                        "maxItemsOne": false
                    },
                    "subnet_ids": {
                        "maxItemsOne": false
                    },
                    "vpc_endpoints": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dataplane_relay": {
                                    "maxItemsOne": false
                                },
                                "rest_api": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_mws_permission_assignment": {
                "current": "databricks:index/mwsPermissionAssignment:MwsPermissionAssignment",
                "fields": {
                    "permissions": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_mws_private_access_settings": {
                "current": "databricks:index/mwsPrivateAccessSettings:MwsPrivateAccessSettings",
                "fields": {
                    "allowed_vpc_endpoint_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_mws_storage_configurations": {
                "current": "databricks:index/mwsStorageConfigurations:MwsStorageConfigurations"
            },
            "databricks_mws_vpc_endpoint": {
                "current": "databricks:index/mwsVpcEndpoint:MwsVpcEndpoint",
                "fields": {
                    "gcp_vpc_endpoint_info": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_mws_workspaces": {
                "current": "databricks:index/mwsWorkspaces:MwsWorkspaces",
                "fields": {
                    "cloud_resource_container": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "gcp": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "external_customer_info": {
                        "maxItemsOne": true
                    },
                    "gcp_managed_network_config": {
                        "maxItemsOne": true
                    },
                    "gke_config": {
                        "maxItemsOne": true
                    },
                    "token": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_notebook": {
                "current": "databricks:index/notebook:Notebook"
            },
            "databricks_obo_token": {
                "current": "databricks:index/oboToken:OboToken"
            },
            "databricks_permission_assignment": {
                "current": "databricks:index/permissionAssignment:PermissionAssignment",
                "fields": {
                    "permissions": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_permissions": {
                "current": "databricks:index/permissions:Permissions",
                "fields": {
                    "access_control": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_pipeline": {
                "current": "databricks:index/pipeline:Pipeline",
                "fields": {
                    "cluster": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "autoscale": {
                                    "maxItemsOne": true
                                },
                                "aws_attributes": {
                                    "maxItemsOne": true
                                },
                                "azure_attributes": {
                                    "maxItemsOne": true
                                },
                                "cluster_log_conf": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dbfs": {
                                                "maxItemsOne": true
                                            },
                                            "s3": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "gcp_attributes": {
                                    "maxItemsOne": true
                                },
                                "init_scripts": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "abfss": {
                                                "maxItemsOne": true
                                            },
                                            "dbfs": {
                                                "maxItemsOne": true
                                            },
                                            "file": {
                                                "maxItemsOne": true
                                            },
                                            "gcs": {
                                                "maxItemsOne": true
                                            },
                                            "s3": {
                                                "maxItemsOne": true
                                            },
                                            "workspace": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "ssh_public_keys": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "filters": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "exclude": {
                                    "maxItemsOne": false
                                },
                                "include": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "library": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "file": {
                                    "maxItemsOne": true
                                },
                                "maven": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "exclusions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "notebook": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "alerts": {
                                    "maxItemsOne": false
                                },
                                "email_recipients": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_provider": {
                "current": "databricks:index/metastoreProvider:MetastoreProvider"
            },
            "databricks_recipient": {
                "current": "databricks:index/recipient:Recipient",
                "fields": {
                    "ip_access_list": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tokens": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_repo": {
                "current": "databricks:index/repo:Repo",
                "fields": {
                    "sparse_checkout": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "patterns": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_schema": {
                "current": "databricks:index/schema:Schema"
            },
            "databricks_secret": {
                "current": "databricks:index/secret:Secret"
            },
            "databricks_secret_acl": {
                "current": "databricks:index/secretAcl:SecretAcl"
            },
            "databricks_secret_scope": {
                "current": "databricks:index/secretScope:SecretScope",
                "fields": {
                    "keyvault_metadata": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_service_principal": {
                "current": "databricks:index/servicePrincipal:ServicePrincipal"
            },
            "databricks_service_principal_role": {
                "current": "databricks:index/servicePrincipalRole:ServicePrincipalRole"
            },
            "databricks_service_principal_secret": {
                "current": "databricks:index/servicePrincipalSecret:ServicePrincipalSecret"
            },
            "databricks_share": {
                "current": "databricks:index/share:Share",
                "fields": {
                    "object": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "partition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "value": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "databricks_sql_alert": {
                "current": "databricks:index/sqlAlert:SqlAlert",
                "fields": {
                    "options": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_sql_dashboard": {
                "current": "databricks:index/sqlDashboard:SqlDashboard",
                "fields": {
                    "tags": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_sql_endpoint": {
                "current": "databricks:index/sqlEndpoint:SqlEndpoint",
                "fields": {
                    "channel": {
                        "maxItemsOne": true
                    },
                    "odbc_params": {
                        "maxItemsOne": true
                    },
                    "tags": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom_tags": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_sql_global_config": {
                "current": "databricks:index/sqlGlobalConfig:SqlGlobalConfig"
            },
            "databricks_sql_permissions": {
                "current": "databricks:index/sqlPermissions:SqlPermissions",
                "fields": {
                    "privilege_assignments": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "privileges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "databricks_sql_query": {
                "current": "databricks:index/sqlQuery:SqlQuery",
                "fields": {
                    "parameter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "date": {
                                    "maxItemsOne": true
                                },
                                "date_range": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "range": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "datetime": {
                                    "maxItemsOne": true
                                },
                                "datetime_range": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "range": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "datetimesec": {
                                    "maxItemsOne": true
                                },
                                "datetimesec_range": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "range": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "enum": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "multiple": {
                                                "maxItemsOne": true
                                            },
                                            "options": {
                                                "maxItemsOne": false
                                            },
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number": {
                                    "maxItemsOne": true
                                },
                                "query": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "multiple": {
                                                "maxItemsOne": true
                                            },
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "text": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "continuous": {
                                    "maxItemsOne": true
                                },
                                "daily": {
                                    "maxItemsOne": true
                                },
                                "weekly": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "tags": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_sql_table": {
                "current": "databricks:index/sqlTable:SqlTable",
                "fields": {
                    "column": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_sql_visualization": {
                "current": "databricks:index/sqlVisualization:SqlVisualization"
            },
            "databricks_sql_widget": {
                "current": "databricks:index/sqlWidget:SqlWidget",
                "fields": {
                    "parameter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "position": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_storage_credential": {
                "current": "databricks:index/storageCredential:StorageCredential",
                "fields": {
                    "aws_iam_role": {
                        "maxItemsOne": true
                    },
                    "azure_managed_identity": {
                        "maxItemsOne": true
                    },
                    "azure_service_principal": {
                        "maxItemsOne": true
                    },
                    "databricks_gcp_service_account": {
                        "maxItemsOne": true
                    },
                    "gcp_service_account_key": {
                        "maxItemsOne": true
                    }
                }
            },
            "databricks_table": {
                "current": "databricks:index/table:Table",
                "fields": {
                    "column": {
                        "maxItemsOne": false
                    }
                }
            },
            "databricks_token": {
                "current": "databricks:index/token:Token"
            },
            "databricks_user": {
                "current": "databricks:index/user:User"
            },
            "databricks_user_instance_profile": {
                "current": "databricks:index/userInstanceProfile:UserInstanceProfile"
            },
            "databricks_user_role": {
                "current": "databricks:index/userRole:UserRole"
            },
            "databricks_workspace_conf": {
                "current": "databricks:index/workspaceConf:WorkspaceConf"
            },
            "databricks_workspace_file": {
                "current": "databricks:index/workspaceFile:WorkspaceFile"
            }
        },
        "datasources": {
            "databricks_aws_assume_role_policy": {
                "current": "databricks:index/getAwsAssumeRolePolicy:getAwsAssumeRolePolicy"
            },
            "databricks_aws_bucket_policy": {
                "current": "databricks:index/getAwsBucketPolicy:getAwsBucketPolicy"
            },
            "databricks_aws_crossaccount_policy": {
                "current": "databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy"
            },
            "databricks_catalogs": {
                "current": "databricks:index/getCatalogs:getCatalogs"
            },
            "databricks_cluster": {
                "current": "databricks:index/getCluster:getCluster"
            },
            "databricks_cluster_policy": {
                "current": "databricks:index/getClusterPolicy:getClusterPolicy"
            },
            "databricks_clusters": {
                "current": "databricks:index/getClusters:getClusters"
            },
            "databricks_current_user": {
                "current": "databricks:index/getCurrentUser:getCurrentUser"
            },
            "databricks_dbfs_file": {
                "current": "databricks:index/getDbfsFile:getDbfsFile"
            },
            "databricks_dbfs_file_paths": {
                "current": "databricks:index/getDbfsFilePaths:getDbfsFilePaths"
            },
            "databricks_directory": {
                "current": "databricks:index/getDirectory:getDirectory"
            },
            "databricks_group": {
                "current": "databricks:index/getGroup:getGroup"
            },
            "databricks_instance_pool": {
                "current": "databricks:index/getInstancePool:getInstancePool"
            },
            "databricks_job": {
                "current": "databricks:index/getJob:getJob"
            },
            "databricks_jobs": {
                "current": "databricks:index/getJobs:getJobs"
            },
            "databricks_mws_credentials": {
                "current": "databricks:index/getMwsCredentials:getMwsCredentials"
            },
            "databricks_mws_workspaces": {
                "current": "databricks:index/getMwsWorkspaces:getMwsWorkspaces"
            },
            "databricks_node_type": {
                "current": "databricks:index/getNodeType:getNodeType"
            },
            "databricks_notebook": {
                "current": "databricks:index/getNotebook:getNotebook"
            },
            "databricks_notebook_paths": {
                "current": "databricks:index/getNotebookPaths:getNotebookPaths"
            },
            "databricks_pipelines": {
                "current": "databricks:index/getPipelines:getPipelines"
            },
            "databricks_schemas": {
                "current": "databricks:index/getSchemas:getSchemas"
            },
            "databricks_service_principal": {
                "current": "databricks:index/getServicePrincipal:getServicePrincipal"
            },
            "databricks_service_principals": {
                "current": "databricks:index/getServicePrincipals:getServicePrincipals"
            },
            "databricks_share": {
                "current": "databricks:index/getShare:getShare"
            },
            "databricks_shares": {
                "current": "databricks:index/getShares:getShares"
            },
            "databricks_spark_version": {
                "current": "databricks:index/getSparkVersion:getSparkVersion"
            },
            "databricks_sql_warehouse": {
                "current": "databricks:index/getSqlWarehouse:getSqlWarehouse"
            },
            "databricks_sql_warehouses": {
                "current": "databricks:index/getSqlWarehouses:getSqlWarehouses"
            },
            "databricks_tables": {
                "current": "databricks:index/getTables:getTables"
            },
            "databricks_user": {
                "current": "databricks:index/getUser:getUser"
            },
            "databricks_views": {
                "current": "databricks:index/getViews:getViews"
            },
            "databricks_zones": {
                "current": "databricks:index/getZones:getZones"
            }
        }
    },
    "renames": {
        "resources": {
            "databricks:index/catalog:Catalog": "databricks_catalog",
            "databricks:index/cluster:Cluster": "databricks_cluster",
            "databricks:index/clusterPolicy:ClusterPolicy": "databricks_cluster_policy",
            "databricks:index/dbfsFile:DbfsFile": "databricks_dbfs_file",
            "databricks:index/directory:Directory": "databricks_directory",
            "databricks:index/entitlements:Entitlements": "databricks_entitlements",
            "databricks:index/externalLocation:ExternalLocation": "databricks_external_location",
            "databricks:index/gitCredential:GitCredential": "databricks_git_credential",
            "databricks:index/globalInitScript:GlobalInitScript": "databricks_global_init_script",
            "databricks:index/grants:Grants": "databricks_grants",
            "databricks:index/group:Group": "databricks_group",
            "databricks:index/groupInstanceProfile:GroupInstanceProfile": "databricks_group_instance_profile",
            "databricks:index/groupMember:GroupMember": "databricks_group_member",
            "databricks:index/groupRole:GroupRole": "databricks_group_role",
            "databricks:index/instancePool:InstancePool": "databricks_instance_pool",
            "databricks:index/instanceProfile:InstanceProfile": "databricks_instance_profile",
            "databricks:index/ipAccessList:IpAccessList": "databricks_ip_access_list",
            "databricks:index/job:Job": "databricks_job",
            "databricks:index/library:Library": "databricks_library",
            "databricks:index/metastore:Metastore": "databricks_metastore",
            "databricks:index/metastoreAssignment:MetastoreAssignment": "databricks_metastore_assignment",
            "databricks:index/metastoreDataAccess:MetastoreDataAccess": "databricks_metastore_data_access",
            "databricks:index/metastoreProvider:MetastoreProvider": "databricks_provider",
            "databricks:index/mlflowExperiment:MlflowExperiment": "databricks_mlflow_experiment",
            "databricks:index/mlflowModel:MlflowModel": "databricks_mlflow_model",
            "databricks:index/mlflowWebhook:MlflowWebhook": "databricks_mlflow_webhook",
            "databricks:index/modelServing:ModelServing": "databricks_model_serving",
            "databricks:index/mount:Mount": "databricks_mount",
            "databricks:index/mwsCredentials:MwsCredentials": "databricks_mws_credentials",
            "databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys": "databricks_mws_customer_managed_keys",
            "databricks:index/mwsLogDelivery:MwsLogDelivery": "databricks_mws_log_delivery",
            "databricks:index/mwsNetworks:MwsNetworks": "databricks_mws_networks",
            "databricks:index/mwsPermissionAssignment:MwsPermissionAssignment": "databricks_mws_permission_assignment",
            "databricks:index/mwsPrivateAccessSettings:MwsPrivateAccessSettings": "databricks_mws_private_access_settings",
            "databricks:index/mwsStorageConfigurations:MwsStorageConfigurations": "databricks_mws_storage_configurations",
            "databricks:index/mwsVpcEndpoint:MwsVpcEndpoint": "databricks_mws_vpc_endpoint",
            "databricks:index/mwsWorkspaces:MwsWorkspaces": "databricks_mws_workspaces",
            "databricks:index/notebook:Notebook": "databricks_notebook",
            "databricks:index/oboToken:OboToken": "databricks_obo_token",
            "databricks:index/permissionAssignment:PermissionAssignment": "databricks_permission_assignment",
            "databricks:index/permissions:Permissions": "databricks_permissions",
            "databricks:index/pipeline:Pipeline": "databricks_pipeline",
            "databricks:index/recipient:Recipient": "databricks_recipient",
            "databricks:index/repo:Repo": "databricks_repo",
            "databricks:index/schema:Schema": "databricks_schema",
            "databricks:index/secret:Secret": "databricks_secret",
            "databricks:index/secretAcl:SecretAcl": "databricks_secret_acl",
            "databricks:index/secretScope:SecretScope": "databricks_secret_scope",
            "databricks:index/servicePrincipal:ServicePrincipal": "databricks_service_principal",
            "databricks:index/servicePrincipalRole:ServicePrincipalRole": "databricks_service_principal_role",
            "databricks:index/servicePrincipalSecret:ServicePrincipalSecret": "databricks_service_principal_secret",
            "databricks:index/share:Share": "databricks_share",
            "databricks:index/sqlAlert:SqlAlert": "databricks_sql_alert",
            "databricks:index/sqlDashboard:SqlDashboard": "databricks_sql_dashboard",
            "databricks:index/sqlEndpoint:SqlEndpoint": "databricks_sql_endpoint",
            "databricks:index/sqlGlobalConfig:SqlGlobalConfig": "databricks_sql_global_config",
            "databricks:index/sqlPermissions:SqlPermissions": "databricks_sql_permissions",
            "databricks:index/sqlQuery:SqlQuery": "databricks_sql_query",
            "databricks:index/sqlTable:SqlTable": "databricks_sql_table",
            "databricks:index/sqlVisualization:SqlVisualization": "databricks_sql_visualization",
            "databricks:index/sqlWidget:SqlWidget": "databricks_sql_widget",
            "databricks:index/storageCredential:StorageCredential": "databricks_storage_credential",
            "databricks:index/table:Table": "databricks_table",
            "databricks:index/token:Token": "databricks_token",
            "databricks:index/user:User": "databricks_user",
            "databricks:index/userInstanceProfile:UserInstanceProfile": "databricks_user_instance_profile",
            "databricks:index/userRole:UserRole": "databricks_user_role",
            "databricks:index/workspaceConf:WorkspaceConf": "databricks_workspace_conf",
            "databricks:index/workspaceFile:WorkspaceFile": "databricks_workspace_file"
        },
        "functions": {
            "databricks:index/getAwsAssumeRolePolicy:getAwsAssumeRolePolicy": "databricks_aws_assume_role_policy",
            "databricks:index/getAwsBucketPolicy:getAwsBucketPolicy": "databricks_aws_bucket_policy",
            "databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy": "databricks_aws_crossaccount_policy",
            "databricks:index/getCatalogs:getCatalogs": "databricks_catalogs",
            "databricks:index/getCluster:getCluster": "databricks_cluster",
            "databricks:index/getClusterPolicy:getClusterPolicy": "databricks_cluster_policy",
            "databricks:index/getClusters:getClusters": "databricks_clusters",
            "databricks:index/getCurrentUser:getCurrentUser": "databricks_current_user",
            "databricks:index/getDbfsFile:getDbfsFile": "databricks_dbfs_file",
            "databricks:index/getDbfsFilePaths:getDbfsFilePaths": "databricks_dbfs_file_paths",
            "databricks:index/getDirectory:getDirectory": "databricks_directory",
            "databricks:index/getGroup:getGroup": "databricks_group",
            "databricks:index/getInstancePool:getInstancePool": "databricks_instance_pool",
            "databricks:index/getJob:getJob": "databricks_job",
            "databricks:index/getJobs:getJobs": "databricks_jobs",
            "databricks:index/getMwsCredentials:getMwsCredentials": "databricks_mws_credentials",
            "databricks:index/getMwsWorkspaces:getMwsWorkspaces": "databricks_mws_workspaces",
            "databricks:index/getNodeType:getNodeType": "databricks_node_type",
            "databricks:index/getNotebook:getNotebook": "databricks_notebook",
            "databricks:index/getNotebookPaths:getNotebookPaths": "databricks_notebook_paths",
            "databricks:index/getPipelines:getPipelines": "databricks_pipelines",
            "databricks:index/getSchemas:getSchemas": "databricks_schemas",
            "databricks:index/getServicePrincipal:getServicePrincipal": "databricks_service_principal",
            "databricks:index/getServicePrincipals:getServicePrincipals": "databricks_service_principals",
            "databricks:index/getShare:getShare": "databricks_share",
            "databricks:index/getShares:getShares": "databricks_shares",
            "databricks:index/getSparkVersion:getSparkVersion": "databricks_spark_version",
            "databricks:index/getSqlWarehouse:getSqlWarehouse": "databricks_sql_warehouse",
            "databricks:index/getSqlWarehouses:getSqlWarehouses": "databricks_sql_warehouses",
            "databricks:index/getTables:getTables": "databricks_tables",
            "databricks:index/getUser:getUser": "databricks_user",
            "databricks:index/getViews:getViews": "databricks_views",
            "databricks:index/getZones:getZones": "databricks_zones"
        },
        "renamedProperties": {
            "databricks:index/ClusterAutoscale:ClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/ClusterAwsAttributes:ClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/ClusterAzureAttributes:ClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/ClusterClusterLogConfS3:ClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/ClusterClusterMountInfo:ClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/ClusterClusterMountInfoNetworkFilesystemInfo:ClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/ClusterDockerImage:ClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/ClusterGcpAttributes:ClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/ClusterInitScriptS3:ClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/InstancePoolAwsAttributes:InstancePoolAwsAttributes": {
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/InstancePoolAzureAttributes:InstancePoolAzureAttributes": {
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/InstancePoolDiskSpec:InstancePoolDiskSpec": {
                "diskCount": "disk_count",
                "diskSize": "disk_size",
                "diskType": "disk_type"
            },
            "databricks:index/InstancePoolDiskSpecDiskType:InstancePoolDiskSpecDiskType": {
                "azureDiskVolumeType": "azure_disk_volume_type",
                "ebsVolumeType": "ebs_volume_type"
            },
            "databricks:index/InstancePoolGcpAttributes:InstancePoolGcpAttributes": {
                "gcpAvailability": "gcp_availability"
            },
            "databricks:index/InstancePoolInstancePoolFleetAttributes:InstancePoolInstancePoolFleetAttributes": {
                "fleetOnDemandOption": "fleet_on_demand_option",
                "fleetSpotOption": "fleet_spot_option",
                "launchTemplateOverrides": "launch_template_override"
            },
            "databricks:index/InstancePoolInstancePoolFleetAttributesFleetOnDemandOption:InstancePoolInstancePoolFleetAttributesFleetOnDemandOption": {
                "allocationStrategy": "allocation_strategy",
                "instancePoolsToUseCount": "instance_pools_to_use_count"
            },
            "databricks:index/InstancePoolInstancePoolFleetAttributesFleetSpotOption:InstancePoolInstancePoolFleetAttributesFleetSpotOption": {
                "allocationStrategy": "allocation_strategy",
                "instancePoolsToUseCount": "instance_pools_to_use_count"
            },
            "databricks:index/InstancePoolInstancePoolFleetAttributesLaunchTemplateOverride:InstancePoolInstancePoolFleetAttributesLaunchTemplateOverride": {
                "availabilityZone": "availability_zone",
                "instanceType": "instance_type"
            },
            "databricks:index/InstancePoolPreloadedDockerImage:InstancePoolPreloadedDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/JobContinuous:JobContinuous": {
                "pauseStatus": "pause_status"
            },
            "databricks:index/JobDbtTask:JobDbtTask": {
                "profilesDirectory": "profiles_directory",
                "projectDirectory": "project_directory",
                "warehouseId": "warehouse_id"
            },
            "databricks:index/JobEmailNotifications:JobEmailNotifications": {
                "alertOnLastAttempt": "alert_on_last_attempt",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs",
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/JobJobCluster:JobJobCluster": {
                "jobClusterKey": "job_cluster_key",
                "newCluster": "new_cluster"
            },
            "databricks:index/JobJobClusterNewCluster:JobJobClusterNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/JobJobClusterNewClusterAutoscale:JobJobClusterNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/JobJobClusterNewClusterAwsAttributes:JobJobClusterNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/JobJobClusterNewClusterAzureAttributes:JobJobClusterNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/JobJobClusterNewClusterClusterLogConfS3:JobJobClusterNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobJobClusterNewClusterClusterMountInfo:JobJobClusterNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/JobJobClusterNewClusterClusterMountInfoNetworkFilesystemInfo:JobJobClusterNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/JobJobClusterNewClusterDockerImage:JobJobClusterNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/JobJobClusterNewClusterGcpAttributes:JobJobClusterNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/JobJobClusterNewClusterInitScriptS3:JobJobClusterNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobNewCluster:JobNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/JobNewClusterAutoscale:JobNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/JobNewClusterAwsAttributes:JobNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/JobNewClusterAzureAttributes:JobNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/JobNewClusterClusterLogConfS3:JobNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobNewClusterClusterMountInfo:JobNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/JobNewClusterClusterMountInfoNetworkFilesystemInfo:JobNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/JobNewClusterDockerImage:JobNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/JobNewClusterGcpAttributes:JobNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/JobNewClusterInitScriptS3:JobNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobNotebookTask:JobNotebookTask": {
                "baseParameters": "base_parameters",
                "notebookPath": "notebook_path"
            },
            "databricks:index/JobNotificationSettings:JobNotificationSettings": {
                "noAlertForCanceledRuns": "no_alert_for_canceled_runs",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs"
            },
            "databricks:index/JobPipelineTask:JobPipelineTask": {
                "pipelineId": "pipeline_id"
            },
            "databricks:index/JobPythonWheelTask:JobPythonWheelTask": {
                "entryPoint": "entry_point",
                "namedParameters": "named_parameters",
                "packageName": "package_name"
            },
            "databricks:index/JobSchedule:JobSchedule": {
                "pauseStatus": "pause_status",
                "quartzCronExpression": "quartz_cron_expression",
                "timezoneId": "timezone_id"
            },
            "databricks:index/JobSparkJarTask:JobSparkJarTask": {
                "jarUri": "jar_uri",
                "mainClassName": "main_class_name"
            },
            "databricks:index/JobSparkPythonTask:JobSparkPythonTask": {
                "pythonFile": "python_file"
            },
            "databricks:index/JobTask:JobTask": {
                "dbtTask": "dbt_task",
                "dependsOns": "depends_on",
                "emailNotifications": "email_notifications",
                "existingClusterId": "existing_cluster_id",
                "jobClusterKey": "job_cluster_key",
                "libraries": "library",
                "maxRetries": "max_retries",
                "minRetryIntervalMillis": "min_retry_interval_millis",
                "newCluster": "new_cluster",
                "notebookTask": "notebook_task",
                "pipelineTask": "pipeline_task",
                "pythonWheelTask": "python_wheel_task",
                "retryOnTimeout": "retry_on_timeout",
                "runIf": "run_if",
                "sparkJarTask": "spark_jar_task",
                "sparkPythonTask": "spark_python_task",
                "sparkSubmitTask": "spark_submit_task",
                "sqlTask": "sql_task",
                "taskKey": "task_key",
                "timeoutSeconds": "timeout_seconds"
            },
            "databricks:index/JobTaskDbtTask:JobTaskDbtTask": {
                "profilesDirectory": "profiles_directory",
                "projectDirectory": "project_directory",
                "warehouseId": "warehouse_id"
            },
            "databricks:index/JobTaskDependsOn:JobTaskDependsOn": {
                "taskKey": "task_key"
            },
            "databricks:index/JobTaskEmailNotifications:JobTaskEmailNotifications": {
                "alertOnLastAttempt": "alert_on_last_attempt",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs",
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/JobTaskNewCluster:JobTaskNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/JobTaskNewClusterAutoscale:JobTaskNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/JobTaskNewClusterAwsAttributes:JobTaskNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/JobTaskNewClusterAzureAttributes:JobTaskNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/JobTaskNewClusterClusterLogConfS3:JobTaskNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobTaskNewClusterClusterMountInfo:JobTaskNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/JobTaskNewClusterClusterMountInfoNetworkFilesystemInfo:JobTaskNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/JobTaskNewClusterDockerImage:JobTaskNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/JobTaskNewClusterGcpAttributes:JobTaskNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/JobTaskNewClusterInitScriptS3:JobTaskNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/JobTaskNotebookTask:JobTaskNotebookTask": {
                "baseParameters": "base_parameters",
                "notebookPath": "notebook_path"
            },
            "databricks:index/JobTaskPipelineTask:JobTaskPipelineTask": {
                "pipelineId": "pipeline_id"
            },
            "databricks:index/JobTaskPythonWheelTask:JobTaskPythonWheelTask": {
                "entryPoint": "entry_point",
                "namedParameters": "named_parameters",
                "packageName": "package_name"
            },
            "databricks:index/JobTaskSparkJarTask:JobTaskSparkJarTask": {
                "jarUri": "jar_uri",
                "mainClassName": "main_class_name"
            },
            "databricks:index/JobTaskSparkPythonTask:JobTaskSparkPythonTask": {
                "pythonFile": "python_file"
            },
            "databricks:index/JobTaskSqlTask:JobTaskSqlTask": {
                "warehouseId": "warehouse_id"
            },
            "databricks:index/JobTaskSqlTaskAlert:JobTaskSqlTaskAlert": {
                "alertId": "alert_id"
            },
            "databricks:index/JobTaskSqlTaskDashboard:JobTaskSqlTaskDashboard": {
                "dashboardId": "dashboard_id"
            },
            "databricks:index/JobTaskSqlTaskQuery:JobTaskSqlTaskQuery": {
                "queryId": "query_id"
            },
            "databricks:index/JobTrigger:JobTrigger": {
                "fileArrival": "file_arrival",
                "pauseStatus": "pause_status"
            },
            "databricks:index/JobTriggerFileArrival:JobTriggerFileArrival": {
                "minTimeBetweenTriggerSeconds": "min_time_between_trigger_seconds",
                "waitAfterLastChangeSeconds": "wait_after_last_change_seconds"
            },
            "databricks:index/JobWebhookNotifications:JobWebhookNotifications": {
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/MetastoreDataAccessAwsIamRole:MetastoreDataAccessAwsIamRole": {
                "roleArn": "role_arn"
            },
            "databricks:index/MetastoreDataAccessAzureManagedIdentity:MetastoreDataAccessAzureManagedIdentity": {
                "accessConnectorId": "access_connector_id"
            },
            "databricks:index/MetastoreDataAccessAzureServicePrincipal:MetastoreDataAccessAzureServicePrincipal": {
                "applicationId": "application_id",
                "clientSecret": "client_secret",
                "directoryId": "directory_id"
            },
            "databricks:index/MetastoreDataAccessGcpServiceAccountKey:MetastoreDataAccessGcpServiceAccountKey": {
                "privateKey": "private_key",
                "privateKeyId": "private_key_id"
            },
            "databricks:index/MlflowWebhookHttpUrlSpec:MlflowWebhookHttpUrlSpec": {
                "enableSslVerification": "enable_ssl_verification"
            },
            "databricks:index/MlflowWebhookJobSpec:MlflowWebhookJobSpec": {
                "accessToken": "access_token",
                "jobId": "job_id",
                "workspaceUrl": "workspace_url"
            },
            "databricks:index/ModelServingConfig:ModelServingConfig": {
                "servedModels": "served_models",
                "trafficConfig": "traffic_config"
            },
            "databricks:index/ModelServingConfigServedModel:ModelServingConfigServedModel": {
                "modelName": "model_name",
                "modelVersion": "model_version",
                "scaleToZeroEnabled": "scale_to_zero_enabled",
                "workloadSize": "workload_size"
            },
            "databricks:index/ModelServingConfigTrafficConfigRoute:ModelServingConfigTrafficConfigRoute": {
                "servedModelName": "served_model_name",
                "trafficPercentage": "traffic_percentage"
            },
            "databricks:index/MountAbfs:MountAbfs": {
                "clientId": "client_id",
                "clientSecretKey": "client_secret_key",
                "clientSecretScope": "client_secret_scope",
                "containerName": "container_name",
                "initializeFileSystem": "initialize_file_system",
                "storageAccountName": "storage_account_name",
                "tenantId": "tenant_id"
            },
            "databricks:index/MountAdl:MountAdl": {
                "clientId": "client_id",
                "clientSecretKey": "client_secret_key",
                "clientSecretScope": "client_secret_scope",
                "sparkConfPrefix": "spark_conf_prefix",
                "storageResourceName": "storage_resource_name",
                "tenantId": "tenant_id"
            },
            "databricks:index/MountGs:MountGs": {
                "bucketName": "bucket_name",
                "serviceAccount": "service_account"
            },
            "databricks:index/MountS3:MountS3": {
                "bucketName": "bucket_name",
                "instanceProfile": "instance_profile"
            },
            "databricks:index/MountWasb:MountWasb": {
                "authType": "auth_type",
                "containerName": "container_name",
                "storageAccountName": "storage_account_name",
                "tokenSecretKey": "token_secret_key",
                "tokenSecretScope": "token_secret_scope"
            },
            "databricks:index/MwsCustomerManagedKeysAwsKeyInfo:MwsCustomerManagedKeysAwsKeyInfo": {
                "keyAlias": "key_alias",
                "keyArn": "key_arn",
                "keyRegion": "key_region"
            },
            "databricks:index/MwsCustomerManagedKeysGcpKeyInfo:MwsCustomerManagedKeysGcpKeyInfo": {
                "kmsKeyId": "kms_key_id"
            },
            "databricks:index/MwsNetworksErrorMessage:MwsNetworksErrorMessage": {
                "errorMessage": "error_message",
                "errorType": "error_type"
            },
            "databricks:index/MwsNetworksGcpNetworkInfo:MwsNetworksGcpNetworkInfo": {
                "networkProjectId": "network_project_id",
                "podIpRangeName": "pod_ip_range_name",
                "serviceIpRangeName": "service_ip_range_name",
                "subnetId": "subnet_id",
                "subnetRegion": "subnet_region",
                "vpcId": "vpc_id"
            },
            "databricks:index/MwsNetworksVpcEndpoints:MwsNetworksVpcEndpoints": {
                "dataplaneRelays": "dataplane_relay",
                "restApis": "rest_api"
            },
            "databricks:index/MwsVpcEndpointGcpVpcEndpointInfo:MwsVpcEndpointGcpVpcEndpointInfo": {
                "endpointRegion": "endpoint_region",
                "projectId": "project_id",
                "pscConnectionId": "psc_connection_id",
                "pscEndpointName": "psc_endpoint_name",
                "serviceAttachmentId": "service_attachment_id"
            },
            "databricks:index/MwsWorkspacesCloudResourceContainerGcp:MwsWorkspacesCloudResourceContainerGcp": {
                "projectId": "project_id"
            },
            "databricks:index/MwsWorkspacesExternalCustomerInfo:MwsWorkspacesExternalCustomerInfo": {
                "authoritativeUserEmail": "authoritative_user_email",
                "authoritativeUserFullName": "authoritative_user_full_name",
                "customerName": "customer_name"
            },
            "databricks:index/MwsWorkspacesGcpManagedNetworkConfig:MwsWorkspacesGcpManagedNetworkConfig": {
                "gkeClusterPodIpRange": "gke_cluster_pod_ip_range",
                "gkeClusterServiceIpRange": "gke_cluster_service_ip_range",
                "subnetCidr": "subnet_cidr"
            },
            "databricks:index/MwsWorkspacesGkeConfig:MwsWorkspacesGkeConfig": {
                "connectivityType": "connectivity_type",
                "masterIpRange": "master_ip_range"
            },
            "databricks:index/MwsWorkspacesToken:MwsWorkspacesToken": {
                "lifetimeSeconds": "lifetime_seconds",
                "tokenId": "token_id",
                "tokenValue": "token_value"
            },
            "databricks:index/PermissionsAccessControl:PermissionsAccessControl": {
                "groupName": "group_name",
                "permissionLevel": "permission_level",
                "servicePrincipalName": "service_principal_name",
                "userName": "user_name"
            },
            "databricks:index/PipelineCluster:PipelineCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterLogConf": "cluster_log_conf",
                "customTags": "custom_tags",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sshPublicKeys": "ssh_public_keys"
            },
            "databricks:index/PipelineClusterAutoscale:PipelineClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/PipelineClusterAwsAttributes:PipelineClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/PipelineClusterAzureAttributes:PipelineClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/PipelineClusterClusterLogConfS3:PipelineClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/PipelineClusterGcpAttributes:PipelineClusterGcpAttributes": {
                "googleServiceAccount": "google_service_account",
                "zoneId": "zone_id"
            },
            "databricks:index/PipelineClusterInitScriptS3:PipelineClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/PipelineFilters:PipelineFilters": {
                "excludes": "exclude",
                "includes": "include"
            },
            "databricks:index/PipelineNotification:PipelineNotification": {
                "emailRecipients": "email_recipients"
            },
            "databricks:index/RecipientIpAccessList:RecipientIpAccessList": {
                "allowedIpAddresses": "allowed_ip_addresses"
            },
            "databricks:index/RecipientToken:RecipientToken": {
                "activationUrl": "activation_url",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "expirationTime": "expiration_time",
                "updatedAt": "updated_at",
                "updatedBy": "updated_by"
            },
            "databricks:index/SecretScopeKeyvaultMetadata:SecretScopeKeyvaultMetadata": {
                "dnsName": "dns_name",
                "resourceId": "resource_id"
            },
            "databricks:index/ShareObject:ShareObject": {
                "addedAt": "added_at",
                "addedBy": "added_by",
                "cdfEnabled": "cdf_enabled",
                "dataObjectType": "data_object_type",
                "historyDataSharingStatus": "history_data_sharing_status",
                "partitions": "partition",
                "sharedAs": "shared_as",
                "startVersion": "start_version"
            },
            "databricks:index/ShareObjectPartition:ShareObjectPartition": {
                "values": "value"
            },
            "databricks:index/ShareObjectPartitionValue:ShareObjectPartitionValue": {
                "recipientPropertyKey": "recipient_property_key"
            },
            "databricks:index/SqlAlertOptions:SqlAlertOptions": {
                "customBody": "custom_body",
                "customSubject": "custom_subject"
            },
            "databricks:index/SqlEndpointTags:SqlEndpointTags": {
                "customTags": "custom_tags"
            },
            "databricks:index/SqlQueryParameter:SqlQueryParameter": {
                "dateRange": "date_range",
                "datetimeRange": "datetime_range",
                "datetimesecRange": "datetimesec_range"
            },
            "databricks:index/SqlQueryParameterQuery:SqlQueryParameterQuery": {
                "queryId": "query_id"
            },
            "databricks:index/SqlQueryScheduleContinuous:SqlQueryScheduleContinuous": {
                "intervalSeconds": "interval_seconds",
                "untilDate": "until_date"
            },
            "databricks:index/SqlQueryScheduleDaily:SqlQueryScheduleDaily": {
                "intervalDays": "interval_days",
                "timeOfDay": "time_of_day",
                "untilDate": "until_date"
            },
            "databricks:index/SqlQueryScheduleWeekly:SqlQueryScheduleWeekly": {
                "dayOfWeek": "day_of_week",
                "intervalWeeks": "interval_weeks",
                "timeOfDay": "time_of_day",
                "untilDate": "until_date"
            },
            "databricks:index/SqlWidgetParameter:SqlWidgetParameter": {
                "mapTo": "map_to"
            },
            "databricks:index/SqlWidgetPosition:SqlWidgetPosition": {
                "autoHeight": "auto_height",
                "posX": "pos_x",
                "posY": "pos_y",
                "sizeX": "size_x",
                "sizeY": "size_y"
            },
            "databricks:index/StorageCredentialAwsIamRole:StorageCredentialAwsIamRole": {
                "roleArn": "role_arn"
            },
            "databricks:index/StorageCredentialAzureManagedIdentity:StorageCredentialAzureManagedIdentity": {
                "accessConnectorId": "access_connector_id"
            },
            "databricks:index/StorageCredentialAzureServicePrincipal:StorageCredentialAzureServicePrincipal": {
                "applicationId": "application_id",
                "clientSecret": "client_secret",
                "directoryId": "directory_id"
            },
            "databricks:index/StorageCredentialGcpServiceAccountKey:StorageCredentialGcpServiceAccountKey": {
                "privateKey": "private_key",
                "privateKeyId": "private_key_id"
            },
            "databricks:index/TableColumn:TableColumn": {
                "partitionIndex": "partition_index",
                "typeIntervalType": "type_interval_type",
                "typeJson": "type_json",
                "typeName": "type_name",
                "typePrecision": "type_precision",
                "typeScale": "type_scale",
                "typeText": "type_text"
            },
            "databricks:index/catalog:Catalog": {
                "forceDestroy": "force_destroy",
                "metastoreId": "metastore_id",
                "providerName": "provider_name",
                "shareName": "share_name",
                "storageRoot": "storage_root"
            },
            "databricks:index/cluster:Cluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "defaultTags": "default_tags",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "isPinned": "is_pinned",
                "libraries": "library",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/clusterPolicy:ClusterPolicy": {
                "maxClustersPerUser": "max_clusters_per_user",
                "policyFamilyDefinitionOverrides": "policy_family_definition_overrides",
                "policyFamilyId": "policy_family_id",
                "policyId": "policy_id"
            },
            "databricks:index/dbfsFile:DbfsFile": {
                "contentBase64": "content_base64",
                "dbfsPath": "dbfs_path",
                "fileSize": "file_size"
            },
            "databricks:index/directory:Directory": {
                "deleteRecursive": "delete_recursive",
                "objectId": "object_id"
            },
            "databricks:index/entitlements:Entitlements": {
                "allowClusterCreate": "allow_cluster_create",
                "allowInstancePoolCreate": "allow_instance_pool_create",
                "databricksSqlAccess": "databricks_sql_access",
                "groupId": "group_id",
                "servicePrincipalId": "service_principal_id",
                "userId": "user_id",
                "workspaceAccess": "workspace_access"
            },
            "databricks:index/externalLocation:ExternalLocation": {
                "credentialName": "credential_name",
                "metastoreId": "metastore_id",
                "skipValidation": "skip_validation"
            },
            "databricks:index/getAwsAssumeRolePolicy:getAwsAssumeRolePolicy": {
                "databricksAccountId": "databricks_account_id",
                "externalId": "external_id",
                "forLogDelivery": "for_log_delivery"
            },
            "databricks:index/getAwsBucketPolicy:getAwsBucketPolicy": {
                "databricksAccountId": "databricks_account_id",
                "databricksE2AccountId": "databricks_e2_account_id",
                "fullAccessRole": "full_access_role"
            },
            "databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy": {
                "passRoles": "pass_roles"
            },
            "databricks:index/getCluster:getCluster": {
                "clusterId": "cluster_id",
                "clusterInfo": "cluster_info",
                "clusterName": "cluster_name"
            },
            "databricks:index/getClusterClusterInfo:getClusterClusterInfo": {
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterCores": "cluster_cores",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterLogStatus": "cluster_log_status",
                "clusterMemoryMb": "cluster_memory_mb",
                "clusterName": "cluster_name",
                "clusterSource": "cluster_source",
                "creatorUserName": "creator_user_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "defaultTags": "default_tags",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "jdbcPort": "jdbc_port",
                "lastActivityTime": "last_activity_time",
                "lastStateLossTime": "last_state_loss_time",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkContextId": "spark_context_id",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "startTime": "start_time",
                "stateMessage": "state_message",
                "terminateTime": "terminate_time",
                "terminationReason": "termination_reason"
            },
            "databricks:index/getClusterClusterInfoAutoscale:getClusterClusterInfoAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/getClusterClusterInfoAwsAttributes:getClusterClusterInfoAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/getClusterClusterInfoAzureAttributes:getClusterClusterInfoAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/getClusterClusterInfoClusterLogConfS3:getClusterClusterInfoClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getClusterClusterInfoClusterLogStatus:getClusterClusterInfoClusterLogStatus": {
                "lastAttempted": "last_attempted",
                "lastException": "last_exception"
            },
            "databricks:index/getClusterClusterInfoDockerImage:getClusterClusterInfoDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/getClusterClusterInfoDriver:getClusterClusterInfoDriver": {
                "hostPrivateIp": "host_private_ip",
                "instanceId": "instance_id",
                "nodeAwsAttributes": "node_aws_attributes",
                "nodeId": "node_id",
                "privateIp": "private_ip",
                "publicDns": "public_dns",
                "startTimestamp": "start_timestamp"
            },
            "databricks:index/getClusterClusterInfoDriverNodeAwsAttributes:getClusterClusterInfoDriverNodeAwsAttributes": {
                "isSpot": "is_spot"
            },
            "databricks:index/getClusterClusterInfoExecutor:getClusterClusterInfoExecutor": {
                "hostPrivateIp": "host_private_ip",
                "instanceId": "instance_id",
                "nodeAwsAttributes": "node_aws_attributes",
                "nodeId": "node_id",
                "privateIp": "private_ip",
                "publicDns": "public_dns",
                "startTimestamp": "start_timestamp"
            },
            "databricks:index/getClusterClusterInfoExecutorNodeAwsAttributes:getClusterClusterInfoExecutorNodeAwsAttributes": {
                "isSpot": "is_spot"
            },
            "databricks:index/getClusterClusterInfoGcpAttributes:getClusterClusterInfoGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/getClusterClusterInfoInitScriptS3:getClusterClusterInfoInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getClusterPolicy:getClusterPolicy": {
                "maxClustersPerUser": "max_clusters_per_user"
            },
            "databricks:index/getClusters:getClusters": {
                "clusterNameContains": "cluster_name_contains"
            },
            "databricks:index/getCurrentUser:getCurrentUser": {
                "externalId": "external_id",
                "userName": "user_name",
                "workspaceUrl": "workspace_url"
            },
            "databricks:index/getDbfsFile:getDbfsFile": {
                "fileSize": "file_size",
                "limitFileSize": "limit_file_size"
            },
            "databricks:index/getDbfsFilePaths:getDbfsFilePaths": {
                "pathLists": "path_list"
            },
            "databricks:index/getDbfsFilePathsPathList:getDbfsFilePathsPathList": {
                "fileSize": "file_size"
            },
            "databricks:index/getDirectory:getDirectory": {
                "objectId": "object_id"
            },
            "databricks:index/getGroup:getGroup": {
                "allowClusterCreate": "allow_cluster_create",
                "allowInstancePoolCreate": "allow_instance_pool_create",
                "childGroups": "child_groups",
                "databricksSqlAccess": "databricks_sql_access",
                "displayName": "display_name",
                "externalId": "external_id",
                "instanceProfiles": "instance_profiles",
                "servicePrincipals": "service_principals",
                "workspaceAccess": "workspace_access"
            },
            "databricks:index/getInstancePool:getInstancePool": {
                "poolInfo": "pool_info"
            },
            "databricks:index/getInstancePoolPoolInfo:getInstancePoolPoolInfo": {
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "customTags": "custom_tags",
                "defaultTags": "default_tags",
                "diskSpec": "disk_spec",
                "enableElasticDisk": "enable_elastic_disk",
                "gcpAttributes": "gcp_attributes",
                "idleInstanceAutoterminationMinutes": "idle_instance_autotermination_minutes",
                "instancePoolFleetAttributes": "instance_pool_fleet_attributes",
                "instancePoolId": "instance_pool_id",
                "instancePoolName": "instance_pool_name",
                "maxCapacity": "max_capacity",
                "minIdleInstances": "min_idle_instances",
                "nodeTypeId": "node_type_id",
                "preloadedDockerImages": "preloaded_docker_image",
                "preloadedSparkVersions": "preloaded_spark_versions"
            },
            "databricks:index/getInstancePoolPoolInfoAwsAttributes:getInstancePoolPoolInfoAwsAttributes": {
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/getInstancePoolPoolInfoAzureAttributes:getInstancePoolPoolInfoAzureAttributes": {
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/getInstancePoolPoolInfoDiskSpec:getInstancePoolPoolInfoDiskSpec": {
                "diskCount": "disk_count",
                "diskSize": "disk_size",
                "diskType": "disk_type"
            },
            "databricks:index/getInstancePoolPoolInfoDiskSpecDiskType:getInstancePoolPoolInfoDiskSpecDiskType": {
                "azureDiskVolumeType": "azure_disk_volume_type",
                "ebsVolumeType": "ebs_volume_type"
            },
            "databricks:index/getInstancePoolPoolInfoGcpAttributes:getInstancePoolPoolInfoGcpAttributes": {
                "gcpAvailability": "gcp_availability"
            },
            "databricks:index/getInstancePoolPoolInfoInstancePoolFleetAttribute:getInstancePoolPoolInfoInstancePoolFleetAttribute": {
                "fleetOnDemandOption": "fleet_on_demand_option",
                "fleetSpotOption": "fleet_spot_option",
                "launchTemplateOverrides": "launch_template_override"
            },
            "databricks:index/getInstancePoolPoolInfoInstancePoolFleetAttributeFleetOnDemandOption:getInstancePoolPoolInfoInstancePoolFleetAttributeFleetOnDemandOption": {
                "allocationStrategy": "allocation_strategy",
                "instancePoolsToUseCount": "instance_pools_to_use_count"
            },
            "databricks:index/getInstancePoolPoolInfoInstancePoolFleetAttributeFleetSpotOption:getInstancePoolPoolInfoInstancePoolFleetAttributeFleetSpotOption": {
                "allocationStrategy": "allocation_strategy",
                "instancePoolsToUseCount": "instance_pools_to_use_count"
            },
            "databricks:index/getInstancePoolPoolInfoInstancePoolFleetAttributeLaunchTemplateOverride:getInstancePoolPoolInfoInstancePoolFleetAttributeLaunchTemplateOverride": {
                "availabilityZone": "availability_zone",
                "instanceType": "instance_type"
            },
            "databricks:index/getInstancePoolPoolInfoPreloadedDockerImage:getInstancePoolPoolInfoPreloadedDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/getInstancePoolPoolInfoStats:getInstancePoolPoolInfoStats": {
                "idleCount": "idle_count",
                "pendingIdleCount": "pending_idle_count",
                "pendingUsedCount": "pending_used_count",
                "usedCount": "used_count"
            },
            "databricks:index/getJob:getJob": {
                "jobId": "job_id",
                "jobName": "job_name",
                "jobSettings": "job_settings"
            },
            "databricks:index/getJobJobSettings:getJobJobSettings": {
                "createdTime": "created_time",
                "creatorUserName": "creator_user_name",
                "jobId": "job_id"
            },
            "databricks:index/getJobJobSettingsSettings:getJobJobSettingsSettings": {
                "dbtTask": "dbt_task",
                "emailNotifications": "email_notifications",
                "existingClusterId": "existing_cluster_id",
                "gitSource": "git_source",
                "jobClusters": "job_cluster",
                "libraries": "library",
                "maxConcurrentRuns": "max_concurrent_runs",
                "maxRetries": "max_retries",
                "minRetryIntervalMillis": "min_retry_interval_millis",
                "newCluster": "new_cluster",
                "notebookTask": "notebook_task",
                "notificationSettings": "notification_settings",
                "pipelineTask": "pipeline_task",
                "pythonWheelTask": "python_wheel_task",
                "retryOnTimeout": "retry_on_timeout",
                "sparkJarTask": "spark_jar_task",
                "sparkPythonTask": "spark_python_task",
                "sparkSubmitTask": "spark_submit_task",
                "tasks": "task",
                "timeoutSeconds": "timeout_seconds",
                "webhookNotifications": "webhook_notifications"
            },
            "databricks:index/getJobJobSettingsSettingsContinuous:getJobJobSettingsSettingsContinuous": {
                "pauseStatus": "pause_status"
            },
            "databricks:index/getJobJobSettingsSettingsDbtTask:getJobJobSettingsSettingsDbtTask": {
                "profilesDirectory": "profiles_directory",
                "projectDirectory": "project_directory",
                "warehouseId": "warehouse_id"
            },
            "databricks:index/getJobJobSettingsSettingsEmailNotifications:getJobJobSettingsSettingsEmailNotifications": {
                "alertOnLastAttempt": "alert_on_last_attempt",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs",
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/getJobJobSettingsSettingsJobCluster:getJobJobSettingsSettingsJobCluster": {
                "jobClusterKey": "job_cluster_key",
                "newCluster": "new_cluster"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewCluster:getJobJobSettingsSettingsJobClusterNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterAutoscale:getJobJobSettingsSettingsJobClusterNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterAwsAttributes:getJobJobSettingsSettingsJobClusterNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterAzureAttributes:getJobJobSettingsSettingsJobClusterNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterClusterLogConfS3:getJobJobSettingsSettingsJobClusterNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterClusterMountInfo:getJobJobSettingsSettingsJobClusterNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterClusterMountInfoNetworkFilesystemInfo:getJobJobSettingsSettingsJobClusterNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterDockerImage:getJobJobSettingsSettingsJobClusterNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterGcpAttributes:getJobJobSettingsSettingsJobClusterNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsJobClusterNewClusterInitScriptS3:getJobJobSettingsSettingsJobClusterNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsNewCluster:getJobJobSettingsSettingsNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterAutoscale:getJobJobSettingsSettingsNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterAwsAttributes:getJobJobSettingsSettingsNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterAzureAttributes:getJobJobSettingsSettingsNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterClusterLogConfS3:getJobJobSettingsSettingsNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterClusterMountInfo:getJobJobSettingsSettingsNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterClusterMountInfoNetworkFilesystemInfo:getJobJobSettingsSettingsNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterDockerImage:getJobJobSettingsSettingsNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterGcpAttributes:getJobJobSettingsSettingsNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsNewClusterInitScriptS3:getJobJobSettingsSettingsNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsNotebookTask:getJobJobSettingsSettingsNotebookTask": {
                "baseParameters": "base_parameters",
                "notebookPath": "notebook_path"
            },
            "databricks:index/getJobJobSettingsSettingsNotificationSettings:getJobJobSettingsSettingsNotificationSettings": {
                "noAlertForCanceledRuns": "no_alert_for_canceled_runs",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs"
            },
            "databricks:index/getJobJobSettingsSettingsPipelineTask:getJobJobSettingsSettingsPipelineTask": {
                "pipelineId": "pipeline_id"
            },
            "databricks:index/getJobJobSettingsSettingsPythonWheelTask:getJobJobSettingsSettingsPythonWheelTask": {
                "entryPoint": "entry_point",
                "namedParameters": "named_parameters",
                "packageName": "package_name"
            },
            "databricks:index/getJobJobSettingsSettingsSchedule:getJobJobSettingsSettingsSchedule": {
                "pauseStatus": "pause_status",
                "quartzCronExpression": "quartz_cron_expression",
                "timezoneId": "timezone_id"
            },
            "databricks:index/getJobJobSettingsSettingsSparkJarTask:getJobJobSettingsSettingsSparkJarTask": {
                "jarUri": "jar_uri",
                "mainClassName": "main_class_name"
            },
            "databricks:index/getJobJobSettingsSettingsSparkPythonTask:getJobJobSettingsSettingsSparkPythonTask": {
                "pythonFile": "python_file"
            },
            "databricks:index/getJobJobSettingsSettingsTask:getJobJobSettingsSettingsTask": {
                "dbtTask": "dbt_task",
                "dependsOns": "depends_on",
                "emailNotifications": "email_notifications",
                "existingClusterId": "existing_cluster_id",
                "jobClusterKey": "job_cluster_key",
                "libraries": "library",
                "maxRetries": "max_retries",
                "minRetryIntervalMillis": "min_retry_interval_millis",
                "newCluster": "new_cluster",
                "notebookTask": "notebook_task",
                "pipelineTask": "pipeline_task",
                "pythonWheelTask": "python_wheel_task",
                "retryOnTimeout": "retry_on_timeout",
                "runIf": "run_if",
                "sparkJarTask": "spark_jar_task",
                "sparkPythonTask": "spark_python_task",
                "sparkSubmitTask": "spark_submit_task",
                "sqlTask": "sql_task",
                "taskKey": "task_key",
                "timeoutSeconds": "timeout_seconds"
            },
            "databricks:index/getJobJobSettingsSettingsTaskDbtTask:getJobJobSettingsSettingsTaskDbtTask": {
                "profilesDirectory": "profiles_directory",
                "projectDirectory": "project_directory",
                "warehouseId": "warehouse_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskDependsOn:getJobJobSettingsSettingsTaskDependsOn": {
                "taskKey": "task_key"
            },
            "databricks:index/getJobJobSettingsSettingsTaskEmailNotifications:getJobJobSettingsSettingsTaskEmailNotifications": {
                "alertOnLastAttempt": "alert_on_last_attempt",
                "noAlertForSkippedRuns": "no_alert_for_skipped_runs",
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewCluster:getJobJobSettingsSettingsTaskNewCluster": {
                "applyPolicyDefaultValues": "apply_policy_default_values",
                "autoterminationMinutes": "autotermination_minutes",
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "clusterId": "cluster_id",
                "clusterLogConf": "cluster_log_conf",
                "clusterMountInfos": "cluster_mount_info",
                "clusterName": "cluster_name",
                "customTags": "custom_tags",
                "dataSecurityMode": "data_security_mode",
                "dockerImage": "docker_image",
                "driverInstancePoolId": "driver_instance_pool_id",
                "driverNodeTypeId": "driver_node_type_id",
                "enableElasticDisk": "enable_elastic_disk",
                "enableLocalDiskEncryption": "enable_local_disk_encryption",
                "gcpAttributes": "gcp_attributes",
                "idempotencyToken": "idempotency_token",
                "initScripts": "init_scripts",
                "instancePoolId": "instance_pool_id",
                "nodeTypeId": "node_type_id",
                "numWorkers": "num_workers",
                "policyId": "policy_id",
                "runtimeEngine": "runtime_engine",
                "singleUserName": "single_user_name",
                "sparkConf": "spark_conf",
                "sparkEnvVars": "spark_env_vars",
                "sparkVersion": "spark_version",
                "sshPublicKeys": "ssh_public_keys",
                "workloadType": "workload_type"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterAutoscale:getJobJobSettingsSettingsTaskNewClusterAutoscale": {
                "maxWorkers": "max_workers",
                "minWorkers": "min_workers"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterAwsAttributes:getJobJobSettingsSettingsTaskNewClusterAwsAttributes": {
                "ebsVolumeCount": "ebs_volume_count",
                "ebsVolumeSize": "ebs_volume_size",
                "ebsVolumeType": "ebs_volume_type",
                "firstOnDemand": "first_on_demand",
                "instanceProfileArn": "instance_profile_arn",
                "spotBidPricePercent": "spot_bid_price_percent",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterAzureAttributes:getJobJobSettingsSettingsTaskNewClusterAzureAttributes": {
                "firstOnDemand": "first_on_demand",
                "spotBidMaxPrice": "spot_bid_max_price"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterClusterLogConfS3:getJobJobSettingsSettingsTaskNewClusterClusterLogConfS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterClusterMountInfo:getJobJobSettingsSettingsTaskNewClusterClusterMountInfo": {
                "localMountDirPath": "local_mount_dir_path",
                "networkFilesystemInfo": "network_filesystem_info",
                "remoteMountDirPath": "remote_mount_dir_path"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterClusterMountInfoNetworkFilesystemInfo:getJobJobSettingsSettingsTaskNewClusterClusterMountInfoNetworkFilesystemInfo": {
                "mountOptions": "mount_options",
                "serverAddress": "server_address"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterDockerImage:getJobJobSettingsSettingsTaskNewClusterDockerImage": {
                "basicAuth": "basic_auth"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterGcpAttributes:getJobJobSettingsSettingsTaskNewClusterGcpAttributes": {
                "bootDiskSize": "boot_disk_size",
                "googleServiceAccount": "google_service_account",
                "usePreemptibleExecutors": "use_preemptible_executors",
                "zoneId": "zone_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNewClusterInitScriptS3:getJobJobSettingsSettingsTaskNewClusterInitScriptS3": {
                "cannedAcl": "canned_acl",
                "enableEncryption": "enable_encryption",
                "encryptionType": "encryption_type",
                "kmsKey": "kms_key"
            },
            "databricks:index/getJobJobSettingsSettingsTaskNotebookTask:getJobJobSettingsSettingsTaskNotebookTask": {
                "baseParameters": "base_parameters",
                "notebookPath": "notebook_path"
            },
            "databricks:index/getJobJobSettingsSettingsTaskPipelineTask:getJobJobSettingsSettingsTaskPipelineTask": {
                "pipelineId": "pipeline_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskPythonWheelTask:getJobJobSettingsSettingsTaskPythonWheelTask": {
                "entryPoint": "entry_point",
                "namedParameters": "named_parameters",
                "packageName": "package_name"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSparkJarTask:getJobJobSettingsSettingsTaskSparkJarTask": {
                "jarUri": "jar_uri",
                "mainClassName": "main_class_name"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSparkPythonTask:getJobJobSettingsSettingsTaskSparkPythonTask": {
                "pythonFile": "python_file"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSqlTask:getJobJobSettingsSettingsTaskSqlTask": {
                "warehouseId": "warehouse_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSqlTaskAlert:getJobJobSettingsSettingsTaskSqlTaskAlert": {
                "alertId": "alert_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSqlTaskDashboard:getJobJobSettingsSettingsTaskSqlTaskDashboard": {
                "dashboardId": "dashboard_id"
            },
            "databricks:index/getJobJobSettingsSettingsTaskSqlTaskQuery:getJobJobSettingsSettingsTaskSqlTaskQuery": {
                "queryId": "query_id"
            },
            "databricks:index/getJobJobSettingsSettingsTrigger:getJobJobSettingsSettingsTrigger": {
                "fileArrival": "file_arrival",
                "pauseStatus": "pause_status"
            },
            "databricks:index/getJobJobSettingsSettingsTriggerFileArrival:getJobJobSettingsSettingsTriggerFileArrival": {
                "minTimeBetweenTriggerSeconds": "min_time_between_trigger_seconds",
                "waitAfterLastChangeSeconds": "wait_after_last_change_seconds"
            },
            "databricks:index/getJobJobSettingsSettingsWebhookNotifications:getJobJobSettingsSettingsWebhookNotifications": {
                "onFailures": "on_failure",
                "onStarts": "on_start",
                "onSuccesses": "on_success"
            },
            "databricks:index/getNodeType:getNodeType": {
                "gbPerCore": "gb_per_core",
                "isIoCacheEnabled": "is_io_cache_enabled",
                "localDisk": "local_disk",
                "localDiskMinSize": "local_disk_min_size",
                "minCores": "min_cores",
                "minGpus": "min_gpus",
                "minMemoryGb": "min_memory_gb",
                "photonDriverCapable": "photon_driver_capable",
                "photonWorkerCapable": "photon_worker_capable",
                "supportPortForwarding": "support_port_forwarding"
            },
            "databricks:index/getNotebook:getNotebook": {
                "objectId": "object_id",
                "objectType": "object_type"
            },
            "databricks:index/getNotebookPaths:getNotebookPaths": {
                "notebookPathLists": "notebook_path_list"
            },
            "databricks:index/getPipelines:getPipelines": {
                "pipelineName": "pipeline_name"
            },
            "databricks:index/getSchemas:getSchemas": {
                "catalogName": "catalog_name"
            },
            "databricks:index/getServicePrincipal:getServicePrincipal": {
                "applicationId": "application_id",
                "displayName": "display_name",
                "externalId": "external_id",
                "spId": "sp_id"
            },
            "databricks:index/getServicePrincipals:getServicePrincipals": {
                "applicationIds": "application_ids",
                "displayNameContains": "display_name_contains"
            },
            "databricks:index/getShare:getShare": {
                "createdAt": "created_at",
                "createdBy": "created_by",
                "objects": "object"
            },
            "databricks:index/getShareObject:getShareObject": {
                "addedAt": "added_at",
                "addedBy": "added_by",
                "cdfEnabled": "cdf_enabled",
                "dataObjectType": "data_object_type",
                "historyDataSharingStatus": "history_data_sharing_status",
                "partitions": "partition",
                "sharedAs": "shared_as",
                "startVersion": "start_version"
            },
            "databricks:index/getShareObjectPartition:getShareObjectPartition": {
                "values": "value"
            },
            "databricks:index/getShareObjectPartitionValue:getShareObjectPartitionValue": {
                "recipientPropertyKey": "recipient_property_key"
            },
            "databricks:index/getSparkVersion:getSparkVersion": {
                "longTermSupport": "long_term_support",
                "sparkVersion": "spark_version"
            },
            "databricks:index/getSqlWarehouse:getSqlWarehouse": {
                "autoStopMins": "auto_stop_mins",
                "clusterSize": "cluster_size",
                "dataSourceId": "data_source_id",
                "enablePhoton": "enable_photon",
                "enableServerlessCompute": "enable_serverless_compute",
                "instanceProfileArn": "instance_profile_arn",
                "jdbcUrl": "jdbc_url",
                "maxNumClusters": "max_num_clusters",
                "minNumClusters": "min_num_clusters",
                "numClusters": "num_clusters",
                "odbcParams": "odbc_params",
                "spotInstancePolicy": "spot_instance_policy"
            },
            "databricks:index/getSqlWarehouseTags:getSqlWarehouseTags": {
                "customTags": "custom_tags"
            },
            "databricks:index/getSqlWarehouses:getSqlWarehouses": {
                "warehouseNameContains": "warehouse_name_contains"
            },
            "databricks:index/getTables:getTables": {
                "catalogName": "catalog_name",
                "schemaName": "schema_name"
            },
            "databricks:index/getUser:getUser": {
                "applicationId": "application_id",
                "displayName": "display_name",
                "externalId": "external_id",
                "userId": "user_id",
                "userName": "user_name"
            },
            "databricks:index/getViews:getViews": {
                "catalogName": "catalog_name",
                "schemaName": "schema_name"
            },
            "databricks:index/getZones:getZones": {
                "defaultZone": "default_zone"
            },
            "databricks:index/gitCredential:GitCredential": {
                "gitProvider": "git_provider",
                "gitUsername": "git_username",
                "personalAccessToken": "personal_access_token"
            },
            "databricks:index/globalInitScript:GlobalInitScript": {
                "contentBase64": "content_base64"
            },
            "databricks:index/grants:Grants": {
                "externalLocation": "external_location",
                "grants": "grant",
                "materializedView": "materialized_view",
                "storageCredential": "storage_credential"
            },
            "databricks:index/group:Group": {
                "allowClusterCreate": "allow_cluster_create",
                "allowInstancePoolCreate": "allow_instance_pool_create",
                "databricksSqlAccess": "databricks_sql_access",
                "displayName": "display_name",
                "externalId": "external_id",
                "workspaceAccess": "workspace_access"
            },
            "databricks:index/groupInstanceProfile:GroupInstanceProfile": {
                "groupId": "group_id",
                "instanceProfileId": "instance_profile_id"
            },
            "databricks:index/groupMember:GroupMember": {
                "groupId": "group_id",
                "memberId": "member_id"
            },
            "databricks:index/groupRole:GroupRole": {
                "groupId": "group_id"
            },
            "databricks:index/instancePool:InstancePool": {
                "awsAttributes": "aws_attributes",
                "azureAttributes": "azure_attributes",
                "customTags": "custom_tags",
                "diskSpec": "disk_spec",
                "enableElasticDisk": "enable_elastic_disk",
                "gcpAttributes": "gcp_attributes",
                "idleInstanceAutoterminationMinutes": "idle_instance_autotermination_minutes",
                "instancePoolFleetAttributes": "instance_pool_fleet_attributes",
                "instancePoolId": "instance_pool_id",
                "instancePoolName": "instance_pool_name",
                "maxCapacity": "max_capacity",
                "minIdleInstances": "min_idle_instances",
                "nodeTypeId": "node_type_id",
                "preloadedDockerImages": "preloaded_docker_image",
                "preloadedSparkVersions": "preloaded_spark_versions"
            },
            "databricks:index/instanceProfile:InstanceProfile": {
                "iamRoleArn": "iam_role_arn",
                "instanceProfileArn": "instance_profile_arn",
                "isMetaInstanceProfile": "is_meta_instance_profile",
                "skipValidation": "skip_validation"
            },
            "databricks:index/ipAccessList:IpAccessList": {
                "ipAddresses": "ip_addresses",
                "listType": "list_type"
            },
            "databricks:index/job:Job": {
                "alwaysRunning": "always_running",
                "dbtTask": "dbt_task",
                "emailNotifications": "email_notifications",
                "existingClusterId": "existing_cluster_id",
                "gitSource": "git_source",
                "jobClusters": "job_cluster",
                "libraries": "library",
                "maxConcurrentRuns": "max_concurrent_runs",
                "maxRetries": "max_retries",
                "minRetryIntervalMillis": "min_retry_interval_millis",
                "newCluster": "new_cluster",
                "notebookTask": "notebook_task",
                "notificationSettings": "notification_settings",
                "pipelineTask": "pipeline_task",
                "pythonWheelTask": "python_wheel_task",
                "retryOnTimeout": "retry_on_timeout",
                "sparkJarTask": "spark_jar_task",
                "sparkPythonTask": "spark_python_task",
                "sparkSubmitTask": "spark_submit_task",
                "tasks": "task",
                "timeoutSeconds": "timeout_seconds",
                "webhookNotifications": "webhook_notifications"
            },
            "databricks:index/library:Library": {
                "clusterId": "cluster_id"
            },
            "databricks:index/metastore:Metastore": {
                "createdAt": "created_at",
                "createdBy": "created_by",
                "defaultDataAccessConfigId": "default_data_access_config_id",
                "deltaSharingOrganizationName": "delta_sharing_organization_name",
                "deltaSharingRecipientTokenLifetimeInSeconds": "delta_sharing_recipient_token_lifetime_in_seconds",
                "deltaSharingScope": "delta_sharing_scope",
                "forceDestroy": "force_destroy",
                "globalMetastoreId": "global_metastore_id",
                "storageRoot": "storage_root",
                "updatedAt": "updated_at",
                "updatedBy": "updated_by"
            },
            "databricks:index/metastoreAssignment:MetastoreAssignment": {
                "defaultCatalogName": "default_catalog_name",
                "metastoreId": "metastore_id",
                "workspaceId": "workspace_id"
            },
            "databricks:index/metastoreDataAccess:MetastoreDataAccess": {
                "awsIamRole": "aws_iam_role",
                "azureManagedIdentity": "azure_managed_identity",
                "azureServicePrincipal": "azure_service_principal",
                "configurationType": "configuration_type",
                "databricksGcpServiceAccount": "databricks_gcp_service_account",
                "gcpServiceAccountKey": "gcp_service_account_key",
                "isDefault": "is_default",
                "metastoreId": "metastore_id"
            },
            "databricks:index/metastoreProvider:MetastoreProvider": {
                "authenticationType": "authentication_type",
                "recipientProfileStr": "recipient_profile_str"
            },
            "databricks:index/mlflowExperiment:MlflowExperiment": {
                "artifactLocation": "artifact_location",
                "creationTime": "creation_time",
                "experimentId": "experiment_id",
                "lastUpdateTime": "last_update_time",
                "lifecycleStage": "lifecycle_stage"
            },
            "databricks:index/mlflowModel:MlflowModel": {
                "creationTimestamp": "creation_timestamp",
                "lastUpdatedTimestamp": "last_updated_timestamp",
                "registeredModelId": "registered_model_id",
                "userId": "user_id"
            },
            "databricks:index/mlflowWebhook:MlflowWebhook": {
                "httpUrlSpec": "http_url_spec",
                "jobSpec": "job_spec",
                "modelName": "model_name"
            },
            "databricks:index/mount:Mount": {
                "clusterId": "cluster_id",
                "encryptionType": "encryption_type",
                "extraConfigs": "extra_configs",
                "resourceId": "resource_id"
            },
            "databricks:index/mwsCredentials:MwsCredentials": {
                "accountId": "account_id",
                "creationTime": "creation_time",
                "credentialsId": "credentials_id",
                "credentialsName": "credentials_name",
                "externalId": "external_id",
                "roleArn": "role_arn"
            },
            "databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys": {
                "accountId": "account_id",
                "awsKeyInfo": "aws_key_info",
                "creationTime": "creation_time",
                "customerManagedKeyId": "customer_managed_key_id",
                "gcpKeyInfo": "gcp_key_info",
                "useCases": "use_cases"
            },
            "databricks:index/mwsLogDelivery:MwsLogDelivery": {
                "accountId": "account_id",
                "configId": "config_id",
                "configName": "config_name",
                "credentialsId": "credentials_id",
                "deliveryPathPrefix": "delivery_path_prefix",
                "deliveryStartTime": "delivery_start_time",
                "logType": "log_type",
                "outputFormat": "output_format",
                "storageConfigurationId": "storage_configuration_id",
                "workspaceIdsFilters": "workspace_ids_filter"
            },
            "databricks:index/mwsNetworks:MwsNetworks": {
                "accountId": "account_id",
                "creationTime": "creation_time",
                "errorMessages": "error_messages",
                "gcpNetworkInfo": "gcp_network_info",
                "networkId": "network_id",
                "networkName": "network_name",
                "securityGroupIds": "security_group_ids",
                "subnetIds": "subnet_ids",
                "vpcEndpoints": "vpc_endpoints",
                "vpcId": "vpc_id",
                "vpcStatus": "vpc_status",
                "workspaceId": "workspace_id"
            },
            "databricks:index/mwsPermissionAssignment:MwsPermissionAssignment": {
                "principalId": "principal_id",
                "workspaceId": "workspace_id"
            },
            "databricks:index/mwsPrivateAccessSettings:MwsPrivateAccessSettings": {
                "accountId": "account_id",
                "allowedVpcEndpointIds": "allowed_vpc_endpoint_ids",
                "privateAccessLevel": "private_access_level",
                "privateAccessSettingsId": "private_access_settings_id",
                "privateAccessSettingsName": "private_access_settings_name",
                "publicAccessEnabled": "public_access_enabled"
            },
            "databricks:index/mwsStorageConfigurations:MwsStorageConfigurations": {
                "accountId": "account_id",
                "bucketName": "bucket_name",
                "creationTime": "creation_time",
                "storageConfigurationId": "storage_configuration_id",
                "storageConfigurationName": "storage_configuration_name"
            },
            "databricks:index/mwsVpcEndpoint:MwsVpcEndpoint": {
                "accountId": "account_id",
                "awsAccountId": "aws_account_id",
                "awsEndpointServiceId": "aws_endpoint_service_id",
                "awsVpcEndpointId": "aws_vpc_endpoint_id",
                "gcpVpcEndpointInfo": "gcp_vpc_endpoint_info",
                "useCase": "use_case",
                "vpcEndpointId": "vpc_endpoint_id",
                "vpcEndpointName": "vpc_endpoint_name"
            },
            "databricks:index/mwsWorkspaces:MwsWorkspaces": {
                "accountId": "account_id",
                "awsRegion": "aws_region",
                "cloudResourceContainer": "cloud_resource_container",
                "creationTime": "creation_time",
                "credentialsId": "credentials_id",
                "customerManagedKeyId": "customer_managed_key_id",
                "deploymentName": "deployment_name",
                "externalCustomerInfo": "external_customer_info",
                "gcpManagedNetworkConfig": "gcp_managed_network_config",
                "gkeConfig": "gke_config",
                "isNoPublicIpEnabled": "is_no_public_ip_enabled",
                "managedServicesCustomerManagedKeyId": "managed_services_customer_managed_key_id",
                "networkId": "network_id",
                "pricingTier": "pricing_tier",
                "privateAccessSettingsId": "private_access_settings_id",
                "storageConfigurationId": "storage_configuration_id",
                "storageCustomerManagedKeyId": "storage_customer_managed_key_id",
                "workspaceId": "workspace_id",
                "workspaceName": "workspace_name",
                "workspaceStatus": "workspace_status",
                "workspaceStatusMessage": "workspace_status_message",
                "workspaceUrl": "workspace_url"
            },
            "databricks:index/notebook:Notebook": {
                "contentBase64": "content_base64",
                "objectId": "object_id",
                "objectType": "object_type"
            },
            "databricks:index/oboToken:OboToken": {
                "applicationId": "application_id",
                "lifetimeSeconds": "lifetime_seconds",
                "tokenValue": "token_value"
            },
            "databricks:index/permissionAssignment:PermissionAssignment": {
                "principalId": "principal_id"
            },
            "databricks:index/permissions:Permissions": {
                "accessControls": "access_control",
                "clusterId": "cluster_id",
                "clusterPolicyId": "cluster_policy_id",
                "directoryId": "directory_id",
                "directoryPath": "directory_path",
                "experimentId": "experiment_id",
                "instancePoolId": "instance_pool_id",
                "jobId": "job_id",
                "notebookId": "notebook_id",
                "notebookPath": "notebook_path",
                "objectType": "object_type",
                "pipelineId": "pipeline_id",
                "registeredModelId": "registered_model_id",
                "repoId": "repo_id",
                "repoPath": "repo_path",
                "sqlAlertId": "sql_alert_id",
                "sqlDashboardId": "sql_dashboard_id",
                "sqlEndpointId": "sql_endpoint_id",
                "sqlQueryId": "sql_query_id",
                "workspaceFileId": "workspace_file_id",
                "workspaceFilePath": "workspace_file_path"
            },
            "databricks:index/pipeline:Pipeline": {
                "allowDuplicateNames": "allow_duplicate_names",
                "clusters": "cluster",
                "libraries": "library",
                "notifications": "notification"
            },
            "databricks:index/recipient:Recipient": {
                "authenticationType": "authentication_type",
                "dataRecipientGlobalMetastoreId": "data_recipient_global_metastore_id",
                "ipAccessList": "ip_access_list",
                "sharingCode": "sharing_code"
            },
            "databricks:index/repo:Repo": {
                "commitHash": "commit_hash",
                "gitProvider": "git_provider",
                "sparseCheckout": "sparse_checkout"
            },
            "databricks:index/schema:Schema": {
                "catalogName": "catalog_name",
                "forceDestroy": "force_destroy",
                "metastoreId": "metastore_id",
                "storageRoot": "storage_root"
            },
            "databricks:index/secret:Secret": {
                "configReference": "config_reference",
                "lastUpdatedTimestamp": "last_updated_timestamp",
                "stringValue": "string_value"
            },
            "databricks:index/secretScope:SecretScope": {
                "backendType": "backend_type",
                "initialManagePrincipal": "initial_manage_principal",
                "keyvaultMetadata": "keyvault_metadata"
            },
            "databricks:index/servicePrincipal:ServicePrincipal": {
                "allowClusterCreate": "allow_cluster_create",
                "allowInstancePoolCreate": "allow_instance_pool_create",
                "applicationId": "application_id",
                "databricksSqlAccess": "databricks_sql_access",
                "displayName": "display_name",
                "externalId": "external_id",
                "forceDeleteHomeDir": "force_delete_home_dir",
                "forceDeleteRepos": "force_delete_repos",
                "workspaceAccess": "workspace_access"
            },
            "databricks:index/servicePrincipalRole:ServicePrincipalRole": {
                "servicePrincipalId": "service_principal_id"
            },
            "databricks:index/servicePrincipalSecret:ServicePrincipalSecret": {
                "servicePrincipalId": "service_principal_id"
            },
            "databricks:index/share:Share": {
                "createdAt": "created_at",
                "createdBy": "created_by",
                "objects": "object"
            },
            "databricks:index/sqlAlert:SqlAlert": {
                "queryId": "query_id"
            },
            "databricks:index/sqlEndpoint:SqlEndpoint": {
                "autoStopMins": "auto_stop_mins",
                "clusterSize": "cluster_size",
                "dataSourceId": "data_source_id",
                "enablePhoton": "enable_photon",
                "enableServerlessCompute": "enable_serverless_compute",
                "instanceProfileArn": "instance_profile_arn",
                "jdbcUrl": "jdbc_url",
                "maxNumClusters": "max_num_clusters",
                "minNumClusters": "min_num_clusters",
                "numClusters": "num_clusters",
                "odbcParams": "odbc_params",
                "spotInstancePolicy": "spot_instance_policy",
                "warehouseType": "warehouse_type"
            },
            "databricks:index/sqlGlobalConfig:SqlGlobalConfig": {
                "dataAccessConfig": "data_access_config",
                "enableServerlessCompute": "enable_serverless_compute",
                "instanceProfileArn": "instance_profile_arn",
                "securityPolicy": "security_policy",
                "sqlConfigParams": "sql_config_params"
            },
            "databricks:index/sqlPermissions:SqlPermissions": {
                "anonymousFunction": "anonymous_function",
                "anyFile": "any_file",
                "clusterId": "cluster_id",
                "privilegeAssignments": "privilege_assignments"
            },
            "databricks:index/sqlQuery:SqlQuery": {
                "dataSourceId": "data_source_id",
                "parameters": "parameter",
                "runAsRole": "run_as_role"
            },
            "databricks:index/sqlTable:SqlTable": {
                "catalogName": "catalog_name",
                "clusterId": "cluster_id",
                "columns": "column",
                "dataSourceFormat": "data_source_format",
                "schemaName": "schema_name",
                "storageCredentialName": "storage_credential_name",
                "storageLocation": "storage_location",
                "tableType": "table_type",
                "viewDefinition": "view_definition"
            },
            "databricks:index/sqlVisualization:SqlVisualization": {
                "queryId": "query_id",
                "queryPlan": "query_plan",
                "visualizationId": "visualization_id"
            },
            "databricks:index/sqlWidget:SqlWidget": {
                "dashboardId": "dashboard_id",
                "parameters": "parameter",
                "visualizationId": "visualization_id",
                "widgetId": "widget_id"
            },
            "databricks:index/storageCredential:StorageCredential": {
                "awsIamRole": "aws_iam_role",
                "azureManagedIdentity": "azure_managed_identity",
                "azureServicePrincipal": "azure_service_principal",
                "databricksGcpServiceAccount": "databricks_gcp_service_account",
                "gcpServiceAccountKey": "gcp_service_account_key",
                "metastoreId": "metastore_id"
            },
            "databricks:index/table:Table": {
                "catalogName": "catalog_name",
                "columns": "column",
                "dataSourceFormat": "data_source_format",
                "schemaName": "schema_name",
                "storageCredentialName": "storage_credential_name",
                "storageLocation": "storage_location",
                "tableType": "table_type",
                "viewDefinition": "view_definition"
            },
            "databricks:index/token:Token": {
                "creationTime": "creation_time",
                "expiryTime": "expiry_time",
                "lifetimeSeconds": "lifetime_seconds",
                "tokenId": "token_id",
                "tokenValue": "token_value"
            },
            "databricks:index/user:User": {
                "allowClusterCreate": "allow_cluster_create",
                "allowInstancePoolCreate": "allow_instance_pool_create",
                "databricksSqlAccess": "databricks_sql_access",
                "displayName": "display_name",
                "externalId": "external_id",
                "forceDeleteHomeDir": "force_delete_home_dir",
                "forceDeleteRepos": "force_delete_repos",
                "userName": "user_name",
                "workspaceAccess": "workspace_access"
            },
            "databricks:index/userInstanceProfile:UserInstanceProfile": {
                "instanceProfileId": "instance_profile_id",
                "userId": "user_id"
            },
            "databricks:index/userRole:UserRole": {
                "userId": "user_id"
            },
            "databricks:index/workspaceConf:WorkspaceConf": {
                "customConfig": "custom_config"
            },
            "databricks:index/workspaceFile:WorkspaceFile": {
                "contentBase64": "content_base64",
                "objectId": "object_id"
            },
            "databricks:index:Provider": {
                "accountId": "account_id",
                "authType": "auth_type",
                "azureClientId": "azure_client_id",
                "azureClientSecret": "azure_client_secret",
                "azureEnvironment": "azure_environment",
                "azureLoginAppId": "azure_login_app_id",
                "azureTenantId": "azure_tenant_id",
                "azureUseMsi": "azure_use_msi",
                "azureWorkspaceResourceId": "azure_workspace_resource_id",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "configFile": "config_file",
                "databricksCliPath": "databricks_cli_path",
                "debugHeaders": "debug_headers",
                "debugTruncateBytes": "debug_truncate_bytes",
                "googleCredentials": "google_credentials",
                "googleServiceAccount": "google_service_account",
                "httpTimeoutSeconds": "http_timeout_seconds",
                "metadataServiceUrl": "metadata_service_url",
                "rateLimit": "rate_limit",
                "retryTimeoutSeconds": "retry_timeout_seconds",
                "skipVerify": "skip_verify"
            }
        },
        "renamedConfigProperties": {
            "accountId": "account_id",
            "authType": "auth_type",
            "azureClientId": "azure_client_id",
            "azureClientSecret": "azure_client_secret",
            "azureEnvironment": "azure_environment",
            "azureLoginAppId": "azure_login_app_id",
            "azureTenantId": "azure_tenant_id",
            "azureUseMsi": "azure_use_msi",
            "azureWorkspaceResourceId": "azure_workspace_resource_id",
            "clientId": "client_id",
            "clientSecret": "client_secret",
            "configFile": "config_file",
            "databricksCliPath": "databricks_cli_path",
            "debugHeaders": "debug_headers",
            "debugTruncateBytes": "debug_truncate_bytes",
            "googleCredentials": "google_credentials",
            "googleServiceAccount": "google_service_account",
            "httpTimeoutSeconds": "http_timeout_seconds",
            "metadataServiceUrl": "metadata_service_url",
            "rateLimit": "rate_limit",
            "retryTimeoutSeconds": "retry_timeout_seconds",
            "skipVerify": "skip_verify"
        }
    }
}