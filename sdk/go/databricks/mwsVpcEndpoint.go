// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MwsVpcEndpoint struct {
	pulumi.CustomResourceState

	AccountId            pulumi.StringPtrOutput                    `pulumi:"accountId"`
	AwsAccountId         pulumi.StringOutput                       `pulumi:"awsAccountId"`
	AwsEndpointServiceId pulumi.StringOutput                       `pulumi:"awsEndpointServiceId"`
	AwsVpcEndpointId     pulumi.StringPtrOutput                    `pulumi:"awsVpcEndpointId"`
	GcpVpcEndpointInfo   MwsVpcEndpointGcpVpcEndpointInfoPtrOutput `pulumi:"gcpVpcEndpointInfo"`
	Region               pulumi.StringPtrOutput                    `pulumi:"region"`
	State                pulumi.StringOutput                       `pulumi:"state"`
	UseCase              pulumi.StringOutput                       `pulumi:"useCase"`
	VpcEndpointId        pulumi.StringOutput                       `pulumi:"vpcEndpointId"`
	VpcEndpointName      pulumi.StringOutput                       `pulumi:"vpcEndpointName"`
}

// NewMwsVpcEndpoint registers a new resource with the given unique name, arguments, and options.
func NewMwsVpcEndpoint(ctx *pulumi.Context,
	name string, args *MwsVpcEndpointArgs, opts ...pulumi.ResourceOption) (*MwsVpcEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MwsVpcEndpoint
	err := ctx.RegisterResource("databricks:index/mwsVpcEndpoint:MwsVpcEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMwsVpcEndpoint gets an existing MwsVpcEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMwsVpcEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MwsVpcEndpointState, opts ...pulumi.ResourceOption) (*MwsVpcEndpoint, error) {
	var resource MwsVpcEndpoint
	err := ctx.ReadResource("databricks:index/mwsVpcEndpoint:MwsVpcEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MwsVpcEndpoint resources.
type mwsVpcEndpointState struct {
	AccountId            *string                           `pulumi:"accountId"`
	AwsAccountId         *string                           `pulumi:"awsAccountId"`
	AwsEndpointServiceId *string                           `pulumi:"awsEndpointServiceId"`
	AwsVpcEndpointId     *string                           `pulumi:"awsVpcEndpointId"`
	GcpVpcEndpointInfo   *MwsVpcEndpointGcpVpcEndpointInfo `pulumi:"gcpVpcEndpointInfo"`
	Region               *string                           `pulumi:"region"`
	State                *string                           `pulumi:"state"`
	UseCase              *string                           `pulumi:"useCase"`
	VpcEndpointId        *string                           `pulumi:"vpcEndpointId"`
	VpcEndpointName      *string                           `pulumi:"vpcEndpointName"`
}

type MwsVpcEndpointState struct {
	AccountId            pulumi.StringPtrInput
	AwsAccountId         pulumi.StringPtrInput
	AwsEndpointServiceId pulumi.StringPtrInput
	AwsVpcEndpointId     pulumi.StringPtrInput
	GcpVpcEndpointInfo   MwsVpcEndpointGcpVpcEndpointInfoPtrInput
	Region               pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	UseCase              pulumi.StringPtrInput
	VpcEndpointId        pulumi.StringPtrInput
	VpcEndpointName      pulumi.StringPtrInput
}

func (MwsVpcEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsVpcEndpointState)(nil)).Elem()
}

type mwsVpcEndpointArgs struct {
	AccountId            *string                           `pulumi:"accountId"`
	AwsAccountId         *string                           `pulumi:"awsAccountId"`
	AwsEndpointServiceId *string                           `pulumi:"awsEndpointServiceId"`
	AwsVpcEndpointId     *string                           `pulumi:"awsVpcEndpointId"`
	GcpVpcEndpointInfo   *MwsVpcEndpointGcpVpcEndpointInfo `pulumi:"gcpVpcEndpointInfo"`
	Region               *string                           `pulumi:"region"`
	State                *string                           `pulumi:"state"`
	UseCase              *string                           `pulumi:"useCase"`
	VpcEndpointId        *string                           `pulumi:"vpcEndpointId"`
	VpcEndpointName      string                            `pulumi:"vpcEndpointName"`
}

// The set of arguments for constructing a MwsVpcEndpoint resource.
type MwsVpcEndpointArgs struct {
	AccountId            pulumi.StringPtrInput
	AwsAccountId         pulumi.StringPtrInput
	AwsEndpointServiceId pulumi.StringPtrInput
	AwsVpcEndpointId     pulumi.StringPtrInput
	GcpVpcEndpointInfo   MwsVpcEndpointGcpVpcEndpointInfoPtrInput
	Region               pulumi.StringPtrInput
	State                pulumi.StringPtrInput
	UseCase              pulumi.StringPtrInput
	VpcEndpointId        pulumi.StringPtrInput
	VpcEndpointName      pulumi.StringInput
}

func (MwsVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsVpcEndpointArgs)(nil)).Elem()
}

type MwsVpcEndpointInput interface {
	pulumi.Input

	ToMwsVpcEndpointOutput() MwsVpcEndpointOutput
	ToMwsVpcEndpointOutputWithContext(ctx context.Context) MwsVpcEndpointOutput
}

func (*MwsVpcEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsVpcEndpoint)(nil)).Elem()
}

func (i *MwsVpcEndpoint) ToMwsVpcEndpointOutput() MwsVpcEndpointOutput {
	return i.ToMwsVpcEndpointOutputWithContext(context.Background())
}

func (i *MwsVpcEndpoint) ToMwsVpcEndpointOutputWithContext(ctx context.Context) MwsVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsVpcEndpointOutput)
}

// MwsVpcEndpointArrayInput is an input type that accepts MwsVpcEndpointArray and MwsVpcEndpointArrayOutput values.
// You can construct a concrete instance of `MwsVpcEndpointArrayInput` via:
//
//	MwsVpcEndpointArray{ MwsVpcEndpointArgs{...} }
type MwsVpcEndpointArrayInput interface {
	pulumi.Input

	ToMwsVpcEndpointArrayOutput() MwsVpcEndpointArrayOutput
	ToMwsVpcEndpointArrayOutputWithContext(context.Context) MwsVpcEndpointArrayOutput
}

type MwsVpcEndpointArray []MwsVpcEndpointInput

func (MwsVpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsVpcEndpoint)(nil)).Elem()
}

func (i MwsVpcEndpointArray) ToMwsVpcEndpointArrayOutput() MwsVpcEndpointArrayOutput {
	return i.ToMwsVpcEndpointArrayOutputWithContext(context.Background())
}

func (i MwsVpcEndpointArray) ToMwsVpcEndpointArrayOutputWithContext(ctx context.Context) MwsVpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsVpcEndpointArrayOutput)
}

// MwsVpcEndpointMapInput is an input type that accepts MwsVpcEndpointMap and MwsVpcEndpointMapOutput values.
// You can construct a concrete instance of `MwsVpcEndpointMapInput` via:
//
//	MwsVpcEndpointMap{ "key": MwsVpcEndpointArgs{...} }
type MwsVpcEndpointMapInput interface {
	pulumi.Input

	ToMwsVpcEndpointMapOutput() MwsVpcEndpointMapOutput
	ToMwsVpcEndpointMapOutputWithContext(context.Context) MwsVpcEndpointMapOutput
}

type MwsVpcEndpointMap map[string]MwsVpcEndpointInput

func (MwsVpcEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsVpcEndpoint)(nil)).Elem()
}

func (i MwsVpcEndpointMap) ToMwsVpcEndpointMapOutput() MwsVpcEndpointMapOutput {
	return i.ToMwsVpcEndpointMapOutputWithContext(context.Background())
}

func (i MwsVpcEndpointMap) ToMwsVpcEndpointMapOutputWithContext(ctx context.Context) MwsVpcEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsVpcEndpointMapOutput)
}

type MwsVpcEndpointOutput struct{ *pulumi.OutputState }

func (MwsVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsVpcEndpoint)(nil)).Elem()
}

func (o MwsVpcEndpointOutput) ToMwsVpcEndpointOutput() MwsVpcEndpointOutput {
	return o
}

func (o MwsVpcEndpointOutput) ToMwsVpcEndpointOutputWithContext(ctx context.Context) MwsVpcEndpointOutput {
	return o
}

func (o MwsVpcEndpointOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o MwsVpcEndpointOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

func (o MwsVpcEndpointOutput) AwsEndpointServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.AwsEndpointServiceId }).(pulumi.StringOutput)
}

func (o MwsVpcEndpointOutput) AwsVpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringPtrOutput { return v.AwsVpcEndpointId }).(pulumi.StringPtrOutput)
}

func (o MwsVpcEndpointOutput) GcpVpcEndpointInfo() MwsVpcEndpointGcpVpcEndpointInfoPtrOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) MwsVpcEndpointGcpVpcEndpointInfoPtrOutput { return v.GcpVpcEndpointInfo }).(MwsVpcEndpointGcpVpcEndpointInfoPtrOutput)
}

func (o MwsVpcEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

func (o MwsVpcEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o MwsVpcEndpointOutput) UseCase() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.UseCase }).(pulumi.StringOutput)
}

func (o MwsVpcEndpointOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.VpcEndpointId }).(pulumi.StringOutput)
}

func (o MwsVpcEndpointOutput) VpcEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsVpcEndpoint) pulumi.StringOutput { return v.VpcEndpointName }).(pulumi.StringOutput)
}

type MwsVpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (MwsVpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsVpcEndpoint)(nil)).Elem()
}

func (o MwsVpcEndpointArrayOutput) ToMwsVpcEndpointArrayOutput() MwsVpcEndpointArrayOutput {
	return o
}

func (o MwsVpcEndpointArrayOutput) ToMwsVpcEndpointArrayOutputWithContext(ctx context.Context) MwsVpcEndpointArrayOutput {
	return o
}

func (o MwsVpcEndpointArrayOutput) Index(i pulumi.IntInput) MwsVpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MwsVpcEndpoint {
		return vs[0].([]*MwsVpcEndpoint)[vs[1].(int)]
	}).(MwsVpcEndpointOutput)
}

type MwsVpcEndpointMapOutput struct{ *pulumi.OutputState }

func (MwsVpcEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsVpcEndpoint)(nil)).Elem()
}

func (o MwsVpcEndpointMapOutput) ToMwsVpcEndpointMapOutput() MwsVpcEndpointMapOutput {
	return o
}

func (o MwsVpcEndpointMapOutput) ToMwsVpcEndpointMapOutputWithContext(ctx context.Context) MwsVpcEndpointMapOutput {
	return o
}

func (o MwsVpcEndpointMapOutput) MapIndex(k pulumi.StringInput) MwsVpcEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MwsVpcEndpoint {
		return vs[0].(map[string]*MwsVpcEndpoint)[vs[1].(string)]
	}).(MwsVpcEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MwsVpcEndpointInput)(nil)).Elem(), &MwsVpcEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsVpcEndpointArrayInput)(nil)).Elem(), MwsVpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsVpcEndpointMapInput)(nil)).Elem(), MwsVpcEndpointMap{})
	pulumi.RegisterOutputType(MwsVpcEndpointOutput{})
	pulumi.RegisterOutputType(MwsVpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(MwsVpcEndpointMapOutput{})
}
