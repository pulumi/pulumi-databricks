// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// Retrieve all SQL warehouses on this workspace on AWS or GCP:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.GetSqlWarehouses(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Retrieve all clusters with "Shared" in their cluster name on this Azure Databricks workspace:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.GetSqlWarehouses(ctx, &databricks.GetSqlWarehousesArgs{
//				WarehouseNameContains: pulumi.StringRef("shared"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Related Resources
//
// The following resources are often used in the same context:
//
// * End to end workspace management guide.
// * InstanceProfile to manage AWS EC2 instance profiles that users can launch Cluster and access data, like databricks_mount.
// * SqlDashboard to manage Databricks SQL [Dashboards](https://docs.databricks.com/sql/user/dashboards/index.html).
// * SqlGlobalConfig to configure the security policy, databricks_instance_profile, and [data access properties](https://docs.databricks.com/sql/admin/data-access-configuration.html) for all SqlEndpoint of workspace.
// * SqlPermissions to manage data object access control lists in Databricks workspaces for things like tables, views, databases, and [more](https://docs.databricks.com/security/access-control/table-acls/object-privileges.html).
func GetSqlWarehouses(ctx *pulumi.Context, args *GetSqlWarehousesArgs, opts ...pulumi.InvokeOption) (*GetSqlWarehousesResult, error) {
	var rv GetSqlWarehousesResult
	err := ctx.Invoke("databricks:index/getSqlWarehouses:getSqlWarehouses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlWarehouses.
type GetSqlWarehousesArgs struct {
	// list of SqlEndpoint ids
	Ids []string `pulumi:"ids"`
	// Only return SqlEndpoint ids that match the given name string.
	WarehouseNameContains *string `pulumi:"warehouseNameContains"`
}

// A collection of values returned by getSqlWarehouses.
type GetSqlWarehousesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// list of SqlEndpoint ids
	Ids                   []string `pulumi:"ids"`
	WarehouseNameContains *string  `pulumi:"warehouseNameContains"`
}

func GetSqlWarehousesOutput(ctx *pulumi.Context, args GetSqlWarehousesOutputArgs, opts ...pulumi.InvokeOption) GetSqlWarehousesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlWarehousesResult, error) {
			args := v.(GetSqlWarehousesArgs)
			r, err := GetSqlWarehouses(ctx, &args, opts...)
			var s GetSqlWarehousesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlWarehousesResultOutput)
}

// A collection of arguments for invoking getSqlWarehouses.
type GetSqlWarehousesOutputArgs struct {
	// list of SqlEndpoint ids
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Only return SqlEndpoint ids that match the given name string.
	WarehouseNameContains pulumi.StringPtrInput `pulumi:"warehouseNameContains"`
}

func (GetSqlWarehousesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlWarehousesArgs)(nil)).Elem()
}

// A collection of values returned by getSqlWarehouses.
type GetSqlWarehousesResultOutput struct{ *pulumi.OutputState }

func (GetSqlWarehousesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlWarehousesResult)(nil)).Elem()
}

func (o GetSqlWarehousesResultOutput) ToGetSqlWarehousesResultOutput() GetSqlWarehousesResultOutput {
	return o
}

func (o GetSqlWarehousesResultOutput) ToGetSqlWarehousesResultOutputWithContext(ctx context.Context) GetSqlWarehousesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlWarehousesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlWarehousesResult) string { return v.Id }).(pulumi.StringOutput)
}

// list of SqlEndpoint ids
func (o GetSqlWarehousesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSqlWarehousesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSqlWarehousesResultOutput) WarehouseNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlWarehousesResult) *string { return v.WarehouseNameContains }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlWarehousesResultOutput{})
}
