// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IpAccessList struct {
	pulumi.CustomResourceState

	Enabled     pulumi.BoolPtrOutput     `pulumi:"enabled"`
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	Label       pulumi.StringOutput      `pulumi:"label"`
	ListType    pulumi.StringOutput      `pulumi:"listType"`
}

// NewIpAccessList registers a new resource with the given unique name, arguments, and options.
func NewIpAccessList(ctx *pulumi.Context,
	name string, args *IpAccessListArgs, opts ...pulumi.ResourceOption) (*IpAccessList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddresses == nil {
		return nil, errors.New("invalid value for required argument 'IpAddresses'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.ListType == nil {
		return nil, errors.New("invalid value for required argument 'ListType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpAccessList
	err := ctx.RegisterResource("databricks:index/ipAccessList:IpAccessList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpAccessList gets an existing IpAccessList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpAccessList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpAccessListState, opts ...pulumi.ResourceOption) (*IpAccessList, error) {
	var resource IpAccessList
	err := ctx.ReadResource("databricks:index/ipAccessList:IpAccessList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpAccessList resources.
type ipAccessListState struct {
	Enabled     *bool    `pulumi:"enabled"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Label       *string  `pulumi:"label"`
	ListType    *string  `pulumi:"listType"`
}

type IpAccessListState struct {
	Enabled     pulumi.BoolPtrInput
	IpAddresses pulumi.StringArrayInput
	Label       pulumi.StringPtrInput
	ListType    pulumi.StringPtrInput
}

func (IpAccessListState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessListState)(nil)).Elem()
}

type ipAccessListArgs struct {
	Enabled     *bool    `pulumi:"enabled"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Label       string   `pulumi:"label"`
	ListType    string   `pulumi:"listType"`
}

// The set of arguments for constructing a IpAccessList resource.
type IpAccessListArgs struct {
	Enabled     pulumi.BoolPtrInput
	IpAddresses pulumi.StringArrayInput
	Label       pulumi.StringInput
	ListType    pulumi.StringInput
}

func (IpAccessListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessListArgs)(nil)).Elem()
}

type IpAccessListInput interface {
	pulumi.Input

	ToIpAccessListOutput() IpAccessListOutput
	ToIpAccessListOutputWithContext(ctx context.Context) IpAccessListOutput
}

func (*IpAccessList) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessList)(nil)).Elem()
}

func (i *IpAccessList) ToIpAccessListOutput() IpAccessListOutput {
	return i.ToIpAccessListOutputWithContext(context.Background())
}

func (i *IpAccessList) ToIpAccessListOutputWithContext(ctx context.Context) IpAccessListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessListOutput)
}

// IpAccessListArrayInput is an input type that accepts IpAccessListArray and IpAccessListArrayOutput values.
// You can construct a concrete instance of `IpAccessListArrayInput` via:
//
//	IpAccessListArray{ IpAccessListArgs{...} }
type IpAccessListArrayInput interface {
	pulumi.Input

	ToIpAccessListArrayOutput() IpAccessListArrayOutput
	ToIpAccessListArrayOutputWithContext(context.Context) IpAccessListArrayOutput
}

type IpAccessListArray []IpAccessListInput

func (IpAccessListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAccessList)(nil)).Elem()
}

func (i IpAccessListArray) ToIpAccessListArrayOutput() IpAccessListArrayOutput {
	return i.ToIpAccessListArrayOutputWithContext(context.Background())
}

func (i IpAccessListArray) ToIpAccessListArrayOutputWithContext(ctx context.Context) IpAccessListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessListArrayOutput)
}

// IpAccessListMapInput is an input type that accepts IpAccessListMap and IpAccessListMapOutput values.
// You can construct a concrete instance of `IpAccessListMapInput` via:
//
//	IpAccessListMap{ "key": IpAccessListArgs{...} }
type IpAccessListMapInput interface {
	pulumi.Input

	ToIpAccessListMapOutput() IpAccessListMapOutput
	ToIpAccessListMapOutputWithContext(context.Context) IpAccessListMapOutput
}

type IpAccessListMap map[string]IpAccessListInput

func (IpAccessListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAccessList)(nil)).Elem()
}

func (i IpAccessListMap) ToIpAccessListMapOutput() IpAccessListMapOutput {
	return i.ToIpAccessListMapOutputWithContext(context.Background())
}

func (i IpAccessListMap) ToIpAccessListMapOutputWithContext(ctx context.Context) IpAccessListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessListMapOutput)
}

type IpAccessListOutput struct{ *pulumi.OutputState }

func (IpAccessListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessList)(nil)).Elem()
}

func (o IpAccessListOutput) ToIpAccessListOutput() IpAccessListOutput {
	return o
}

func (o IpAccessListOutput) ToIpAccessListOutputWithContext(ctx context.Context) IpAccessListOutput {
	return o
}

func (o IpAccessListOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IpAccessList) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IpAccessListOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpAccessList) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o IpAccessListOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessList) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

func (o IpAccessListOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessList) pulumi.StringOutput { return v.ListType }).(pulumi.StringOutput)
}

type IpAccessListArrayOutput struct{ *pulumi.OutputState }

func (IpAccessListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAccessList)(nil)).Elem()
}

func (o IpAccessListArrayOutput) ToIpAccessListArrayOutput() IpAccessListArrayOutput {
	return o
}

func (o IpAccessListArrayOutput) ToIpAccessListArrayOutputWithContext(ctx context.Context) IpAccessListArrayOutput {
	return o
}

func (o IpAccessListArrayOutput) Index(i pulumi.IntInput) IpAccessListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpAccessList {
		return vs[0].([]*IpAccessList)[vs[1].(int)]
	}).(IpAccessListOutput)
}

type IpAccessListMapOutput struct{ *pulumi.OutputState }

func (IpAccessListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAccessList)(nil)).Elem()
}

func (o IpAccessListMapOutput) ToIpAccessListMapOutput() IpAccessListMapOutput {
	return o
}

func (o IpAccessListMapOutput) ToIpAccessListMapOutputWithContext(ctx context.Context) IpAccessListMapOutput {
	return o
}

func (o IpAccessListMapOutput) MapIndex(k pulumi.StringInput) IpAccessListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpAccessList {
		return vs[0].(map[string]*IpAccessList)[vs[1].(string)]
	}).(IpAccessListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessListInput)(nil)).Elem(), &IpAccessList{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessListArrayInput)(nil)).Elem(), IpAccessListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessListMapInput)(nil)).Elem(), IpAccessListMap{})
	pulumi.RegisterOutputType(IpAccessListOutput{})
	pulumi.RegisterOutputType(IpAccessListArrayOutput{})
	pulumi.RegisterOutputType(IpAccessListMapOutput{})
}
