// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **Note** This data source can only be used with a workspace-level provider!
//
// Retrieves a list of Volume ids (full names), that were created by Pulumi or manually.
//
// ## Plugin Framework Migration
//
// The volumes data source has been migrated from sdkv2 to plugin framework in version 1.57ã€‚ If you encounter any problem with this data source and suspect it is due to the migration, you can fallback to sdkv2 by setting the environment variable in the following way `export USE_SDK_V2_DATA_SOURCES="getVolumes"`.
//
// ## Example Usage
//
// Listing all volumes in a _things_ Schema of a  _sandbox_ databricks_catalog:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			this, err := databricks.GetVolumes(ctx, &databricks.GetVolumesArgs{
//				CatalogName: "sandbox",
//				SchemaName:  "things",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("allVolumes", this)
//			return nil
//		})
//	}
//
// ```
//
// ## Related Resources
//
// The following resources are used in the same context:
//
// * Volume to manage volumes within Unity Catalog.
// * Schema to manage schemas within Unity Catalog.
// * Catalog to manage catalogs within Unity Catalog.
func GetVolumes(ctx *pulumi.Context, args *GetVolumesArgs, opts ...pulumi.InvokeOption) (*GetVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumesResult
	err := ctx.Invoke("databricks:index/getVolumes:getVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumes.
type GetVolumesArgs struct {
	// Name of databricks_catalog
	CatalogName string `pulumi:"catalogName"`
	// a list of Volume full names: *`catalog`.`schema`.`volume`*
	Ids []string `pulumi:"ids"`
	// Name of databricks_schema
	SchemaName string `pulumi:"schemaName"`
}

// A collection of values returned by getVolumes.
type GetVolumesResult struct {
	CatalogName string `pulumi:"catalogName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// a list of Volume full names: *`catalog`.`schema`.`volume`*
	Ids        []string `pulumi:"ids"`
	SchemaName string   `pulumi:"schemaName"`
}

func GetVolumesOutput(ctx *pulumi.Context, args GetVolumesOutputArgs, opts ...pulumi.InvokeOption) GetVolumesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVolumesResultOutput, error) {
			args := v.(GetVolumesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getVolumes:getVolumes", args, GetVolumesResultOutput{}, options).(GetVolumesResultOutput), nil
		}).(GetVolumesResultOutput)
}

// A collection of arguments for invoking getVolumes.
type GetVolumesOutputArgs struct {
	// Name of databricks_catalog
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// a list of Volume full names: *`catalog`.`schema`.`volume`*
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Name of databricks_schema
	SchemaName pulumi.StringInput `pulumi:"schemaName"`
}

func (GetVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesArgs)(nil)).Elem()
}

// A collection of values returned by getVolumes.
type GetVolumesResultOutput struct{ *pulumi.OutputState }

func (GetVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesResult)(nil)).Elem()
}

func (o GetVolumesResultOutput) ToGetVolumesResultOutput() GetVolumesResultOutput {
	return o
}

func (o GetVolumesResultOutput) ToGetVolumesResultOutputWithContext(ctx context.Context) GetVolumesResultOutput {
	return o
}

func (o GetVolumesResultOutput) CatalogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesResult) string { return v.CatalogName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVolumesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesResult) string { return v.Id }).(pulumi.StringOutput)
}

// a list of Volume full names: *`catalog`.`schema`.`volume`*
func (o GetVolumesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetVolumesResultOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesResult) string { return v.SchemaName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumesResultOutput{})
}
