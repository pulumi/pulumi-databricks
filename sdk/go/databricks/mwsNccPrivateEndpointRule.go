// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows you to create a private endpoint in a Network Connectivity Config that can be used to [configure private connectivity from serverless compute](https://learn.microsoft.com/en-us/azure/databricks/security/network/serverless-network-security/serverless-private-link).
//
// > This resource can only be used with an account-level provider!
//
// > This feature is available on Azure, and in Public Preview on AWS.
//
// ## Example Usage
//
// # Create a private endpoint to an Azure storage account
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := cfg.RequireObject("region")
//			prefix := cfg.RequireObject("prefix")
//			ncc, err := databricks.NewMwsNetworkConnectivityConfig(ctx, "ncc", &databricks.MwsNetworkConnectivityConfigArgs{
//				Name:   pulumi.Sprintf("ncc-for-%v", prefix),
//				Region: pulumi.Any(region),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewMwsNccPrivateEndpointRule(ctx, "storage", &databricks.MwsNccPrivateEndpointRuleArgs{
//				NetworkConnectivityConfigId: ncc.NetworkConnectivityConfigId,
//				ResourceId:                  pulumi.String("/subscriptions/653bb673-1234-abcd-a90b-d064d5d53ca4/resourcegroups/example-resource-group/providers/Microsoft.Storage/storageAccounts/examplesa"),
//				GroupId:                     pulumi.String("blob"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Create a private endpoint rule to an AWS VPC endpoint and to an S3 bucket
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := cfg.RequireObject("region")
//			prefix := cfg.RequireObject("prefix")
//			ncc, err := databricks.NewMwsNetworkConnectivityConfig(ctx, "ncc", &databricks.MwsNetworkConnectivityConfigArgs{
//				Name:   pulumi.Sprintf("ncc-for-%v", prefix),
//				Region: pulumi.Any(region),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewMwsNccPrivateEndpointRule(ctx, "storage", &databricks.MwsNccPrivateEndpointRuleArgs{
//				NetworkConnectivityConfigId: ncc.NetworkConnectivityConfigId,
//				ResourceNames: pulumi.StringArray{
//					pulumi.String("bucket"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewMwsNccPrivateEndpointRule(ctx, "vpce", &databricks.MwsNccPrivateEndpointRuleArgs{
//				NetworkConnectivityConfigId: ncc.NetworkConnectivityConfigId,
//				EndpointService:             pulumi.String("com.amazonaws.vpce.us-west-2.vpce-svc-xyz"),
//				DomainNames: pulumi.StringArray{
//					pulumi.String("subdomain.internal.net"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Related Resources
//
// The following resources are used in the context:
//
// * MwsNetworkConnectivityConfig to create Network Connectivity Config objects.
// * MwsNccBinding to attach an NCC to a workspace.
//
// ## Import
//
// This resource can be imported by Databricks account ID and Network Connectivity Config ID.
//
// hcl
//
// import {
//
//	to = databricks_mws_ncc_private_endpoint_rule.this
//
//	id = "<network_connectivity_config_id>/<rule_id>"
//
// }
//
// Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
//
// ```sh
// $ pulumi import databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule this "<network_connectivity_config_id>/<rule_id>"
// ```
type MwsNccPrivateEndpointRule struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
	// The possible values are:
	// * `PENDING`: The endpoint has been created and pending approval.
	// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
	// * `REJECTED`: Connection was rejected by the private link resource owner.
	// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
	ConnectionState pulumi.StringOutput `pulumi:"connectionState"`
	// Time in epoch milliseconds when this object was created.
	CreationTime pulumi.IntOutput `pulumi:"creationTime"`
	// Whether this private endpoint is deactivated.
	Deactivated pulumi.BoolPtrOutput `pulumi:"deactivated"`
	// Time in epoch milliseconds when this object was deactivated.
	DeactivatedAt pulumi.IntPtrOutput `pulumi:"deactivatedAt"`
	// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
	DomainNames pulumi.StringArrayOutput `pulumi:"domainNames"`
	// Activation status. Only used by private endpoints towards an AWS S3 service.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
	EndpointName pulumi.StringOutput `pulumi:"endpointName"`
	// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
	EndpointService pulumi.StringPtrOutput `pulumi:"endpointService"`
	// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
	NetworkConnectivityConfigId pulumi.StringOutput `pulumi:"networkConnectivityConfigId"`
	// The Azure resource ID of the target resource. Change forces creation of a new resource.
	ResourceId pulumi.StringPtrOutput `pulumi:"resourceId"`
	// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
	ResourceNames pulumi.StringArrayOutput `pulumi:"resourceNames"`
	// the ID of a private endpoint rule.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// Time in epoch milliseconds when this object was updated.
	UpdatedTime pulumi.IntOutput `pulumi:"updatedTime"`
	// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
	VpcEndpointId pulumi.StringOutput `pulumi:"vpcEndpointId"`
}

// NewMwsNccPrivateEndpointRule registers a new resource with the given unique name, arguments, and options.
func NewMwsNccPrivateEndpointRule(ctx *pulumi.Context,
	name string, args *MwsNccPrivateEndpointRuleArgs, opts ...pulumi.ResourceOption) (*MwsNccPrivateEndpointRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkConnectivityConfigId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConnectivityConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MwsNccPrivateEndpointRule
	err := ctx.RegisterResource("databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMwsNccPrivateEndpointRule gets an existing MwsNccPrivateEndpointRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMwsNccPrivateEndpointRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MwsNccPrivateEndpointRuleState, opts ...pulumi.ResourceOption) (*MwsNccPrivateEndpointRule, error) {
	var resource MwsNccPrivateEndpointRule
	err := ctx.ReadResource("databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MwsNccPrivateEndpointRule resources.
type mwsNccPrivateEndpointRuleState struct {
	AccountId *string `pulumi:"accountId"`
	// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
	// The possible values are:
	// * `PENDING`: The endpoint has been created and pending approval.
	// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
	// * `REJECTED`: Connection was rejected by the private link resource owner.
	// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
	ConnectionState *string `pulumi:"connectionState"`
	// Time in epoch milliseconds when this object was created.
	CreationTime *int `pulumi:"creationTime"`
	// Whether this private endpoint is deactivated.
	Deactivated *bool `pulumi:"deactivated"`
	// Time in epoch milliseconds when this object was deactivated.
	DeactivatedAt *int `pulumi:"deactivatedAt"`
	// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
	DomainNames []string `pulumi:"domainNames"`
	// Activation status. Only used by private endpoints towards an AWS S3 service.
	Enabled *bool `pulumi:"enabled"`
	// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
	EndpointName *string `pulumi:"endpointName"`
	// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
	EndpointService *string `pulumi:"endpointService"`
	// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
	GroupId *string `pulumi:"groupId"`
	// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
	NetworkConnectivityConfigId *string `pulumi:"networkConnectivityConfigId"`
	// The Azure resource ID of the target resource. Change forces creation of a new resource.
	ResourceId *string `pulumi:"resourceId"`
	// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
	ResourceNames []string `pulumi:"resourceNames"`
	// the ID of a private endpoint rule.
	RuleId *string `pulumi:"ruleId"`
	// Time in epoch milliseconds when this object was updated.
	UpdatedTime *int `pulumi:"updatedTime"`
	// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type MwsNccPrivateEndpointRuleState struct {
	AccountId pulumi.StringPtrInput
	// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
	// The possible values are:
	// * `PENDING`: The endpoint has been created and pending approval.
	// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
	// * `REJECTED`: Connection was rejected by the private link resource owner.
	// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
	ConnectionState pulumi.StringPtrInput
	// Time in epoch milliseconds when this object was created.
	CreationTime pulumi.IntPtrInput
	// Whether this private endpoint is deactivated.
	Deactivated pulumi.BoolPtrInput
	// Time in epoch milliseconds when this object was deactivated.
	DeactivatedAt pulumi.IntPtrInput
	// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
	DomainNames pulumi.StringArrayInput
	// Activation status. Only used by private endpoints towards an AWS S3 service.
	Enabled pulumi.BoolPtrInput
	// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
	EndpointName pulumi.StringPtrInput
	// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
	EndpointService pulumi.StringPtrInput
	// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
	GroupId pulumi.StringPtrInput
	// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
	NetworkConnectivityConfigId pulumi.StringPtrInput
	// The Azure resource ID of the target resource. Change forces creation of a new resource.
	ResourceId pulumi.StringPtrInput
	// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
	ResourceNames pulumi.StringArrayInput
	// the ID of a private endpoint rule.
	RuleId pulumi.StringPtrInput
	// Time in epoch milliseconds when this object was updated.
	UpdatedTime pulumi.IntPtrInput
	// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
	VpcEndpointId pulumi.StringPtrInput
}

func (MwsNccPrivateEndpointRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsNccPrivateEndpointRuleState)(nil)).Elem()
}

type mwsNccPrivateEndpointRuleArgs struct {
	AccountId *string `pulumi:"accountId"`
	// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
	// The possible values are:
	// * `PENDING`: The endpoint has been created and pending approval.
	// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
	// * `REJECTED`: Connection was rejected by the private link resource owner.
	// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
	ConnectionState *string `pulumi:"connectionState"`
	// Time in epoch milliseconds when this object was created.
	CreationTime *int `pulumi:"creationTime"`
	// Whether this private endpoint is deactivated.
	Deactivated *bool `pulumi:"deactivated"`
	// Time in epoch milliseconds when this object was deactivated.
	DeactivatedAt *int `pulumi:"deactivatedAt"`
	// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
	DomainNames []string `pulumi:"domainNames"`
	// Activation status. Only used by private endpoints towards an AWS S3 service.
	Enabled *bool `pulumi:"enabled"`
	// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
	EndpointName *string `pulumi:"endpointName"`
	// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
	EndpointService *string `pulumi:"endpointService"`
	// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
	GroupId *string `pulumi:"groupId"`
	// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
	NetworkConnectivityConfigId string `pulumi:"networkConnectivityConfigId"`
	// The Azure resource ID of the target resource. Change forces creation of a new resource.
	ResourceId *string `pulumi:"resourceId"`
	// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
	ResourceNames []string `pulumi:"resourceNames"`
	// the ID of a private endpoint rule.
	RuleId *string `pulumi:"ruleId"`
	// Time in epoch milliseconds when this object was updated.
	UpdatedTime *int `pulumi:"updatedTime"`
	// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a MwsNccPrivateEndpointRule resource.
type MwsNccPrivateEndpointRuleArgs struct {
	AccountId pulumi.StringPtrInput
	// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
	// The possible values are:
	// * `PENDING`: The endpoint has been created and pending approval.
	// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
	// * `REJECTED`: Connection was rejected by the private link resource owner.
	// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
	ConnectionState pulumi.StringPtrInput
	// Time in epoch milliseconds when this object was created.
	CreationTime pulumi.IntPtrInput
	// Whether this private endpoint is deactivated.
	Deactivated pulumi.BoolPtrInput
	// Time in epoch milliseconds when this object was deactivated.
	DeactivatedAt pulumi.IntPtrInput
	// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
	DomainNames pulumi.StringArrayInput
	// Activation status. Only used by private endpoints towards an AWS S3 service.
	Enabled pulumi.BoolPtrInput
	// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
	EndpointName pulumi.StringPtrInput
	// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
	EndpointService pulumi.StringPtrInput
	// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
	GroupId pulumi.StringPtrInput
	// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
	NetworkConnectivityConfigId pulumi.StringInput
	// The Azure resource ID of the target resource. Change forces creation of a new resource.
	ResourceId pulumi.StringPtrInput
	// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
	ResourceNames pulumi.StringArrayInput
	// the ID of a private endpoint rule.
	RuleId pulumi.StringPtrInput
	// Time in epoch milliseconds when this object was updated.
	UpdatedTime pulumi.IntPtrInput
	// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
	VpcEndpointId pulumi.StringPtrInput
}

func (MwsNccPrivateEndpointRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsNccPrivateEndpointRuleArgs)(nil)).Elem()
}

type MwsNccPrivateEndpointRuleInput interface {
	pulumi.Input

	ToMwsNccPrivateEndpointRuleOutput() MwsNccPrivateEndpointRuleOutput
	ToMwsNccPrivateEndpointRuleOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleOutput
}

func (*MwsNccPrivateEndpointRule) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (i *MwsNccPrivateEndpointRule) ToMwsNccPrivateEndpointRuleOutput() MwsNccPrivateEndpointRuleOutput {
	return i.ToMwsNccPrivateEndpointRuleOutputWithContext(context.Background())
}

func (i *MwsNccPrivateEndpointRule) ToMwsNccPrivateEndpointRuleOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsNccPrivateEndpointRuleOutput)
}

// MwsNccPrivateEndpointRuleArrayInput is an input type that accepts MwsNccPrivateEndpointRuleArray and MwsNccPrivateEndpointRuleArrayOutput values.
// You can construct a concrete instance of `MwsNccPrivateEndpointRuleArrayInput` via:
//
//	MwsNccPrivateEndpointRuleArray{ MwsNccPrivateEndpointRuleArgs{...} }
type MwsNccPrivateEndpointRuleArrayInput interface {
	pulumi.Input

	ToMwsNccPrivateEndpointRuleArrayOutput() MwsNccPrivateEndpointRuleArrayOutput
	ToMwsNccPrivateEndpointRuleArrayOutputWithContext(context.Context) MwsNccPrivateEndpointRuleArrayOutput
}

type MwsNccPrivateEndpointRuleArray []MwsNccPrivateEndpointRuleInput

func (MwsNccPrivateEndpointRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (i MwsNccPrivateEndpointRuleArray) ToMwsNccPrivateEndpointRuleArrayOutput() MwsNccPrivateEndpointRuleArrayOutput {
	return i.ToMwsNccPrivateEndpointRuleArrayOutputWithContext(context.Background())
}

func (i MwsNccPrivateEndpointRuleArray) ToMwsNccPrivateEndpointRuleArrayOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsNccPrivateEndpointRuleArrayOutput)
}

// MwsNccPrivateEndpointRuleMapInput is an input type that accepts MwsNccPrivateEndpointRuleMap and MwsNccPrivateEndpointRuleMapOutput values.
// You can construct a concrete instance of `MwsNccPrivateEndpointRuleMapInput` via:
//
//	MwsNccPrivateEndpointRuleMap{ "key": MwsNccPrivateEndpointRuleArgs{...} }
type MwsNccPrivateEndpointRuleMapInput interface {
	pulumi.Input

	ToMwsNccPrivateEndpointRuleMapOutput() MwsNccPrivateEndpointRuleMapOutput
	ToMwsNccPrivateEndpointRuleMapOutputWithContext(context.Context) MwsNccPrivateEndpointRuleMapOutput
}

type MwsNccPrivateEndpointRuleMap map[string]MwsNccPrivateEndpointRuleInput

func (MwsNccPrivateEndpointRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (i MwsNccPrivateEndpointRuleMap) ToMwsNccPrivateEndpointRuleMapOutput() MwsNccPrivateEndpointRuleMapOutput {
	return i.ToMwsNccPrivateEndpointRuleMapOutputWithContext(context.Background())
}

func (i MwsNccPrivateEndpointRuleMap) ToMwsNccPrivateEndpointRuleMapOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsNccPrivateEndpointRuleMapOutput)
}

type MwsNccPrivateEndpointRuleOutput struct{ *pulumi.OutputState }

func (MwsNccPrivateEndpointRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (o MwsNccPrivateEndpointRuleOutput) ToMwsNccPrivateEndpointRuleOutput() MwsNccPrivateEndpointRuleOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleOutput) ToMwsNccPrivateEndpointRuleOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is ESTABLISHED. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
// The possible values are:
// * `PENDING`: The endpoint has been created and pending approval.
// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
// * `REJECTED`: Connection was rejected by the private link resource owner.
// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
func (o MwsNccPrivateEndpointRuleOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringOutput { return v.ConnectionState }).(pulumi.StringOutput)
}

// Time in epoch milliseconds when this object was created.
func (o MwsNccPrivateEndpointRuleOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.IntOutput { return v.CreationTime }).(pulumi.IntOutput)
}

// Whether this private endpoint is deactivated.
func (o MwsNccPrivateEndpointRuleOutput) Deactivated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.BoolPtrOutput { return v.Deactivated }).(pulumi.BoolPtrOutput)
}

// Time in epoch milliseconds when this object was deactivated.
func (o MwsNccPrivateEndpointRuleOutput) DeactivatedAt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.IntPtrOutput { return v.DeactivatedAt }).(pulumi.IntPtrOutput)
}

// Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. List of target AWS resource FQDNs accessible via the VPC endpoint service. Conflicts with `resourceNames`.
func (o MwsNccPrivateEndpointRuleOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringArrayOutput { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// Activation status. Only used by private endpoints towards an AWS S3 service.
func (o MwsNccPrivateEndpointRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
func (o MwsNccPrivateEndpointRuleOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringOutput { return v.EndpointName }).(pulumi.StringOutput)
}

// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
func (o MwsNccPrivateEndpointRuleOutput) EndpointService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringPtrOutput { return v.EndpointService }).(pulumi.StringPtrOutput)
}

// The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource.
func (o MwsNccPrivateEndpointRuleOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
func (o MwsNccPrivateEndpointRuleOutput) NetworkConnectivityConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringOutput { return v.NetworkConnectivityConfigId }).(pulumi.StringOutput)
}

// The Azure resource ID of the target resource. Change forces creation of a new resource.
func (o MwsNccPrivateEndpointRuleOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringPtrOutput { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
func (o MwsNccPrivateEndpointRuleOutput) ResourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringArrayOutput { return v.ResourceNames }).(pulumi.StringArrayOutput)
}

// the ID of a private endpoint rule.
func (o MwsNccPrivateEndpointRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// Time in epoch milliseconds when this object was updated.
func (o MwsNccPrivateEndpointRuleOutput) UpdatedTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.IntOutput { return v.UpdatedTime }).(pulumi.IntOutput)
}

// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
func (o MwsNccPrivateEndpointRuleOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsNccPrivateEndpointRule) pulumi.StringOutput { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type MwsNccPrivateEndpointRuleArrayOutput struct{ *pulumi.OutputState }

func (MwsNccPrivateEndpointRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (o MwsNccPrivateEndpointRuleArrayOutput) ToMwsNccPrivateEndpointRuleArrayOutput() MwsNccPrivateEndpointRuleArrayOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleArrayOutput) ToMwsNccPrivateEndpointRuleArrayOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleArrayOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleArrayOutput) Index(i pulumi.IntInput) MwsNccPrivateEndpointRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MwsNccPrivateEndpointRule {
		return vs[0].([]*MwsNccPrivateEndpointRule)[vs[1].(int)]
	}).(MwsNccPrivateEndpointRuleOutput)
}

type MwsNccPrivateEndpointRuleMapOutput struct{ *pulumi.OutputState }

func (MwsNccPrivateEndpointRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsNccPrivateEndpointRule)(nil)).Elem()
}

func (o MwsNccPrivateEndpointRuleMapOutput) ToMwsNccPrivateEndpointRuleMapOutput() MwsNccPrivateEndpointRuleMapOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleMapOutput) ToMwsNccPrivateEndpointRuleMapOutputWithContext(ctx context.Context) MwsNccPrivateEndpointRuleMapOutput {
	return o
}

func (o MwsNccPrivateEndpointRuleMapOutput) MapIndex(k pulumi.StringInput) MwsNccPrivateEndpointRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MwsNccPrivateEndpointRule {
		return vs[0].(map[string]*MwsNccPrivateEndpointRule)[vs[1].(string)]
	}).(MwsNccPrivateEndpointRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MwsNccPrivateEndpointRuleInput)(nil)).Elem(), &MwsNccPrivateEndpointRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsNccPrivateEndpointRuleArrayInput)(nil)).Elem(), MwsNccPrivateEndpointRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsNccPrivateEndpointRuleMapInput)(nil)).Elem(), MwsNccPrivateEndpointRuleMap{})
	pulumi.RegisterOutputType(MwsNccPrivateEndpointRuleOutput{})
	pulumi.RegisterOutputType(MwsNccPrivateEndpointRuleArrayOutput{})
	pulumi.RegisterOutputType(MwsNccPrivateEndpointRuleMapOutput{})
}
