// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LakehouseMonitor struct {
	pulumi.CustomResourceState

	AssetsDir                pulumi.StringOutput                               `pulumi:"assetsDir"`
	BaselineTableName        pulumi.StringPtrOutput                            `pulumi:"baselineTableName"`
	CustomMetrics            LakehouseMonitorCustomMetricArrayOutput           `pulumi:"customMetrics"`
	DashboardId              pulumi.StringOutput                               `pulumi:"dashboardId"`
	DataClassificationConfig LakehouseMonitorDataClassificationConfigPtrOutput `pulumi:"dataClassificationConfig"`
	DriftMetricsTableName    pulumi.StringOutput                               `pulumi:"driftMetricsTableName"`
	InferenceLog             LakehouseMonitorInferenceLogPtrOutput             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  pulumi.StringPtrOutput                            `pulumi:"latestMonitorFailureMsg"`
	MonitorVersion           pulumi.StringOutput                               `pulumi:"monitorVersion"`
	Notifications            LakehouseMonitorNotificationsPtrOutput            `pulumi:"notifications"`
	OutputSchemaName         pulumi.StringOutput                               `pulumi:"outputSchemaName"`
	ProfileMetricsTableName  pulumi.StringOutput                               `pulumi:"profileMetricsTableName"`
	Schedule                 LakehouseMonitorSchedulePtrOutput                 `pulumi:"schedule"`
	SkipBuiltinDashboard     pulumi.BoolPtrOutput                              `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             pulumi.StringArrayOutput                          `pulumi:"slicingExprs"`
	Snapshot                 LakehouseMonitorSnapshotPtrOutput                 `pulumi:"snapshot"`
	Status                   pulumi.StringOutput                               `pulumi:"status"`
	TableName                pulumi.StringOutput                               `pulumi:"tableName"`
	TimeSeries               LakehouseMonitorTimeSeriesPtrOutput               `pulumi:"timeSeries"`
	WarehouseId              pulumi.StringPtrOutput                            `pulumi:"warehouseId"`
}

// NewLakehouseMonitor registers a new resource with the given unique name, arguments, and options.
func NewLakehouseMonitor(ctx *pulumi.Context,
	name string, args *LakehouseMonitorArgs, opts ...pulumi.ResourceOption) (*LakehouseMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssetsDir == nil {
		return nil, errors.New("invalid value for required argument 'AssetsDir'")
	}
	if args.OutputSchemaName == nil {
		return nil, errors.New("invalid value for required argument 'OutputSchemaName'")
	}
	if args.TableName == nil {
		return nil, errors.New("invalid value for required argument 'TableName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LakehouseMonitor
	err := ctx.RegisterResource("databricks:index/lakehouseMonitor:LakehouseMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLakehouseMonitor gets an existing LakehouseMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLakehouseMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LakehouseMonitorState, opts ...pulumi.ResourceOption) (*LakehouseMonitor, error) {
	var resource LakehouseMonitor
	err := ctx.ReadResource("databricks:index/lakehouseMonitor:LakehouseMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LakehouseMonitor resources.
type lakehouseMonitorState struct {
	AssetsDir                *string                                   `pulumi:"assetsDir"`
	BaselineTableName        *string                                   `pulumi:"baselineTableName"`
	CustomMetrics            []LakehouseMonitorCustomMetric            `pulumi:"customMetrics"`
	DashboardId              *string                                   `pulumi:"dashboardId"`
	DataClassificationConfig *LakehouseMonitorDataClassificationConfig `pulumi:"dataClassificationConfig"`
	DriftMetricsTableName    *string                                   `pulumi:"driftMetricsTableName"`
	InferenceLog             *LakehouseMonitorInferenceLog             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  *string                                   `pulumi:"latestMonitorFailureMsg"`
	MonitorVersion           *string                                   `pulumi:"monitorVersion"`
	Notifications            *LakehouseMonitorNotifications            `pulumi:"notifications"`
	OutputSchemaName         *string                                   `pulumi:"outputSchemaName"`
	ProfileMetricsTableName  *string                                   `pulumi:"profileMetricsTableName"`
	Schedule                 *LakehouseMonitorSchedule                 `pulumi:"schedule"`
	SkipBuiltinDashboard     *bool                                     `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             []string                                  `pulumi:"slicingExprs"`
	Snapshot                 *LakehouseMonitorSnapshot                 `pulumi:"snapshot"`
	Status                   *string                                   `pulumi:"status"`
	TableName                *string                                   `pulumi:"tableName"`
	TimeSeries               *LakehouseMonitorTimeSeries               `pulumi:"timeSeries"`
	WarehouseId              *string                                   `pulumi:"warehouseId"`
}

type LakehouseMonitorState struct {
	AssetsDir                pulumi.StringPtrInput
	BaselineTableName        pulumi.StringPtrInput
	CustomMetrics            LakehouseMonitorCustomMetricArrayInput
	DashboardId              pulumi.StringPtrInput
	DataClassificationConfig LakehouseMonitorDataClassificationConfigPtrInput
	DriftMetricsTableName    pulumi.StringPtrInput
	InferenceLog             LakehouseMonitorInferenceLogPtrInput
	LatestMonitorFailureMsg  pulumi.StringPtrInput
	MonitorVersion           pulumi.StringPtrInput
	Notifications            LakehouseMonitorNotificationsPtrInput
	OutputSchemaName         pulumi.StringPtrInput
	ProfileMetricsTableName  pulumi.StringPtrInput
	Schedule                 LakehouseMonitorSchedulePtrInput
	SkipBuiltinDashboard     pulumi.BoolPtrInput
	SlicingExprs             pulumi.StringArrayInput
	Snapshot                 LakehouseMonitorSnapshotPtrInput
	Status                   pulumi.StringPtrInput
	TableName                pulumi.StringPtrInput
	TimeSeries               LakehouseMonitorTimeSeriesPtrInput
	WarehouseId              pulumi.StringPtrInput
}

func (LakehouseMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*lakehouseMonitorState)(nil)).Elem()
}

type lakehouseMonitorArgs struct {
	AssetsDir                string                                    `pulumi:"assetsDir"`
	BaselineTableName        *string                                   `pulumi:"baselineTableName"`
	CustomMetrics            []LakehouseMonitorCustomMetric            `pulumi:"customMetrics"`
	DataClassificationConfig *LakehouseMonitorDataClassificationConfig `pulumi:"dataClassificationConfig"`
	InferenceLog             *LakehouseMonitorInferenceLog             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  *string                                   `pulumi:"latestMonitorFailureMsg"`
	Notifications            *LakehouseMonitorNotifications            `pulumi:"notifications"`
	OutputSchemaName         string                                    `pulumi:"outputSchemaName"`
	Schedule                 *LakehouseMonitorSchedule                 `pulumi:"schedule"`
	SkipBuiltinDashboard     *bool                                     `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             []string                                  `pulumi:"slicingExprs"`
	Snapshot                 *LakehouseMonitorSnapshot                 `pulumi:"snapshot"`
	TableName                string                                    `pulumi:"tableName"`
	TimeSeries               *LakehouseMonitorTimeSeries               `pulumi:"timeSeries"`
	WarehouseId              *string                                   `pulumi:"warehouseId"`
}

// The set of arguments for constructing a LakehouseMonitor resource.
type LakehouseMonitorArgs struct {
	AssetsDir                pulumi.StringInput
	BaselineTableName        pulumi.StringPtrInput
	CustomMetrics            LakehouseMonitorCustomMetricArrayInput
	DataClassificationConfig LakehouseMonitorDataClassificationConfigPtrInput
	InferenceLog             LakehouseMonitorInferenceLogPtrInput
	LatestMonitorFailureMsg  pulumi.StringPtrInput
	Notifications            LakehouseMonitorNotificationsPtrInput
	OutputSchemaName         pulumi.StringInput
	Schedule                 LakehouseMonitorSchedulePtrInput
	SkipBuiltinDashboard     pulumi.BoolPtrInput
	SlicingExprs             pulumi.StringArrayInput
	Snapshot                 LakehouseMonitorSnapshotPtrInput
	TableName                pulumi.StringInput
	TimeSeries               LakehouseMonitorTimeSeriesPtrInput
	WarehouseId              pulumi.StringPtrInput
}

func (LakehouseMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lakehouseMonitorArgs)(nil)).Elem()
}

type LakehouseMonitorInput interface {
	pulumi.Input

	ToLakehouseMonitorOutput() LakehouseMonitorOutput
	ToLakehouseMonitorOutputWithContext(ctx context.Context) LakehouseMonitorOutput
}

func (*LakehouseMonitor) ElementType() reflect.Type {
	return reflect.TypeOf((**LakehouseMonitor)(nil)).Elem()
}

func (i *LakehouseMonitor) ToLakehouseMonitorOutput() LakehouseMonitorOutput {
	return i.ToLakehouseMonitorOutputWithContext(context.Background())
}

func (i *LakehouseMonitor) ToLakehouseMonitorOutputWithContext(ctx context.Context) LakehouseMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LakehouseMonitorOutput)
}

// LakehouseMonitorArrayInput is an input type that accepts LakehouseMonitorArray and LakehouseMonitorArrayOutput values.
// You can construct a concrete instance of `LakehouseMonitorArrayInput` via:
//
//	LakehouseMonitorArray{ LakehouseMonitorArgs{...} }
type LakehouseMonitorArrayInput interface {
	pulumi.Input

	ToLakehouseMonitorArrayOutput() LakehouseMonitorArrayOutput
	ToLakehouseMonitorArrayOutputWithContext(context.Context) LakehouseMonitorArrayOutput
}

type LakehouseMonitorArray []LakehouseMonitorInput

func (LakehouseMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LakehouseMonitor)(nil)).Elem()
}

func (i LakehouseMonitorArray) ToLakehouseMonitorArrayOutput() LakehouseMonitorArrayOutput {
	return i.ToLakehouseMonitorArrayOutputWithContext(context.Background())
}

func (i LakehouseMonitorArray) ToLakehouseMonitorArrayOutputWithContext(ctx context.Context) LakehouseMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LakehouseMonitorArrayOutput)
}

// LakehouseMonitorMapInput is an input type that accepts LakehouseMonitorMap and LakehouseMonitorMapOutput values.
// You can construct a concrete instance of `LakehouseMonitorMapInput` via:
//
//	LakehouseMonitorMap{ "key": LakehouseMonitorArgs{...} }
type LakehouseMonitorMapInput interface {
	pulumi.Input

	ToLakehouseMonitorMapOutput() LakehouseMonitorMapOutput
	ToLakehouseMonitorMapOutputWithContext(context.Context) LakehouseMonitorMapOutput
}

type LakehouseMonitorMap map[string]LakehouseMonitorInput

func (LakehouseMonitorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LakehouseMonitor)(nil)).Elem()
}

func (i LakehouseMonitorMap) ToLakehouseMonitorMapOutput() LakehouseMonitorMapOutput {
	return i.ToLakehouseMonitorMapOutputWithContext(context.Background())
}

func (i LakehouseMonitorMap) ToLakehouseMonitorMapOutputWithContext(ctx context.Context) LakehouseMonitorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LakehouseMonitorMapOutput)
}

type LakehouseMonitorOutput struct{ *pulumi.OutputState }

func (LakehouseMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LakehouseMonitor)(nil)).Elem()
}

func (o LakehouseMonitorOutput) ToLakehouseMonitorOutput() LakehouseMonitorOutput {
	return o
}

func (o LakehouseMonitorOutput) ToLakehouseMonitorOutputWithContext(ctx context.Context) LakehouseMonitorOutput {
	return o
}

func (o LakehouseMonitorOutput) AssetsDir() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.AssetsDir }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) BaselineTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringPtrOutput { return v.BaselineTableName }).(pulumi.StringPtrOutput)
}

func (o LakehouseMonitorOutput) CustomMetrics() LakehouseMonitorCustomMetricArrayOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorCustomMetricArrayOutput { return v.CustomMetrics }).(LakehouseMonitorCustomMetricArrayOutput)
}

func (o LakehouseMonitorOutput) DashboardId() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.DashboardId }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) DataClassificationConfig() LakehouseMonitorDataClassificationConfigPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorDataClassificationConfigPtrOutput {
		return v.DataClassificationConfig
	}).(LakehouseMonitorDataClassificationConfigPtrOutput)
}

func (o LakehouseMonitorOutput) DriftMetricsTableName() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.DriftMetricsTableName }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) InferenceLog() LakehouseMonitorInferenceLogPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorInferenceLogPtrOutput { return v.InferenceLog }).(LakehouseMonitorInferenceLogPtrOutput)
}

func (o LakehouseMonitorOutput) LatestMonitorFailureMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringPtrOutput { return v.LatestMonitorFailureMsg }).(pulumi.StringPtrOutput)
}

func (o LakehouseMonitorOutput) MonitorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.MonitorVersion }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) Notifications() LakehouseMonitorNotificationsPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorNotificationsPtrOutput { return v.Notifications }).(LakehouseMonitorNotificationsPtrOutput)
}

func (o LakehouseMonitorOutput) OutputSchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.OutputSchemaName }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) ProfileMetricsTableName() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.ProfileMetricsTableName }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) Schedule() LakehouseMonitorSchedulePtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorSchedulePtrOutput { return v.Schedule }).(LakehouseMonitorSchedulePtrOutput)
}

func (o LakehouseMonitorOutput) SkipBuiltinDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.BoolPtrOutput { return v.SkipBuiltinDashboard }).(pulumi.BoolPtrOutput)
}

func (o LakehouseMonitorOutput) SlicingExprs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringArrayOutput { return v.SlicingExprs }).(pulumi.StringArrayOutput)
}

func (o LakehouseMonitorOutput) Snapshot() LakehouseMonitorSnapshotPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorSnapshotPtrOutput { return v.Snapshot }).(LakehouseMonitorSnapshotPtrOutput)
}

func (o LakehouseMonitorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringOutput { return v.TableName }).(pulumi.StringOutput)
}

func (o LakehouseMonitorOutput) TimeSeries() LakehouseMonitorTimeSeriesPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) LakehouseMonitorTimeSeriesPtrOutput { return v.TimeSeries }).(LakehouseMonitorTimeSeriesPtrOutput)
}

func (o LakehouseMonitorOutput) WarehouseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LakehouseMonitor) pulumi.StringPtrOutput { return v.WarehouseId }).(pulumi.StringPtrOutput)
}

type LakehouseMonitorArrayOutput struct{ *pulumi.OutputState }

func (LakehouseMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LakehouseMonitor)(nil)).Elem()
}

func (o LakehouseMonitorArrayOutput) ToLakehouseMonitorArrayOutput() LakehouseMonitorArrayOutput {
	return o
}

func (o LakehouseMonitorArrayOutput) ToLakehouseMonitorArrayOutputWithContext(ctx context.Context) LakehouseMonitorArrayOutput {
	return o
}

func (o LakehouseMonitorArrayOutput) Index(i pulumi.IntInput) LakehouseMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LakehouseMonitor {
		return vs[0].([]*LakehouseMonitor)[vs[1].(int)]
	}).(LakehouseMonitorOutput)
}

type LakehouseMonitorMapOutput struct{ *pulumi.OutputState }

func (LakehouseMonitorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LakehouseMonitor)(nil)).Elem()
}

func (o LakehouseMonitorMapOutput) ToLakehouseMonitorMapOutput() LakehouseMonitorMapOutput {
	return o
}

func (o LakehouseMonitorMapOutput) ToLakehouseMonitorMapOutputWithContext(ctx context.Context) LakehouseMonitorMapOutput {
	return o
}

func (o LakehouseMonitorMapOutput) MapIndex(k pulumi.StringInput) LakehouseMonitorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LakehouseMonitor {
		return vs[0].(map[string]*LakehouseMonitor)[vs[1].(string)]
	}).(LakehouseMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LakehouseMonitorInput)(nil)).Elem(), &LakehouseMonitor{})
	pulumi.RegisterInputType(reflect.TypeOf((*LakehouseMonitorArrayInput)(nil)).Elem(), LakehouseMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LakehouseMonitorMapInput)(nil)).Elem(), LakehouseMonitorMap{})
	pulumi.RegisterOutputType(LakehouseMonitorOutput{})
	pulumi.RegisterOutputType(LakehouseMonitorArrayOutput{})
	pulumi.RegisterOutputType(LakehouseMonitorMapOutput{})
}
