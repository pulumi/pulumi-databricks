// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Account federation policies allow users and service principals in your Databricks account to securely access Databricks APIs using tokens from your trusted identity providers (IdPs).
//
// Token federation policies eliminate the need to manage Databricks secrets, and allow you to centralize management of token issuance policies in your IdP. Databricks token federation policies are typically used in combination with [SCIM](https://www.terraform.io/admin/users-groups/scim/index.html), so users in your IdP are synchronized into your Databricks account.
//
// An account federation policy specifies:
// * which IdP, or issuer, your Databricks account should accept tokens from
// * how to determine which Databricks user, or subject, a token is issued for
//
// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = "policy_id"
//
//	to = databricks_account_federation_policy.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/accountFederationPolicy:AccountFederationPolicy databricks_account_federation_policy "policy_id"
// ```
type AccountFederationPolicy struct {
	pulumi.CustomResourceState

	// (string) - Creation time of the federation policy
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of the federation policy
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       pulumi.StringOutput                        `pulumi:"name"`
	OidcPolicy AccountFederationPolicyOidcPolicyPtrOutput `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntOutput `pulumi:"servicePrincipalId"`
	// (string) - Unique, immutable id of the federation policy
	Uid pulumi.StringOutput `pulumi:"uid"`
	// (string) - Last update time of the federation policy
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccountFederationPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountFederationPolicy(ctx *pulumi.Context,
	name string, args *AccountFederationPolicyArgs, opts ...pulumi.ResourceOption) (*AccountFederationPolicy, error) {
	if args == nil {
		args = &AccountFederationPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountFederationPolicy
	err := ctx.RegisterResource("databricks:index/accountFederationPolicy:AccountFederationPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountFederationPolicy gets an existing AccountFederationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountFederationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountFederationPolicyState, opts ...pulumi.ResourceOption) (*AccountFederationPolicy, error) {
	var resource AccountFederationPolicy
	err := ctx.ReadResource("databricks:index/accountFederationPolicy:AccountFederationPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountFederationPolicy resources.
type accountFederationPolicyState struct {
	// (string) - Creation time of the federation policy
	CreateTime *string `pulumi:"createTime"`
	// Description of the federation policy
	Description *string `pulumi:"description"`
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       *string                            `pulumi:"name"`
	OidcPolicy *AccountFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId *string `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId *int `pulumi:"servicePrincipalId"`
	// (string) - Unique, immutable id of the federation policy
	Uid *string `pulumi:"uid"`
	// (string) - Last update time of the federation policy
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountFederationPolicyState struct {
	// (string) - Creation time of the federation policy
	CreateTime pulumi.StringPtrInput
	// Description of the federation policy
	Description pulumi.StringPtrInput
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       pulumi.StringPtrInput
	OidcPolicy AccountFederationPolicyOidcPolicyPtrInput
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringPtrInput
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntPtrInput
	// (string) - Unique, immutable id of the federation policy
	Uid pulumi.StringPtrInput
	// (string) - Last update time of the federation policy
	UpdateTime pulumi.StringPtrInput
}

func (AccountFederationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFederationPolicyState)(nil)).Elem()
}

type accountFederationPolicyArgs struct {
	// Description of the federation policy
	Description *string                            `pulumi:"description"`
	OidcPolicy  *AccountFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId *string `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId *int `pulumi:"servicePrincipalId"`
}

// The set of arguments for constructing a AccountFederationPolicy resource.
type AccountFederationPolicyArgs struct {
	// Description of the federation policy
	Description pulumi.StringPtrInput
	OidcPolicy  AccountFederationPolicyOidcPolicyPtrInput
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringPtrInput
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntPtrInput
}

func (AccountFederationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFederationPolicyArgs)(nil)).Elem()
}

type AccountFederationPolicyInput interface {
	pulumi.Input

	ToAccountFederationPolicyOutput() AccountFederationPolicyOutput
	ToAccountFederationPolicyOutputWithContext(ctx context.Context) AccountFederationPolicyOutput
}

func (*AccountFederationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFederationPolicy)(nil)).Elem()
}

func (i *AccountFederationPolicy) ToAccountFederationPolicyOutput() AccountFederationPolicyOutput {
	return i.ToAccountFederationPolicyOutputWithContext(context.Background())
}

func (i *AccountFederationPolicy) ToAccountFederationPolicyOutputWithContext(ctx context.Context) AccountFederationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFederationPolicyOutput)
}

// AccountFederationPolicyArrayInput is an input type that accepts AccountFederationPolicyArray and AccountFederationPolicyArrayOutput values.
// You can construct a concrete instance of `AccountFederationPolicyArrayInput` via:
//
//	AccountFederationPolicyArray{ AccountFederationPolicyArgs{...} }
type AccountFederationPolicyArrayInput interface {
	pulumi.Input

	ToAccountFederationPolicyArrayOutput() AccountFederationPolicyArrayOutput
	ToAccountFederationPolicyArrayOutputWithContext(context.Context) AccountFederationPolicyArrayOutput
}

type AccountFederationPolicyArray []AccountFederationPolicyInput

func (AccountFederationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFederationPolicy)(nil)).Elem()
}

func (i AccountFederationPolicyArray) ToAccountFederationPolicyArrayOutput() AccountFederationPolicyArrayOutput {
	return i.ToAccountFederationPolicyArrayOutputWithContext(context.Background())
}

func (i AccountFederationPolicyArray) ToAccountFederationPolicyArrayOutputWithContext(ctx context.Context) AccountFederationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFederationPolicyArrayOutput)
}

// AccountFederationPolicyMapInput is an input type that accepts AccountFederationPolicyMap and AccountFederationPolicyMapOutput values.
// You can construct a concrete instance of `AccountFederationPolicyMapInput` via:
//
//	AccountFederationPolicyMap{ "key": AccountFederationPolicyArgs{...} }
type AccountFederationPolicyMapInput interface {
	pulumi.Input

	ToAccountFederationPolicyMapOutput() AccountFederationPolicyMapOutput
	ToAccountFederationPolicyMapOutputWithContext(context.Context) AccountFederationPolicyMapOutput
}

type AccountFederationPolicyMap map[string]AccountFederationPolicyInput

func (AccountFederationPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFederationPolicy)(nil)).Elem()
}

func (i AccountFederationPolicyMap) ToAccountFederationPolicyMapOutput() AccountFederationPolicyMapOutput {
	return i.ToAccountFederationPolicyMapOutputWithContext(context.Background())
}

func (i AccountFederationPolicyMap) ToAccountFederationPolicyMapOutputWithContext(ctx context.Context) AccountFederationPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFederationPolicyMapOutput)
}

type AccountFederationPolicyOutput struct{ *pulumi.OutputState }

func (AccountFederationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFederationPolicy)(nil)).Elem()
}

func (o AccountFederationPolicyOutput) ToAccountFederationPolicyOutput() AccountFederationPolicyOutput {
	return o
}

func (o AccountFederationPolicyOutput) ToAccountFederationPolicyOutputWithContext(ctx context.Context) AccountFederationPolicyOutput {
	return o
}

// (string) - Creation time of the federation policy
func (o AccountFederationPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the federation policy
func (o AccountFederationPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (string) - Resource name for the federation policy. Example values include
// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
// specified in create or update requests. If specified in a request, must match the value in the
// request URL
func (o AccountFederationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AccountFederationPolicyOutput) OidcPolicy() AccountFederationPolicyOidcPolicyPtrOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) AccountFederationPolicyOidcPolicyPtrOutput { return v.OidcPolicy }).(AccountFederationPolicyOidcPolicyPtrOutput)
}

// (string) - The ID of the federation policy
func (o AccountFederationPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
func (o AccountFederationPolicyOutput) ServicePrincipalId() pulumi.IntOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.IntOutput { return v.ServicePrincipalId }).(pulumi.IntOutput)
}

// (string) - Unique, immutable id of the federation policy
func (o AccountFederationPolicyOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// (string) - Last update time of the federation policy
func (o AccountFederationPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFederationPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type AccountFederationPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccountFederationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFederationPolicy)(nil)).Elem()
}

func (o AccountFederationPolicyArrayOutput) ToAccountFederationPolicyArrayOutput() AccountFederationPolicyArrayOutput {
	return o
}

func (o AccountFederationPolicyArrayOutput) ToAccountFederationPolicyArrayOutputWithContext(ctx context.Context) AccountFederationPolicyArrayOutput {
	return o
}

func (o AccountFederationPolicyArrayOutput) Index(i pulumi.IntInput) AccountFederationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountFederationPolicy {
		return vs[0].([]*AccountFederationPolicy)[vs[1].(int)]
	}).(AccountFederationPolicyOutput)
}

type AccountFederationPolicyMapOutput struct{ *pulumi.OutputState }

func (AccountFederationPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFederationPolicy)(nil)).Elem()
}

func (o AccountFederationPolicyMapOutput) ToAccountFederationPolicyMapOutput() AccountFederationPolicyMapOutput {
	return o
}

func (o AccountFederationPolicyMapOutput) ToAccountFederationPolicyMapOutputWithContext(ctx context.Context) AccountFederationPolicyMapOutput {
	return o
}

func (o AccountFederationPolicyMapOutput) MapIndex(k pulumi.StringInput) AccountFederationPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountFederationPolicy {
		return vs[0].(map[string]*AccountFederationPolicy)[vs[1].(string)]
	}).(AccountFederationPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFederationPolicyInput)(nil)).Elem(), &AccountFederationPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFederationPolicyArrayInput)(nil)).Elem(), AccountFederationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFederationPolicyMapInput)(nil)).Elem(), AccountFederationPolicyMap{})
	pulumi.RegisterOutputType(AccountFederationPolicyOutput{})
	pulumi.RegisterOutputType(AccountFederationPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccountFederationPolicyMapOutput{})
}
