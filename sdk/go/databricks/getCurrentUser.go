// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ## Exported attributes
//
// Data source exposes the following attributes:
//
// * `id` -  The id of the calling user.
// * `externalId` - ID of the user in an external identity provider.
// * `userName` - Name of the user, e.g. `mr.foo@example.com`. If the currently logged-in identity is a service principal, returns the application ID, e.g. `11111111-2222-3333-4444-555666777888`
// * `home` - Home folder of the user, e.g. `/Users/mr.foo@example.com`.
// * `repos` - Personal Repos location of the user, e.g. `/Repos/mr.foo@example.com`.
// * `alphanumeric` - Alphanumeric representation of user local name. e.g. `mrFoo`.
// * `workspaceUrl` - URL of the current Databricks workspace.
// * `aclPrincipalId` - identifier for use in databricks_access_control_rule_set, e.g. `users/mr.foo@example.com` if current user is user, or `servicePrincipals/00000000-0000-0000-0000-000000000000` if current user is service principal.
//
// ## Related Resources
//
// The following resources are used in the same context:
//
// * End to end workspace management guide
// * Directory to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
// * Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
// * Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
func GetCurrentUser(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetCurrentUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCurrentUserResult
	err := ctx.Invoke("databricks:index/getCurrentUser:getCurrentUser", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getCurrentUser.
type GetCurrentUserResult struct {
	AclPrincipalId string `pulumi:"aclPrincipalId"`
	Alphanumeric   string `pulumi:"alphanumeric"`
	ExternalId     string `pulumi:"externalId"`
	Home           string `pulumi:"home"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Repos        string `pulumi:"repos"`
	UserName     string `pulumi:"userName"`
	WorkspaceUrl string `pulumi:"workspaceUrl"`
}

func GetCurrentUserOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetCurrentUserResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetCurrentUserResult, error) {
		r, err := GetCurrentUser(ctx, opts...)
		var s GetCurrentUserResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetCurrentUserResultOutput)
}

// A collection of values returned by getCurrentUser.
type GetCurrentUserResultOutput struct{ *pulumi.OutputState }

func (GetCurrentUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCurrentUserResult)(nil)).Elem()
}

func (o GetCurrentUserResultOutput) ToGetCurrentUserResultOutput() GetCurrentUserResultOutput {
	return o
}

func (o GetCurrentUserResultOutput) ToGetCurrentUserResultOutputWithContext(ctx context.Context) GetCurrentUserResultOutput {
	return o
}

func (o GetCurrentUserResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCurrentUserResult] {
	return pulumix.Output[GetCurrentUserResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCurrentUserResultOutput) AclPrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.AclPrincipalId }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) Alphanumeric() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.Alphanumeric }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) Home() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.Home }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCurrentUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) Repos() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.Repos }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

func (o GetCurrentUserResultOutput) WorkspaceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCurrentUserResult) string { return v.WorkspaceUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCurrentUserResultOutput{})
}
