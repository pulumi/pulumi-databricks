// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Entitlements struct {
	pulumi.CustomResourceState

	AllowClusterCreate      pulumi.BoolPtrOutput   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate pulumi.BoolPtrOutput   `pulumi:"allowInstancePoolCreate"`
	DatabricksSqlAccess     pulumi.BoolPtrOutput   `pulumi:"databricksSqlAccess"`
	GroupId                 pulumi.StringPtrOutput `pulumi:"groupId"`
	ServicePrincipalId      pulumi.StringPtrOutput `pulumi:"servicePrincipalId"`
	UserId                  pulumi.StringPtrOutput `pulumi:"userId"`
	WorkspaceAccess         pulumi.BoolPtrOutput   `pulumi:"workspaceAccess"`
}

// NewEntitlements registers a new resource with the given unique name, arguments, and options.
func NewEntitlements(ctx *pulumi.Context,
	name string, args *EntitlementsArgs, opts ...pulumi.ResourceOption) (*Entitlements, error) {
	if args == nil {
		args = &EntitlementsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Entitlements
	err := ctx.RegisterResource("databricks:index/entitlements:Entitlements", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntitlements gets an existing Entitlements resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntitlements(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntitlementsState, opts ...pulumi.ResourceOption) (*Entitlements, error) {
	var resource Entitlements
	err := ctx.ReadResource("databricks:index/entitlements:Entitlements", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Entitlements resources.
type entitlementsState struct {
	AllowClusterCreate      *bool   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate *bool   `pulumi:"allowInstancePoolCreate"`
	DatabricksSqlAccess     *bool   `pulumi:"databricksSqlAccess"`
	GroupId                 *string `pulumi:"groupId"`
	ServicePrincipalId      *string `pulumi:"servicePrincipalId"`
	UserId                  *string `pulumi:"userId"`
	WorkspaceAccess         *bool   `pulumi:"workspaceAccess"`
}

type EntitlementsState struct {
	AllowClusterCreate      pulumi.BoolPtrInput
	AllowInstancePoolCreate pulumi.BoolPtrInput
	DatabricksSqlAccess     pulumi.BoolPtrInput
	GroupId                 pulumi.StringPtrInput
	ServicePrincipalId      pulumi.StringPtrInput
	UserId                  pulumi.StringPtrInput
	WorkspaceAccess         pulumi.BoolPtrInput
}

func (EntitlementsState) ElementType() reflect.Type {
	return reflect.TypeOf((*entitlementsState)(nil)).Elem()
}

type entitlementsArgs struct {
	AllowClusterCreate      *bool   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate *bool   `pulumi:"allowInstancePoolCreate"`
	DatabricksSqlAccess     *bool   `pulumi:"databricksSqlAccess"`
	GroupId                 *string `pulumi:"groupId"`
	ServicePrincipalId      *string `pulumi:"servicePrincipalId"`
	UserId                  *string `pulumi:"userId"`
	WorkspaceAccess         *bool   `pulumi:"workspaceAccess"`
}

// The set of arguments for constructing a Entitlements resource.
type EntitlementsArgs struct {
	AllowClusterCreate      pulumi.BoolPtrInput
	AllowInstancePoolCreate pulumi.BoolPtrInput
	DatabricksSqlAccess     pulumi.BoolPtrInput
	GroupId                 pulumi.StringPtrInput
	ServicePrincipalId      pulumi.StringPtrInput
	UserId                  pulumi.StringPtrInput
	WorkspaceAccess         pulumi.BoolPtrInput
}

func (EntitlementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entitlementsArgs)(nil)).Elem()
}

type EntitlementsInput interface {
	pulumi.Input

	ToEntitlementsOutput() EntitlementsOutput
	ToEntitlementsOutputWithContext(ctx context.Context) EntitlementsOutput
}

func (*Entitlements) ElementType() reflect.Type {
	return reflect.TypeOf((**Entitlements)(nil)).Elem()
}

func (i *Entitlements) ToEntitlementsOutput() EntitlementsOutput {
	return i.ToEntitlementsOutputWithContext(context.Background())
}

func (i *Entitlements) ToEntitlementsOutputWithContext(ctx context.Context) EntitlementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementsOutput)
}

// EntitlementsArrayInput is an input type that accepts EntitlementsArray and EntitlementsArrayOutput values.
// You can construct a concrete instance of `EntitlementsArrayInput` via:
//
//	EntitlementsArray{ EntitlementsArgs{...} }
type EntitlementsArrayInput interface {
	pulumi.Input

	ToEntitlementsArrayOutput() EntitlementsArrayOutput
	ToEntitlementsArrayOutputWithContext(context.Context) EntitlementsArrayOutput
}

type EntitlementsArray []EntitlementsInput

func (EntitlementsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Entitlements)(nil)).Elem()
}

func (i EntitlementsArray) ToEntitlementsArrayOutput() EntitlementsArrayOutput {
	return i.ToEntitlementsArrayOutputWithContext(context.Background())
}

func (i EntitlementsArray) ToEntitlementsArrayOutputWithContext(ctx context.Context) EntitlementsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementsArrayOutput)
}

// EntitlementsMapInput is an input type that accepts EntitlementsMap and EntitlementsMapOutput values.
// You can construct a concrete instance of `EntitlementsMapInput` via:
//
//	EntitlementsMap{ "key": EntitlementsArgs{...} }
type EntitlementsMapInput interface {
	pulumi.Input

	ToEntitlementsMapOutput() EntitlementsMapOutput
	ToEntitlementsMapOutputWithContext(context.Context) EntitlementsMapOutput
}

type EntitlementsMap map[string]EntitlementsInput

func (EntitlementsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Entitlements)(nil)).Elem()
}

func (i EntitlementsMap) ToEntitlementsMapOutput() EntitlementsMapOutput {
	return i.ToEntitlementsMapOutputWithContext(context.Background())
}

func (i EntitlementsMap) ToEntitlementsMapOutputWithContext(ctx context.Context) EntitlementsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementsMapOutput)
}

type EntitlementsOutput struct{ *pulumi.OutputState }

func (EntitlementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Entitlements)(nil)).Elem()
}

func (o EntitlementsOutput) ToEntitlementsOutput() EntitlementsOutput {
	return o
}

func (o EntitlementsOutput) ToEntitlementsOutputWithContext(ctx context.Context) EntitlementsOutput {
	return o
}

func (o EntitlementsOutput) AllowClusterCreate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.BoolPtrOutput { return v.AllowClusterCreate }).(pulumi.BoolPtrOutput)
}

func (o EntitlementsOutput) AllowInstancePoolCreate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.BoolPtrOutput { return v.AllowInstancePoolCreate }).(pulumi.BoolPtrOutput)
}

func (o EntitlementsOutput) DatabricksSqlAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.BoolPtrOutput { return v.DatabricksSqlAccess }).(pulumi.BoolPtrOutput)
}

func (o EntitlementsOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o EntitlementsOutput) ServicePrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.StringPtrOutput { return v.ServicePrincipalId }).(pulumi.StringPtrOutput)
}

func (o EntitlementsOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.StringPtrOutput { return v.UserId }).(pulumi.StringPtrOutput)
}

func (o EntitlementsOutput) WorkspaceAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Entitlements) pulumi.BoolPtrOutput { return v.WorkspaceAccess }).(pulumi.BoolPtrOutput)
}

type EntitlementsArrayOutput struct{ *pulumi.OutputState }

func (EntitlementsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Entitlements)(nil)).Elem()
}

func (o EntitlementsArrayOutput) ToEntitlementsArrayOutput() EntitlementsArrayOutput {
	return o
}

func (o EntitlementsArrayOutput) ToEntitlementsArrayOutputWithContext(ctx context.Context) EntitlementsArrayOutput {
	return o
}

func (o EntitlementsArrayOutput) Index(i pulumi.IntInput) EntitlementsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Entitlements {
		return vs[0].([]*Entitlements)[vs[1].(int)]
	}).(EntitlementsOutput)
}

type EntitlementsMapOutput struct{ *pulumi.OutputState }

func (EntitlementsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Entitlements)(nil)).Elem()
}

func (o EntitlementsMapOutput) ToEntitlementsMapOutput() EntitlementsMapOutput {
	return o
}

func (o EntitlementsMapOutput) ToEntitlementsMapOutputWithContext(ctx context.Context) EntitlementsMapOutput {
	return o
}

func (o EntitlementsMapOutput) MapIndex(k pulumi.StringInput) EntitlementsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Entitlements {
		return vs[0].(map[string]*Entitlements)[vs[1].(string)]
	}).(EntitlementsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementsInput)(nil)).Elem(), &Entitlements{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementsArrayInput)(nil)).Elem(), EntitlementsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementsMapInput)(nil)).Elem(), EntitlementsMap{})
	pulumi.RegisterOutputType(EntitlementsOutput{})
	pulumi.RegisterOutputType(EntitlementsArrayOutput{})
	pulumi.RegisterOutputType(EntitlementsMapOutput{})
}
