// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists all MwsWorkspaces in Databricks Account.
//
// > This data source can only be used with an account-level provider!
//
// ## Example Usage
//
// # Listing all workspaces in
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			all, err := databricks.LookupMwsWorkspaces(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("allMwsWorkspaces", all.Ids)
//			return nil
//		})
//	}
//
// ```
//
// ## Related Resources
//
// The following resources are used in the same context:
//
// * MwsWorkspaces to manage Databricks Workspaces on AWS and GCP.
// * MetastoreAssignment to assign Metastore to MwsWorkspaces or azurermDatabricksWorkspace
func LookupMwsWorkspaces(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupMwsWorkspacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMwsWorkspacesResult
	err := ctx.Invoke("databricks:index/getMwsWorkspaces:getMwsWorkspaces", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getMwsWorkspaces.
type LookupMwsWorkspacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// name-to-id map for all of the workspaces in the account
	Ids map[string]string `pulumi:"ids"`
}

func LookupMwsWorkspacesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupMwsWorkspacesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupMwsWorkspacesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("databricks:index/getMwsWorkspaces:getMwsWorkspaces", nil, LookupMwsWorkspacesResultOutput{}, options).(LookupMwsWorkspacesResultOutput), nil
	}).(LookupMwsWorkspacesResultOutput)
}

// A collection of values returned by getMwsWorkspaces.
type LookupMwsWorkspacesResultOutput struct{ *pulumi.OutputState }

func (LookupMwsWorkspacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMwsWorkspacesResult)(nil)).Elem()
}

func (o LookupMwsWorkspacesResultOutput) ToLookupMwsWorkspacesResultOutput() LookupMwsWorkspacesResultOutput {
	return o
}

func (o LookupMwsWorkspacesResultOutput) ToLookupMwsWorkspacesResultOutputWithContext(ctx context.Context) LookupMwsWorkspacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMwsWorkspacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMwsWorkspacesResult) string { return v.Id }).(pulumi.StringOutput)
}

// name-to-id map for all of the workspaces in the account
func (o LookupMwsWorkspacesResultOutput) Ids() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMwsWorkspacesResult) map[string]string { return v.Ids }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMwsWorkspacesResultOutput{})
}
