// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// As of terraform v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = id
//
//	to = databricks_alert_v2.this
//
// }
//
// If you are using an older version of terraform, you can import the resource using cli as follows:
//
// ```sh
// $ pulumi import databricks:index/alertV2:AlertV2 databricks_alert_v2 id
// ```
type AlertV2 struct {
	pulumi.CustomResourceState

	// (string) - The timestamp indicating when the alert was created
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Custom description for the alert. support mustache template
	CustomDescription pulumi.StringPtrOutput `pulumi:"customDescription"`
	// Custom summary for the alert. support mustache template
	CustomSummary pulumi.StringPtrOutput `pulumi:"customSummary"`
	// The display name of the alert
	DisplayName pulumi.StringPtrOutput     `pulumi:"displayName"`
	Evaluation  AlertV2EvaluationPtrOutput `pulumi:"evaluation"`
	// (string) - Indicates whether the query is trashed. Possible values are: ACTIVE, TRASHED
	LifecycleState pulumi.StringOutput `pulumi:"lifecycleState"`
	// (string) - The owner's username. This field is set to "Unavailable" if the user has been deleted
	OwnerUserName pulumi.StringOutput `pulumi:"ownerUserName"`
	// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
	ParentPath pulumi.StringPtrOutput `pulumi:"parentPath"`
	// Text of the query to be run
	QueryText pulumi.StringPtrOutput `pulumi:"queryText"`
	// (string) - The run as username. This field is set to "Unavailable" if the user has been deleted
	RunAsUserName pulumi.StringOutput      `pulumi:"runAsUserName"`
	Schedule      AlertV2SchedulePtrOutput `pulumi:"schedule"`
	// (string) - The timestamp indicating when the alert was updated
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// ID of the SQL warehouse attached to the alert
	WarehouseId pulumi.StringPtrOutput `pulumi:"warehouseId"`
}

// NewAlertV2 registers a new resource with the given unique name, arguments, and options.
func NewAlertV2(ctx *pulumi.Context,
	name string, args *AlertV2Args, opts ...pulumi.ResourceOption) (*AlertV2, error) {
	if args == nil {
		args = &AlertV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertV2
	err := ctx.RegisterResource("databricks:index/alertV2:AlertV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertV2 gets an existing AlertV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertV2State, opts ...pulumi.ResourceOption) (*AlertV2, error) {
	var resource AlertV2
	err := ctx.ReadResource("databricks:index/alertV2:AlertV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertV2 resources.
type alertV2State struct {
	// (string) - The timestamp indicating when the alert was created
	CreateTime *string `pulumi:"createTime"`
	// Custom description for the alert. support mustache template
	CustomDescription *string `pulumi:"customDescription"`
	// Custom summary for the alert. support mustache template
	CustomSummary *string `pulumi:"customSummary"`
	// The display name of the alert
	DisplayName *string            `pulumi:"displayName"`
	Evaluation  *AlertV2Evaluation `pulumi:"evaluation"`
	// (string) - Indicates whether the query is trashed. Possible values are: ACTIVE, TRASHED
	LifecycleState *string `pulumi:"lifecycleState"`
	// (string) - The owner's username. This field is set to "Unavailable" if the user has been deleted
	OwnerUserName *string `pulumi:"ownerUserName"`
	// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
	ParentPath *string `pulumi:"parentPath"`
	// Text of the query to be run
	QueryText *string `pulumi:"queryText"`
	// (string) - The run as username. This field is set to "Unavailable" if the user has been deleted
	RunAsUserName *string          `pulumi:"runAsUserName"`
	Schedule      *AlertV2Schedule `pulumi:"schedule"`
	// (string) - The timestamp indicating when the alert was updated
	UpdateTime *string `pulumi:"updateTime"`
	// ID of the SQL warehouse attached to the alert
	WarehouseId *string `pulumi:"warehouseId"`
}

type AlertV2State struct {
	// (string) - The timestamp indicating when the alert was created
	CreateTime pulumi.StringPtrInput
	// Custom description for the alert. support mustache template
	CustomDescription pulumi.StringPtrInput
	// Custom summary for the alert. support mustache template
	CustomSummary pulumi.StringPtrInput
	// The display name of the alert
	DisplayName pulumi.StringPtrInput
	Evaluation  AlertV2EvaluationPtrInput
	// (string) - Indicates whether the query is trashed. Possible values are: ACTIVE, TRASHED
	LifecycleState pulumi.StringPtrInput
	// (string) - The owner's username. This field is set to "Unavailable" if the user has been deleted
	OwnerUserName pulumi.StringPtrInput
	// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
	ParentPath pulumi.StringPtrInput
	// Text of the query to be run
	QueryText pulumi.StringPtrInput
	// (string) - The run as username. This field is set to "Unavailable" if the user has been deleted
	RunAsUserName pulumi.StringPtrInput
	Schedule      AlertV2SchedulePtrInput
	// (string) - The timestamp indicating when the alert was updated
	UpdateTime pulumi.StringPtrInput
	// ID of the SQL warehouse attached to the alert
	WarehouseId pulumi.StringPtrInput
}

func (AlertV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*alertV2State)(nil)).Elem()
}

type alertV2Args struct {
	// Custom description for the alert. support mustache template
	CustomDescription *string `pulumi:"customDescription"`
	// Custom summary for the alert. support mustache template
	CustomSummary *string `pulumi:"customSummary"`
	// The display name of the alert
	DisplayName *string            `pulumi:"displayName"`
	Evaluation  *AlertV2Evaluation `pulumi:"evaluation"`
	// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
	ParentPath *string `pulumi:"parentPath"`
	// Text of the query to be run
	QueryText *string          `pulumi:"queryText"`
	Schedule  *AlertV2Schedule `pulumi:"schedule"`
	// ID of the SQL warehouse attached to the alert
	WarehouseId *string `pulumi:"warehouseId"`
}

// The set of arguments for constructing a AlertV2 resource.
type AlertV2Args struct {
	// Custom description for the alert. support mustache template
	CustomDescription pulumi.StringPtrInput
	// Custom summary for the alert. support mustache template
	CustomSummary pulumi.StringPtrInput
	// The display name of the alert
	DisplayName pulumi.StringPtrInput
	Evaluation  AlertV2EvaluationPtrInput
	// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
	ParentPath pulumi.StringPtrInput
	// Text of the query to be run
	QueryText pulumi.StringPtrInput
	Schedule  AlertV2SchedulePtrInput
	// ID of the SQL warehouse attached to the alert
	WarehouseId pulumi.StringPtrInput
}

func (AlertV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*alertV2Args)(nil)).Elem()
}

type AlertV2Input interface {
	pulumi.Input

	ToAlertV2Output() AlertV2Output
	ToAlertV2OutputWithContext(ctx context.Context) AlertV2Output
}

func (*AlertV2) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertV2)(nil)).Elem()
}

func (i *AlertV2) ToAlertV2Output() AlertV2Output {
	return i.ToAlertV2OutputWithContext(context.Background())
}

func (i *AlertV2) ToAlertV2OutputWithContext(ctx context.Context) AlertV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(AlertV2Output)
}

// AlertV2ArrayInput is an input type that accepts AlertV2Array and AlertV2ArrayOutput values.
// You can construct a concrete instance of `AlertV2ArrayInput` via:
//
//	AlertV2Array{ AlertV2Args{...} }
type AlertV2ArrayInput interface {
	pulumi.Input

	ToAlertV2ArrayOutput() AlertV2ArrayOutput
	ToAlertV2ArrayOutputWithContext(context.Context) AlertV2ArrayOutput
}

type AlertV2Array []AlertV2Input

func (AlertV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertV2)(nil)).Elem()
}

func (i AlertV2Array) ToAlertV2ArrayOutput() AlertV2ArrayOutput {
	return i.ToAlertV2ArrayOutputWithContext(context.Background())
}

func (i AlertV2Array) ToAlertV2ArrayOutputWithContext(ctx context.Context) AlertV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertV2ArrayOutput)
}

// AlertV2MapInput is an input type that accepts AlertV2Map and AlertV2MapOutput values.
// You can construct a concrete instance of `AlertV2MapInput` via:
//
//	AlertV2Map{ "key": AlertV2Args{...} }
type AlertV2MapInput interface {
	pulumi.Input

	ToAlertV2MapOutput() AlertV2MapOutput
	ToAlertV2MapOutputWithContext(context.Context) AlertV2MapOutput
}

type AlertV2Map map[string]AlertV2Input

func (AlertV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertV2)(nil)).Elem()
}

func (i AlertV2Map) ToAlertV2MapOutput() AlertV2MapOutput {
	return i.ToAlertV2MapOutputWithContext(context.Background())
}

func (i AlertV2Map) ToAlertV2MapOutputWithContext(ctx context.Context) AlertV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertV2MapOutput)
}

type AlertV2Output struct{ *pulumi.OutputState }

func (AlertV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertV2)(nil)).Elem()
}

func (o AlertV2Output) ToAlertV2Output() AlertV2Output {
	return o
}

func (o AlertV2Output) ToAlertV2OutputWithContext(ctx context.Context) AlertV2Output {
	return o
}

// (string) - The timestamp indicating when the alert was created
func (o AlertV2Output) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Custom description for the alert. support mustache template
func (o AlertV2Output) CustomDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.CustomDescription }).(pulumi.StringPtrOutput)
}

// Custom summary for the alert. support mustache template
func (o AlertV2Output) CustomSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.CustomSummary }).(pulumi.StringPtrOutput)
}

// The display name of the alert
func (o AlertV2Output) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o AlertV2Output) Evaluation() AlertV2EvaluationPtrOutput {
	return o.ApplyT(func(v *AlertV2) AlertV2EvaluationPtrOutput { return v.Evaluation }).(AlertV2EvaluationPtrOutput)
}

// (string) - Indicates whether the query is trashed. Possible values are: ACTIVE, TRASHED
func (o AlertV2Output) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringOutput { return v.LifecycleState }).(pulumi.StringOutput)
}

// (string) - The owner's username. This field is set to "Unavailable" if the user has been deleted
func (o AlertV2Output) OwnerUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringOutput { return v.OwnerUserName }).(pulumi.StringOutput)
}

// The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
func (o AlertV2Output) ParentPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.ParentPath }).(pulumi.StringPtrOutput)
}

// Text of the query to be run
func (o AlertV2Output) QueryText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.QueryText }).(pulumi.StringPtrOutput)
}

// (string) - The run as username. This field is set to "Unavailable" if the user has been deleted
func (o AlertV2Output) RunAsUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringOutput { return v.RunAsUserName }).(pulumi.StringOutput)
}

func (o AlertV2Output) Schedule() AlertV2SchedulePtrOutput {
	return o.ApplyT(func(v *AlertV2) AlertV2SchedulePtrOutput { return v.Schedule }).(AlertV2SchedulePtrOutput)
}

// (string) - The timestamp indicating when the alert was updated
func (o AlertV2Output) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// ID of the SQL warehouse attached to the alert
func (o AlertV2Output) WarehouseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertV2) pulumi.StringPtrOutput { return v.WarehouseId }).(pulumi.StringPtrOutput)
}

type AlertV2ArrayOutput struct{ *pulumi.OutputState }

func (AlertV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertV2)(nil)).Elem()
}

func (o AlertV2ArrayOutput) ToAlertV2ArrayOutput() AlertV2ArrayOutput {
	return o
}

func (o AlertV2ArrayOutput) ToAlertV2ArrayOutputWithContext(ctx context.Context) AlertV2ArrayOutput {
	return o
}

func (o AlertV2ArrayOutput) Index(i pulumi.IntInput) AlertV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertV2 {
		return vs[0].([]*AlertV2)[vs[1].(int)]
	}).(AlertV2Output)
}

type AlertV2MapOutput struct{ *pulumi.OutputState }

func (AlertV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertV2)(nil)).Elem()
}

func (o AlertV2MapOutput) ToAlertV2MapOutput() AlertV2MapOutput {
	return o
}

func (o AlertV2MapOutput) ToAlertV2MapOutputWithContext(ctx context.Context) AlertV2MapOutput {
	return o
}

func (o AlertV2MapOutput) MapIndex(k pulumi.StringInput) AlertV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertV2 {
		return vs[0].(map[string]*AlertV2)[vs[1].(string)]
	}).(AlertV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertV2Input)(nil)).Elem(), &AlertV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertV2ArrayInput)(nil)).Elem(), AlertV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertV2MapInput)(nil)).Elem(), AlertV2Map{})
	pulumi.RegisterOutputType(AlertV2Output{})
	pulumi.RegisterOutputType(AlertV2ArrayOutput{})
	pulumi.RegisterOutputType(AlertV2MapOutput{})
}
