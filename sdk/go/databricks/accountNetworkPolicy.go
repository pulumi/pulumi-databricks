// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Network policies control which network destinations can be accessed from the Databricks environment.
//
// Each Databricks account includes a default policy named `default-policy`. This policy is:
//
// - Associated with any workspace lacking an explicit network policy assignment
// - Automatically associated with each newly created workspace
// - Reserved and cannot be deleted, but can be updated to customize the default network access rules for your account
//
// The `default-policy` provides a baseline security configuration that ensures all workspaces have network access controls in place.
//
// > **Note** This resource can only be used with an account-level provider!
//
// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = "network_policy_id"
//
//	to = databricks_account_network_policy.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/accountNetworkPolicy:AccountNetworkPolicy databricks_account_network_policy "network_policy_id"
// ```
type AccountNetworkPolicy struct {
	pulumi.CustomResourceState

	// The associated account ID for this Network Policy object
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The network policies applying for egress traffic
	Egress AccountNetworkPolicyEgressPtrOutput `pulumi:"egress"`
	// The unique identifier for the network policy
	NetworkPolicyId pulumi.StringPtrOutput `pulumi:"networkPolicyId"`
}

// NewAccountNetworkPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountNetworkPolicy(ctx *pulumi.Context,
	name string, args *AccountNetworkPolicyArgs, opts ...pulumi.ResourceOption) (*AccountNetworkPolicy, error) {
	if args == nil {
		args = &AccountNetworkPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountNetworkPolicy
	err := ctx.RegisterResource("databricks:index/accountNetworkPolicy:AccountNetworkPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountNetworkPolicy gets an existing AccountNetworkPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountNetworkPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountNetworkPolicyState, opts ...pulumi.ResourceOption) (*AccountNetworkPolicy, error) {
	var resource AccountNetworkPolicy
	err := ctx.ReadResource("databricks:index/accountNetworkPolicy:AccountNetworkPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountNetworkPolicy resources.
type accountNetworkPolicyState struct {
	// The associated account ID for this Network Policy object
	AccountId *string `pulumi:"accountId"`
	// The network policies applying for egress traffic
	Egress *AccountNetworkPolicyEgress `pulumi:"egress"`
	// The unique identifier for the network policy
	NetworkPolicyId *string `pulumi:"networkPolicyId"`
}

type AccountNetworkPolicyState struct {
	// The associated account ID for this Network Policy object
	AccountId pulumi.StringPtrInput
	// The network policies applying for egress traffic
	Egress AccountNetworkPolicyEgressPtrInput
	// The unique identifier for the network policy
	NetworkPolicyId pulumi.StringPtrInput
}

func (AccountNetworkPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountNetworkPolicyState)(nil)).Elem()
}

type accountNetworkPolicyArgs struct {
	// The associated account ID for this Network Policy object
	AccountId *string `pulumi:"accountId"`
	// The network policies applying for egress traffic
	Egress *AccountNetworkPolicyEgress `pulumi:"egress"`
	// The unique identifier for the network policy
	NetworkPolicyId *string `pulumi:"networkPolicyId"`
}

// The set of arguments for constructing a AccountNetworkPolicy resource.
type AccountNetworkPolicyArgs struct {
	// The associated account ID for this Network Policy object
	AccountId pulumi.StringPtrInput
	// The network policies applying for egress traffic
	Egress AccountNetworkPolicyEgressPtrInput
	// The unique identifier for the network policy
	NetworkPolicyId pulumi.StringPtrInput
}

func (AccountNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountNetworkPolicyArgs)(nil)).Elem()
}

type AccountNetworkPolicyInput interface {
	pulumi.Input

	ToAccountNetworkPolicyOutput() AccountNetworkPolicyOutput
	ToAccountNetworkPolicyOutputWithContext(ctx context.Context) AccountNetworkPolicyOutput
}

func (*AccountNetworkPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkPolicy)(nil)).Elem()
}

func (i *AccountNetworkPolicy) ToAccountNetworkPolicyOutput() AccountNetworkPolicyOutput {
	return i.ToAccountNetworkPolicyOutputWithContext(context.Background())
}

func (i *AccountNetworkPolicy) ToAccountNetworkPolicyOutputWithContext(ctx context.Context) AccountNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkPolicyOutput)
}

// AccountNetworkPolicyArrayInput is an input type that accepts AccountNetworkPolicyArray and AccountNetworkPolicyArrayOutput values.
// You can construct a concrete instance of `AccountNetworkPolicyArrayInput` via:
//
//	AccountNetworkPolicyArray{ AccountNetworkPolicyArgs{...} }
type AccountNetworkPolicyArrayInput interface {
	pulumi.Input

	ToAccountNetworkPolicyArrayOutput() AccountNetworkPolicyArrayOutput
	ToAccountNetworkPolicyArrayOutputWithContext(context.Context) AccountNetworkPolicyArrayOutput
}

type AccountNetworkPolicyArray []AccountNetworkPolicyInput

func (AccountNetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountNetworkPolicy)(nil)).Elem()
}

func (i AccountNetworkPolicyArray) ToAccountNetworkPolicyArrayOutput() AccountNetworkPolicyArrayOutput {
	return i.ToAccountNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i AccountNetworkPolicyArray) ToAccountNetworkPolicyArrayOutputWithContext(ctx context.Context) AccountNetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkPolicyArrayOutput)
}

// AccountNetworkPolicyMapInput is an input type that accepts AccountNetworkPolicyMap and AccountNetworkPolicyMapOutput values.
// You can construct a concrete instance of `AccountNetworkPolicyMapInput` via:
//
//	AccountNetworkPolicyMap{ "key": AccountNetworkPolicyArgs{...} }
type AccountNetworkPolicyMapInput interface {
	pulumi.Input

	ToAccountNetworkPolicyMapOutput() AccountNetworkPolicyMapOutput
	ToAccountNetworkPolicyMapOutputWithContext(context.Context) AccountNetworkPolicyMapOutput
}

type AccountNetworkPolicyMap map[string]AccountNetworkPolicyInput

func (AccountNetworkPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountNetworkPolicy)(nil)).Elem()
}

func (i AccountNetworkPolicyMap) ToAccountNetworkPolicyMapOutput() AccountNetworkPolicyMapOutput {
	return i.ToAccountNetworkPolicyMapOutputWithContext(context.Background())
}

func (i AccountNetworkPolicyMap) ToAccountNetworkPolicyMapOutputWithContext(ctx context.Context) AccountNetworkPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkPolicyMapOutput)
}

type AccountNetworkPolicyOutput struct{ *pulumi.OutputState }

func (AccountNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkPolicy)(nil)).Elem()
}

func (o AccountNetworkPolicyOutput) ToAccountNetworkPolicyOutput() AccountNetworkPolicyOutput {
	return o
}

func (o AccountNetworkPolicyOutput) ToAccountNetworkPolicyOutputWithContext(ctx context.Context) AccountNetworkPolicyOutput {
	return o
}

// The associated account ID for this Network Policy object
func (o AccountNetworkPolicyOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountNetworkPolicy) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The network policies applying for egress traffic
func (o AccountNetworkPolicyOutput) Egress() AccountNetworkPolicyEgressPtrOutput {
	return o.ApplyT(func(v *AccountNetworkPolicy) AccountNetworkPolicyEgressPtrOutput { return v.Egress }).(AccountNetworkPolicyEgressPtrOutput)
}

// The unique identifier for the network policy
func (o AccountNetworkPolicyOutput) NetworkPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountNetworkPolicy) pulumi.StringPtrOutput { return v.NetworkPolicyId }).(pulumi.StringPtrOutput)
}

type AccountNetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccountNetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountNetworkPolicy)(nil)).Elem()
}

func (o AccountNetworkPolicyArrayOutput) ToAccountNetworkPolicyArrayOutput() AccountNetworkPolicyArrayOutput {
	return o
}

func (o AccountNetworkPolicyArrayOutput) ToAccountNetworkPolicyArrayOutputWithContext(ctx context.Context) AccountNetworkPolicyArrayOutput {
	return o
}

func (o AccountNetworkPolicyArrayOutput) Index(i pulumi.IntInput) AccountNetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountNetworkPolicy {
		return vs[0].([]*AccountNetworkPolicy)[vs[1].(int)]
	}).(AccountNetworkPolicyOutput)
}

type AccountNetworkPolicyMapOutput struct{ *pulumi.OutputState }

func (AccountNetworkPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountNetworkPolicy)(nil)).Elem()
}

func (o AccountNetworkPolicyMapOutput) ToAccountNetworkPolicyMapOutput() AccountNetworkPolicyMapOutput {
	return o
}

func (o AccountNetworkPolicyMapOutput) ToAccountNetworkPolicyMapOutputWithContext(ctx context.Context) AccountNetworkPolicyMapOutput {
	return o
}

func (o AccountNetworkPolicyMapOutput) MapIndex(k pulumi.StringInput) AccountNetworkPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountNetworkPolicy {
		return vs[0].(map[string]*AccountNetworkPolicy)[vs[1].(string)]
	}).(AccountNetworkPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkPolicyInput)(nil)).Elem(), &AccountNetworkPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkPolicyArrayInput)(nil)).Elem(), AccountNetworkPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkPolicyMapInput)(nil)).Elem(), AccountNetworkPolicyMap{})
	pulumi.RegisterOutputType(AccountNetworkPolicyOutput{})
	pulumi.RegisterOutputType(AccountNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccountNetworkPolicyMapOutput{})
}
