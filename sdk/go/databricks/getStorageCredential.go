// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// Getting details of an existing storage credential in the metastore
func LookupStorageCredential(ctx *pulumi.Context, args *LookupStorageCredentialArgs, opts ...pulumi.InvokeOption) (*LookupStorageCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageCredentialResult
	err := ctx.Invoke("databricks:index/getStorageCredential:getStorageCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorageCredential.
type LookupStorageCredentialArgs struct {
	// The name of the storage credential
	Name                  string                                     `pulumi:"name"`
	StorageCredentialInfo *GetStorageCredentialStorageCredentialInfo `pulumi:"storageCredentialInfo"`
}

// A collection of values returned by getStorageCredential.
type LookupStorageCredentialResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                    string                                    `pulumi:"id"`
	Name                  string                                    `pulumi:"name"`
	StorageCredentialInfo GetStorageCredentialStorageCredentialInfo `pulumi:"storageCredentialInfo"`
}

func LookupStorageCredentialOutput(ctx *pulumi.Context, args LookupStorageCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupStorageCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageCredentialResult, error) {
			args := v.(LookupStorageCredentialArgs)
			r, err := LookupStorageCredential(ctx, &args, opts...)
			var s LookupStorageCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageCredentialResultOutput)
}

// A collection of arguments for invoking getStorageCredential.
type LookupStorageCredentialOutputArgs struct {
	// The name of the storage credential
	Name                  pulumi.StringInput                                `pulumi:"name"`
	StorageCredentialInfo GetStorageCredentialStorageCredentialInfoPtrInput `pulumi:"storageCredentialInfo"`
}

func (LookupStorageCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getStorageCredential.
type LookupStorageCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupStorageCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageCredentialResult)(nil)).Elem()
}

func (o LookupStorageCredentialResultOutput) ToLookupStorageCredentialResultOutput() LookupStorageCredentialResultOutput {
	return o
}

func (o LookupStorageCredentialResultOutput) ToLookupStorageCredentialResultOutputWithContext(ctx context.Context) LookupStorageCredentialResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStorageCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStorageCredentialResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageCredentialResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupStorageCredentialResultOutput) StorageCredentialInfo() GetStorageCredentialStorageCredentialInfoOutput {
	return o.ApplyT(func(v LookupStorageCredentialResult) GetStorageCredentialStorageCredentialInfo {
		return v.StorageCredentialInfo
	}).(GetStorageCredentialStorageCredentialInfoOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageCredentialResultOutput{})
}
