// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCleanRoomAutoApprovalRule(ctx *pulumi.Context, args *LookupCleanRoomAutoApprovalRuleArgs, opts ...pulumi.InvokeOption) (*LookupCleanRoomAutoApprovalRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCleanRoomAutoApprovalRuleResult
	err := ctx.Invoke("databricks:index/getCleanRoomAutoApprovalRule:getCleanRoomAutoApprovalRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCleanRoomAutoApprovalRule.
type LookupCleanRoomAutoApprovalRuleArgs struct {
	// (string) - Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias *string `pulumi:"authorCollaboratorAlias"`
	// (string) - Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope *string `pulumi:"authorScope"`
	// (string) - The name of the clean room this auto-approval rule belongs to
	CleanRoomName *string `pulumi:"cleanRoomName"`
	// (string) - Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias *string `pulumi:"runnerCollaboratorAlias"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

// A collection of values returned by getCleanRoomAutoApprovalRule.
type LookupCleanRoomAutoApprovalRuleResult struct {
	// (string) - Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias *string `pulumi:"authorCollaboratorAlias"`
	// (string) - Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope *string `pulumi:"authorScope"`
	// (string) - The name of the clean room this auto-approval rule belongs to
	CleanRoomName *string `pulumi:"cleanRoomName"`
	// (integer) - Timestamp of when the rule was created, in epoch milliseconds
	CreatedAt int `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (string) - A generated UUID identifying the rule
	RuleId string `pulumi:"ruleId"`
	// (string) - The owner of the rule to whom the rule applies
	RuleOwnerCollaboratorAlias string `pulumi:"ruleOwnerCollaboratorAlias"`
	// (string) - Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias *string `pulumi:"runnerCollaboratorAlias"`
	WorkspaceId             *string `pulumi:"workspaceId"`
}

func LookupCleanRoomAutoApprovalRuleOutput(ctx *pulumi.Context, args LookupCleanRoomAutoApprovalRuleOutputArgs, opts ...pulumi.InvokeOption) LookupCleanRoomAutoApprovalRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCleanRoomAutoApprovalRuleResultOutput, error) {
			args := v.(LookupCleanRoomAutoApprovalRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getCleanRoomAutoApprovalRule:getCleanRoomAutoApprovalRule", args, LookupCleanRoomAutoApprovalRuleResultOutput{}, options).(LookupCleanRoomAutoApprovalRuleResultOutput), nil
		}).(LookupCleanRoomAutoApprovalRuleResultOutput)
}

// A collection of arguments for invoking getCleanRoomAutoApprovalRule.
type LookupCleanRoomAutoApprovalRuleOutputArgs struct {
	// (string) - Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias pulumi.StringPtrInput `pulumi:"authorCollaboratorAlias"`
	// (string) - Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope pulumi.StringPtrInput `pulumi:"authorScope"`
	// (string) - The name of the clean room this auto-approval rule belongs to
	CleanRoomName pulumi.StringPtrInput `pulumi:"cleanRoomName"`
	// (string) - Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias pulumi.StringPtrInput `pulumi:"runnerCollaboratorAlias"`
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (LookupCleanRoomAutoApprovalRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCleanRoomAutoApprovalRuleArgs)(nil)).Elem()
}

// A collection of values returned by getCleanRoomAutoApprovalRule.
type LookupCleanRoomAutoApprovalRuleResultOutput struct{ *pulumi.OutputState }

func (LookupCleanRoomAutoApprovalRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCleanRoomAutoApprovalRuleResult)(nil)).Elem()
}

func (o LookupCleanRoomAutoApprovalRuleResultOutput) ToLookupCleanRoomAutoApprovalRuleResultOutput() LookupCleanRoomAutoApprovalRuleResultOutput {
	return o
}

func (o LookupCleanRoomAutoApprovalRuleResultOutput) ToLookupCleanRoomAutoApprovalRuleResultOutputWithContext(ctx context.Context) LookupCleanRoomAutoApprovalRuleResultOutput {
	return o
}

// (string) - Collaborator alias of the author covered by the rule.
// Only one of `authorCollaboratorAlias` and `authorScope` can be set
func (o LookupCleanRoomAutoApprovalRuleResultOutput) AuthorCollaboratorAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) *string { return v.AuthorCollaboratorAlias }).(pulumi.StringPtrOutput)
}

// (string) - Scope of authors covered by the rule.
// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
func (o LookupCleanRoomAutoApprovalRuleResultOutput) AuthorScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) *string { return v.AuthorScope }).(pulumi.StringPtrOutput)
}

// (string) - The name of the clean room this auto-approval rule belongs to
func (o LookupCleanRoomAutoApprovalRuleResultOutput) CleanRoomName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) *string { return v.CleanRoomName }).(pulumi.StringPtrOutput)
}

// (integer) - Timestamp of when the rule was created, in epoch milliseconds
func (o LookupCleanRoomAutoApprovalRuleResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCleanRoomAutoApprovalRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// (string) - A generated UUID identifying the rule
func (o LookupCleanRoomAutoApprovalRuleResultOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) string { return v.RuleId }).(pulumi.StringOutput)
}

// (string) - The owner of the rule to whom the rule applies
func (o LookupCleanRoomAutoApprovalRuleResultOutput) RuleOwnerCollaboratorAlias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) string { return v.RuleOwnerCollaboratorAlias }).(pulumi.StringOutput)
}

// (string) - Collaborator alias of the runner covered by the rule
func (o LookupCleanRoomAutoApprovalRuleResultOutput) RunnerCollaboratorAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) *string { return v.RunnerCollaboratorAlias }).(pulumi.StringPtrOutput)
}

func (o LookupCleanRoomAutoApprovalRuleResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCleanRoomAutoApprovalRuleResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCleanRoomAutoApprovalRuleResultOutput{})
}
