// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = key
//
//	to = databricks_materialized_features_feature_tag.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/materializedFeaturesFeatureTag:MaterializedFeaturesFeatureTag databricks_materialized_features_feature_tag key
// ```
type MaterializedFeaturesFeatureTag struct {
	pulumi.CustomResourceState

	Key   pulumi.StringOutput    `pulumi:"key"`
	Value pulumi.StringPtrOutput `pulumi:"value"`
}

// NewMaterializedFeaturesFeatureTag registers a new resource with the given unique name, arguments, and options.
func NewMaterializedFeaturesFeatureTag(ctx *pulumi.Context,
	name string, args *MaterializedFeaturesFeatureTagArgs, opts ...pulumi.ResourceOption) (*MaterializedFeaturesFeatureTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MaterializedFeaturesFeatureTag
	err := ctx.RegisterResource("databricks:index/materializedFeaturesFeatureTag:MaterializedFeaturesFeatureTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaterializedFeaturesFeatureTag gets an existing MaterializedFeaturesFeatureTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaterializedFeaturesFeatureTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaterializedFeaturesFeatureTagState, opts ...pulumi.ResourceOption) (*MaterializedFeaturesFeatureTag, error) {
	var resource MaterializedFeaturesFeatureTag
	err := ctx.ReadResource("databricks:index/materializedFeaturesFeatureTag:MaterializedFeaturesFeatureTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaterializedFeaturesFeatureTag resources.
type materializedFeaturesFeatureTagState struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

type MaterializedFeaturesFeatureTagState struct {
	Key   pulumi.StringPtrInput
	Value pulumi.StringPtrInput
}

func (MaterializedFeaturesFeatureTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*materializedFeaturesFeatureTagState)(nil)).Elem()
}

type materializedFeaturesFeatureTagArgs struct {
	Key   string  `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a MaterializedFeaturesFeatureTag resource.
type MaterializedFeaturesFeatureTagArgs struct {
	Key   pulumi.StringInput
	Value pulumi.StringPtrInput
}

func (MaterializedFeaturesFeatureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*materializedFeaturesFeatureTagArgs)(nil)).Elem()
}

type MaterializedFeaturesFeatureTagInput interface {
	pulumi.Input

	ToMaterializedFeaturesFeatureTagOutput() MaterializedFeaturesFeatureTagOutput
	ToMaterializedFeaturesFeatureTagOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagOutput
}

func (*MaterializedFeaturesFeatureTag) ElementType() reflect.Type {
	return reflect.TypeOf((**MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (i *MaterializedFeaturesFeatureTag) ToMaterializedFeaturesFeatureTagOutput() MaterializedFeaturesFeatureTagOutput {
	return i.ToMaterializedFeaturesFeatureTagOutputWithContext(context.Background())
}

func (i *MaterializedFeaturesFeatureTag) ToMaterializedFeaturesFeatureTagOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaterializedFeaturesFeatureTagOutput)
}

// MaterializedFeaturesFeatureTagArrayInput is an input type that accepts MaterializedFeaturesFeatureTagArray and MaterializedFeaturesFeatureTagArrayOutput values.
// You can construct a concrete instance of `MaterializedFeaturesFeatureTagArrayInput` via:
//
//	MaterializedFeaturesFeatureTagArray{ MaterializedFeaturesFeatureTagArgs{...} }
type MaterializedFeaturesFeatureTagArrayInput interface {
	pulumi.Input

	ToMaterializedFeaturesFeatureTagArrayOutput() MaterializedFeaturesFeatureTagArrayOutput
	ToMaterializedFeaturesFeatureTagArrayOutputWithContext(context.Context) MaterializedFeaturesFeatureTagArrayOutput
}

type MaterializedFeaturesFeatureTagArray []MaterializedFeaturesFeatureTagInput

func (MaterializedFeaturesFeatureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (i MaterializedFeaturesFeatureTagArray) ToMaterializedFeaturesFeatureTagArrayOutput() MaterializedFeaturesFeatureTagArrayOutput {
	return i.ToMaterializedFeaturesFeatureTagArrayOutputWithContext(context.Background())
}

func (i MaterializedFeaturesFeatureTagArray) ToMaterializedFeaturesFeatureTagArrayOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaterializedFeaturesFeatureTagArrayOutput)
}

// MaterializedFeaturesFeatureTagMapInput is an input type that accepts MaterializedFeaturesFeatureTagMap and MaterializedFeaturesFeatureTagMapOutput values.
// You can construct a concrete instance of `MaterializedFeaturesFeatureTagMapInput` via:
//
//	MaterializedFeaturesFeatureTagMap{ "key": MaterializedFeaturesFeatureTagArgs{...} }
type MaterializedFeaturesFeatureTagMapInput interface {
	pulumi.Input

	ToMaterializedFeaturesFeatureTagMapOutput() MaterializedFeaturesFeatureTagMapOutput
	ToMaterializedFeaturesFeatureTagMapOutputWithContext(context.Context) MaterializedFeaturesFeatureTagMapOutput
}

type MaterializedFeaturesFeatureTagMap map[string]MaterializedFeaturesFeatureTagInput

func (MaterializedFeaturesFeatureTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (i MaterializedFeaturesFeatureTagMap) ToMaterializedFeaturesFeatureTagMapOutput() MaterializedFeaturesFeatureTagMapOutput {
	return i.ToMaterializedFeaturesFeatureTagMapOutputWithContext(context.Background())
}

func (i MaterializedFeaturesFeatureTagMap) ToMaterializedFeaturesFeatureTagMapOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaterializedFeaturesFeatureTagMapOutput)
}

type MaterializedFeaturesFeatureTagOutput struct{ *pulumi.OutputState }

func (MaterializedFeaturesFeatureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (o MaterializedFeaturesFeatureTagOutput) ToMaterializedFeaturesFeatureTagOutput() MaterializedFeaturesFeatureTagOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagOutput) ToMaterializedFeaturesFeatureTagOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *MaterializedFeaturesFeatureTag) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func (o MaterializedFeaturesFeatureTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaterializedFeaturesFeatureTag) pulumi.StringPtrOutput { return v.Value }).(pulumi.StringPtrOutput)
}

type MaterializedFeaturesFeatureTagArrayOutput struct{ *pulumi.OutputState }

func (MaterializedFeaturesFeatureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (o MaterializedFeaturesFeatureTagArrayOutput) ToMaterializedFeaturesFeatureTagArrayOutput() MaterializedFeaturesFeatureTagArrayOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagArrayOutput) ToMaterializedFeaturesFeatureTagArrayOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagArrayOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagArrayOutput) Index(i pulumi.IntInput) MaterializedFeaturesFeatureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MaterializedFeaturesFeatureTag {
		return vs[0].([]*MaterializedFeaturesFeatureTag)[vs[1].(int)]
	}).(MaterializedFeaturesFeatureTagOutput)
}

type MaterializedFeaturesFeatureTagMapOutput struct{ *pulumi.OutputState }

func (MaterializedFeaturesFeatureTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaterializedFeaturesFeatureTag)(nil)).Elem()
}

func (o MaterializedFeaturesFeatureTagMapOutput) ToMaterializedFeaturesFeatureTagMapOutput() MaterializedFeaturesFeatureTagMapOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagMapOutput) ToMaterializedFeaturesFeatureTagMapOutputWithContext(ctx context.Context) MaterializedFeaturesFeatureTagMapOutput {
	return o
}

func (o MaterializedFeaturesFeatureTagMapOutput) MapIndex(k pulumi.StringInput) MaterializedFeaturesFeatureTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MaterializedFeaturesFeatureTag {
		return vs[0].(map[string]*MaterializedFeaturesFeatureTag)[vs[1].(string)]
	}).(MaterializedFeaturesFeatureTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaterializedFeaturesFeatureTagInput)(nil)).Elem(), &MaterializedFeaturesFeatureTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaterializedFeaturesFeatureTagArrayInput)(nil)).Elem(), MaterializedFeaturesFeatureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaterializedFeaturesFeatureTagMapInput)(nil)).Elem(), MaterializedFeaturesFeatureTagMap{})
	pulumi.RegisterOutputType(MaterializedFeaturesFeatureTagOutput{})
	pulumi.RegisterOutputType(MaterializedFeaturesFeatureTagArrayOutput{})
	pulumi.RegisterOutputType(MaterializedFeaturesFeatureTagMapOutput{})
}
