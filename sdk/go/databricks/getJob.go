// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupJob(ctx *pulumi.Context, args *LookupJobArgs, opts ...pulumi.InvokeOption) (*LookupJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupJobResult
	err := ctx.Invoke("databricks:index/getJob:getJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJob.
type LookupJobArgs struct {
	Id          *string            `pulumi:"id"`
	JobId       *string            `pulumi:"jobId"`
	JobName     *string            `pulumi:"jobName"`
	JobSettings *GetJobJobSettings `pulumi:"jobSettings"`
	Name        *string            `pulumi:"name"`
}

// A collection of values returned by getJob.
type LookupJobResult struct {
	Id          string            `pulumi:"id"`
	JobId       string            `pulumi:"jobId"`
	JobName     string            `pulumi:"jobName"`
	JobSettings GetJobJobSettings `pulumi:"jobSettings"`
	Name        string            `pulumi:"name"`
}

func LookupJobOutput(ctx *pulumi.Context, args LookupJobOutputArgs, opts ...pulumi.InvokeOption) LookupJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupJobResultOutput, error) {
			args := v.(LookupJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getJob:getJob", args, LookupJobResultOutput{}, options).(LookupJobResultOutput), nil
		}).(LookupJobResultOutput)
}

// A collection of arguments for invoking getJob.
type LookupJobOutputArgs struct {
	Id          pulumi.StringPtrInput     `pulumi:"id"`
	JobId       pulumi.StringPtrInput     `pulumi:"jobId"`
	JobName     pulumi.StringPtrInput     `pulumi:"jobName"`
	JobSettings GetJobJobSettingsPtrInput `pulumi:"jobSettings"`
	Name        pulumi.StringPtrInput     `pulumi:"name"`
}

func (LookupJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobArgs)(nil)).Elem()
}

// A collection of values returned by getJob.
type LookupJobResultOutput struct{ *pulumi.OutputState }

func (LookupJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobResult)(nil)).Elem()
}

func (o LookupJobResultOutput) ToLookupJobResultOutput() LookupJobResultOutput {
	return o
}

func (o LookupJobResultOutput) ToLookupJobResultOutputWithContext(ctx context.Context) LookupJobResultOutput {
	return o
}

func (o LookupJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupJobResultOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.JobId }).(pulumi.StringOutput)
}

func (o LookupJobResultOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.JobName }).(pulumi.StringOutput)
}

func (o LookupJobResultOutput) JobSettings() GetJobJobSettingsOutput {
	return o.ApplyT(func(v LookupJobResult) GetJobJobSettings { return v.JobSettings }).(GetJobJobSettingsOutput)
}

func (o LookupJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobResultOutput{})
}
