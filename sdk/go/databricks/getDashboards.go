// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source allows you to retrieve information about Databricks [Dashboards](https://docs.databricks.com/en/dashboards/index.html).
//
// > This data source can only be used with a workspace-level provider!
func GetDashboards(ctx *pulumi.Context, args *GetDashboardsArgs, opts ...pulumi.InvokeOption) (*GetDashboardsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDashboardsResult
	err := ctx.Invoke("databricks:index/getDashboards:getDashboards", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDashboards.
type GetDashboardsArgs struct {
	// A **case-insensitive** substring to filter Dashboards by their name.
	DashboardNameContains *string `pulumi:"dashboardNameContains"`
}

// A collection of values returned by getDashboards.
type GetDashboardsResult struct {
	DashboardNameContains *string `pulumi:"dashboardNameContains"`
	// A list of dashboards matching the specified criteria. Each element contains the following attributes:
	Dashboards []GetDashboardsDashboard `pulumi:"dashboards"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetDashboardsOutput(ctx *pulumi.Context, args GetDashboardsOutputArgs, opts ...pulumi.InvokeOption) GetDashboardsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDashboardsResultOutput, error) {
			args := v.(GetDashboardsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getDashboards:getDashboards", args, GetDashboardsResultOutput{}, options).(GetDashboardsResultOutput), nil
		}).(GetDashboardsResultOutput)
}

// A collection of arguments for invoking getDashboards.
type GetDashboardsOutputArgs struct {
	// A **case-insensitive** substring to filter Dashboards by their name.
	DashboardNameContains pulumi.StringPtrInput `pulumi:"dashboardNameContains"`
}

func (GetDashboardsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDashboardsArgs)(nil)).Elem()
}

// A collection of values returned by getDashboards.
type GetDashboardsResultOutput struct{ *pulumi.OutputState }

func (GetDashboardsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDashboardsResult)(nil)).Elem()
}

func (o GetDashboardsResultOutput) ToGetDashboardsResultOutput() GetDashboardsResultOutput {
	return o
}

func (o GetDashboardsResultOutput) ToGetDashboardsResultOutputWithContext(ctx context.Context) GetDashboardsResultOutput {
	return o
}

func (o GetDashboardsResultOutput) DashboardNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDashboardsResult) *string { return v.DashboardNameContains }).(pulumi.StringPtrOutput)
}

// A list of dashboards matching the specified criteria. Each element contains the following attributes:
func (o GetDashboardsResultOutput) Dashboards() GetDashboardsDashboardArrayOutput {
	return o.ApplyT(func(v GetDashboardsResult) []GetDashboardsDashboard { return v.Dashboards }).(GetDashboardsDashboardArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDashboardsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDashboardsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDashboardsResultOutput{})
}
