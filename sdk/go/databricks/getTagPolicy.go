// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can be used to get a single tag policy by its tag key.
//
// > **Note** This resource can only be used with an account-level provider!
func LookupTagPolicy(ctx *pulumi.Context, args *LookupTagPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTagPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagPolicyResult
	err := ctx.Invoke("databricks:index/getTagPolicy:getTagPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagPolicy.
type LookupTagPolicyArgs struct {
	// (string)
	Description *string `pulumi:"description"`
	TagKey      string  `pulumi:"tagKey"`
	// (list of Value)
	Values []GetTagPolicyValue `pulumi:"values"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

// A collection of values returned by getTagPolicy.
type LookupTagPolicyResult struct {
	// (string)
	Description *string `pulumi:"description"`
	// (string)
	Id string `pulumi:"id"`
	// (string)
	TagKey string `pulumi:"tagKey"`
	// (list of Value)
	Values      []GetTagPolicyValue `pulumi:"values"`
	WorkspaceId *string             `pulumi:"workspaceId"`
}

func LookupTagPolicyOutput(ctx *pulumi.Context, args LookupTagPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTagPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTagPolicyResultOutput, error) {
			args := v.(LookupTagPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getTagPolicy:getTagPolicy", args, LookupTagPolicyResultOutput{}, options).(LookupTagPolicyResultOutput), nil
		}).(LookupTagPolicyResultOutput)
}

// A collection of arguments for invoking getTagPolicy.
type LookupTagPolicyOutputArgs struct {
	// (string)
	Description pulumi.StringPtrInput `pulumi:"description"`
	TagKey      pulumi.StringInput    `pulumi:"tagKey"`
	// (list of Value)
	Values GetTagPolicyValueArrayInput `pulumi:"values"`
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (LookupTagPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTagPolicy.
type LookupTagPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTagPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagPolicyResult)(nil)).Elem()
}

func (o LookupTagPolicyResultOutput) ToLookupTagPolicyResultOutput() LookupTagPolicyResultOutput {
	return o
}

func (o LookupTagPolicyResultOutput) ToLookupTagPolicyResultOutputWithContext(ctx context.Context) LookupTagPolicyResultOutput {
	return o
}

// (string)
func (o LookupTagPolicyResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTagPolicyResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (string)
func (o LookupTagPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (string)
func (o LookupTagPolicyResultOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagPolicyResult) string { return v.TagKey }).(pulumi.StringOutput)
}

// (list of Value)
func (o LookupTagPolicyResultOutput) Values() GetTagPolicyValueArrayOutput {
	return o.ApplyT(func(v LookupTagPolicyResult) []GetTagPolicyValue { return v.Values }).(GetTagPolicyValueArrayOutput)
}

func (o LookupTagPolicyResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTagPolicyResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagPolicyResultOutput{})
}
