// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QualityMonitor struct {
	pulumi.CustomResourceState

	AssetsDir                pulumi.StringOutput                             `pulumi:"assetsDir"`
	BaselineTableName        pulumi.StringPtrOutput                          `pulumi:"baselineTableName"`
	CustomMetrics            QualityMonitorCustomMetricArrayOutput           `pulumi:"customMetrics"`
	DashboardId              pulumi.StringOutput                             `pulumi:"dashboardId"`
	DataClassificationConfig QualityMonitorDataClassificationConfigPtrOutput `pulumi:"dataClassificationConfig"`
	DriftMetricsTableName    pulumi.StringOutput                             `pulumi:"driftMetricsTableName"`
	InferenceLog             QualityMonitorInferenceLogPtrOutput             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  pulumi.StringPtrOutput                          `pulumi:"latestMonitorFailureMsg"`
	MonitorId                pulumi.StringOutput                             `pulumi:"monitorId"`
	MonitorVersion           pulumi.StringOutput                             `pulumi:"monitorVersion"`
	Notifications            QualityMonitorNotificationsPtrOutput            `pulumi:"notifications"`
	OutputSchemaName         pulumi.StringOutput                             `pulumi:"outputSchemaName"`
	ProfileMetricsTableName  pulumi.StringOutput                             `pulumi:"profileMetricsTableName"`
	Schedule                 QualityMonitorSchedulePtrOutput                 `pulumi:"schedule"`
	SkipBuiltinDashboard     pulumi.BoolPtrOutput                            `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             pulumi.StringArrayOutput                        `pulumi:"slicingExprs"`
	Snapshot                 QualityMonitorSnapshotPtrOutput                 `pulumi:"snapshot"`
	Status                   pulumi.StringOutput                             `pulumi:"status"`
	TableName                pulumi.StringOutput                             `pulumi:"tableName"`
	TimeSeries               QualityMonitorTimeSeriesPtrOutput               `pulumi:"timeSeries"`
	WarehouseId              pulumi.StringPtrOutput                          `pulumi:"warehouseId"`
}

// NewQualityMonitor registers a new resource with the given unique name, arguments, and options.
func NewQualityMonitor(ctx *pulumi.Context,
	name string, args *QualityMonitorArgs, opts ...pulumi.ResourceOption) (*QualityMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssetsDir == nil {
		return nil, errors.New("invalid value for required argument 'AssetsDir'")
	}
	if args.OutputSchemaName == nil {
		return nil, errors.New("invalid value for required argument 'OutputSchemaName'")
	}
	if args.TableName == nil {
		return nil, errors.New("invalid value for required argument 'TableName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QualityMonitor
	err := ctx.RegisterResource("databricks:index/qualityMonitor:QualityMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQualityMonitor gets an existing QualityMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQualityMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QualityMonitorState, opts ...pulumi.ResourceOption) (*QualityMonitor, error) {
	var resource QualityMonitor
	err := ctx.ReadResource("databricks:index/qualityMonitor:QualityMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QualityMonitor resources.
type qualityMonitorState struct {
	AssetsDir                *string                                 `pulumi:"assetsDir"`
	BaselineTableName        *string                                 `pulumi:"baselineTableName"`
	CustomMetrics            []QualityMonitorCustomMetric            `pulumi:"customMetrics"`
	DashboardId              *string                                 `pulumi:"dashboardId"`
	DataClassificationConfig *QualityMonitorDataClassificationConfig `pulumi:"dataClassificationConfig"`
	DriftMetricsTableName    *string                                 `pulumi:"driftMetricsTableName"`
	InferenceLog             *QualityMonitorInferenceLog             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  *string                                 `pulumi:"latestMonitorFailureMsg"`
	MonitorId                *string                                 `pulumi:"monitorId"`
	MonitorVersion           *string                                 `pulumi:"monitorVersion"`
	Notifications            *QualityMonitorNotifications            `pulumi:"notifications"`
	OutputSchemaName         *string                                 `pulumi:"outputSchemaName"`
	ProfileMetricsTableName  *string                                 `pulumi:"profileMetricsTableName"`
	Schedule                 *QualityMonitorSchedule                 `pulumi:"schedule"`
	SkipBuiltinDashboard     *bool                                   `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             []string                                `pulumi:"slicingExprs"`
	Snapshot                 *QualityMonitorSnapshot                 `pulumi:"snapshot"`
	Status                   *string                                 `pulumi:"status"`
	TableName                *string                                 `pulumi:"tableName"`
	TimeSeries               *QualityMonitorTimeSeries               `pulumi:"timeSeries"`
	WarehouseId              *string                                 `pulumi:"warehouseId"`
}

type QualityMonitorState struct {
	AssetsDir                pulumi.StringPtrInput
	BaselineTableName        pulumi.StringPtrInput
	CustomMetrics            QualityMonitorCustomMetricArrayInput
	DashboardId              pulumi.StringPtrInput
	DataClassificationConfig QualityMonitorDataClassificationConfigPtrInput
	DriftMetricsTableName    pulumi.StringPtrInput
	InferenceLog             QualityMonitorInferenceLogPtrInput
	LatestMonitorFailureMsg  pulumi.StringPtrInput
	MonitorId                pulumi.StringPtrInput
	MonitorVersion           pulumi.StringPtrInput
	Notifications            QualityMonitorNotificationsPtrInput
	OutputSchemaName         pulumi.StringPtrInput
	ProfileMetricsTableName  pulumi.StringPtrInput
	Schedule                 QualityMonitorSchedulePtrInput
	SkipBuiltinDashboard     pulumi.BoolPtrInput
	SlicingExprs             pulumi.StringArrayInput
	Snapshot                 QualityMonitorSnapshotPtrInput
	Status                   pulumi.StringPtrInput
	TableName                pulumi.StringPtrInput
	TimeSeries               QualityMonitorTimeSeriesPtrInput
	WarehouseId              pulumi.StringPtrInput
}

func (QualityMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityMonitorState)(nil)).Elem()
}

type qualityMonitorArgs struct {
	AssetsDir                string                                  `pulumi:"assetsDir"`
	BaselineTableName        *string                                 `pulumi:"baselineTableName"`
	CustomMetrics            []QualityMonitorCustomMetric            `pulumi:"customMetrics"`
	DataClassificationConfig *QualityMonitorDataClassificationConfig `pulumi:"dataClassificationConfig"`
	InferenceLog             *QualityMonitorInferenceLog             `pulumi:"inferenceLog"`
	LatestMonitorFailureMsg  *string                                 `pulumi:"latestMonitorFailureMsg"`
	MonitorId                *string                                 `pulumi:"monitorId"`
	Notifications            *QualityMonitorNotifications            `pulumi:"notifications"`
	OutputSchemaName         string                                  `pulumi:"outputSchemaName"`
	Schedule                 *QualityMonitorSchedule                 `pulumi:"schedule"`
	SkipBuiltinDashboard     *bool                                   `pulumi:"skipBuiltinDashboard"`
	SlicingExprs             []string                                `pulumi:"slicingExprs"`
	Snapshot                 *QualityMonitorSnapshot                 `pulumi:"snapshot"`
	TableName                string                                  `pulumi:"tableName"`
	TimeSeries               *QualityMonitorTimeSeries               `pulumi:"timeSeries"`
	WarehouseId              *string                                 `pulumi:"warehouseId"`
}

// The set of arguments for constructing a QualityMonitor resource.
type QualityMonitorArgs struct {
	AssetsDir                pulumi.StringInput
	BaselineTableName        pulumi.StringPtrInput
	CustomMetrics            QualityMonitorCustomMetricArrayInput
	DataClassificationConfig QualityMonitorDataClassificationConfigPtrInput
	InferenceLog             QualityMonitorInferenceLogPtrInput
	LatestMonitorFailureMsg  pulumi.StringPtrInput
	MonitorId                pulumi.StringPtrInput
	Notifications            QualityMonitorNotificationsPtrInput
	OutputSchemaName         pulumi.StringInput
	Schedule                 QualityMonitorSchedulePtrInput
	SkipBuiltinDashboard     pulumi.BoolPtrInput
	SlicingExprs             pulumi.StringArrayInput
	Snapshot                 QualityMonitorSnapshotPtrInput
	TableName                pulumi.StringInput
	TimeSeries               QualityMonitorTimeSeriesPtrInput
	WarehouseId              pulumi.StringPtrInput
}

func (QualityMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityMonitorArgs)(nil)).Elem()
}

type QualityMonitorInput interface {
	pulumi.Input

	ToQualityMonitorOutput() QualityMonitorOutput
	ToQualityMonitorOutputWithContext(ctx context.Context) QualityMonitorOutput
}

func (*QualityMonitor) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityMonitor)(nil)).Elem()
}

func (i *QualityMonitor) ToQualityMonitorOutput() QualityMonitorOutput {
	return i.ToQualityMonitorOutputWithContext(context.Background())
}

func (i *QualityMonitor) ToQualityMonitorOutputWithContext(ctx context.Context) QualityMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityMonitorOutput)
}

// QualityMonitorArrayInput is an input type that accepts QualityMonitorArray and QualityMonitorArrayOutput values.
// You can construct a concrete instance of `QualityMonitorArrayInput` via:
//
//	QualityMonitorArray{ QualityMonitorArgs{...} }
type QualityMonitorArrayInput interface {
	pulumi.Input

	ToQualityMonitorArrayOutput() QualityMonitorArrayOutput
	ToQualityMonitorArrayOutputWithContext(context.Context) QualityMonitorArrayOutput
}

type QualityMonitorArray []QualityMonitorInput

func (QualityMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityMonitor)(nil)).Elem()
}

func (i QualityMonitorArray) ToQualityMonitorArrayOutput() QualityMonitorArrayOutput {
	return i.ToQualityMonitorArrayOutputWithContext(context.Background())
}

func (i QualityMonitorArray) ToQualityMonitorArrayOutputWithContext(ctx context.Context) QualityMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityMonitorArrayOutput)
}

// QualityMonitorMapInput is an input type that accepts QualityMonitorMap and QualityMonitorMapOutput values.
// You can construct a concrete instance of `QualityMonitorMapInput` via:
//
//	QualityMonitorMap{ "key": QualityMonitorArgs{...} }
type QualityMonitorMapInput interface {
	pulumi.Input

	ToQualityMonitorMapOutput() QualityMonitorMapOutput
	ToQualityMonitorMapOutputWithContext(context.Context) QualityMonitorMapOutput
}

type QualityMonitorMap map[string]QualityMonitorInput

func (QualityMonitorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityMonitor)(nil)).Elem()
}

func (i QualityMonitorMap) ToQualityMonitorMapOutput() QualityMonitorMapOutput {
	return i.ToQualityMonitorMapOutputWithContext(context.Background())
}

func (i QualityMonitorMap) ToQualityMonitorMapOutputWithContext(ctx context.Context) QualityMonitorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityMonitorMapOutput)
}

type QualityMonitorOutput struct{ *pulumi.OutputState }

func (QualityMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityMonitor)(nil)).Elem()
}

func (o QualityMonitorOutput) ToQualityMonitorOutput() QualityMonitorOutput {
	return o
}

func (o QualityMonitorOutput) ToQualityMonitorOutputWithContext(ctx context.Context) QualityMonitorOutput {
	return o
}

func (o QualityMonitorOutput) AssetsDir() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.AssetsDir }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) BaselineTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringPtrOutput { return v.BaselineTableName }).(pulumi.StringPtrOutput)
}

func (o QualityMonitorOutput) CustomMetrics() QualityMonitorCustomMetricArrayOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorCustomMetricArrayOutput { return v.CustomMetrics }).(QualityMonitorCustomMetricArrayOutput)
}

func (o QualityMonitorOutput) DashboardId() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.DashboardId }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) DataClassificationConfig() QualityMonitorDataClassificationConfigPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorDataClassificationConfigPtrOutput {
		return v.DataClassificationConfig
	}).(QualityMonitorDataClassificationConfigPtrOutput)
}

func (o QualityMonitorOutput) DriftMetricsTableName() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.DriftMetricsTableName }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) InferenceLog() QualityMonitorInferenceLogPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorInferenceLogPtrOutput { return v.InferenceLog }).(QualityMonitorInferenceLogPtrOutput)
}

func (o QualityMonitorOutput) LatestMonitorFailureMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringPtrOutput { return v.LatestMonitorFailureMsg }).(pulumi.StringPtrOutput)
}

func (o QualityMonitorOutput) MonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.MonitorId }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) MonitorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.MonitorVersion }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) Notifications() QualityMonitorNotificationsPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorNotificationsPtrOutput { return v.Notifications }).(QualityMonitorNotificationsPtrOutput)
}

func (o QualityMonitorOutput) OutputSchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.OutputSchemaName }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) ProfileMetricsTableName() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.ProfileMetricsTableName }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) Schedule() QualityMonitorSchedulePtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorSchedulePtrOutput { return v.Schedule }).(QualityMonitorSchedulePtrOutput)
}

func (o QualityMonitorOutput) SkipBuiltinDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.BoolPtrOutput { return v.SkipBuiltinDashboard }).(pulumi.BoolPtrOutput)
}

func (o QualityMonitorOutput) SlicingExprs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringArrayOutput { return v.SlicingExprs }).(pulumi.StringArrayOutput)
}

func (o QualityMonitorOutput) Snapshot() QualityMonitorSnapshotPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorSnapshotPtrOutput { return v.Snapshot }).(QualityMonitorSnapshotPtrOutput)
}

func (o QualityMonitorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringOutput { return v.TableName }).(pulumi.StringOutput)
}

func (o QualityMonitorOutput) TimeSeries() QualityMonitorTimeSeriesPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) QualityMonitorTimeSeriesPtrOutput { return v.TimeSeries }).(QualityMonitorTimeSeriesPtrOutput)
}

func (o QualityMonitorOutput) WarehouseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityMonitor) pulumi.StringPtrOutput { return v.WarehouseId }).(pulumi.StringPtrOutput)
}

type QualityMonitorArrayOutput struct{ *pulumi.OutputState }

func (QualityMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityMonitor)(nil)).Elem()
}

func (o QualityMonitorArrayOutput) ToQualityMonitorArrayOutput() QualityMonitorArrayOutput {
	return o
}

func (o QualityMonitorArrayOutput) ToQualityMonitorArrayOutputWithContext(ctx context.Context) QualityMonitorArrayOutput {
	return o
}

func (o QualityMonitorArrayOutput) Index(i pulumi.IntInput) QualityMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QualityMonitor {
		return vs[0].([]*QualityMonitor)[vs[1].(int)]
	}).(QualityMonitorOutput)
}

type QualityMonitorMapOutput struct{ *pulumi.OutputState }

func (QualityMonitorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityMonitor)(nil)).Elem()
}

func (o QualityMonitorMapOutput) ToQualityMonitorMapOutput() QualityMonitorMapOutput {
	return o
}

func (o QualityMonitorMapOutput) ToQualityMonitorMapOutputWithContext(ctx context.Context) QualityMonitorMapOutput {
	return o
}

func (o QualityMonitorMapOutput) MapIndex(k pulumi.StringInput) QualityMonitorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QualityMonitor {
		return vs[0].(map[string]*QualityMonitor)[vs[1].(string)]
	}).(QualityMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QualityMonitorInput)(nil)).Elem(), &QualityMonitor{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityMonitorArrayInput)(nil)).Elem(), QualityMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityMonitorMapInput)(nil)).Elem(), QualityMonitorMap{})
	pulumi.RegisterOutputType(QualityMonitorOutput{})
	pulumi.RegisterOutputType(QualityMonitorArrayOutput{})
	pulumi.RegisterOutputType(QualityMonitorMapOutput{})
}
