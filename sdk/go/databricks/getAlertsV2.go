// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The SQL Alerts v2 data source allows you to retrieve a list of alerts in Databricks SQL that are accessible to the current user. This data source returns alerts ordered by their creation time.
//
// You can use this data source to:
// - Get a comprehensive list of all alerts in your workspace
// - Monitor and audit alert configurations across your workspace
//
// ## Example Usage
//
// ### List All Alerts
// This example retrieves all alerts accessible to the current user:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.LookupAlertV2(ctx, &databricks.LookupAlertV2Args{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAlertsV2(ctx *pulumi.Context, args *LookupAlertsV2Args, opts ...pulumi.InvokeOption) (*LookupAlertsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAlertsV2Result
	err := ctx.Invoke("databricks:index/getAlertsV2:getAlertsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertsV2.
type LookupAlertsV2Args struct {
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

// A collection of values returned by getAlertsV2.
type LookupAlertsV2Result struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string              `pulumi:"id"`
	Results     []GetAlertsV2Result `pulumi:"results"`
	WorkspaceId *string             `pulumi:"workspaceId"`
}

func LookupAlertsV2Output(ctx *pulumi.Context, args LookupAlertsV2OutputArgs, opts ...pulumi.InvokeOption) LookupAlertsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAlertsV2ResultOutput, error) {
			args := v.(LookupAlertsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getAlertsV2:getAlertsV2", args, LookupAlertsV2ResultOutput{}, options).(LookupAlertsV2ResultOutput), nil
		}).(LookupAlertsV2ResultOutput)
}

// A collection of arguments for invoking getAlertsV2.
type LookupAlertsV2OutputArgs struct {
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (LookupAlertsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertsV2Args)(nil)).Elem()
}

// A collection of values returned by getAlertsV2.
type LookupAlertsV2ResultOutput struct{ *pulumi.OutputState }

func (LookupAlertsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertsV2Result)(nil)).Elem()
}

func (o LookupAlertsV2ResultOutput) ToLookupAlertsV2ResultOutput() LookupAlertsV2ResultOutput {
	return o
}

func (o LookupAlertsV2ResultOutput) ToLookupAlertsV2ResultOutputWithContext(ctx context.Context) LookupAlertsV2ResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAlertsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAlertsV2ResultOutput) Results() GetAlertsV2ResultArrayOutput {
	return o.ApplyT(func(v LookupAlertsV2Result) []GetAlertsV2Result { return v.Results }).(GetAlertsV2ResultArrayOutput)
}

func (o LookupAlertsV2ResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAlertsV2Result) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlertsV2ResultOutput{})
}
