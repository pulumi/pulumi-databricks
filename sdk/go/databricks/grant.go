// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Grant struct {
	pulumi.CustomResourceState

	Catalog           pulumi.StringPtrOutput   `pulumi:"catalog"`
	ExternalLocation  pulumi.StringPtrOutput   `pulumi:"externalLocation"`
	ForeignConnection pulumi.StringPtrOutput   `pulumi:"foreignConnection"`
	Function          pulumi.StringPtrOutput   `pulumi:"function"`
	Metastore         pulumi.StringPtrOutput   `pulumi:"metastore"`
	Model             pulumi.StringPtrOutput   `pulumi:"model"`
	Pipeline          pulumi.StringPtrOutput   `pulumi:"pipeline"`
	Principal         pulumi.StringOutput      `pulumi:"principal"`
	Privileges        pulumi.StringArrayOutput `pulumi:"privileges"`
	Recipient         pulumi.StringPtrOutput   `pulumi:"recipient"`
	Schema            pulumi.StringPtrOutput   `pulumi:"schema"`
	Share             pulumi.StringPtrOutput   `pulumi:"share"`
	StorageCredential pulumi.StringPtrOutput   `pulumi:"storageCredential"`
	Table             pulumi.StringPtrOutput   `pulumi:"table"`
	Volume            pulumi.StringPtrOutput   `pulumi:"volume"`
}

// NewGrant registers a new resource with the given unique name, arguments, and options.
func NewGrant(ctx *pulumi.Context,
	name string, args *GrantArgs, opts ...pulumi.ResourceOption) (*Grant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Principal == nil {
		return nil, errors.New("invalid value for required argument 'Principal'")
	}
	if args.Privileges == nil {
		return nil, errors.New("invalid value for required argument 'Privileges'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Grant
	err := ctx.RegisterResource("databricks:index/grant:Grant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrant gets an existing Grant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrantState, opts ...pulumi.ResourceOption) (*Grant, error) {
	var resource Grant
	err := ctx.ReadResource("databricks:index/grant:Grant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Grant resources.
type grantState struct {
	Catalog           *string  `pulumi:"catalog"`
	ExternalLocation  *string  `pulumi:"externalLocation"`
	ForeignConnection *string  `pulumi:"foreignConnection"`
	Function          *string  `pulumi:"function"`
	Metastore         *string  `pulumi:"metastore"`
	Model             *string  `pulumi:"model"`
	Pipeline          *string  `pulumi:"pipeline"`
	Principal         *string  `pulumi:"principal"`
	Privileges        []string `pulumi:"privileges"`
	Recipient         *string  `pulumi:"recipient"`
	Schema            *string  `pulumi:"schema"`
	Share             *string  `pulumi:"share"`
	StorageCredential *string  `pulumi:"storageCredential"`
	Table             *string  `pulumi:"table"`
	Volume            *string  `pulumi:"volume"`
}

type GrantState struct {
	Catalog           pulumi.StringPtrInput
	ExternalLocation  pulumi.StringPtrInput
	ForeignConnection pulumi.StringPtrInput
	Function          pulumi.StringPtrInput
	Metastore         pulumi.StringPtrInput
	Model             pulumi.StringPtrInput
	Pipeline          pulumi.StringPtrInput
	Principal         pulumi.StringPtrInput
	Privileges        pulumi.StringArrayInput
	Recipient         pulumi.StringPtrInput
	Schema            pulumi.StringPtrInput
	Share             pulumi.StringPtrInput
	StorageCredential pulumi.StringPtrInput
	Table             pulumi.StringPtrInput
	Volume            pulumi.StringPtrInput
}

func (GrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*grantState)(nil)).Elem()
}

type grantArgs struct {
	Catalog           *string  `pulumi:"catalog"`
	ExternalLocation  *string  `pulumi:"externalLocation"`
	ForeignConnection *string  `pulumi:"foreignConnection"`
	Function          *string  `pulumi:"function"`
	Metastore         *string  `pulumi:"metastore"`
	Model             *string  `pulumi:"model"`
	Pipeline          *string  `pulumi:"pipeline"`
	Principal         string   `pulumi:"principal"`
	Privileges        []string `pulumi:"privileges"`
	Recipient         *string  `pulumi:"recipient"`
	Schema            *string  `pulumi:"schema"`
	Share             *string  `pulumi:"share"`
	StorageCredential *string  `pulumi:"storageCredential"`
	Table             *string  `pulumi:"table"`
	Volume            *string  `pulumi:"volume"`
}

// The set of arguments for constructing a Grant resource.
type GrantArgs struct {
	Catalog           pulumi.StringPtrInput
	ExternalLocation  pulumi.StringPtrInput
	ForeignConnection pulumi.StringPtrInput
	Function          pulumi.StringPtrInput
	Metastore         pulumi.StringPtrInput
	Model             pulumi.StringPtrInput
	Pipeline          pulumi.StringPtrInput
	Principal         pulumi.StringInput
	Privileges        pulumi.StringArrayInput
	Recipient         pulumi.StringPtrInput
	Schema            pulumi.StringPtrInput
	Share             pulumi.StringPtrInput
	StorageCredential pulumi.StringPtrInput
	Table             pulumi.StringPtrInput
	Volume            pulumi.StringPtrInput
}

func (GrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grantArgs)(nil)).Elem()
}

type GrantInput interface {
	pulumi.Input

	ToGrantOutput() GrantOutput
	ToGrantOutputWithContext(ctx context.Context) GrantOutput
}

func (*Grant) ElementType() reflect.Type {
	return reflect.TypeOf((**Grant)(nil)).Elem()
}

func (i *Grant) ToGrantOutput() GrantOutput {
	return i.ToGrantOutputWithContext(context.Background())
}

func (i *Grant) ToGrantOutputWithContext(ctx context.Context) GrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantOutput)
}

// GrantArrayInput is an input type that accepts GrantArray and GrantArrayOutput values.
// You can construct a concrete instance of `GrantArrayInput` via:
//
//	GrantArray{ GrantArgs{...} }
type GrantArrayInput interface {
	pulumi.Input

	ToGrantArrayOutput() GrantArrayOutput
	ToGrantArrayOutputWithContext(context.Context) GrantArrayOutput
}

type GrantArray []GrantInput

func (GrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Grant)(nil)).Elem()
}

func (i GrantArray) ToGrantArrayOutput() GrantArrayOutput {
	return i.ToGrantArrayOutputWithContext(context.Background())
}

func (i GrantArray) ToGrantArrayOutputWithContext(ctx context.Context) GrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantArrayOutput)
}

// GrantMapInput is an input type that accepts GrantMap and GrantMapOutput values.
// You can construct a concrete instance of `GrantMapInput` via:
//
//	GrantMap{ "key": GrantArgs{...} }
type GrantMapInput interface {
	pulumi.Input

	ToGrantMapOutput() GrantMapOutput
	ToGrantMapOutputWithContext(context.Context) GrantMapOutput
}

type GrantMap map[string]GrantInput

func (GrantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Grant)(nil)).Elem()
}

func (i GrantMap) ToGrantMapOutput() GrantMapOutput {
	return i.ToGrantMapOutputWithContext(context.Background())
}

func (i GrantMap) ToGrantMapOutputWithContext(ctx context.Context) GrantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantMapOutput)
}

type GrantOutput struct{ *pulumi.OutputState }

func (GrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Grant)(nil)).Elem()
}

func (o GrantOutput) ToGrantOutput() GrantOutput {
	return o
}

func (o GrantOutput) ToGrantOutputWithContext(ctx context.Context) GrantOutput {
	return o
}

func (o GrantOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Catalog }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) ExternalLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.ExternalLocation }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) ForeignConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.ForeignConnection }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Function }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Metastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Metastore }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Model }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Pipeline }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

func (o GrantOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringArrayOutput { return v.Privileges }).(pulumi.StringArrayOutput)
}

func (o GrantOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Schema }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Share() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Share }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) StorageCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.StorageCredential }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Table }).(pulumi.StringPtrOutput)
}

func (o GrantOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Grant) pulumi.StringPtrOutput { return v.Volume }).(pulumi.StringPtrOutput)
}

type GrantArrayOutput struct{ *pulumi.OutputState }

func (GrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Grant)(nil)).Elem()
}

func (o GrantArrayOutput) ToGrantArrayOutput() GrantArrayOutput {
	return o
}

func (o GrantArrayOutput) ToGrantArrayOutputWithContext(ctx context.Context) GrantArrayOutput {
	return o
}

func (o GrantArrayOutput) Index(i pulumi.IntInput) GrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Grant {
		return vs[0].([]*Grant)[vs[1].(int)]
	}).(GrantOutput)
}

type GrantMapOutput struct{ *pulumi.OutputState }

func (GrantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Grant)(nil)).Elem()
}

func (o GrantMapOutput) ToGrantMapOutput() GrantMapOutput {
	return o
}

func (o GrantMapOutput) ToGrantMapOutputWithContext(ctx context.Context) GrantMapOutput {
	return o
}

func (o GrantMapOutput) MapIndex(k pulumi.StringInput) GrantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Grant {
		return vs[0].(map[string]*Grant)[vs[1].(string)]
	}).(GrantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrantInput)(nil)).Elem(), &Grant{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantArrayInput)(nil)).Elem(), GrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantMapInput)(nil)).Elem(), GrantMap{})
	pulumi.RegisterOutputType(GrantOutput{})
	pulumi.RegisterOutputType(GrantArrayOutput{})
	pulumi.RegisterOutputType(GrantMapOutput{})
}
