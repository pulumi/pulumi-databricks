// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to get information about versions of [Model in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html).
//
// > This data source can only be used with a workspace-level provider!
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.GetRegisteredModelVersions(ctx, &databricks.GetRegisteredModelVersionsArgs{
//				FullName: "main.default.my_model",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Related Resources
//
// The following resources are often used in the same context:
//
// * RegisteredModel data source to retrieve information about a model within Unity Catalog.
// * RegisteredModel resource to manage models within Unity Catalog.
// * ModelServing to serve this model on a Databricks serving endpoint.
// * MlflowExperiment to manage [MLflow experiments](https://docs.databricks.com/data/data-sources/mlflow-experiment.html) in Databricks.
func GetRegisteredModelVersions(ctx *pulumi.Context, args *GetRegisteredModelVersionsArgs, opts ...pulumi.InvokeOption) (*GetRegisteredModelVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegisteredModelVersionsResult
	err := ctx.Invoke("databricks:index/getRegisteredModelVersions:getRegisteredModelVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegisteredModelVersions.
type GetRegisteredModelVersionsArgs struct {
	// The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
	FullName string `pulumi:"fullName"`
	// list of objects describing the model versions. Each object consists of following attributes:
	ModelVersions []GetRegisteredModelVersionsModelVersion `pulumi:"modelVersions"`
}

// A collection of values returned by getRegisteredModelVersions.
type GetRegisteredModelVersionsResult struct {
	// The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
	FullName string `pulumi:"fullName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// list of objects describing the model versions. Each object consists of following attributes:
	ModelVersions []GetRegisteredModelVersionsModelVersion `pulumi:"modelVersions"`
}

func GetRegisteredModelVersionsOutput(ctx *pulumi.Context, args GetRegisteredModelVersionsOutputArgs, opts ...pulumi.InvokeOption) GetRegisteredModelVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegisteredModelVersionsResultOutput, error) {
			args := v.(GetRegisteredModelVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getRegisteredModelVersions:getRegisteredModelVersions", args, GetRegisteredModelVersionsResultOutput{}, options).(GetRegisteredModelVersionsResultOutput), nil
		}).(GetRegisteredModelVersionsResultOutput)
}

// A collection of arguments for invoking getRegisteredModelVersions.
type GetRegisteredModelVersionsOutputArgs struct {
	// The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
	FullName pulumi.StringInput `pulumi:"fullName"`
	// list of objects describing the model versions. Each object consists of following attributes:
	ModelVersions GetRegisteredModelVersionsModelVersionArrayInput `pulumi:"modelVersions"`
}

func (GetRegisteredModelVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegisteredModelVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getRegisteredModelVersions.
type GetRegisteredModelVersionsResultOutput struct{ *pulumi.OutputState }

func (GetRegisteredModelVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegisteredModelVersionsResult)(nil)).Elem()
}

func (o GetRegisteredModelVersionsResultOutput) ToGetRegisteredModelVersionsResultOutput() GetRegisteredModelVersionsResultOutput {
	return o
}

func (o GetRegisteredModelVersionsResultOutput) ToGetRegisteredModelVersionsResultOutputWithContext(ctx context.Context) GetRegisteredModelVersionsResultOutput {
	return o
}

// The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
func (o GetRegisteredModelVersionsResultOutput) FullName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegisteredModelVersionsResult) string { return v.FullName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegisteredModelVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegisteredModelVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// list of objects describing the model versions. Each object consists of following attributes:
func (o GetRegisteredModelVersionsResultOutput) ModelVersions() GetRegisteredModelVersionsModelVersionArrayOutput {
	return o.ApplyT(func(v GetRegisteredModelVersionsResult) []GetRegisteredModelVersionsModelVersion {
		return v.ModelVersions
	}).(GetRegisteredModelVersionsModelVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegisteredModelVersionsResultOutput{})
}
