// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// As of terraform v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = name
//
//	to = databricks_recipient_federation_policy.this
//
// }
//
// If you are using an older version of terraform, you can import the resource using cli as follows:
//
// ```sh
// $ pulumi import databricks:index/recipientFederationPolicy:RecipientFederationPolicy databricks_recipient_federation_policy name
// ```
type RecipientFederationPolicy struct {
	pulumi.CustomResourceState

	// Description of the policy. This is a user-provided description
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// (string) - System-generated timestamp indicating when the policy was created
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Name of the federation policy. A recipient can have multiple policies with different names.
	// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the policy to use for validating OIDC claims in the federated tokens
	OidcPolicy RecipientFederationPolicyOidcPolicyPtrOutput `pulumi:"oidcPolicy"`
	// (string) - System-generated timestamp indicating when the policy was last updated
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewRecipientFederationPolicy registers a new resource with the given unique name, arguments, and options.
func NewRecipientFederationPolicy(ctx *pulumi.Context,
	name string, args *RecipientFederationPolicyArgs, opts ...pulumi.ResourceOption) (*RecipientFederationPolicy, error) {
	if args == nil {
		args = &RecipientFederationPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RecipientFederationPolicy
	err := ctx.RegisterResource("databricks:index/recipientFederationPolicy:RecipientFederationPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecipientFederationPolicy gets an existing RecipientFederationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecipientFederationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecipientFederationPolicyState, opts ...pulumi.ResourceOption) (*RecipientFederationPolicy, error) {
	var resource RecipientFederationPolicy
	err := ctx.ReadResource("databricks:index/recipientFederationPolicy:RecipientFederationPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecipientFederationPolicy resources.
type recipientFederationPolicyState struct {
	// Description of the policy. This is a user-provided description
	Comment *string `pulumi:"comment"`
	// (string) - System-generated timestamp indicating when the policy was created
	CreateTime *string `pulumi:"createTime"`
	// Name of the federation policy. A recipient can have multiple policies with different names.
	// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
	Name *string `pulumi:"name"`
	// Specifies the policy to use for validating OIDC claims in the federated tokens
	OidcPolicy *RecipientFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
	// (string) - System-generated timestamp indicating when the policy was last updated
	UpdateTime *string `pulumi:"updateTime"`
}

type RecipientFederationPolicyState struct {
	// Description of the policy. This is a user-provided description
	Comment pulumi.StringPtrInput
	// (string) - System-generated timestamp indicating when the policy was created
	CreateTime pulumi.StringPtrInput
	// Name of the federation policy. A recipient can have multiple policies with different names.
	// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
	Name pulumi.StringPtrInput
	// Specifies the policy to use for validating OIDC claims in the federated tokens
	OidcPolicy RecipientFederationPolicyOidcPolicyPtrInput
	// (string) - System-generated timestamp indicating when the policy was last updated
	UpdateTime pulumi.StringPtrInput
}

func (RecipientFederationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*recipientFederationPolicyState)(nil)).Elem()
}

type recipientFederationPolicyArgs struct {
	// Description of the policy. This is a user-provided description
	Comment *string `pulumi:"comment"`
	// Name of the federation policy. A recipient can have multiple policies with different names.
	// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
	Name *string `pulumi:"name"`
	// Specifies the policy to use for validating OIDC claims in the federated tokens
	OidcPolicy *RecipientFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
}

// The set of arguments for constructing a RecipientFederationPolicy resource.
type RecipientFederationPolicyArgs struct {
	// Description of the policy. This is a user-provided description
	Comment pulumi.StringPtrInput
	// Name of the federation policy. A recipient can have multiple policies with different names.
	// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
	Name pulumi.StringPtrInput
	// Specifies the policy to use for validating OIDC claims in the federated tokens
	OidcPolicy RecipientFederationPolicyOidcPolicyPtrInput
}

func (RecipientFederationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recipientFederationPolicyArgs)(nil)).Elem()
}

type RecipientFederationPolicyInput interface {
	pulumi.Input

	ToRecipientFederationPolicyOutput() RecipientFederationPolicyOutput
	ToRecipientFederationPolicyOutputWithContext(ctx context.Context) RecipientFederationPolicyOutput
}

func (*RecipientFederationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RecipientFederationPolicy)(nil)).Elem()
}

func (i *RecipientFederationPolicy) ToRecipientFederationPolicyOutput() RecipientFederationPolicyOutput {
	return i.ToRecipientFederationPolicyOutputWithContext(context.Background())
}

func (i *RecipientFederationPolicy) ToRecipientFederationPolicyOutputWithContext(ctx context.Context) RecipientFederationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientFederationPolicyOutput)
}

// RecipientFederationPolicyArrayInput is an input type that accepts RecipientFederationPolicyArray and RecipientFederationPolicyArrayOutput values.
// You can construct a concrete instance of `RecipientFederationPolicyArrayInput` via:
//
//	RecipientFederationPolicyArray{ RecipientFederationPolicyArgs{...} }
type RecipientFederationPolicyArrayInput interface {
	pulumi.Input

	ToRecipientFederationPolicyArrayOutput() RecipientFederationPolicyArrayOutput
	ToRecipientFederationPolicyArrayOutputWithContext(context.Context) RecipientFederationPolicyArrayOutput
}

type RecipientFederationPolicyArray []RecipientFederationPolicyInput

func (RecipientFederationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RecipientFederationPolicy)(nil)).Elem()
}

func (i RecipientFederationPolicyArray) ToRecipientFederationPolicyArrayOutput() RecipientFederationPolicyArrayOutput {
	return i.ToRecipientFederationPolicyArrayOutputWithContext(context.Background())
}

func (i RecipientFederationPolicyArray) ToRecipientFederationPolicyArrayOutputWithContext(ctx context.Context) RecipientFederationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientFederationPolicyArrayOutput)
}

// RecipientFederationPolicyMapInput is an input type that accepts RecipientFederationPolicyMap and RecipientFederationPolicyMapOutput values.
// You can construct a concrete instance of `RecipientFederationPolicyMapInput` via:
//
//	RecipientFederationPolicyMap{ "key": RecipientFederationPolicyArgs{...} }
type RecipientFederationPolicyMapInput interface {
	pulumi.Input

	ToRecipientFederationPolicyMapOutput() RecipientFederationPolicyMapOutput
	ToRecipientFederationPolicyMapOutputWithContext(context.Context) RecipientFederationPolicyMapOutput
}

type RecipientFederationPolicyMap map[string]RecipientFederationPolicyInput

func (RecipientFederationPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RecipientFederationPolicy)(nil)).Elem()
}

func (i RecipientFederationPolicyMap) ToRecipientFederationPolicyMapOutput() RecipientFederationPolicyMapOutput {
	return i.ToRecipientFederationPolicyMapOutputWithContext(context.Background())
}

func (i RecipientFederationPolicyMap) ToRecipientFederationPolicyMapOutputWithContext(ctx context.Context) RecipientFederationPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientFederationPolicyMapOutput)
}

type RecipientFederationPolicyOutput struct{ *pulumi.OutputState }

func (RecipientFederationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecipientFederationPolicy)(nil)).Elem()
}

func (o RecipientFederationPolicyOutput) ToRecipientFederationPolicyOutput() RecipientFederationPolicyOutput {
	return o
}

func (o RecipientFederationPolicyOutput) ToRecipientFederationPolicyOutputWithContext(ctx context.Context) RecipientFederationPolicyOutput {
	return o
}

// Description of the policy. This is a user-provided description
func (o RecipientFederationPolicyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecipientFederationPolicy) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// (string) - System-generated timestamp indicating when the policy was created
func (o RecipientFederationPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RecipientFederationPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Name of the federation policy. A recipient can have multiple policies with different names.
// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
func (o RecipientFederationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RecipientFederationPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the policy to use for validating OIDC claims in the federated tokens
func (o RecipientFederationPolicyOutput) OidcPolicy() RecipientFederationPolicyOidcPolicyPtrOutput {
	return o.ApplyT(func(v *RecipientFederationPolicy) RecipientFederationPolicyOidcPolicyPtrOutput { return v.OidcPolicy }).(RecipientFederationPolicyOidcPolicyPtrOutput)
}

// (string) - System-generated timestamp indicating when the policy was last updated
func (o RecipientFederationPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RecipientFederationPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type RecipientFederationPolicyArrayOutput struct{ *pulumi.OutputState }

func (RecipientFederationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RecipientFederationPolicy)(nil)).Elem()
}

func (o RecipientFederationPolicyArrayOutput) ToRecipientFederationPolicyArrayOutput() RecipientFederationPolicyArrayOutput {
	return o
}

func (o RecipientFederationPolicyArrayOutput) ToRecipientFederationPolicyArrayOutputWithContext(ctx context.Context) RecipientFederationPolicyArrayOutput {
	return o
}

func (o RecipientFederationPolicyArrayOutput) Index(i pulumi.IntInput) RecipientFederationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RecipientFederationPolicy {
		return vs[0].([]*RecipientFederationPolicy)[vs[1].(int)]
	}).(RecipientFederationPolicyOutput)
}

type RecipientFederationPolicyMapOutput struct{ *pulumi.OutputState }

func (RecipientFederationPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RecipientFederationPolicy)(nil)).Elem()
}

func (o RecipientFederationPolicyMapOutput) ToRecipientFederationPolicyMapOutput() RecipientFederationPolicyMapOutput {
	return o
}

func (o RecipientFederationPolicyMapOutput) ToRecipientFederationPolicyMapOutputWithContext(ctx context.Context) RecipientFederationPolicyMapOutput {
	return o
}

func (o RecipientFederationPolicyMapOutput) MapIndex(k pulumi.StringInput) RecipientFederationPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RecipientFederationPolicy {
		return vs[0].(map[string]*RecipientFederationPolicy)[vs[1].(string)]
	}).(RecipientFederationPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientFederationPolicyInput)(nil)).Elem(), &RecipientFederationPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientFederationPolicyArrayInput)(nil)).Elem(), RecipientFederationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientFederationPolicyMapInput)(nil)).Elem(), RecipientFederationPolicyMap{})
	pulumi.RegisterOutputType(RecipientFederationPolicyOutput{})
	pulumi.RegisterOutputType(RecipientFederationPolicyArrayOutput{})
	pulumi.RegisterOutputType(RecipientFederationPolicyMapOutput{})
}
