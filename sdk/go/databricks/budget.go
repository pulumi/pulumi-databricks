// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Budget struct {
	pulumi.CustomResourceState

	AccountId             pulumi.StringOutput                 `pulumi:"accountId"`
	AlertConfigurations   BudgetAlertConfigurationArrayOutput `pulumi:"alertConfigurations"`
	BudgetConfigurationId pulumi.StringOutput                 `pulumi:"budgetConfigurationId"`
	CreateTime            pulumi.IntOutput                    `pulumi:"createTime"`
	DisplayName           pulumi.StringPtrOutput              `pulumi:"displayName"`
	Filter                BudgetFilterPtrOutput               `pulumi:"filter"`
	UpdateTime            pulumi.IntOutput                    `pulumi:"updateTime"`
}

// NewBudget registers a new resource with the given unique name, arguments, and options.
func NewBudget(ctx *pulumi.Context,
	name string, args *BudgetArgs, opts ...pulumi.ResourceOption) (*Budget, error) {
	if args == nil {
		args = &BudgetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Budget
	err := ctx.RegisterResource("databricks:index/budget:Budget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudget gets an existing Budget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetState, opts ...pulumi.ResourceOption) (*Budget, error) {
	var resource Budget
	err := ctx.ReadResource("databricks:index/budget:Budget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Budget resources.
type budgetState struct {
	AccountId             *string                    `pulumi:"accountId"`
	AlertConfigurations   []BudgetAlertConfiguration `pulumi:"alertConfigurations"`
	BudgetConfigurationId *string                    `pulumi:"budgetConfigurationId"`
	CreateTime            *int                       `pulumi:"createTime"`
	DisplayName           *string                    `pulumi:"displayName"`
	Filter                *BudgetFilter              `pulumi:"filter"`
	UpdateTime            *int                       `pulumi:"updateTime"`
}

type BudgetState struct {
	AccountId             pulumi.StringPtrInput
	AlertConfigurations   BudgetAlertConfigurationArrayInput
	BudgetConfigurationId pulumi.StringPtrInput
	CreateTime            pulumi.IntPtrInput
	DisplayName           pulumi.StringPtrInput
	Filter                BudgetFilterPtrInput
	UpdateTime            pulumi.IntPtrInput
}

func (BudgetState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetState)(nil)).Elem()
}

type budgetArgs struct {
	AccountId             *string                    `pulumi:"accountId"`
	AlertConfigurations   []BudgetAlertConfiguration `pulumi:"alertConfigurations"`
	BudgetConfigurationId *string                    `pulumi:"budgetConfigurationId"`
	CreateTime            *int                       `pulumi:"createTime"`
	DisplayName           *string                    `pulumi:"displayName"`
	Filter                *BudgetFilter              `pulumi:"filter"`
	UpdateTime            *int                       `pulumi:"updateTime"`
}

// The set of arguments for constructing a Budget resource.
type BudgetArgs struct {
	AccountId             pulumi.StringPtrInput
	AlertConfigurations   BudgetAlertConfigurationArrayInput
	BudgetConfigurationId pulumi.StringPtrInput
	CreateTime            pulumi.IntPtrInput
	DisplayName           pulumi.StringPtrInput
	Filter                BudgetFilterPtrInput
	UpdateTime            pulumi.IntPtrInput
}

func (BudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetArgs)(nil)).Elem()
}

type BudgetInput interface {
	pulumi.Input

	ToBudgetOutput() BudgetOutput
	ToBudgetOutputWithContext(ctx context.Context) BudgetOutput
}

func (*Budget) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (i *Budget) ToBudgetOutput() BudgetOutput {
	return i.ToBudgetOutputWithContext(context.Background())
}

func (i *Budget) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetOutput)
}

// BudgetArrayInput is an input type that accepts BudgetArray and BudgetArrayOutput values.
// You can construct a concrete instance of `BudgetArrayInput` via:
//
//	BudgetArray{ BudgetArgs{...} }
type BudgetArrayInput interface {
	pulumi.Input

	ToBudgetArrayOutput() BudgetArrayOutput
	ToBudgetArrayOutputWithContext(context.Context) BudgetArrayOutput
}

type BudgetArray []BudgetInput

func (BudgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (i BudgetArray) ToBudgetArrayOutput() BudgetArrayOutput {
	return i.ToBudgetArrayOutputWithContext(context.Background())
}

func (i BudgetArray) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetArrayOutput)
}

// BudgetMapInput is an input type that accepts BudgetMap and BudgetMapOutput values.
// You can construct a concrete instance of `BudgetMapInput` via:
//
//	BudgetMap{ "key": BudgetArgs{...} }
type BudgetMapInput interface {
	pulumi.Input

	ToBudgetMapOutput() BudgetMapOutput
	ToBudgetMapOutputWithContext(context.Context) BudgetMapOutput
}

type BudgetMap map[string]BudgetInput

func (BudgetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (i BudgetMap) ToBudgetMapOutput() BudgetMapOutput {
	return i.ToBudgetMapOutputWithContext(context.Background())
}

func (i BudgetMap) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetMapOutput)
}

type BudgetOutput struct{ *pulumi.OutputState }

func (BudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (o BudgetOutput) ToBudgetOutput() BudgetOutput {
	return o
}

func (o BudgetOutput) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return o
}

func (o BudgetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o BudgetOutput) AlertConfigurations() BudgetAlertConfigurationArrayOutput {
	return o.ApplyT(func(v *Budget) BudgetAlertConfigurationArrayOutput { return v.AlertConfigurations }).(BudgetAlertConfigurationArrayOutput)
}

func (o BudgetOutput) BudgetConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.BudgetConfigurationId }).(pulumi.StringOutput)
}

func (o BudgetOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

func (o BudgetOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o BudgetOutput) Filter() BudgetFilterPtrOutput {
	return o.ApplyT(func(v *Budget) BudgetFilterPtrOutput { return v.Filter }).(BudgetFilterPtrOutput)
}

func (o BudgetOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.UpdateTime }).(pulumi.IntOutput)
}

type BudgetArrayOutput struct{ *pulumi.OutputState }

func (BudgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (o BudgetArrayOutput) ToBudgetArrayOutput() BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) Index(i pulumi.IntInput) BudgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].([]*Budget)[vs[1].(int)]
	}).(BudgetOutput)
}

type BudgetMapOutput struct{ *pulumi.OutputState }

func (BudgetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (o BudgetMapOutput) ToBudgetMapOutput() BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) MapIndex(k pulumi.StringInput) BudgetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].(map[string]*Budget)[vs[1].(string)]
	}).(BudgetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetInput)(nil)).Elem(), &Budget{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetArrayInput)(nil)).Elem(), BudgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetMapInput)(nil)).Elem(), BudgetMap{})
	pulumi.RegisterOutputType(BudgetOutput{})
	pulumi.RegisterOutputType(BudgetArrayOutput{})
	pulumi.RegisterOutputType(BudgetMapOutput{})
}
