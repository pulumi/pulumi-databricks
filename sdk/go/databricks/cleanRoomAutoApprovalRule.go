// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = "rule_id"
//
//	to = databricks_clean_room_auto_approval_rule.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule databricks_clean_room_auto_approval_rule "rule_id"
// ```
type CleanRoomAutoApprovalRule struct {
	pulumi.CustomResourceState

	// Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias pulumi.StringPtrOutput `pulumi:"authorCollaboratorAlias"`
	// Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope pulumi.StringPtrOutput `pulumi:"authorScope"`
	// The name of the clean room this auto-approval rule belongs to
	CleanRoomName pulumi.StringPtrOutput `pulumi:"cleanRoomName"`
	// (integer) - Timestamp of when the rule was created, in epoch milliseconds
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// (string) - A generated UUID identifying the rule
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// (string) - The owner of the rule to whom the rule applies
	RuleOwnerCollaboratorAlias pulumi.StringOutput `pulumi:"ruleOwnerCollaboratorAlias"`
	// Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias pulumi.StringPtrOutput `pulumi:"runnerCollaboratorAlias"`
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrOutput `pulumi:"workspaceId"`
}

// NewCleanRoomAutoApprovalRule registers a new resource with the given unique name, arguments, and options.
func NewCleanRoomAutoApprovalRule(ctx *pulumi.Context,
	name string, args *CleanRoomAutoApprovalRuleArgs, opts ...pulumi.ResourceOption) (*CleanRoomAutoApprovalRule, error) {
	if args == nil {
		args = &CleanRoomAutoApprovalRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CleanRoomAutoApprovalRule
	err := ctx.RegisterResource("databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCleanRoomAutoApprovalRule gets an existing CleanRoomAutoApprovalRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCleanRoomAutoApprovalRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CleanRoomAutoApprovalRuleState, opts ...pulumi.ResourceOption) (*CleanRoomAutoApprovalRule, error) {
	var resource CleanRoomAutoApprovalRule
	err := ctx.ReadResource("databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CleanRoomAutoApprovalRule resources.
type cleanRoomAutoApprovalRuleState struct {
	// Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias *string `pulumi:"authorCollaboratorAlias"`
	// Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope *string `pulumi:"authorScope"`
	// The name of the clean room this auto-approval rule belongs to
	CleanRoomName *string `pulumi:"cleanRoomName"`
	// (integer) - Timestamp of when the rule was created, in epoch milliseconds
	CreatedAt *int `pulumi:"createdAt"`
	// (string) - A generated UUID identifying the rule
	RuleId *string `pulumi:"ruleId"`
	// (string) - The owner of the rule to whom the rule applies
	RuleOwnerCollaboratorAlias *string `pulumi:"ruleOwnerCollaboratorAlias"`
	// Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias *string `pulumi:"runnerCollaboratorAlias"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

type CleanRoomAutoApprovalRuleState struct {
	// Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias pulumi.StringPtrInput
	// Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope pulumi.StringPtrInput
	// The name of the clean room this auto-approval rule belongs to
	CleanRoomName pulumi.StringPtrInput
	// (integer) - Timestamp of when the rule was created, in epoch milliseconds
	CreatedAt pulumi.IntPtrInput
	// (string) - A generated UUID identifying the rule
	RuleId pulumi.StringPtrInput
	// (string) - The owner of the rule to whom the rule applies
	RuleOwnerCollaboratorAlias pulumi.StringPtrInput
	// Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias pulumi.StringPtrInput
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput
}

func (CleanRoomAutoApprovalRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*cleanRoomAutoApprovalRuleState)(nil)).Elem()
}

type cleanRoomAutoApprovalRuleArgs struct {
	// Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias *string `pulumi:"authorCollaboratorAlias"`
	// Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope *string `pulumi:"authorScope"`
	// The name of the clean room this auto-approval rule belongs to
	CleanRoomName *string `pulumi:"cleanRoomName"`
	// Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias *string `pulumi:"runnerCollaboratorAlias"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a CleanRoomAutoApprovalRule resource.
type CleanRoomAutoApprovalRuleArgs struct {
	// Collaborator alias of the author covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set
	AuthorCollaboratorAlias pulumi.StringPtrInput
	// Scope of authors covered by the rule.
	// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
	AuthorScope pulumi.StringPtrInput
	// The name of the clean room this auto-approval rule belongs to
	CleanRoomName pulumi.StringPtrInput
	// Collaborator alias of the runner covered by the rule
	RunnerCollaboratorAlias pulumi.StringPtrInput
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput
}

func (CleanRoomAutoApprovalRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cleanRoomAutoApprovalRuleArgs)(nil)).Elem()
}

type CleanRoomAutoApprovalRuleInput interface {
	pulumi.Input

	ToCleanRoomAutoApprovalRuleOutput() CleanRoomAutoApprovalRuleOutput
	ToCleanRoomAutoApprovalRuleOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleOutput
}

func (*CleanRoomAutoApprovalRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (i *CleanRoomAutoApprovalRule) ToCleanRoomAutoApprovalRuleOutput() CleanRoomAutoApprovalRuleOutput {
	return i.ToCleanRoomAutoApprovalRuleOutputWithContext(context.Background())
}

func (i *CleanRoomAutoApprovalRule) ToCleanRoomAutoApprovalRuleOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CleanRoomAutoApprovalRuleOutput)
}

// CleanRoomAutoApprovalRuleArrayInput is an input type that accepts CleanRoomAutoApprovalRuleArray and CleanRoomAutoApprovalRuleArrayOutput values.
// You can construct a concrete instance of `CleanRoomAutoApprovalRuleArrayInput` via:
//
//	CleanRoomAutoApprovalRuleArray{ CleanRoomAutoApprovalRuleArgs{...} }
type CleanRoomAutoApprovalRuleArrayInput interface {
	pulumi.Input

	ToCleanRoomAutoApprovalRuleArrayOutput() CleanRoomAutoApprovalRuleArrayOutput
	ToCleanRoomAutoApprovalRuleArrayOutputWithContext(context.Context) CleanRoomAutoApprovalRuleArrayOutput
}

type CleanRoomAutoApprovalRuleArray []CleanRoomAutoApprovalRuleInput

func (CleanRoomAutoApprovalRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (i CleanRoomAutoApprovalRuleArray) ToCleanRoomAutoApprovalRuleArrayOutput() CleanRoomAutoApprovalRuleArrayOutput {
	return i.ToCleanRoomAutoApprovalRuleArrayOutputWithContext(context.Background())
}

func (i CleanRoomAutoApprovalRuleArray) ToCleanRoomAutoApprovalRuleArrayOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CleanRoomAutoApprovalRuleArrayOutput)
}

// CleanRoomAutoApprovalRuleMapInput is an input type that accepts CleanRoomAutoApprovalRuleMap and CleanRoomAutoApprovalRuleMapOutput values.
// You can construct a concrete instance of `CleanRoomAutoApprovalRuleMapInput` via:
//
//	CleanRoomAutoApprovalRuleMap{ "key": CleanRoomAutoApprovalRuleArgs{...} }
type CleanRoomAutoApprovalRuleMapInput interface {
	pulumi.Input

	ToCleanRoomAutoApprovalRuleMapOutput() CleanRoomAutoApprovalRuleMapOutput
	ToCleanRoomAutoApprovalRuleMapOutputWithContext(context.Context) CleanRoomAutoApprovalRuleMapOutput
}

type CleanRoomAutoApprovalRuleMap map[string]CleanRoomAutoApprovalRuleInput

func (CleanRoomAutoApprovalRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (i CleanRoomAutoApprovalRuleMap) ToCleanRoomAutoApprovalRuleMapOutput() CleanRoomAutoApprovalRuleMapOutput {
	return i.ToCleanRoomAutoApprovalRuleMapOutputWithContext(context.Background())
}

func (i CleanRoomAutoApprovalRuleMap) ToCleanRoomAutoApprovalRuleMapOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CleanRoomAutoApprovalRuleMapOutput)
}

type CleanRoomAutoApprovalRuleOutput struct{ *pulumi.OutputState }

func (CleanRoomAutoApprovalRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (o CleanRoomAutoApprovalRuleOutput) ToCleanRoomAutoApprovalRuleOutput() CleanRoomAutoApprovalRuleOutput {
	return o
}

func (o CleanRoomAutoApprovalRuleOutput) ToCleanRoomAutoApprovalRuleOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleOutput {
	return o
}

// Collaborator alias of the author covered by the rule.
// Only one of `authorCollaboratorAlias` and `authorScope` can be set
func (o CleanRoomAutoApprovalRuleOutput) AuthorCollaboratorAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringPtrOutput { return v.AuthorCollaboratorAlias }).(pulumi.StringPtrOutput)
}

// Scope of authors covered by the rule.
// Only one of `authorCollaboratorAlias` and `authorScope` can be set. Possible values are: `ANY_AUTHOR`
func (o CleanRoomAutoApprovalRuleOutput) AuthorScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringPtrOutput { return v.AuthorScope }).(pulumi.StringPtrOutput)
}

// The name of the clean room this auto-approval rule belongs to
func (o CleanRoomAutoApprovalRuleOutput) CleanRoomName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringPtrOutput { return v.CleanRoomName }).(pulumi.StringPtrOutput)
}

// (integer) - Timestamp of when the rule was created, in epoch milliseconds
func (o CleanRoomAutoApprovalRuleOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// (string) - A generated UUID identifying the rule
func (o CleanRoomAutoApprovalRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// (string) - The owner of the rule to whom the rule applies
func (o CleanRoomAutoApprovalRuleOutput) RuleOwnerCollaboratorAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringOutput { return v.RuleOwnerCollaboratorAlias }).(pulumi.StringOutput)
}

// Collaborator alias of the runner covered by the rule
func (o CleanRoomAutoApprovalRuleOutput) RunnerCollaboratorAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringPtrOutput { return v.RunnerCollaboratorAlias }).(pulumi.StringPtrOutput)
}

// Workspace ID of the resource
func (o CleanRoomAutoApprovalRuleOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CleanRoomAutoApprovalRule) pulumi.StringPtrOutput { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type CleanRoomAutoApprovalRuleArrayOutput struct{ *pulumi.OutputState }

func (CleanRoomAutoApprovalRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (o CleanRoomAutoApprovalRuleArrayOutput) ToCleanRoomAutoApprovalRuleArrayOutput() CleanRoomAutoApprovalRuleArrayOutput {
	return o
}

func (o CleanRoomAutoApprovalRuleArrayOutput) ToCleanRoomAutoApprovalRuleArrayOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleArrayOutput {
	return o
}

func (o CleanRoomAutoApprovalRuleArrayOutput) Index(i pulumi.IntInput) CleanRoomAutoApprovalRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CleanRoomAutoApprovalRule {
		return vs[0].([]*CleanRoomAutoApprovalRule)[vs[1].(int)]
	}).(CleanRoomAutoApprovalRuleOutput)
}

type CleanRoomAutoApprovalRuleMapOutput struct{ *pulumi.OutputState }

func (CleanRoomAutoApprovalRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CleanRoomAutoApprovalRule)(nil)).Elem()
}

func (o CleanRoomAutoApprovalRuleMapOutput) ToCleanRoomAutoApprovalRuleMapOutput() CleanRoomAutoApprovalRuleMapOutput {
	return o
}

func (o CleanRoomAutoApprovalRuleMapOutput) ToCleanRoomAutoApprovalRuleMapOutputWithContext(ctx context.Context) CleanRoomAutoApprovalRuleMapOutput {
	return o
}

func (o CleanRoomAutoApprovalRuleMapOutput) MapIndex(k pulumi.StringInput) CleanRoomAutoApprovalRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CleanRoomAutoApprovalRule {
		return vs[0].(map[string]*CleanRoomAutoApprovalRule)[vs[1].(string)]
	}).(CleanRoomAutoApprovalRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CleanRoomAutoApprovalRuleInput)(nil)).Elem(), &CleanRoomAutoApprovalRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CleanRoomAutoApprovalRuleArrayInput)(nil)).Elem(), CleanRoomAutoApprovalRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CleanRoomAutoApprovalRuleMapInput)(nil)).Elem(), CleanRoomAutoApprovalRuleMap{})
	pulumi.RegisterOutputType(CleanRoomAutoApprovalRuleOutput{})
	pulumi.RegisterOutputType(CleanRoomAutoApprovalRuleArrayOutput{})
	pulumi.RegisterOutputType(CleanRoomAutoApprovalRuleMapOutput{})
}
