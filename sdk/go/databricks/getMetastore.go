// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMetastore(ctx *pulumi.Context, args *LookupMetastoreArgs, opts ...pulumi.InvokeOption) (*LookupMetastoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMetastoreResult
	err := ctx.Invoke("databricks:index/getMetastore:getMetastore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetastore.
type LookupMetastoreArgs struct {
	Id            *string                    `pulumi:"id"`
	MetastoreId   *string                    `pulumi:"metastoreId"`
	MetastoreInfo *GetMetastoreMetastoreInfo `pulumi:"metastoreInfo"`
	Name          *string                    `pulumi:"name"`
	Region        *string                    `pulumi:"region"`
}

// A collection of values returned by getMetastore.
type LookupMetastoreResult struct {
	Id            string                    `pulumi:"id"`
	MetastoreId   string                    `pulumi:"metastoreId"`
	MetastoreInfo GetMetastoreMetastoreInfo `pulumi:"metastoreInfo"`
	Name          string                    `pulumi:"name"`
	Region        string                    `pulumi:"region"`
}

func LookupMetastoreOutput(ctx *pulumi.Context, args LookupMetastoreOutputArgs, opts ...pulumi.InvokeOption) LookupMetastoreResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMetastoreResultOutput, error) {
			args := v.(LookupMetastoreArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getMetastore:getMetastore", args, LookupMetastoreResultOutput{}, options).(LookupMetastoreResultOutput), nil
		}).(LookupMetastoreResultOutput)
}

// A collection of arguments for invoking getMetastore.
type LookupMetastoreOutputArgs struct {
	Id            pulumi.StringPtrInput             `pulumi:"id"`
	MetastoreId   pulumi.StringPtrInput             `pulumi:"metastoreId"`
	MetastoreInfo GetMetastoreMetastoreInfoPtrInput `pulumi:"metastoreInfo"`
	Name          pulumi.StringPtrInput             `pulumi:"name"`
	Region        pulumi.StringPtrInput             `pulumi:"region"`
}

func (LookupMetastoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreArgs)(nil)).Elem()
}

// A collection of values returned by getMetastore.
type LookupMetastoreResultOutput struct{ *pulumi.OutputState }

func (LookupMetastoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreResult)(nil)).Elem()
}

func (o LookupMetastoreResultOutput) ToLookupMetastoreResultOutput() LookupMetastoreResultOutput {
	return o
}

func (o LookupMetastoreResultOutput) ToLookupMetastoreResultOutputWithContext(ctx context.Context) LookupMetastoreResultOutput {
	return o
}

func (o LookupMetastoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMetastoreResultOutput) MetastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreResult) string { return v.MetastoreId }).(pulumi.StringOutput)
}

func (o LookupMetastoreResultOutput) MetastoreInfo() GetMetastoreMetastoreInfoOutput {
	return o.ApplyT(func(v LookupMetastoreResult) GetMetastoreMetastoreInfo { return v.MetastoreInfo }).(GetMetastoreMetastoreInfoOutput)
}

func (o LookupMetastoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMetastoreResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetastoreResultOutput{})
}
