// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MlflowWebhook struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput            `pulumi:"description"`
	Events      pulumi.StringArrayOutput          `pulumi:"events"`
	HttpUrlSpec MlflowWebhookHttpUrlSpecPtrOutput `pulumi:"httpUrlSpec"`
	JobSpec     MlflowWebhookJobSpecPtrOutput     `pulumi:"jobSpec"`
	ModelName   pulumi.StringPtrOutput            `pulumi:"modelName"`
	Status      pulumi.StringPtrOutput            `pulumi:"status"`
}

// NewMlflowWebhook registers a new resource with the given unique name, arguments, and options.
func NewMlflowWebhook(ctx *pulumi.Context,
	name string, args *MlflowWebhookArgs, opts ...pulumi.ResourceOption) (*MlflowWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Events == nil {
		return nil, errors.New("invalid value for required argument 'Events'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MlflowWebhook
	err := ctx.RegisterResource("databricks:index/mlflowWebhook:MlflowWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMlflowWebhook gets an existing MlflowWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMlflowWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MlflowWebhookState, opts ...pulumi.ResourceOption) (*MlflowWebhook, error) {
	var resource MlflowWebhook
	err := ctx.ReadResource("databricks:index/mlflowWebhook:MlflowWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MlflowWebhook resources.
type mlflowWebhookState struct {
	Description *string                   `pulumi:"description"`
	Events      []string                  `pulumi:"events"`
	HttpUrlSpec *MlflowWebhookHttpUrlSpec `pulumi:"httpUrlSpec"`
	JobSpec     *MlflowWebhookJobSpec     `pulumi:"jobSpec"`
	ModelName   *string                   `pulumi:"modelName"`
	Status      *string                   `pulumi:"status"`
}

type MlflowWebhookState struct {
	Description pulumi.StringPtrInput
	Events      pulumi.StringArrayInput
	HttpUrlSpec MlflowWebhookHttpUrlSpecPtrInput
	JobSpec     MlflowWebhookJobSpecPtrInput
	ModelName   pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
}

func (MlflowWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*mlflowWebhookState)(nil)).Elem()
}

type mlflowWebhookArgs struct {
	Description *string                   `pulumi:"description"`
	Events      []string                  `pulumi:"events"`
	HttpUrlSpec *MlflowWebhookHttpUrlSpec `pulumi:"httpUrlSpec"`
	JobSpec     *MlflowWebhookJobSpec     `pulumi:"jobSpec"`
	ModelName   *string                   `pulumi:"modelName"`
	Status      *string                   `pulumi:"status"`
}

// The set of arguments for constructing a MlflowWebhook resource.
type MlflowWebhookArgs struct {
	Description pulumi.StringPtrInput
	Events      pulumi.StringArrayInput
	HttpUrlSpec MlflowWebhookHttpUrlSpecPtrInput
	JobSpec     MlflowWebhookJobSpecPtrInput
	ModelName   pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
}

func (MlflowWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mlflowWebhookArgs)(nil)).Elem()
}

type MlflowWebhookInput interface {
	pulumi.Input

	ToMlflowWebhookOutput() MlflowWebhookOutput
	ToMlflowWebhookOutputWithContext(ctx context.Context) MlflowWebhookOutput
}

func (*MlflowWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**MlflowWebhook)(nil)).Elem()
}

func (i *MlflowWebhook) ToMlflowWebhookOutput() MlflowWebhookOutput {
	return i.ToMlflowWebhookOutputWithContext(context.Background())
}

func (i *MlflowWebhook) ToMlflowWebhookOutputWithContext(ctx context.Context) MlflowWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowWebhookOutput)
}

// MlflowWebhookArrayInput is an input type that accepts MlflowWebhookArray and MlflowWebhookArrayOutput values.
// You can construct a concrete instance of `MlflowWebhookArrayInput` via:
//
//	MlflowWebhookArray{ MlflowWebhookArgs{...} }
type MlflowWebhookArrayInput interface {
	pulumi.Input

	ToMlflowWebhookArrayOutput() MlflowWebhookArrayOutput
	ToMlflowWebhookArrayOutputWithContext(context.Context) MlflowWebhookArrayOutput
}

type MlflowWebhookArray []MlflowWebhookInput

func (MlflowWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlflowWebhook)(nil)).Elem()
}

func (i MlflowWebhookArray) ToMlflowWebhookArrayOutput() MlflowWebhookArrayOutput {
	return i.ToMlflowWebhookArrayOutputWithContext(context.Background())
}

func (i MlflowWebhookArray) ToMlflowWebhookArrayOutputWithContext(ctx context.Context) MlflowWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowWebhookArrayOutput)
}

// MlflowWebhookMapInput is an input type that accepts MlflowWebhookMap and MlflowWebhookMapOutput values.
// You can construct a concrete instance of `MlflowWebhookMapInput` via:
//
//	MlflowWebhookMap{ "key": MlflowWebhookArgs{...} }
type MlflowWebhookMapInput interface {
	pulumi.Input

	ToMlflowWebhookMapOutput() MlflowWebhookMapOutput
	ToMlflowWebhookMapOutputWithContext(context.Context) MlflowWebhookMapOutput
}

type MlflowWebhookMap map[string]MlflowWebhookInput

func (MlflowWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlflowWebhook)(nil)).Elem()
}

func (i MlflowWebhookMap) ToMlflowWebhookMapOutput() MlflowWebhookMapOutput {
	return i.ToMlflowWebhookMapOutputWithContext(context.Background())
}

func (i MlflowWebhookMap) ToMlflowWebhookMapOutputWithContext(ctx context.Context) MlflowWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowWebhookMapOutput)
}

type MlflowWebhookOutput struct{ *pulumi.OutputState }

func (MlflowWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MlflowWebhook)(nil)).Elem()
}

func (o MlflowWebhookOutput) ToMlflowWebhookOutput() MlflowWebhookOutput {
	return o
}

func (o MlflowWebhookOutput) ToMlflowWebhookOutputWithContext(ctx context.Context) MlflowWebhookOutput {
	return o
}

func (o MlflowWebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MlflowWebhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MlflowWebhookOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MlflowWebhook) pulumi.StringArrayOutput { return v.Events }).(pulumi.StringArrayOutput)
}

func (o MlflowWebhookOutput) HttpUrlSpec() MlflowWebhookHttpUrlSpecPtrOutput {
	return o.ApplyT(func(v *MlflowWebhook) MlflowWebhookHttpUrlSpecPtrOutput { return v.HttpUrlSpec }).(MlflowWebhookHttpUrlSpecPtrOutput)
}

func (o MlflowWebhookOutput) JobSpec() MlflowWebhookJobSpecPtrOutput {
	return o.ApplyT(func(v *MlflowWebhook) MlflowWebhookJobSpecPtrOutput { return v.JobSpec }).(MlflowWebhookJobSpecPtrOutput)
}

func (o MlflowWebhookOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MlflowWebhook) pulumi.StringPtrOutput { return v.ModelName }).(pulumi.StringPtrOutput)
}

func (o MlflowWebhookOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MlflowWebhook) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

type MlflowWebhookArrayOutput struct{ *pulumi.OutputState }

func (MlflowWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlflowWebhook)(nil)).Elem()
}

func (o MlflowWebhookArrayOutput) ToMlflowWebhookArrayOutput() MlflowWebhookArrayOutput {
	return o
}

func (o MlflowWebhookArrayOutput) ToMlflowWebhookArrayOutputWithContext(ctx context.Context) MlflowWebhookArrayOutput {
	return o
}

func (o MlflowWebhookArrayOutput) Index(i pulumi.IntInput) MlflowWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MlflowWebhook {
		return vs[0].([]*MlflowWebhook)[vs[1].(int)]
	}).(MlflowWebhookOutput)
}

type MlflowWebhookMapOutput struct{ *pulumi.OutputState }

func (MlflowWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlflowWebhook)(nil)).Elem()
}

func (o MlflowWebhookMapOutput) ToMlflowWebhookMapOutput() MlflowWebhookMapOutput {
	return o
}

func (o MlflowWebhookMapOutput) ToMlflowWebhookMapOutputWithContext(ctx context.Context) MlflowWebhookMapOutput {
	return o
}

func (o MlflowWebhookMapOutput) MapIndex(k pulumi.StringInput) MlflowWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MlflowWebhook {
		return vs[0].(map[string]*MlflowWebhook)[vs[1].(string)]
	}).(MlflowWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowWebhookInput)(nil)).Elem(), &MlflowWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowWebhookArrayInput)(nil)).Elem(), MlflowWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowWebhookMapInput)(nil)).Elem(), MlflowWebhookMap{})
	pulumi.RegisterOutputType(MlflowWebhookOutput{})
	pulumi.RegisterOutputType(MlflowWebhookArrayOutput{})
	pulumi.RegisterOutputType(MlflowWebhookMapOutput{})
}
