// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAwsCrossAccountPolicy(ctx *pulumi.Context, args *GetAwsCrossAccountPolicyArgs, opts ...pulumi.InvokeOption) (*GetAwsCrossAccountPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAwsCrossAccountPolicyResult
	err := ctx.Invoke("databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsCrossAccountPolicy.
type GetAwsCrossAccountPolicyArgs struct {
	AwsAccountId    *string  `pulumi:"awsAccountId"`
	AwsPartition    *string  `pulumi:"awsPartition"`
	PassRoles       []string `pulumi:"passRoles"`
	PolicyType      *string  `pulumi:"policyType"`
	Region          *string  `pulumi:"region"`
	SecurityGroupId *string  `pulumi:"securityGroupId"`
	VpcId           *string  `pulumi:"vpcId"`
}

// A collection of values returned by getAwsCrossAccountPolicy.
type GetAwsCrossAccountPolicyResult struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	AwsPartition *string `pulumi:"awsPartition"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Json            string   `pulumi:"json"`
	PassRoles       []string `pulumi:"passRoles"`
	PolicyType      *string  `pulumi:"policyType"`
	Region          *string  `pulumi:"region"`
	SecurityGroupId *string  `pulumi:"securityGroupId"`
	VpcId           *string  `pulumi:"vpcId"`
}

func GetAwsCrossAccountPolicyOutput(ctx *pulumi.Context, args GetAwsCrossAccountPolicyOutputArgs, opts ...pulumi.InvokeOption) GetAwsCrossAccountPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAwsCrossAccountPolicyResultOutput, error) {
			args := v.(GetAwsCrossAccountPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy", args, GetAwsCrossAccountPolicyResultOutput{}, options).(GetAwsCrossAccountPolicyResultOutput), nil
		}).(GetAwsCrossAccountPolicyResultOutput)
}

// A collection of arguments for invoking getAwsCrossAccountPolicy.
type GetAwsCrossAccountPolicyOutputArgs struct {
	AwsAccountId    pulumi.StringPtrInput   `pulumi:"awsAccountId"`
	AwsPartition    pulumi.StringPtrInput   `pulumi:"awsPartition"`
	PassRoles       pulumi.StringArrayInput `pulumi:"passRoles"`
	PolicyType      pulumi.StringPtrInput   `pulumi:"policyType"`
	Region          pulumi.StringPtrInput   `pulumi:"region"`
	SecurityGroupId pulumi.StringPtrInput   `pulumi:"securityGroupId"`
	VpcId           pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (GetAwsCrossAccountPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossAccountPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAwsCrossAccountPolicy.
type GetAwsCrossAccountPolicyResultOutput struct{ *pulumi.OutputState }

func (GetAwsCrossAccountPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossAccountPolicyResult)(nil)).Elem()
}

func (o GetAwsCrossAccountPolicyResultOutput) ToGetAwsCrossAccountPolicyResultOutput() GetAwsCrossAccountPolicyResultOutput {
	return o
}

func (o GetAwsCrossAccountPolicyResultOutput) ToGetAwsCrossAccountPolicyResultOutputWithContext(ctx context.Context) GetAwsCrossAccountPolicyResultOutput {
	return o
}

func (o GetAwsCrossAccountPolicyResultOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) AwsPartition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.AwsPartition }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAwsCrossAccountPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) PassRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) []string { return v.PassRoles }).(pulumi.StringArrayOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o GetAwsCrossAccountPolicyResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsCrossAccountPolicyResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAwsCrossAccountPolicyResultOutput{})
}
