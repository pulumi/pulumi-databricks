// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPolicyInfo(ctx *pulumi.Context, args *LookupPolicyInfoArgs, opts ...pulumi.InvokeOption) (*LookupPolicyInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyInfoResult
	err := ctx.Invoke("databricks:index/getPolicyInfo:getPolicyInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyInfo.
type LookupPolicyInfoArgs struct {
	// (ColumnMaskOptions) - Options for column mask policies. Valid only if `policyType` is `POLICY_TYPE_COLUMN_MASK`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	ColumnMask *GetPolicyInfoColumnMask `pulumi:"columnMask"`
	// (string) - Optional description of the policy
	Comment *string `pulumi:"comment"`
	// (list of string) - Optional list of user or group names that should be excluded from the policy
	ExceptPrincipals []string `pulumi:"exceptPrincipals"`
	// (string) - Type of securables that the policy should take effect on.
	// Only `table` is supported at this moment.
	// Required on create and optional on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	ForSecurableType string `pulumi:"forSecurableType"`
	// (list of MatchColumn) - Optional list of condition expressions used to match table columns.
	// Only valid when `forSecurableType` is `table`.
	// When specified, the policy only applies to tables whose columns satisfy all match conditions
	MatchColumns []GetPolicyInfoMatchColumn `pulumi:"matchColumns"`
	// Name of the policy. Required on create and ignored on update.
	// To update the name, use the `newName` field
	Name *string `pulumi:"name"`
	// Full name of the securable on which the policy is defined.
	// Required on create and ignored on update
	OnSecurableFullname *string `pulumi:"onSecurableFullname"`
	// Type of the securable on which the policy is defined.
	// Only `catalog`, `schema` and `table` are supported at this moment.
	// Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	OnSecurableType *string `pulumi:"onSecurableType"`
	// (string) - Type of the policy. Required on create and ignored on update. Possible values are: `POLICY_TYPE_COLUMN_MASK`, `POLICY_TYPE_ROW_FILTER`
	PolicyType string `pulumi:"policyType"`
	// (RowFilterOptions) - Options for row filter policies. Valid only if `policyType` is `POLICY_TYPE_ROW_FILTER`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	RowFilter *GetPolicyInfoRowFilter `pulumi:"rowFilter"`
	// (list of string) - List of user or group names that the policy applies to.
	// Required on create and optional on update
	ToPrincipals []string `pulumi:"toPrincipals"`
	// (string) - Optional condition when the policy should take effect
	WhenCondition *string `pulumi:"whenCondition"`
}

// A collection of values returned by getPolicyInfo.
type LookupPolicyInfoResult struct {
	// (ColumnMaskOptions) - Options for column mask policies. Valid only if `policyType` is `POLICY_TYPE_COLUMN_MASK`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	ColumnMask *GetPolicyInfoColumnMask `pulumi:"columnMask"`
	// (string) - Optional description of the policy
	Comment *string `pulumi:"comment"`
	// (integer) - Time at which the policy was created, in epoch milliseconds. Output only
	CreatedAt int `pulumi:"createdAt"`
	// (string) - Username of the user who created the policy. Output only
	CreatedBy string `pulumi:"createdBy"`
	// (list of string) - Optional list of user or group names that should be excluded from the policy
	ExceptPrincipals []string `pulumi:"exceptPrincipals"`
	// (string) - Type of securables that the policy should take effect on.
	// Only `table` is supported at this moment.
	// Required on create and optional on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	ForSecurableType string `pulumi:"forSecurableType"`
	// (string) - Unique identifier of the policy. This field is output only and is generated by the system
	Id string `pulumi:"id"`
	// (list of MatchColumn) - Optional list of condition expressions used to match table columns.
	// Only valid when `forSecurableType` is `table`.
	// When specified, the policy only applies to tables whose columns satisfy all match conditions
	MatchColumns []GetPolicyInfoMatchColumn `pulumi:"matchColumns"`
	// (string) - Name of the policy. Required on create and ignored on update.
	// To update the name, use the `newName` field
	Name *string `pulumi:"name"`
	// (string) - Full name of the securable on which the policy is defined.
	// Required on create and ignored on update
	OnSecurableFullname *string `pulumi:"onSecurableFullname"`
	// (string) - Type of the securable on which the policy is defined.
	// Only `catalog`, `schema` and `table` are supported at this moment.
	// Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	OnSecurableType *string `pulumi:"onSecurableType"`
	// (string) - Type of the policy. Required on create and ignored on update. Possible values are: `POLICY_TYPE_COLUMN_MASK`, `POLICY_TYPE_ROW_FILTER`
	PolicyType string `pulumi:"policyType"`
	// (RowFilterOptions) - Options for row filter policies. Valid only if `policyType` is `POLICY_TYPE_ROW_FILTER`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	RowFilter *GetPolicyInfoRowFilter `pulumi:"rowFilter"`
	// (list of string) - List of user or group names that the policy applies to.
	// Required on create and optional on update
	ToPrincipals []string `pulumi:"toPrincipals"`
	// (integer) - Time at which the policy was last modified, in epoch milliseconds. Output only
	UpdatedAt int `pulumi:"updatedAt"`
	// (string) - Username of the user who last modified the policy. Output only
	UpdatedBy string `pulumi:"updatedBy"`
	// (string) - Optional condition when the policy should take effect
	WhenCondition *string `pulumi:"whenCondition"`
}

func LookupPolicyInfoOutput(ctx *pulumi.Context, args LookupPolicyInfoOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPolicyInfoResultOutput, error) {
			args := v.(LookupPolicyInfoArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getPolicyInfo:getPolicyInfo", args, LookupPolicyInfoResultOutput{}, options).(LookupPolicyInfoResultOutput), nil
		}).(LookupPolicyInfoResultOutput)
}

// A collection of arguments for invoking getPolicyInfo.
type LookupPolicyInfoOutputArgs struct {
	// (ColumnMaskOptions) - Options for column mask policies. Valid only if `policyType` is `POLICY_TYPE_COLUMN_MASK`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	ColumnMask GetPolicyInfoColumnMaskPtrInput `pulumi:"columnMask"`
	// (string) - Optional description of the policy
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// (list of string) - Optional list of user or group names that should be excluded from the policy
	ExceptPrincipals pulumi.StringArrayInput `pulumi:"exceptPrincipals"`
	// (string) - Type of securables that the policy should take effect on.
	// Only `table` is supported at this moment.
	// Required on create and optional on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	ForSecurableType pulumi.StringInput `pulumi:"forSecurableType"`
	// (list of MatchColumn) - Optional list of condition expressions used to match table columns.
	// Only valid when `forSecurableType` is `table`.
	// When specified, the policy only applies to tables whose columns satisfy all match conditions
	MatchColumns GetPolicyInfoMatchColumnArrayInput `pulumi:"matchColumns"`
	// Name of the policy. Required on create and ignored on update.
	// To update the name, use the `newName` field
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Full name of the securable on which the policy is defined.
	// Required on create and ignored on update
	OnSecurableFullname pulumi.StringPtrInput `pulumi:"onSecurableFullname"`
	// Type of the securable on which the policy is defined.
	// Only `catalog`, `schema` and `table` are supported at this moment.
	// Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
	OnSecurableType pulumi.StringPtrInput `pulumi:"onSecurableType"`
	// (string) - Type of the policy. Required on create and ignored on update. Possible values are: `POLICY_TYPE_COLUMN_MASK`, `POLICY_TYPE_ROW_FILTER`
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// (RowFilterOptions) - Options for row filter policies. Valid only if `policyType` is `POLICY_TYPE_ROW_FILTER`.
	// Required on create and optional on update. When specified on update,
	// the new options will replace the existing options as a whole
	RowFilter GetPolicyInfoRowFilterPtrInput `pulumi:"rowFilter"`
	// (list of string) - List of user or group names that the policy applies to.
	// Required on create and optional on update
	ToPrincipals pulumi.StringArrayInput `pulumi:"toPrincipals"`
	// (string) - Optional condition when the policy should take effect
	WhenCondition pulumi.StringPtrInput `pulumi:"whenCondition"`
}

func (LookupPolicyInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyInfoArgs)(nil)).Elem()
}

// A collection of values returned by getPolicyInfo.
type LookupPolicyInfoResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyInfoResult)(nil)).Elem()
}

func (o LookupPolicyInfoResultOutput) ToLookupPolicyInfoResultOutput() LookupPolicyInfoResultOutput {
	return o
}

func (o LookupPolicyInfoResultOutput) ToLookupPolicyInfoResultOutputWithContext(ctx context.Context) LookupPolicyInfoResultOutput {
	return o
}

// (ColumnMaskOptions) - Options for column mask policies. Valid only if `policyType` is `POLICY_TYPE_COLUMN_MASK`.
// Required on create and optional on update. When specified on update,
// the new options will replace the existing options as a whole
func (o LookupPolicyInfoResultOutput) ColumnMask() GetPolicyInfoColumnMaskPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *GetPolicyInfoColumnMask { return v.ColumnMask }).(GetPolicyInfoColumnMaskPtrOutput)
}

// (string) - Optional description of the policy
func (o LookupPolicyInfoResultOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// (integer) - Time at which the policy was created, in epoch milliseconds. Output only
func (o LookupPolicyInfoResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

// (string) - Username of the user who created the policy. Output only
func (o LookupPolicyInfoResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// (list of string) - Optional list of user or group names that should be excluded from the policy
func (o LookupPolicyInfoResultOutput) ExceptPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) []string { return v.ExceptPrincipals }).(pulumi.StringArrayOutput)
}

// (string) - Type of securables that the policy should take effect on.
// Only `table` is supported at this moment.
// Required on create and optional on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
func (o LookupPolicyInfoResultOutput) ForSecurableType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) string { return v.ForSecurableType }).(pulumi.StringOutput)
}

// (string) - Unique identifier of the policy. This field is output only and is generated by the system
func (o LookupPolicyInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

// (list of MatchColumn) - Optional list of condition expressions used to match table columns.
// Only valid when `forSecurableType` is `table`.
// When specified, the policy only applies to tables whose columns satisfy all match conditions
func (o LookupPolicyInfoResultOutput) MatchColumns() GetPolicyInfoMatchColumnArrayOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) []GetPolicyInfoMatchColumn { return v.MatchColumns }).(GetPolicyInfoMatchColumnArrayOutput)
}

// (string) - Name of the policy. Required on create and ignored on update.
// To update the name, use the `newName` field
func (o LookupPolicyInfoResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (string) - Full name of the securable on which the policy is defined.
// Required on create and ignored on update
func (o LookupPolicyInfoResultOutput) OnSecurableFullname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *string { return v.OnSecurableFullname }).(pulumi.StringPtrOutput)
}

// (string) - Type of the securable on which the policy is defined.
// Only `catalog`, `schema` and `table` are supported at this moment.
// Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
func (o LookupPolicyInfoResultOutput) OnSecurableType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *string { return v.OnSecurableType }).(pulumi.StringPtrOutput)
}

// (string) - Type of the policy. Required on create and ignored on update. Possible values are: `POLICY_TYPE_COLUMN_MASK`, `POLICY_TYPE_ROW_FILTER`
func (o LookupPolicyInfoResultOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) string { return v.PolicyType }).(pulumi.StringOutput)
}

// (RowFilterOptions) - Options for row filter policies. Valid only if `policyType` is `POLICY_TYPE_ROW_FILTER`.
// Required on create and optional on update. When specified on update,
// the new options will replace the existing options as a whole
func (o LookupPolicyInfoResultOutput) RowFilter() GetPolicyInfoRowFilterPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *GetPolicyInfoRowFilter { return v.RowFilter }).(GetPolicyInfoRowFilterPtrOutput)
}

// (list of string) - List of user or group names that the policy applies to.
// Required on create and optional on update
func (o LookupPolicyInfoResultOutput) ToPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) []string { return v.ToPrincipals }).(pulumi.StringArrayOutput)
}

// (integer) - Time at which the policy was last modified, in epoch milliseconds. Output only
func (o LookupPolicyInfoResultOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) int { return v.UpdatedAt }).(pulumi.IntOutput)
}

// (string) - Username of the user who last modified the policy. Output only
func (o LookupPolicyInfoResultOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// (string) - Optional condition when the policy should take effect
func (o LookupPolicyInfoResultOutput) WhenCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyInfoResult) *string { return v.WhenCondition }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyInfoResultOutput{})
}
