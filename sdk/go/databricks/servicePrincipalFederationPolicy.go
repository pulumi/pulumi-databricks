// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Service principal federation policies allow automated workloads running outside of Databricks to access Databricks APIs without the need for Databricks secrets. Your application (workload) authenticates to Databricks as a Databricks service principal using tokens issued by the workload runtime, for example Github Actions.
//
// A service principal federation policy is associated with a service principal in your Databricks account, and specifies:
// * The identity provider (or issuer) from which the service principal can authenticate.
// * The workload identity (or subject) that is permitted to authenticate as the Databricks service principal.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.NewServicePrincipalFederationPolicy(ctx, "this", &databricks.ServicePrincipalFederationPolicyArgs{
//				ServicePrincipalId: pulumi.Int(1234),
//				PolicyId:           pulumi.String("my-policy"),
//				OidcPolicy: &databricks.ServicePrincipalFederationPolicyOidcPolicyArgs{
//					Issuer:        pulumi.String("https://myidp.example.com"),
//					Subject_claim: "sub",
//					Subject:       pulumi.String("subject-in-token-from-myidp"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = "service_principal_id,policy_id"
//
//	to = databricks_service_principal_federation_policy.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy databricks_service_principal_federation_policy "service_principal_id,policy_id"
// ```
type ServicePrincipalFederationPolicy struct {
	pulumi.CustomResourceState

	// (string) - Creation time of the federation policy
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of the federation policy
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       pulumi.StringOutput                                 `pulumi:"name"`
	OidcPolicy ServicePrincipalFederationPolicyOidcPolicyPtrOutput `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntOutput `pulumi:"servicePrincipalId"`
	// (string) - Unique, immutable id of the federation policy
	Uid pulumi.StringOutput `pulumi:"uid"`
	// (string) - Last update time of the federation policy
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewServicePrincipalFederationPolicy registers a new resource with the given unique name, arguments, and options.
func NewServicePrincipalFederationPolicy(ctx *pulumi.Context,
	name string, args *ServicePrincipalFederationPolicyArgs, opts ...pulumi.ResourceOption) (*ServicePrincipalFederationPolicy, error) {
	if args == nil {
		args = &ServicePrincipalFederationPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicePrincipalFederationPolicy
	err := ctx.RegisterResource("databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePrincipalFederationPolicy gets an existing ServicePrincipalFederationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePrincipalFederationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePrincipalFederationPolicyState, opts ...pulumi.ResourceOption) (*ServicePrincipalFederationPolicy, error) {
	var resource ServicePrincipalFederationPolicy
	err := ctx.ReadResource("databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePrincipalFederationPolicy resources.
type servicePrincipalFederationPolicyState struct {
	// (string) - Creation time of the federation policy
	CreateTime *string `pulumi:"createTime"`
	// Description of the federation policy
	Description *string `pulumi:"description"`
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       *string                                     `pulumi:"name"`
	OidcPolicy *ServicePrincipalFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId *string `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId *int `pulumi:"servicePrincipalId"`
	// (string) - Unique, immutable id of the federation policy
	Uid *string `pulumi:"uid"`
	// (string) - Last update time of the federation policy
	UpdateTime *string `pulumi:"updateTime"`
}

type ServicePrincipalFederationPolicyState struct {
	// (string) - Creation time of the federation policy
	CreateTime pulumi.StringPtrInput
	// Description of the federation policy
	Description pulumi.StringPtrInput
	// (string) - Resource name for the federation policy. Example values include
	// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
	// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
	// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
	// specified in create or update requests. If specified in a request, must match the value in the
	// request URL
	Name       pulumi.StringPtrInput
	OidcPolicy ServicePrincipalFederationPolicyOidcPolicyPtrInput
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringPtrInput
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntPtrInput
	// (string) - Unique, immutable id of the federation policy
	Uid pulumi.StringPtrInput
	// (string) - Last update time of the federation policy
	UpdateTime pulumi.StringPtrInput
}

func (ServicePrincipalFederationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalFederationPolicyState)(nil)).Elem()
}

type servicePrincipalFederationPolicyArgs struct {
	// Description of the federation policy
	Description *string                                     `pulumi:"description"`
	OidcPolicy  *ServicePrincipalFederationPolicyOidcPolicy `pulumi:"oidcPolicy"`
	// (string) - The ID of the federation policy
	PolicyId *string `pulumi:"policyId"`
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId *int `pulumi:"servicePrincipalId"`
}

// The set of arguments for constructing a ServicePrincipalFederationPolicy resource.
type ServicePrincipalFederationPolicyArgs struct {
	// Description of the federation policy
	Description pulumi.StringPtrInput
	OidcPolicy  ServicePrincipalFederationPolicyOidcPolicyPtrInput
	// (string) - The ID of the federation policy
	PolicyId pulumi.StringPtrInput
	// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
	ServicePrincipalId pulumi.IntPtrInput
}

func (ServicePrincipalFederationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalFederationPolicyArgs)(nil)).Elem()
}

type ServicePrincipalFederationPolicyInput interface {
	pulumi.Input

	ToServicePrincipalFederationPolicyOutput() ServicePrincipalFederationPolicyOutput
	ToServicePrincipalFederationPolicyOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyOutput
}

func (*ServicePrincipalFederationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (i *ServicePrincipalFederationPolicy) ToServicePrincipalFederationPolicyOutput() ServicePrincipalFederationPolicyOutput {
	return i.ToServicePrincipalFederationPolicyOutputWithContext(context.Background())
}

func (i *ServicePrincipalFederationPolicy) ToServicePrincipalFederationPolicyOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFederationPolicyOutput)
}

// ServicePrincipalFederationPolicyArrayInput is an input type that accepts ServicePrincipalFederationPolicyArray and ServicePrincipalFederationPolicyArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalFederationPolicyArrayInput` via:
//
//	ServicePrincipalFederationPolicyArray{ ServicePrincipalFederationPolicyArgs{...} }
type ServicePrincipalFederationPolicyArrayInput interface {
	pulumi.Input

	ToServicePrincipalFederationPolicyArrayOutput() ServicePrincipalFederationPolicyArrayOutput
	ToServicePrincipalFederationPolicyArrayOutputWithContext(context.Context) ServicePrincipalFederationPolicyArrayOutput
}

type ServicePrincipalFederationPolicyArray []ServicePrincipalFederationPolicyInput

func (ServicePrincipalFederationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (i ServicePrincipalFederationPolicyArray) ToServicePrincipalFederationPolicyArrayOutput() ServicePrincipalFederationPolicyArrayOutput {
	return i.ToServicePrincipalFederationPolicyArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalFederationPolicyArray) ToServicePrincipalFederationPolicyArrayOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFederationPolicyArrayOutput)
}

// ServicePrincipalFederationPolicyMapInput is an input type that accepts ServicePrincipalFederationPolicyMap and ServicePrincipalFederationPolicyMapOutput values.
// You can construct a concrete instance of `ServicePrincipalFederationPolicyMapInput` via:
//
//	ServicePrincipalFederationPolicyMap{ "key": ServicePrincipalFederationPolicyArgs{...} }
type ServicePrincipalFederationPolicyMapInput interface {
	pulumi.Input

	ToServicePrincipalFederationPolicyMapOutput() ServicePrincipalFederationPolicyMapOutput
	ToServicePrincipalFederationPolicyMapOutputWithContext(context.Context) ServicePrincipalFederationPolicyMapOutput
}

type ServicePrincipalFederationPolicyMap map[string]ServicePrincipalFederationPolicyInput

func (ServicePrincipalFederationPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (i ServicePrincipalFederationPolicyMap) ToServicePrincipalFederationPolicyMapOutput() ServicePrincipalFederationPolicyMapOutput {
	return i.ToServicePrincipalFederationPolicyMapOutputWithContext(context.Background())
}

func (i ServicePrincipalFederationPolicyMap) ToServicePrincipalFederationPolicyMapOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFederationPolicyMapOutput)
}

type ServicePrincipalFederationPolicyOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFederationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (o ServicePrincipalFederationPolicyOutput) ToServicePrincipalFederationPolicyOutput() ServicePrincipalFederationPolicyOutput {
	return o
}

func (o ServicePrincipalFederationPolicyOutput) ToServicePrincipalFederationPolicyOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyOutput {
	return o
}

// (string) - Creation time of the federation policy
func (o ServicePrincipalFederationPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the federation policy
func (o ServicePrincipalFederationPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (string) - Resource name for the federation policy. Example values include
// `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
// `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
// specified in create or update requests. If specified in a request, must match the value in the
// request URL
func (o ServicePrincipalFederationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServicePrincipalFederationPolicyOutput) OidcPolicy() ServicePrincipalFederationPolicyOidcPolicyPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) ServicePrincipalFederationPolicyOidcPolicyPtrOutput {
		return v.OidcPolicy
	}).(ServicePrincipalFederationPolicyOidcPolicyPtrOutput)
}

// (string) - The ID of the federation policy
func (o ServicePrincipalFederationPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
func (o ServicePrincipalFederationPolicyOutput) ServicePrincipalId() pulumi.IntOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.IntOutput { return v.ServicePrincipalId }).(pulumi.IntOutput)
}

// (string) - Unique, immutable id of the federation policy
func (o ServicePrincipalFederationPolicyOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// (string) - Last update time of the federation policy
func (o ServicePrincipalFederationPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalFederationPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ServicePrincipalFederationPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFederationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (o ServicePrincipalFederationPolicyArrayOutput) ToServicePrincipalFederationPolicyArrayOutput() ServicePrincipalFederationPolicyArrayOutput {
	return o
}

func (o ServicePrincipalFederationPolicyArrayOutput) ToServicePrincipalFederationPolicyArrayOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyArrayOutput {
	return o
}

func (o ServicePrincipalFederationPolicyArrayOutput) Index(i pulumi.IntInput) ServicePrincipalFederationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicePrincipalFederationPolicy {
		return vs[0].([]*ServicePrincipalFederationPolicy)[vs[1].(int)]
	}).(ServicePrincipalFederationPolicyOutput)
}

type ServicePrincipalFederationPolicyMapOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFederationPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipalFederationPolicy)(nil)).Elem()
}

func (o ServicePrincipalFederationPolicyMapOutput) ToServicePrincipalFederationPolicyMapOutput() ServicePrincipalFederationPolicyMapOutput {
	return o
}

func (o ServicePrincipalFederationPolicyMapOutput) ToServicePrincipalFederationPolicyMapOutputWithContext(ctx context.Context) ServicePrincipalFederationPolicyMapOutput {
	return o
}

func (o ServicePrincipalFederationPolicyMapOutput) MapIndex(k pulumi.StringInput) ServicePrincipalFederationPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicePrincipalFederationPolicy {
		return vs[0].(map[string]*ServicePrincipalFederationPolicy)[vs[1].(string)]
	}).(ServicePrincipalFederationPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFederationPolicyInput)(nil)).Elem(), &ServicePrincipalFederationPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFederationPolicyArrayInput)(nil)).Elem(), ServicePrincipalFederationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFederationPolicyMapInput)(nil)).Elem(), ServicePrincipalFederationPolicyMap{})
	pulumi.RegisterOutputType(ServicePrincipalFederationPolicyOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFederationPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFederationPolicyMapOutput{})
}
