// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// Referring to a cluster policy by name:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			personal, err := databricks.LookupClusterPolicy(ctx, &databricks.LookupClusterPolicyArgs{
//				Name: "Personal Compute",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewCluster(ctx, "myCluster", &databricks.ClusterArgs{
//				PolicyId: *pulumi.String(personal.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupClusterPolicy(ctx *pulumi.Context, args *LookupClusterPolicyArgs, opts ...pulumi.InvokeOption) (*LookupClusterPolicyResult, error) {
	var rv LookupClusterPolicyResult
	err := ctx.Invoke("databricks:index/getClusterPolicy:getClusterPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterPolicy.
type LookupClusterPolicyArgs struct {
	// Name of the cluster policy. The cluster policy must exist before this resource can be planned.
	Name string `pulumi:"name"`
}

// A collection of values returned by getClusterPolicy.
type LookupClusterPolicyResult struct {
	// Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition).
	Definition string `pulumi:"definition"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string `pulumi:"id"`
	MaxClustersPerUser int    `pulumi:"maxClustersPerUser"`
	Name               string `pulumi:"name"`
}

func LookupClusterPolicyOutput(ctx *pulumi.Context, args LookupClusterPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupClusterPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterPolicyResult, error) {
			args := v.(LookupClusterPolicyArgs)
			r, err := LookupClusterPolicy(ctx, &args, opts...)
			var s LookupClusterPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterPolicyResultOutput)
}

// A collection of arguments for invoking getClusterPolicy.
type LookupClusterPolicyOutputArgs struct {
	// Name of the cluster policy. The cluster policy must exist before this resource can be planned.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupClusterPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getClusterPolicy.
type LookupClusterPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupClusterPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPolicyResult)(nil)).Elem()
}

func (o LookupClusterPolicyResultOutput) ToLookupClusterPolicyResultOutput() LookupClusterPolicyResultOutput {
	return o
}

func (o LookupClusterPolicyResultOutput) ToLookupClusterPolicyResultOutputWithContext(ctx context.Context) LookupClusterPolicyResultOutput {
	return o
}

// Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition).
func (o LookupClusterPolicyResultOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) string { return v.Definition }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClusterPolicyResultOutput) MaxClustersPerUser() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) int { return v.MaxClustersPerUser }).(pulumi.IntOutput)
}

func (o LookupClusterPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterPolicyResultOutput{})
}
