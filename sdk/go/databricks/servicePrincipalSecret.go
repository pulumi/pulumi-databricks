// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// # Create service principal secret
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databricks.NewServicePrincipalSecret(ctx, "terraform_sp", &databricks.ServicePrincipalSecretArgs{
//				ServicePrincipalId: pulumi.Any(this.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Related Resources
//
// The following resources are often used in the same context:
//
// * ServicePrincipal to manage [Service Principals](https://docs.databricks.com/administration-guide/users-groups/service-principals.html) in Databricks
type ServicePrincipalSecret struct {
	pulumi.CustomResourceState

	// Generated secret for the service principal
	Secret pulumi.StringOutput `pulumi:"secret"`
	// ID of the ServicePrincipal (not application ID).
	ServicePrincipalId pulumi.StringOutput `pulumi:"servicePrincipalId"`
	Status             pulumi.StringOutput `pulumi:"status"`
}

// NewServicePrincipalSecret registers a new resource with the given unique name, arguments, and options.
func NewServicePrincipalSecret(ctx *pulumi.Context,
	name string, args *ServicePrincipalSecretArgs, opts ...pulumi.ResourceOption) (*ServicePrincipalSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServicePrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'ServicePrincipalId'")
	}
	if args.Secret != nil {
		args.Secret = pulumi.ToSecret(args.Secret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicePrincipalSecret
	err := ctx.RegisterResource("databricks:index/servicePrincipalSecret:ServicePrincipalSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePrincipalSecret gets an existing ServicePrincipalSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePrincipalSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePrincipalSecretState, opts ...pulumi.ResourceOption) (*ServicePrincipalSecret, error) {
	var resource ServicePrincipalSecret
	err := ctx.ReadResource("databricks:index/servicePrincipalSecret:ServicePrincipalSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePrincipalSecret resources.
type servicePrincipalSecretState struct {
	// Generated secret for the service principal
	Secret *string `pulumi:"secret"`
	// ID of the ServicePrincipal (not application ID).
	ServicePrincipalId *string `pulumi:"servicePrincipalId"`
	Status             *string `pulumi:"status"`
}

type ServicePrincipalSecretState struct {
	// Generated secret for the service principal
	Secret pulumi.StringPtrInput
	// ID of the ServicePrincipal (not application ID).
	ServicePrincipalId pulumi.StringPtrInput
	Status             pulumi.StringPtrInput
}

func (ServicePrincipalSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalSecretState)(nil)).Elem()
}

type servicePrincipalSecretArgs struct {
	// Generated secret for the service principal
	Secret *string `pulumi:"secret"`
	// ID of the ServicePrincipal (not application ID).
	ServicePrincipalId string  `pulumi:"servicePrincipalId"`
	Status             *string `pulumi:"status"`
}

// The set of arguments for constructing a ServicePrincipalSecret resource.
type ServicePrincipalSecretArgs struct {
	// Generated secret for the service principal
	Secret pulumi.StringPtrInput
	// ID of the ServicePrincipal (not application ID).
	ServicePrincipalId pulumi.StringInput
	Status             pulumi.StringPtrInput
}

func (ServicePrincipalSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalSecretArgs)(nil)).Elem()
}

type ServicePrincipalSecretInput interface {
	pulumi.Input

	ToServicePrincipalSecretOutput() ServicePrincipalSecretOutput
	ToServicePrincipalSecretOutputWithContext(ctx context.Context) ServicePrincipalSecretOutput
}

func (*ServicePrincipalSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalSecret)(nil)).Elem()
}

func (i *ServicePrincipalSecret) ToServicePrincipalSecretOutput() ServicePrincipalSecretOutput {
	return i.ToServicePrincipalSecretOutputWithContext(context.Background())
}

func (i *ServicePrincipalSecret) ToServicePrincipalSecretOutputWithContext(ctx context.Context) ServicePrincipalSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSecretOutput)
}

// ServicePrincipalSecretArrayInput is an input type that accepts ServicePrincipalSecretArray and ServicePrincipalSecretArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalSecretArrayInput` via:
//
//	ServicePrincipalSecretArray{ ServicePrincipalSecretArgs{...} }
type ServicePrincipalSecretArrayInput interface {
	pulumi.Input

	ToServicePrincipalSecretArrayOutput() ServicePrincipalSecretArrayOutput
	ToServicePrincipalSecretArrayOutputWithContext(context.Context) ServicePrincipalSecretArrayOutput
}

type ServicePrincipalSecretArray []ServicePrincipalSecretInput

func (ServicePrincipalSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipalSecret)(nil)).Elem()
}

func (i ServicePrincipalSecretArray) ToServicePrincipalSecretArrayOutput() ServicePrincipalSecretArrayOutput {
	return i.ToServicePrincipalSecretArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalSecretArray) ToServicePrincipalSecretArrayOutputWithContext(ctx context.Context) ServicePrincipalSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSecretArrayOutput)
}

// ServicePrincipalSecretMapInput is an input type that accepts ServicePrincipalSecretMap and ServicePrincipalSecretMapOutput values.
// You can construct a concrete instance of `ServicePrincipalSecretMapInput` via:
//
//	ServicePrincipalSecretMap{ "key": ServicePrincipalSecretArgs{...} }
type ServicePrincipalSecretMapInput interface {
	pulumi.Input

	ToServicePrincipalSecretMapOutput() ServicePrincipalSecretMapOutput
	ToServicePrincipalSecretMapOutputWithContext(context.Context) ServicePrincipalSecretMapOutput
}

type ServicePrincipalSecretMap map[string]ServicePrincipalSecretInput

func (ServicePrincipalSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipalSecret)(nil)).Elem()
}

func (i ServicePrincipalSecretMap) ToServicePrincipalSecretMapOutput() ServicePrincipalSecretMapOutput {
	return i.ToServicePrincipalSecretMapOutputWithContext(context.Background())
}

func (i ServicePrincipalSecretMap) ToServicePrincipalSecretMapOutputWithContext(ctx context.Context) ServicePrincipalSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSecretMapOutput)
}

type ServicePrincipalSecretOutput struct{ *pulumi.OutputState }

func (ServicePrincipalSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalSecret)(nil)).Elem()
}

func (o ServicePrincipalSecretOutput) ToServicePrincipalSecretOutput() ServicePrincipalSecretOutput {
	return o
}

func (o ServicePrincipalSecretOutput) ToServicePrincipalSecretOutputWithContext(ctx context.Context) ServicePrincipalSecretOutput {
	return o
}

// Generated secret for the service principal
func (o ServicePrincipalSecretOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalSecret) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// ID of the ServicePrincipal (not application ID).
func (o ServicePrincipalSecretOutput) ServicePrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalSecret) pulumi.StringOutput { return v.ServicePrincipalId }).(pulumi.StringOutput)
}

func (o ServicePrincipalSecretOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePrincipalSecret) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type ServicePrincipalSecretArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipalSecret)(nil)).Elem()
}

func (o ServicePrincipalSecretArrayOutput) ToServicePrincipalSecretArrayOutput() ServicePrincipalSecretArrayOutput {
	return o
}

func (o ServicePrincipalSecretArrayOutput) ToServicePrincipalSecretArrayOutputWithContext(ctx context.Context) ServicePrincipalSecretArrayOutput {
	return o
}

func (o ServicePrincipalSecretArrayOutput) Index(i pulumi.IntInput) ServicePrincipalSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicePrincipalSecret {
		return vs[0].([]*ServicePrincipalSecret)[vs[1].(int)]
	}).(ServicePrincipalSecretOutput)
}

type ServicePrincipalSecretMapOutput struct{ *pulumi.OutputState }

func (ServicePrincipalSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipalSecret)(nil)).Elem()
}

func (o ServicePrincipalSecretMapOutput) ToServicePrincipalSecretMapOutput() ServicePrincipalSecretMapOutput {
	return o
}

func (o ServicePrincipalSecretMapOutput) ToServicePrincipalSecretMapOutputWithContext(ctx context.Context) ServicePrincipalSecretMapOutput {
	return o
}

func (o ServicePrincipalSecretMapOutput) MapIndex(k pulumi.StringInput) ServicePrincipalSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicePrincipalSecret {
		return vs[0].(map[string]*ServicePrincipalSecret)[vs[1].(string)]
	}).(ServicePrincipalSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalSecretInput)(nil)).Elem(), &ServicePrincipalSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalSecretArrayInput)(nil)).Elem(), ServicePrincipalSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalSecretMapInput)(nil)).Elem(), ServicePrincipalSecretMap{})
	pulumi.RegisterOutputType(ServicePrincipalSecretOutput{})
	pulumi.RegisterOutputType(ServicePrincipalSecretArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalSecretMapOutput{})
}
