// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **Note** This resource has an evolving API, which may change in future versions of the provider. Please always consult [latest documentation](https://docs.databricks.com/data-governance/unity-catalog/get-started.html#configure-a-storage-bucket-and-iam-role-in-aws) in case of any questions.
//
// This data source constructs necessary AWS Unity Catalog assume role policy for you.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			this, err := databricks.GetAwsUnityCatalogPolicy(ctx, &databricks.GetAwsUnityCatalogPolicyArgs{
//				AwsAccountId: awsAccountId,
//				BucketName:   "databricks-bucket",
//				RoleName:     fmt.Sprintf("%v-uc-access", prefix),
//				KmsName:      pulumi.StringRef("databricks-kms"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = databricks.GetAwsUnityCatalogAssumeRolePolicy(ctx, &databricks.GetAwsUnityCatalogAssumeRolePolicyArgs{
//				AwsAccountId: awsAccountId,
//				RoleName:     fmt.Sprintf("%v-uc-access", prefix),
//				ExternalId:   "12345",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			unityMetastore, err := iam.NewPolicy(ctx, "unity_metastore", &iam.PolicyArgs{
//				Name:   pulumi.String(fmt.Sprintf("%v-unity-catalog-metastore-access-iam-policy", prefix)),
//				Policy: pulumi.String(this.Json),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRole(ctx, "metastore_data_access", &iam.RoleArgs{
//				Name:             pulumi.String(fmt.Sprintf("%v-uc-access", prefix)),
//				AssumeRolePolicy: pulumi.Any(passroleForUc.Json),
//				ManagedPolicyArns: pulumi.StringArray{
//					unityMetastore.Arn,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAwsUnityCatalogAssumeRolePolicy(ctx *pulumi.Context, args *GetAwsUnityCatalogAssumeRolePolicyArgs, opts ...pulumi.InvokeOption) (*GetAwsUnityCatalogAssumeRolePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAwsUnityCatalogAssumeRolePolicyResult
	err := ctx.Invoke("databricks:index/getAwsUnityCatalogAssumeRolePolicy:getAwsUnityCatalogAssumeRolePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsUnityCatalogAssumeRolePolicy.
type GetAwsUnityCatalogAssumeRolePolicyArgs struct {
	// The Account ID of the current AWS account (not your Databricks account).
	AwsAccountId string `pulumi:"awsAccountId"`
	// The storage credential external id.
	ExternalId string `pulumi:"externalId"`
	// The name of the AWS IAM role that you created in the previous step in the [official documentation](https://docs.databricks.com/data-governance/unity-catalog/get-started.html#configure-a-storage-bucket-and-iam-role-in-aws).
	RoleName string `pulumi:"roleName"`
	// The Databricks Unity Catalog IAM Role ARN. Defaults to `arn:aws:iam::414351767826:role/unity-catalog-prod-UCMasterRole-14S5ZJVKOTYTL`
	UnityCatalogIamArn *string `pulumi:"unityCatalogIamArn"`
}

// A collection of values returned by getAwsUnityCatalogAssumeRolePolicy.
type GetAwsUnityCatalogAssumeRolePolicyResult struct {
	AwsAccountId string `pulumi:"awsAccountId"`
	ExternalId   string `pulumi:"externalId"`
	Id           string `pulumi:"id"`
	// AWS IAM Policy JSON document for assume role
	Json               string `pulumi:"json"`
	RoleName           string `pulumi:"roleName"`
	UnityCatalogIamArn string `pulumi:"unityCatalogIamArn"`
}

func GetAwsUnityCatalogAssumeRolePolicyOutput(ctx *pulumi.Context, args GetAwsUnityCatalogAssumeRolePolicyOutputArgs, opts ...pulumi.InvokeOption) GetAwsUnityCatalogAssumeRolePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAwsUnityCatalogAssumeRolePolicyResult, error) {
			args := v.(GetAwsUnityCatalogAssumeRolePolicyArgs)
			r, err := GetAwsUnityCatalogAssumeRolePolicy(ctx, &args, opts...)
			var s GetAwsUnityCatalogAssumeRolePolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAwsUnityCatalogAssumeRolePolicyResultOutput)
}

// A collection of arguments for invoking getAwsUnityCatalogAssumeRolePolicy.
type GetAwsUnityCatalogAssumeRolePolicyOutputArgs struct {
	// The Account ID of the current AWS account (not your Databricks account).
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// The storage credential external id.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The name of the AWS IAM role that you created in the previous step in the [official documentation](https://docs.databricks.com/data-governance/unity-catalog/get-started.html#configure-a-storage-bucket-and-iam-role-in-aws).
	RoleName pulumi.StringInput `pulumi:"roleName"`
	// The Databricks Unity Catalog IAM Role ARN. Defaults to `arn:aws:iam::414351767826:role/unity-catalog-prod-UCMasterRole-14S5ZJVKOTYTL`
	UnityCatalogIamArn pulumi.StringPtrInput `pulumi:"unityCatalogIamArn"`
}

func (GetAwsUnityCatalogAssumeRolePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsUnityCatalogAssumeRolePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAwsUnityCatalogAssumeRolePolicy.
type GetAwsUnityCatalogAssumeRolePolicyResultOutput struct{ *pulumi.OutputState }

func (GetAwsUnityCatalogAssumeRolePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsUnityCatalogAssumeRolePolicyResult)(nil)).Elem()
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) ToGetAwsUnityCatalogAssumeRolePolicyResultOutput() GetAwsUnityCatalogAssumeRolePolicyResultOutput {
	return o
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) ToGetAwsUnityCatalogAssumeRolePolicyResultOutputWithContext(ctx context.Context) GetAwsUnityCatalogAssumeRolePolicyResultOutput {
	return o
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// AWS IAM Policy JSON document for assume role
func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o GetAwsUnityCatalogAssumeRolePolicyResultOutput) UnityCatalogIamArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsUnityCatalogAssumeRolePolicyResult) string { return v.UnityCatalogIamArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAwsUnityCatalogAssumeRolePolicyResultOutput{})
}
