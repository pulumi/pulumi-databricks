// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExternalLocation struct {
	pulumi.CustomResourceState

	AccessPoint       pulumi.StringPtrOutput                     `pulumi:"accessPoint"`
	Comment           pulumi.StringPtrOutput                     `pulumi:"comment"`
	CredentialName    pulumi.StringOutput                        `pulumi:"credentialName"`
	EncryptionDetails ExternalLocationEncryptionDetailsPtrOutput `pulumi:"encryptionDetails"`
	ForceDestroy      pulumi.BoolPtrOutput                       `pulumi:"forceDestroy"`
	ForceUpdate       pulumi.BoolPtrOutput                       `pulumi:"forceUpdate"`
	IsolationMode     pulumi.StringOutput                        `pulumi:"isolationMode"`
	MetastoreId       pulumi.StringOutput                        `pulumi:"metastoreId"`
	Name              pulumi.StringOutput                        `pulumi:"name"`
	Owner             pulumi.StringOutput                        `pulumi:"owner"`
	ReadOnly          pulumi.BoolPtrOutput                       `pulumi:"readOnly"`
	SkipValidation    pulumi.BoolPtrOutput                       `pulumi:"skipValidation"`
	Url               pulumi.StringOutput                        `pulumi:"url"`
}

// NewExternalLocation registers a new resource with the given unique name, arguments, and options.
func NewExternalLocation(ctx *pulumi.Context,
	name string, args *ExternalLocationArgs, opts ...pulumi.ResourceOption) (*ExternalLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialName == nil {
		return nil, errors.New("invalid value for required argument 'CredentialName'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalLocation
	err := ctx.RegisterResource("databricks:index/externalLocation:ExternalLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalLocation gets an existing ExternalLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalLocationState, opts ...pulumi.ResourceOption) (*ExternalLocation, error) {
	var resource ExternalLocation
	err := ctx.ReadResource("databricks:index/externalLocation:ExternalLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalLocation resources.
type externalLocationState struct {
	AccessPoint       *string                            `pulumi:"accessPoint"`
	Comment           *string                            `pulumi:"comment"`
	CredentialName    *string                            `pulumi:"credentialName"`
	EncryptionDetails *ExternalLocationEncryptionDetails `pulumi:"encryptionDetails"`
	ForceDestroy      *bool                              `pulumi:"forceDestroy"`
	ForceUpdate       *bool                              `pulumi:"forceUpdate"`
	IsolationMode     *string                            `pulumi:"isolationMode"`
	MetastoreId       *string                            `pulumi:"metastoreId"`
	Name              *string                            `pulumi:"name"`
	Owner             *string                            `pulumi:"owner"`
	ReadOnly          *bool                              `pulumi:"readOnly"`
	SkipValidation    *bool                              `pulumi:"skipValidation"`
	Url               *string                            `pulumi:"url"`
}

type ExternalLocationState struct {
	AccessPoint       pulumi.StringPtrInput
	Comment           pulumi.StringPtrInput
	CredentialName    pulumi.StringPtrInput
	EncryptionDetails ExternalLocationEncryptionDetailsPtrInput
	ForceDestroy      pulumi.BoolPtrInput
	ForceUpdate       pulumi.BoolPtrInput
	IsolationMode     pulumi.StringPtrInput
	MetastoreId       pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	Owner             pulumi.StringPtrInput
	ReadOnly          pulumi.BoolPtrInput
	SkipValidation    pulumi.BoolPtrInput
	Url               pulumi.StringPtrInput
}

func (ExternalLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalLocationState)(nil)).Elem()
}

type externalLocationArgs struct {
	AccessPoint       *string                            `pulumi:"accessPoint"`
	Comment           *string                            `pulumi:"comment"`
	CredentialName    string                             `pulumi:"credentialName"`
	EncryptionDetails *ExternalLocationEncryptionDetails `pulumi:"encryptionDetails"`
	ForceDestroy      *bool                              `pulumi:"forceDestroy"`
	ForceUpdate       *bool                              `pulumi:"forceUpdate"`
	IsolationMode     *string                            `pulumi:"isolationMode"`
	MetastoreId       *string                            `pulumi:"metastoreId"`
	Name              *string                            `pulumi:"name"`
	Owner             *string                            `pulumi:"owner"`
	ReadOnly          *bool                              `pulumi:"readOnly"`
	SkipValidation    *bool                              `pulumi:"skipValidation"`
	Url               string                             `pulumi:"url"`
}

// The set of arguments for constructing a ExternalLocation resource.
type ExternalLocationArgs struct {
	AccessPoint       pulumi.StringPtrInput
	Comment           pulumi.StringPtrInput
	CredentialName    pulumi.StringInput
	EncryptionDetails ExternalLocationEncryptionDetailsPtrInput
	ForceDestroy      pulumi.BoolPtrInput
	ForceUpdate       pulumi.BoolPtrInput
	IsolationMode     pulumi.StringPtrInput
	MetastoreId       pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	Owner             pulumi.StringPtrInput
	ReadOnly          pulumi.BoolPtrInput
	SkipValidation    pulumi.BoolPtrInput
	Url               pulumi.StringInput
}

func (ExternalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalLocationArgs)(nil)).Elem()
}

type ExternalLocationInput interface {
	pulumi.Input

	ToExternalLocationOutput() ExternalLocationOutput
	ToExternalLocationOutputWithContext(ctx context.Context) ExternalLocationOutput
}

func (*ExternalLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalLocation)(nil)).Elem()
}

func (i *ExternalLocation) ToExternalLocationOutput() ExternalLocationOutput {
	return i.ToExternalLocationOutputWithContext(context.Background())
}

func (i *ExternalLocation) ToExternalLocationOutputWithContext(ctx context.Context) ExternalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLocationOutput)
}

// ExternalLocationArrayInput is an input type that accepts ExternalLocationArray and ExternalLocationArrayOutput values.
// You can construct a concrete instance of `ExternalLocationArrayInput` via:
//
//	ExternalLocationArray{ ExternalLocationArgs{...} }
type ExternalLocationArrayInput interface {
	pulumi.Input

	ToExternalLocationArrayOutput() ExternalLocationArrayOutput
	ToExternalLocationArrayOutputWithContext(context.Context) ExternalLocationArrayOutput
}

type ExternalLocationArray []ExternalLocationInput

func (ExternalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalLocation)(nil)).Elem()
}

func (i ExternalLocationArray) ToExternalLocationArrayOutput() ExternalLocationArrayOutput {
	return i.ToExternalLocationArrayOutputWithContext(context.Background())
}

func (i ExternalLocationArray) ToExternalLocationArrayOutputWithContext(ctx context.Context) ExternalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLocationArrayOutput)
}

// ExternalLocationMapInput is an input type that accepts ExternalLocationMap and ExternalLocationMapOutput values.
// You can construct a concrete instance of `ExternalLocationMapInput` via:
//
//	ExternalLocationMap{ "key": ExternalLocationArgs{...} }
type ExternalLocationMapInput interface {
	pulumi.Input

	ToExternalLocationMapOutput() ExternalLocationMapOutput
	ToExternalLocationMapOutputWithContext(context.Context) ExternalLocationMapOutput
}

type ExternalLocationMap map[string]ExternalLocationInput

func (ExternalLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalLocation)(nil)).Elem()
}

func (i ExternalLocationMap) ToExternalLocationMapOutput() ExternalLocationMapOutput {
	return i.ToExternalLocationMapOutputWithContext(context.Background())
}

func (i ExternalLocationMap) ToExternalLocationMapOutputWithContext(ctx context.Context) ExternalLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLocationMapOutput)
}

type ExternalLocationOutput struct{ *pulumi.OutputState }

func (ExternalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalLocation)(nil)).Elem()
}

func (o ExternalLocationOutput) ToExternalLocationOutput() ExternalLocationOutput {
	return o
}

func (o ExternalLocationOutput) ToExternalLocationOutputWithContext(ctx context.Context) ExternalLocationOutput {
	return o
}

func (o ExternalLocationOutput) AccessPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringPtrOutput { return v.AccessPoint }).(pulumi.StringPtrOutput)
}

func (o ExternalLocationOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ExternalLocationOutput) CredentialName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.CredentialName }).(pulumi.StringOutput)
}

func (o ExternalLocationOutput) EncryptionDetails() ExternalLocationEncryptionDetailsPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) ExternalLocationEncryptionDetailsPtrOutput { return v.EncryptionDetails }).(ExternalLocationEncryptionDetailsPtrOutput)
}

func (o ExternalLocationOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o ExternalLocationOutput) ForceUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.BoolPtrOutput { return v.ForceUpdate }).(pulumi.BoolPtrOutput)
}

func (o ExternalLocationOutput) IsolationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.IsolationMode }).(pulumi.StringOutput)
}

func (o ExternalLocationOutput) MetastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.MetastoreId }).(pulumi.StringOutput)
}

func (o ExternalLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExternalLocationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o ExternalLocationOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.BoolPtrOutput { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o ExternalLocationOutput) SkipValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.BoolPtrOutput { return v.SkipValidation }).(pulumi.BoolPtrOutput)
}

func (o ExternalLocationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLocation) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type ExternalLocationArrayOutput struct{ *pulumi.OutputState }

func (ExternalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalLocation)(nil)).Elem()
}

func (o ExternalLocationArrayOutput) ToExternalLocationArrayOutput() ExternalLocationArrayOutput {
	return o
}

func (o ExternalLocationArrayOutput) ToExternalLocationArrayOutputWithContext(ctx context.Context) ExternalLocationArrayOutput {
	return o
}

func (o ExternalLocationArrayOutput) Index(i pulumi.IntInput) ExternalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalLocation {
		return vs[0].([]*ExternalLocation)[vs[1].(int)]
	}).(ExternalLocationOutput)
}

type ExternalLocationMapOutput struct{ *pulumi.OutputState }

func (ExternalLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalLocation)(nil)).Elem()
}

func (o ExternalLocationMapOutput) ToExternalLocationMapOutput() ExternalLocationMapOutput {
	return o
}

func (o ExternalLocationMapOutput) ToExternalLocationMapOutputWithContext(ctx context.Context) ExternalLocationMapOutput {
	return o
}

func (o ExternalLocationMapOutput) MapIndex(k pulumi.StringInput) ExternalLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalLocation {
		return vs[0].(map[string]*ExternalLocation)[vs[1].(string)]
	}).(ExternalLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLocationInput)(nil)).Elem(), &ExternalLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLocationArrayInput)(nil)).Elem(), ExternalLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLocationMapInput)(nil)).Elem(), ExternalLocationMap{})
	pulumi.RegisterOutputType(ExternalLocationOutput{})
	pulumi.RegisterOutputType(ExternalLocationArrayOutput{})
	pulumi.RegisterOutputType(ExternalLocationMapOutput{})
}
