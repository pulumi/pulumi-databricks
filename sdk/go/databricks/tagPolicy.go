// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define tag policies to manage governed tags in your account.
//
// > **Note** This resource can only be used with an account-level provider!
//
// ## Import
//
// As of Pulumi v1.5, resources can be imported through configuration.
//
// hcl
//
// import {
//
//	id = "tag_key"
//
//	to = databricks_tag_policy.this
//
// }
//
// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
//
// ```sh
// $ pulumi import databricks:index/tagPolicy:TagPolicy databricks_tag_policy "tag_key"
// ```
type TagPolicy struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput    `pulumi:"description"`
	TagKey      pulumi.StringOutput       `pulumi:"tagKey"`
	Values      TagPolicyValueArrayOutput `pulumi:"values"`
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrOutput `pulumi:"workspaceId"`
}

// NewTagPolicy registers a new resource with the given unique name, arguments, and options.
func NewTagPolicy(ctx *pulumi.Context,
	name string, args *TagPolicyArgs, opts ...pulumi.ResourceOption) (*TagPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TagKey == nil {
		return nil, errors.New("invalid value for required argument 'TagKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagPolicy
	err := ctx.RegisterResource("databricks:index/tagPolicy:TagPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagPolicy gets an existing TagPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagPolicyState, opts ...pulumi.ResourceOption) (*TagPolicy, error) {
	var resource TagPolicy
	err := ctx.ReadResource("databricks:index/tagPolicy:TagPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagPolicy resources.
type tagPolicyState struct {
	Description *string          `pulumi:"description"`
	TagKey      *string          `pulumi:"tagKey"`
	Values      []TagPolicyValue `pulumi:"values"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

type TagPolicyState struct {
	Description pulumi.StringPtrInput
	TagKey      pulumi.StringPtrInput
	Values      TagPolicyValueArrayInput
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput
}

func (TagPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagPolicyState)(nil)).Elem()
}

type tagPolicyArgs struct {
	Description *string          `pulumi:"description"`
	TagKey      string           `pulumi:"tagKey"`
	Values      []TagPolicyValue `pulumi:"values"`
	// Workspace ID of the resource
	WorkspaceId *string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a TagPolicy resource.
type TagPolicyArgs struct {
	Description pulumi.StringPtrInput
	TagKey      pulumi.StringInput
	Values      TagPolicyValueArrayInput
	// Workspace ID of the resource
	WorkspaceId pulumi.StringPtrInput
}

func (TagPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagPolicyArgs)(nil)).Elem()
}

type TagPolicyInput interface {
	pulumi.Input

	ToTagPolicyOutput() TagPolicyOutput
	ToTagPolicyOutputWithContext(ctx context.Context) TagPolicyOutput
}

func (*TagPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**TagPolicy)(nil)).Elem()
}

func (i *TagPolicy) ToTagPolicyOutput() TagPolicyOutput {
	return i.ToTagPolicyOutputWithContext(context.Background())
}

func (i *TagPolicy) ToTagPolicyOutputWithContext(ctx context.Context) TagPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPolicyOutput)
}

// TagPolicyArrayInput is an input type that accepts TagPolicyArray and TagPolicyArrayOutput values.
// You can construct a concrete instance of `TagPolicyArrayInput` via:
//
//	TagPolicyArray{ TagPolicyArgs{...} }
type TagPolicyArrayInput interface {
	pulumi.Input

	ToTagPolicyArrayOutput() TagPolicyArrayOutput
	ToTagPolicyArrayOutputWithContext(context.Context) TagPolicyArrayOutput
}

type TagPolicyArray []TagPolicyInput

func (TagPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagPolicy)(nil)).Elem()
}

func (i TagPolicyArray) ToTagPolicyArrayOutput() TagPolicyArrayOutput {
	return i.ToTagPolicyArrayOutputWithContext(context.Background())
}

func (i TagPolicyArray) ToTagPolicyArrayOutputWithContext(ctx context.Context) TagPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPolicyArrayOutput)
}

// TagPolicyMapInput is an input type that accepts TagPolicyMap and TagPolicyMapOutput values.
// You can construct a concrete instance of `TagPolicyMapInput` via:
//
//	TagPolicyMap{ "key": TagPolicyArgs{...} }
type TagPolicyMapInput interface {
	pulumi.Input

	ToTagPolicyMapOutput() TagPolicyMapOutput
	ToTagPolicyMapOutputWithContext(context.Context) TagPolicyMapOutput
}

type TagPolicyMap map[string]TagPolicyInput

func (TagPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagPolicy)(nil)).Elem()
}

func (i TagPolicyMap) ToTagPolicyMapOutput() TagPolicyMapOutput {
	return i.ToTagPolicyMapOutputWithContext(context.Background())
}

func (i TagPolicyMap) ToTagPolicyMapOutputWithContext(ctx context.Context) TagPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPolicyMapOutput)
}

type TagPolicyOutput struct{ *pulumi.OutputState }

func (TagPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagPolicy)(nil)).Elem()
}

func (o TagPolicyOutput) ToTagPolicyOutput() TagPolicyOutput {
	return o
}

func (o TagPolicyOutput) ToTagPolicyOutputWithContext(ctx context.Context) TagPolicyOutput {
	return o
}

func (o TagPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TagPolicyOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v *TagPolicy) pulumi.StringOutput { return v.TagKey }).(pulumi.StringOutput)
}

func (o TagPolicyOutput) Values() TagPolicyValueArrayOutput {
	return o.ApplyT(func(v *TagPolicy) TagPolicyValueArrayOutput { return v.Values }).(TagPolicyValueArrayOutput)
}

// Workspace ID of the resource
func (o TagPolicyOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagPolicy) pulumi.StringPtrOutput { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type TagPolicyArrayOutput struct{ *pulumi.OutputState }

func (TagPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagPolicy)(nil)).Elem()
}

func (o TagPolicyArrayOutput) ToTagPolicyArrayOutput() TagPolicyArrayOutput {
	return o
}

func (o TagPolicyArrayOutput) ToTagPolicyArrayOutputWithContext(ctx context.Context) TagPolicyArrayOutput {
	return o
}

func (o TagPolicyArrayOutput) Index(i pulumi.IntInput) TagPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TagPolicy {
		return vs[0].([]*TagPolicy)[vs[1].(int)]
	}).(TagPolicyOutput)
}

type TagPolicyMapOutput struct{ *pulumi.OutputState }

func (TagPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagPolicy)(nil)).Elem()
}

func (o TagPolicyMapOutput) ToTagPolicyMapOutput() TagPolicyMapOutput {
	return o
}

func (o TagPolicyMapOutput) ToTagPolicyMapOutputWithContext(ctx context.Context) TagPolicyMapOutput {
	return o
}

func (o TagPolicyMapOutput) MapIndex(k pulumi.StringInput) TagPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TagPolicy {
		return vs[0].(map[string]*TagPolicy)[vs[1].(string)]
	}).(TagPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagPolicyInput)(nil)).Elem(), &TagPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagPolicyArrayInput)(nil)).Elem(), TagPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagPolicyMapInput)(nil)).Elem(), TagPolicyMap{})
	pulumi.RegisterOutputType(TagPolicyOutput{})
	pulumi.RegisterOutputType(TagPolicyArrayOutput{})
	pulumi.RegisterOutputType(TagPolicyMapOutput{})
}
