// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > This resource can only be used with an account-level provider!
//
// The `DisableLegacyFeaturesSetting` resource allows you to disable legacy features on newly created workspaces.
//
// > Before disabling legacy features, make sure that default catalog for the workspace is set to value different than `hiveMetastore`!  You can set it using the DefaultNamespaceSetting resource.
//
// When this setting is on, the following applies to new workspaces:
//
// - Disables the use of DBFS root and mounts.
// - Hive Metastore will not be provisioned.
// - Disables the use of 'No-isolation clusters'.
// - Disables Databricks Runtime versions prior to 13.3LTS
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Change default catalog to anything than `hive_metastore`
//			_, err := databricks.NewDefaultNamespaceSetting(ctx, "this", &databricks.DefaultNamespaceSettingArgs{
//				Namespace: &databricks.DefaultNamespaceSettingNamespaceArgs{
//					Value: pulumi.String("default_catalog"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Disable legacy features
//			_, err = databricks.NewDisableLegacyFeaturesSetting(ctx, "this", &databricks.DisableLegacyFeaturesSettingArgs{
//				DisableLegacyFeatures: &databricks.DisableLegacyFeaturesSettingDisableLegacyFeaturesArgs{
//					Value: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Related Resources
//
// The following resources are often used in the same context:
//
// * DisableLegacyAccessSetting to disable legacy access, enabled by default when creating new workspaces with the `disableLegacyFeatures` account level setting turned on.
// * DisableLegacyDbfsSetting to disable legacy DBFS, enabled by default when creating new workspaces with the `disableLegacyFeatures` account level setting turned on.
//
// ## Import
//
// This resource can be imported by predefined name `global`:
//
// hcl
//
// import {
//
//	to = databricks_disable_legacy_features_setting.this
//
//	id = "global"
//
// }
//
// Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
//
// bash
//
// ```sh
// $ pulumi import databricks:index/disableLegacyFeaturesSetting:DisableLegacyFeaturesSetting this global
// ```
type DisableLegacyFeaturesSetting struct {
	pulumi.CustomResourceState

	// block with following attributes:
	DisableLegacyFeatures DisableLegacyFeaturesSettingDisableLegacyFeaturesOutput `pulumi:"disableLegacyFeatures"`
	Etag                  pulumi.StringOutput                                     `pulumi:"etag"`
	SettingName           pulumi.StringOutput                                     `pulumi:"settingName"`
}

// NewDisableLegacyFeaturesSetting registers a new resource with the given unique name, arguments, and options.
func NewDisableLegacyFeaturesSetting(ctx *pulumi.Context,
	name string, args *DisableLegacyFeaturesSettingArgs, opts ...pulumi.ResourceOption) (*DisableLegacyFeaturesSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisableLegacyFeatures == nil {
		return nil, errors.New("invalid value for required argument 'DisableLegacyFeatures'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DisableLegacyFeaturesSetting
	err := ctx.RegisterResource("databricks:index/disableLegacyFeaturesSetting:DisableLegacyFeaturesSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDisableLegacyFeaturesSetting gets an existing DisableLegacyFeaturesSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDisableLegacyFeaturesSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DisableLegacyFeaturesSettingState, opts ...pulumi.ResourceOption) (*DisableLegacyFeaturesSetting, error) {
	var resource DisableLegacyFeaturesSetting
	err := ctx.ReadResource("databricks:index/disableLegacyFeaturesSetting:DisableLegacyFeaturesSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DisableLegacyFeaturesSetting resources.
type disableLegacyFeaturesSettingState struct {
	// block with following attributes:
	DisableLegacyFeatures *DisableLegacyFeaturesSettingDisableLegacyFeatures `pulumi:"disableLegacyFeatures"`
	Etag                  *string                                            `pulumi:"etag"`
	SettingName           *string                                            `pulumi:"settingName"`
}

type DisableLegacyFeaturesSettingState struct {
	// block with following attributes:
	DisableLegacyFeatures DisableLegacyFeaturesSettingDisableLegacyFeaturesPtrInput
	Etag                  pulumi.StringPtrInput
	SettingName           pulumi.StringPtrInput
}

func (DisableLegacyFeaturesSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*disableLegacyFeaturesSettingState)(nil)).Elem()
}

type disableLegacyFeaturesSettingArgs struct {
	// block with following attributes:
	DisableLegacyFeatures DisableLegacyFeaturesSettingDisableLegacyFeatures `pulumi:"disableLegacyFeatures"`
	Etag                  *string                                           `pulumi:"etag"`
	SettingName           *string                                           `pulumi:"settingName"`
}

// The set of arguments for constructing a DisableLegacyFeaturesSetting resource.
type DisableLegacyFeaturesSettingArgs struct {
	// block with following attributes:
	DisableLegacyFeatures DisableLegacyFeaturesSettingDisableLegacyFeaturesInput
	Etag                  pulumi.StringPtrInput
	SettingName           pulumi.StringPtrInput
}

func (DisableLegacyFeaturesSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*disableLegacyFeaturesSettingArgs)(nil)).Elem()
}

type DisableLegacyFeaturesSettingInput interface {
	pulumi.Input

	ToDisableLegacyFeaturesSettingOutput() DisableLegacyFeaturesSettingOutput
	ToDisableLegacyFeaturesSettingOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingOutput
}

func (*DisableLegacyFeaturesSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (i *DisableLegacyFeaturesSetting) ToDisableLegacyFeaturesSettingOutput() DisableLegacyFeaturesSettingOutput {
	return i.ToDisableLegacyFeaturesSettingOutputWithContext(context.Background())
}

func (i *DisableLegacyFeaturesSetting) ToDisableLegacyFeaturesSettingOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisableLegacyFeaturesSettingOutput)
}

// DisableLegacyFeaturesSettingArrayInput is an input type that accepts DisableLegacyFeaturesSettingArray and DisableLegacyFeaturesSettingArrayOutput values.
// You can construct a concrete instance of `DisableLegacyFeaturesSettingArrayInput` via:
//
//	DisableLegacyFeaturesSettingArray{ DisableLegacyFeaturesSettingArgs{...} }
type DisableLegacyFeaturesSettingArrayInput interface {
	pulumi.Input

	ToDisableLegacyFeaturesSettingArrayOutput() DisableLegacyFeaturesSettingArrayOutput
	ToDisableLegacyFeaturesSettingArrayOutputWithContext(context.Context) DisableLegacyFeaturesSettingArrayOutput
}

type DisableLegacyFeaturesSettingArray []DisableLegacyFeaturesSettingInput

func (DisableLegacyFeaturesSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (i DisableLegacyFeaturesSettingArray) ToDisableLegacyFeaturesSettingArrayOutput() DisableLegacyFeaturesSettingArrayOutput {
	return i.ToDisableLegacyFeaturesSettingArrayOutputWithContext(context.Background())
}

func (i DisableLegacyFeaturesSettingArray) ToDisableLegacyFeaturesSettingArrayOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisableLegacyFeaturesSettingArrayOutput)
}

// DisableLegacyFeaturesSettingMapInput is an input type that accepts DisableLegacyFeaturesSettingMap and DisableLegacyFeaturesSettingMapOutput values.
// You can construct a concrete instance of `DisableLegacyFeaturesSettingMapInput` via:
//
//	DisableLegacyFeaturesSettingMap{ "key": DisableLegacyFeaturesSettingArgs{...} }
type DisableLegacyFeaturesSettingMapInput interface {
	pulumi.Input

	ToDisableLegacyFeaturesSettingMapOutput() DisableLegacyFeaturesSettingMapOutput
	ToDisableLegacyFeaturesSettingMapOutputWithContext(context.Context) DisableLegacyFeaturesSettingMapOutput
}

type DisableLegacyFeaturesSettingMap map[string]DisableLegacyFeaturesSettingInput

func (DisableLegacyFeaturesSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (i DisableLegacyFeaturesSettingMap) ToDisableLegacyFeaturesSettingMapOutput() DisableLegacyFeaturesSettingMapOutput {
	return i.ToDisableLegacyFeaturesSettingMapOutputWithContext(context.Background())
}

func (i DisableLegacyFeaturesSettingMap) ToDisableLegacyFeaturesSettingMapOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisableLegacyFeaturesSettingMapOutput)
}

type DisableLegacyFeaturesSettingOutput struct{ *pulumi.OutputState }

func (DisableLegacyFeaturesSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (o DisableLegacyFeaturesSettingOutput) ToDisableLegacyFeaturesSettingOutput() DisableLegacyFeaturesSettingOutput {
	return o
}

func (o DisableLegacyFeaturesSettingOutput) ToDisableLegacyFeaturesSettingOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingOutput {
	return o
}

// block with following attributes:
func (o DisableLegacyFeaturesSettingOutput) DisableLegacyFeatures() DisableLegacyFeaturesSettingDisableLegacyFeaturesOutput {
	return o.ApplyT(func(v *DisableLegacyFeaturesSetting) DisableLegacyFeaturesSettingDisableLegacyFeaturesOutput {
		return v.DisableLegacyFeatures
	}).(DisableLegacyFeaturesSettingDisableLegacyFeaturesOutput)
}

func (o DisableLegacyFeaturesSettingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DisableLegacyFeaturesSetting) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DisableLegacyFeaturesSettingOutput) SettingName() pulumi.StringOutput {
	return o.ApplyT(func(v *DisableLegacyFeaturesSetting) pulumi.StringOutput { return v.SettingName }).(pulumi.StringOutput)
}

type DisableLegacyFeaturesSettingArrayOutput struct{ *pulumi.OutputState }

func (DisableLegacyFeaturesSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (o DisableLegacyFeaturesSettingArrayOutput) ToDisableLegacyFeaturesSettingArrayOutput() DisableLegacyFeaturesSettingArrayOutput {
	return o
}

func (o DisableLegacyFeaturesSettingArrayOutput) ToDisableLegacyFeaturesSettingArrayOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingArrayOutput {
	return o
}

func (o DisableLegacyFeaturesSettingArrayOutput) Index(i pulumi.IntInput) DisableLegacyFeaturesSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DisableLegacyFeaturesSetting {
		return vs[0].([]*DisableLegacyFeaturesSetting)[vs[1].(int)]
	}).(DisableLegacyFeaturesSettingOutput)
}

type DisableLegacyFeaturesSettingMapOutput struct{ *pulumi.OutputState }

func (DisableLegacyFeaturesSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DisableLegacyFeaturesSetting)(nil)).Elem()
}

func (o DisableLegacyFeaturesSettingMapOutput) ToDisableLegacyFeaturesSettingMapOutput() DisableLegacyFeaturesSettingMapOutput {
	return o
}

func (o DisableLegacyFeaturesSettingMapOutput) ToDisableLegacyFeaturesSettingMapOutputWithContext(ctx context.Context) DisableLegacyFeaturesSettingMapOutput {
	return o
}

func (o DisableLegacyFeaturesSettingMapOutput) MapIndex(k pulumi.StringInput) DisableLegacyFeaturesSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DisableLegacyFeaturesSetting {
		return vs[0].(map[string]*DisableLegacyFeaturesSetting)[vs[1].(string)]
	}).(DisableLegacyFeaturesSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DisableLegacyFeaturesSettingInput)(nil)).Elem(), &DisableLegacyFeaturesSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisableLegacyFeaturesSettingArrayInput)(nil)).Elem(), DisableLegacyFeaturesSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisableLegacyFeaturesSettingMapInput)(nil)).Elem(), DisableLegacyFeaturesSettingMap{})
	pulumi.RegisterOutputType(DisableLegacyFeaturesSettingOutput{})
	pulumi.RegisterOutputType(DisableLegacyFeaturesSettingArrayOutput{})
	pulumi.RegisterOutputType(DisableLegacyFeaturesSettingMapOutput{})
}
