// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MwsCustomerManagedKeys struct {
	pulumi.CustomResourceState

	AccountId            pulumi.StringOutput                       `pulumi:"accountId"`
	AwsKeyInfo           MwsCustomerManagedKeysAwsKeyInfoPtrOutput `pulumi:"awsKeyInfo"`
	CreationTime         pulumi.IntOutput                          `pulumi:"creationTime"`
	CustomerManagedKeyId pulumi.StringOutput                       `pulumi:"customerManagedKeyId"`
	GcpKeyInfo           MwsCustomerManagedKeysGcpKeyInfoPtrOutput `pulumi:"gcpKeyInfo"`
	UseCases             pulumi.StringArrayOutput                  `pulumi:"useCases"`
}

// NewMwsCustomerManagedKeys registers a new resource with the given unique name, arguments, and options.
func NewMwsCustomerManagedKeys(ctx *pulumi.Context,
	name string, args *MwsCustomerManagedKeysArgs, opts ...pulumi.ResourceOption) (*MwsCustomerManagedKeys, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.UseCases == nil {
		return nil, errors.New("invalid value for required argument 'UseCases'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MwsCustomerManagedKeys
	err := ctx.RegisterResource("databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMwsCustomerManagedKeys gets an existing MwsCustomerManagedKeys resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMwsCustomerManagedKeys(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MwsCustomerManagedKeysState, opts ...pulumi.ResourceOption) (*MwsCustomerManagedKeys, error) {
	var resource MwsCustomerManagedKeys
	err := ctx.ReadResource("databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MwsCustomerManagedKeys resources.
type mwsCustomerManagedKeysState struct {
	AccountId            *string                           `pulumi:"accountId"`
	AwsKeyInfo           *MwsCustomerManagedKeysAwsKeyInfo `pulumi:"awsKeyInfo"`
	CreationTime         *int                              `pulumi:"creationTime"`
	CustomerManagedKeyId *string                           `pulumi:"customerManagedKeyId"`
	GcpKeyInfo           *MwsCustomerManagedKeysGcpKeyInfo `pulumi:"gcpKeyInfo"`
	UseCases             []string                          `pulumi:"useCases"`
}

type MwsCustomerManagedKeysState struct {
	AccountId            pulumi.StringPtrInput
	AwsKeyInfo           MwsCustomerManagedKeysAwsKeyInfoPtrInput
	CreationTime         pulumi.IntPtrInput
	CustomerManagedKeyId pulumi.StringPtrInput
	GcpKeyInfo           MwsCustomerManagedKeysGcpKeyInfoPtrInput
	UseCases             pulumi.StringArrayInput
}

func (MwsCustomerManagedKeysState) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsCustomerManagedKeysState)(nil)).Elem()
}

type mwsCustomerManagedKeysArgs struct {
	AccountId            string                            `pulumi:"accountId"`
	AwsKeyInfo           *MwsCustomerManagedKeysAwsKeyInfo `pulumi:"awsKeyInfo"`
	CreationTime         *int                              `pulumi:"creationTime"`
	CustomerManagedKeyId *string                           `pulumi:"customerManagedKeyId"`
	GcpKeyInfo           *MwsCustomerManagedKeysGcpKeyInfo `pulumi:"gcpKeyInfo"`
	UseCases             []string                          `pulumi:"useCases"`
}

// The set of arguments for constructing a MwsCustomerManagedKeys resource.
type MwsCustomerManagedKeysArgs struct {
	AccountId            pulumi.StringInput
	AwsKeyInfo           MwsCustomerManagedKeysAwsKeyInfoPtrInput
	CreationTime         pulumi.IntPtrInput
	CustomerManagedKeyId pulumi.StringPtrInput
	GcpKeyInfo           MwsCustomerManagedKeysGcpKeyInfoPtrInput
	UseCases             pulumi.StringArrayInput
}

func (MwsCustomerManagedKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsCustomerManagedKeysArgs)(nil)).Elem()
}

type MwsCustomerManagedKeysInput interface {
	pulumi.Input

	ToMwsCustomerManagedKeysOutput() MwsCustomerManagedKeysOutput
	ToMwsCustomerManagedKeysOutputWithContext(ctx context.Context) MwsCustomerManagedKeysOutput
}

func (*MwsCustomerManagedKeys) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsCustomerManagedKeys)(nil)).Elem()
}

func (i *MwsCustomerManagedKeys) ToMwsCustomerManagedKeysOutput() MwsCustomerManagedKeysOutput {
	return i.ToMwsCustomerManagedKeysOutputWithContext(context.Background())
}

func (i *MwsCustomerManagedKeys) ToMwsCustomerManagedKeysOutputWithContext(ctx context.Context) MwsCustomerManagedKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCustomerManagedKeysOutput)
}

// MwsCustomerManagedKeysArrayInput is an input type that accepts MwsCustomerManagedKeysArray and MwsCustomerManagedKeysArrayOutput values.
// You can construct a concrete instance of `MwsCustomerManagedKeysArrayInput` via:
//
//	MwsCustomerManagedKeysArray{ MwsCustomerManagedKeysArgs{...} }
type MwsCustomerManagedKeysArrayInput interface {
	pulumi.Input

	ToMwsCustomerManagedKeysArrayOutput() MwsCustomerManagedKeysArrayOutput
	ToMwsCustomerManagedKeysArrayOutputWithContext(context.Context) MwsCustomerManagedKeysArrayOutput
}

type MwsCustomerManagedKeysArray []MwsCustomerManagedKeysInput

func (MwsCustomerManagedKeysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsCustomerManagedKeys)(nil)).Elem()
}

func (i MwsCustomerManagedKeysArray) ToMwsCustomerManagedKeysArrayOutput() MwsCustomerManagedKeysArrayOutput {
	return i.ToMwsCustomerManagedKeysArrayOutputWithContext(context.Background())
}

func (i MwsCustomerManagedKeysArray) ToMwsCustomerManagedKeysArrayOutputWithContext(ctx context.Context) MwsCustomerManagedKeysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCustomerManagedKeysArrayOutput)
}

// MwsCustomerManagedKeysMapInput is an input type that accepts MwsCustomerManagedKeysMap and MwsCustomerManagedKeysMapOutput values.
// You can construct a concrete instance of `MwsCustomerManagedKeysMapInput` via:
//
//	MwsCustomerManagedKeysMap{ "key": MwsCustomerManagedKeysArgs{...} }
type MwsCustomerManagedKeysMapInput interface {
	pulumi.Input

	ToMwsCustomerManagedKeysMapOutput() MwsCustomerManagedKeysMapOutput
	ToMwsCustomerManagedKeysMapOutputWithContext(context.Context) MwsCustomerManagedKeysMapOutput
}

type MwsCustomerManagedKeysMap map[string]MwsCustomerManagedKeysInput

func (MwsCustomerManagedKeysMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsCustomerManagedKeys)(nil)).Elem()
}

func (i MwsCustomerManagedKeysMap) ToMwsCustomerManagedKeysMapOutput() MwsCustomerManagedKeysMapOutput {
	return i.ToMwsCustomerManagedKeysMapOutputWithContext(context.Background())
}

func (i MwsCustomerManagedKeysMap) ToMwsCustomerManagedKeysMapOutputWithContext(ctx context.Context) MwsCustomerManagedKeysMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCustomerManagedKeysMapOutput)
}

type MwsCustomerManagedKeysOutput struct{ *pulumi.OutputState }

func (MwsCustomerManagedKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsCustomerManagedKeys)(nil)).Elem()
}

func (o MwsCustomerManagedKeysOutput) ToMwsCustomerManagedKeysOutput() MwsCustomerManagedKeysOutput {
	return o
}

func (o MwsCustomerManagedKeysOutput) ToMwsCustomerManagedKeysOutputWithContext(ctx context.Context) MwsCustomerManagedKeysOutput {
	return o
}

func (o MwsCustomerManagedKeysOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o MwsCustomerManagedKeysOutput) AwsKeyInfo() MwsCustomerManagedKeysAwsKeyInfoPtrOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) MwsCustomerManagedKeysAwsKeyInfoPtrOutput { return v.AwsKeyInfo }).(MwsCustomerManagedKeysAwsKeyInfoPtrOutput)
}

func (o MwsCustomerManagedKeysOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) pulumi.IntOutput { return v.CreationTime }).(pulumi.IntOutput)
}

func (o MwsCustomerManagedKeysOutput) CustomerManagedKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) pulumi.StringOutput { return v.CustomerManagedKeyId }).(pulumi.StringOutput)
}

func (o MwsCustomerManagedKeysOutput) GcpKeyInfo() MwsCustomerManagedKeysGcpKeyInfoPtrOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) MwsCustomerManagedKeysGcpKeyInfoPtrOutput { return v.GcpKeyInfo }).(MwsCustomerManagedKeysGcpKeyInfoPtrOutput)
}

func (o MwsCustomerManagedKeysOutput) UseCases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MwsCustomerManagedKeys) pulumi.StringArrayOutput { return v.UseCases }).(pulumi.StringArrayOutput)
}

type MwsCustomerManagedKeysArrayOutput struct{ *pulumi.OutputState }

func (MwsCustomerManagedKeysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsCustomerManagedKeys)(nil)).Elem()
}

func (o MwsCustomerManagedKeysArrayOutput) ToMwsCustomerManagedKeysArrayOutput() MwsCustomerManagedKeysArrayOutput {
	return o
}

func (o MwsCustomerManagedKeysArrayOutput) ToMwsCustomerManagedKeysArrayOutputWithContext(ctx context.Context) MwsCustomerManagedKeysArrayOutput {
	return o
}

func (o MwsCustomerManagedKeysArrayOutput) Index(i pulumi.IntInput) MwsCustomerManagedKeysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MwsCustomerManagedKeys {
		return vs[0].([]*MwsCustomerManagedKeys)[vs[1].(int)]
	}).(MwsCustomerManagedKeysOutput)
}

type MwsCustomerManagedKeysMapOutput struct{ *pulumi.OutputState }

func (MwsCustomerManagedKeysMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsCustomerManagedKeys)(nil)).Elem()
}

func (o MwsCustomerManagedKeysMapOutput) ToMwsCustomerManagedKeysMapOutput() MwsCustomerManagedKeysMapOutput {
	return o
}

func (o MwsCustomerManagedKeysMapOutput) ToMwsCustomerManagedKeysMapOutputWithContext(ctx context.Context) MwsCustomerManagedKeysMapOutput {
	return o
}

func (o MwsCustomerManagedKeysMapOutput) MapIndex(k pulumi.StringInput) MwsCustomerManagedKeysOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MwsCustomerManagedKeys {
		return vs[0].(map[string]*MwsCustomerManagedKeys)[vs[1].(string)]
	}).(MwsCustomerManagedKeysOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCustomerManagedKeysInput)(nil)).Elem(), &MwsCustomerManagedKeys{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCustomerManagedKeysArrayInput)(nil)).Elem(), MwsCustomerManagedKeysArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCustomerManagedKeysMapInput)(nil)).Elem(), MwsCustomerManagedKeysMap{})
	pulumi.RegisterOutputType(MwsCustomerManagedKeysOutput{})
	pulumi.RegisterOutputType(MwsCustomerManagedKeysArrayOutput{})
	pulumi.RegisterOutputType(MwsCustomerManagedKeysMapOutput{})
}
