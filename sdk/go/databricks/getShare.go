// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupShare(ctx *pulumi.Context, args *LookupShareArgs, opts ...pulumi.InvokeOption) (*LookupShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupShareResult
	err := ctx.Invoke("databricks:index/getShare:getShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShare.
type LookupShareArgs struct {
	CreatedAt *int             `pulumi:"createdAt"`
	CreatedBy *string          `pulumi:"createdBy"`
	Name      *string          `pulumi:"name"`
	Objects   []GetShareObject `pulumi:"objects"`
}

// A collection of values returned by getShare.
type LookupShareResult struct {
	CreatedAt int    `pulumi:"createdAt"`
	CreatedBy string `pulumi:"createdBy"`
	// The provider-assigned unique ID for this managed resource.
	Id      string           `pulumi:"id"`
	Name    string           `pulumi:"name"`
	Objects []GetShareObject `pulumi:"objects"`
}

func LookupShareOutput(ctx *pulumi.Context, args LookupShareOutputArgs, opts ...pulumi.InvokeOption) LookupShareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupShareResultOutput, error) {
			args := v.(LookupShareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("databricks:index/getShare:getShare", args, LookupShareResultOutput{}, options).(LookupShareResultOutput), nil
		}).(LookupShareResultOutput)
}

// A collection of arguments for invoking getShare.
type LookupShareOutputArgs struct {
	CreatedAt pulumi.IntPtrInput       `pulumi:"createdAt"`
	CreatedBy pulumi.StringPtrInput    `pulumi:"createdBy"`
	Name      pulumi.StringPtrInput    `pulumi:"name"`
	Objects   GetShareObjectArrayInput `pulumi:"objects"`
}

func (LookupShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareArgs)(nil)).Elem()
}

// A collection of values returned by getShare.
type LookupShareResultOutput struct{ *pulumi.OutputState }

func (LookupShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareResult)(nil)).Elem()
}

func (o LookupShareResultOutput) ToLookupShareResultOutput() LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) ToLookupShareResultOutputWithContext(ctx context.Context) LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShareResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o LookupShareResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupShareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Objects() GetShareObjectArrayOutput {
	return o.ApplyT(func(v LookupShareResult) []GetShareObject { return v.Objects }).(GetShareObjectArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupShareResultOutput{})
}
