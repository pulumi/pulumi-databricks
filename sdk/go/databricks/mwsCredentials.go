// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
//	"github.com/pulumi/pulumi-databricks/sdk/go/databricks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			databricksAccountId := cfg.RequireObject("databricksAccountId")
//			thisAwsAssumeRolePolicy, err := databricks.GetAwsAssumeRolePolicy(ctx, &databricks.GetAwsAssumeRolePolicyArgs{
//				ExternalId: databricksAccountId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			crossAccountRole, err := iam.NewRole(ctx, "crossAccountRole", &iam.RoleArgs{
//				AssumeRolePolicy: *pulumi.String(thisAwsAssumeRolePolicy.Json),
//				Tags:             pulumi.Any(_var.Tags),
//			})
//			if err != nil {
//				return err
//			}
//			thisAwsCrossAccountPolicy, err := databricks.GetAwsCrossAccountPolicy(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRolePolicy(ctx, "thisRolePolicy", &iam.RolePolicyArgs{
//				Role:   crossAccountRole.ID(),
//				Policy: *pulumi.String(thisAwsCrossAccountPolicy.Json),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewMwsCredentials(ctx, "thisMwsCredentials", &databricks.MwsCredentialsArgs{
//				AccountId:       pulumi.Any(databricksAccountId),
//				CredentialsName: pulumi.String(fmt.Sprintf("%v-creds", local.Prefix)),
//				RoleArn:         crossAccountRole.Arn,
//			}, pulumi.Provider(databricks.Mws))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Related Resources
//
// The following resources are used in the same context:
//
// * Provisioning Databricks on AWS guide.
// * MwsCustomerManagedKeys to configure KMS keys for new workspaces within AWS.
// * MwsLogDelivery to configure delivery of [billable usage logs](https://docs.databricks.com/administration-guide/account-settings/billable-usage-delivery.html) and [audit logs](https://docs.databricks.com/administration-guide/account-settings/audit-logs.html).
// * MwsNetworks to [configure VPC](https://docs.databricks.com/administration-guide/cloud-configurations/aws/customer-managed-vpc.html) & subnets for new workspaces within AWS.
// * MwsStorageConfigurations to configure root bucket new workspaces within AWS.
// * MwsWorkspaces to set up [workspaces in E2 architecture on AWS](https://docs.databricks.com/getting-started/overview.html#e2-architecture-1).
//
// ## Import
//
// # This resource can be imported by the combination of its identifier and the account idbash
//
// ```sh
//
//	$ pulumi import databricks:index/mwsCredentials:MwsCredentials this <account_id>/<credentials_id>
//
// ```
type MwsCredentials struct {
	pulumi.CustomResourceState

	// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// (Integer) time of credentials registration
	CreationTime pulumi.IntOutput `pulumi:"creationTime"`
	// (String) identifier of credentials
	CredentialsId pulumi.StringOutput `pulumi:"credentialsId"`
	// name of credentials to register
	CredentialsName pulumi.StringOutput `pulumi:"credentialsName"`
	ExternalId      pulumi.StringOutput `pulumi:"externalId"`
	// ARN of cross-account role
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
}

// NewMwsCredentials registers a new resource with the given unique name, arguments, and options.
func NewMwsCredentials(ctx *pulumi.Context,
	name string, args *MwsCredentialsArgs, opts ...pulumi.ResourceOption) (*MwsCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialsName == nil {
		return nil, errors.New("invalid value for required argument 'CredentialsName'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MwsCredentials
	err := ctx.RegisterResource("databricks:index/mwsCredentials:MwsCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMwsCredentials gets an existing MwsCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMwsCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MwsCredentialsState, opts ...pulumi.ResourceOption) (*MwsCredentials, error) {
	var resource MwsCredentials
	err := ctx.ReadResource("databricks:index/mwsCredentials:MwsCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MwsCredentials resources.
type mwsCredentialsState struct {
	// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
	AccountId *string `pulumi:"accountId"`
	// (Integer) time of credentials registration
	CreationTime *int `pulumi:"creationTime"`
	// (String) identifier of credentials
	CredentialsId *string `pulumi:"credentialsId"`
	// name of credentials to register
	CredentialsName *string `pulumi:"credentialsName"`
	ExternalId      *string `pulumi:"externalId"`
	// ARN of cross-account role
	RoleArn *string `pulumi:"roleArn"`
}

type MwsCredentialsState struct {
	// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
	AccountId pulumi.StringPtrInput
	// (Integer) time of credentials registration
	CreationTime pulumi.IntPtrInput
	// (String) identifier of credentials
	CredentialsId pulumi.StringPtrInput
	// name of credentials to register
	CredentialsName pulumi.StringPtrInput
	ExternalId      pulumi.StringPtrInput
	// ARN of cross-account role
	RoleArn pulumi.StringPtrInput
}

func (MwsCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsCredentialsState)(nil)).Elem()
}

type mwsCredentialsArgs struct {
	// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
	AccountId *string `pulumi:"accountId"`
	// (Integer) time of credentials registration
	CreationTime *int `pulumi:"creationTime"`
	// (String) identifier of credentials
	CredentialsId *string `pulumi:"credentialsId"`
	// name of credentials to register
	CredentialsName string  `pulumi:"credentialsName"`
	ExternalId      *string `pulumi:"externalId"`
	// ARN of cross-account role
	RoleArn string `pulumi:"roleArn"`
}

// The set of arguments for constructing a MwsCredentials resource.
type MwsCredentialsArgs struct {
	// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
	AccountId pulumi.StringPtrInput
	// (Integer) time of credentials registration
	CreationTime pulumi.IntPtrInput
	// (String) identifier of credentials
	CredentialsId pulumi.StringPtrInput
	// name of credentials to register
	CredentialsName pulumi.StringInput
	ExternalId      pulumi.StringPtrInput
	// ARN of cross-account role
	RoleArn pulumi.StringInput
}

func (MwsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mwsCredentialsArgs)(nil)).Elem()
}

type MwsCredentialsInput interface {
	pulumi.Input

	ToMwsCredentialsOutput() MwsCredentialsOutput
	ToMwsCredentialsOutputWithContext(ctx context.Context) MwsCredentialsOutput
}

func (*MwsCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsCredentials)(nil)).Elem()
}

func (i *MwsCredentials) ToMwsCredentialsOutput() MwsCredentialsOutput {
	return i.ToMwsCredentialsOutputWithContext(context.Background())
}

func (i *MwsCredentials) ToMwsCredentialsOutputWithContext(ctx context.Context) MwsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCredentialsOutput)
}

// MwsCredentialsArrayInput is an input type that accepts MwsCredentialsArray and MwsCredentialsArrayOutput values.
// You can construct a concrete instance of `MwsCredentialsArrayInput` via:
//
//	MwsCredentialsArray{ MwsCredentialsArgs{...} }
type MwsCredentialsArrayInput interface {
	pulumi.Input

	ToMwsCredentialsArrayOutput() MwsCredentialsArrayOutput
	ToMwsCredentialsArrayOutputWithContext(context.Context) MwsCredentialsArrayOutput
}

type MwsCredentialsArray []MwsCredentialsInput

func (MwsCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsCredentials)(nil)).Elem()
}

func (i MwsCredentialsArray) ToMwsCredentialsArrayOutput() MwsCredentialsArrayOutput {
	return i.ToMwsCredentialsArrayOutputWithContext(context.Background())
}

func (i MwsCredentialsArray) ToMwsCredentialsArrayOutputWithContext(ctx context.Context) MwsCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCredentialsArrayOutput)
}

// MwsCredentialsMapInput is an input type that accepts MwsCredentialsMap and MwsCredentialsMapOutput values.
// You can construct a concrete instance of `MwsCredentialsMapInput` via:
//
//	MwsCredentialsMap{ "key": MwsCredentialsArgs{...} }
type MwsCredentialsMapInput interface {
	pulumi.Input

	ToMwsCredentialsMapOutput() MwsCredentialsMapOutput
	ToMwsCredentialsMapOutputWithContext(context.Context) MwsCredentialsMapOutput
}

type MwsCredentialsMap map[string]MwsCredentialsInput

func (MwsCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsCredentials)(nil)).Elem()
}

func (i MwsCredentialsMap) ToMwsCredentialsMapOutput() MwsCredentialsMapOutput {
	return i.ToMwsCredentialsMapOutputWithContext(context.Background())
}

func (i MwsCredentialsMap) ToMwsCredentialsMapOutputWithContext(ctx context.Context) MwsCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MwsCredentialsMapOutput)
}

type MwsCredentialsOutput struct{ *pulumi.OutputState }

func (MwsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MwsCredentials)(nil)).Elem()
}

func (o MwsCredentialsOutput) ToMwsCredentialsOutput() MwsCredentialsOutput {
	return o
}

func (o MwsCredentialsOutput) ToMwsCredentialsOutputWithContext(ctx context.Context) MwsCredentialsOutput {
	return o
}

// Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
func (o MwsCredentialsOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Integer) time of credentials registration
func (o MwsCredentialsOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.IntOutput { return v.CreationTime }).(pulumi.IntOutput)
}

// (String) identifier of credentials
func (o MwsCredentialsOutput) CredentialsId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.StringOutput { return v.CredentialsId }).(pulumi.StringOutput)
}

// name of credentials to register
func (o MwsCredentialsOutput) CredentialsName() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.StringOutput { return v.CredentialsName }).(pulumi.StringOutput)
}

func (o MwsCredentialsOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// ARN of cross-account role
func (o MwsCredentialsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MwsCredentials) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

type MwsCredentialsArrayOutput struct{ *pulumi.OutputState }

func (MwsCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MwsCredentials)(nil)).Elem()
}

func (o MwsCredentialsArrayOutput) ToMwsCredentialsArrayOutput() MwsCredentialsArrayOutput {
	return o
}

func (o MwsCredentialsArrayOutput) ToMwsCredentialsArrayOutputWithContext(ctx context.Context) MwsCredentialsArrayOutput {
	return o
}

func (o MwsCredentialsArrayOutput) Index(i pulumi.IntInput) MwsCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MwsCredentials {
		return vs[0].([]*MwsCredentials)[vs[1].(int)]
	}).(MwsCredentialsOutput)
}

type MwsCredentialsMapOutput struct{ *pulumi.OutputState }

func (MwsCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MwsCredentials)(nil)).Elem()
}

func (o MwsCredentialsMapOutput) ToMwsCredentialsMapOutput() MwsCredentialsMapOutput {
	return o
}

func (o MwsCredentialsMapOutput) ToMwsCredentialsMapOutputWithContext(ctx context.Context) MwsCredentialsMapOutput {
	return o
}

func (o MwsCredentialsMapOutput) MapIndex(k pulumi.StringInput) MwsCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MwsCredentials {
		return vs[0].(map[string]*MwsCredentials)[vs[1].(string)]
	}).(MwsCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCredentialsInput)(nil)).Elem(), &MwsCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCredentialsArrayInput)(nil)).Elem(), MwsCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MwsCredentialsMapInput)(nil)).Elem(), MwsCredentialsMap{})
	pulumi.RegisterOutputType(MwsCredentialsOutput{})
	pulumi.RegisterOutputType(MwsCredentialsArrayOutput{})
	pulumi.RegisterOutputType(MwsCredentialsMapOutput{})
}
