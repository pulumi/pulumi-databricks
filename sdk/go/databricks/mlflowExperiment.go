// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MlflowExperiment struct {
	pulumi.CustomResourceState

	ArtifactLocation pulumi.StringPtrOutput `pulumi:"artifactLocation"`
	CreationTime     pulumi.IntOutput       `pulumi:"creationTime"`
	Description      pulumi.StringPtrOutput `pulumi:"description"`
	ExperimentId     pulumi.StringOutput    `pulumi:"experimentId"`
	LastUpdateTime   pulumi.IntOutput       `pulumi:"lastUpdateTime"`
	LifecycleStage   pulumi.StringOutput    `pulumi:"lifecycleStage"`
	Name             pulumi.StringOutput    `pulumi:"name"`
}

// NewMlflowExperiment registers a new resource with the given unique name, arguments, and options.
func NewMlflowExperiment(ctx *pulumi.Context,
	name string, args *MlflowExperimentArgs, opts ...pulumi.ResourceOption) (*MlflowExperiment, error) {
	if args == nil {
		args = &MlflowExperimentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MlflowExperiment
	err := ctx.RegisterResource("databricks:index/mlflowExperiment:MlflowExperiment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMlflowExperiment gets an existing MlflowExperiment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMlflowExperiment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MlflowExperimentState, opts ...pulumi.ResourceOption) (*MlflowExperiment, error) {
	var resource MlflowExperiment
	err := ctx.ReadResource("databricks:index/mlflowExperiment:MlflowExperiment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MlflowExperiment resources.
type mlflowExperimentState struct {
	ArtifactLocation *string `pulumi:"artifactLocation"`
	CreationTime     *int    `pulumi:"creationTime"`
	Description      *string `pulumi:"description"`
	ExperimentId     *string `pulumi:"experimentId"`
	LastUpdateTime   *int    `pulumi:"lastUpdateTime"`
	LifecycleStage   *string `pulumi:"lifecycleStage"`
	Name             *string `pulumi:"name"`
}

type MlflowExperimentState struct {
	ArtifactLocation pulumi.StringPtrInput
	CreationTime     pulumi.IntPtrInput
	Description      pulumi.StringPtrInput
	ExperimentId     pulumi.StringPtrInput
	LastUpdateTime   pulumi.IntPtrInput
	LifecycleStage   pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
}

func (MlflowExperimentState) ElementType() reflect.Type {
	return reflect.TypeOf((*mlflowExperimentState)(nil)).Elem()
}

type mlflowExperimentArgs struct {
	ArtifactLocation *string `pulumi:"artifactLocation"`
	CreationTime     *int    `pulumi:"creationTime"`
	Description      *string `pulumi:"description"`
	ExperimentId     *string `pulumi:"experimentId"`
	LastUpdateTime   *int    `pulumi:"lastUpdateTime"`
	LifecycleStage   *string `pulumi:"lifecycleStage"`
	Name             *string `pulumi:"name"`
}

// The set of arguments for constructing a MlflowExperiment resource.
type MlflowExperimentArgs struct {
	ArtifactLocation pulumi.StringPtrInput
	CreationTime     pulumi.IntPtrInput
	Description      pulumi.StringPtrInput
	ExperimentId     pulumi.StringPtrInput
	LastUpdateTime   pulumi.IntPtrInput
	LifecycleStage   pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
}

func (MlflowExperimentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mlflowExperimentArgs)(nil)).Elem()
}

type MlflowExperimentInput interface {
	pulumi.Input

	ToMlflowExperimentOutput() MlflowExperimentOutput
	ToMlflowExperimentOutputWithContext(ctx context.Context) MlflowExperimentOutput
}

func (*MlflowExperiment) ElementType() reflect.Type {
	return reflect.TypeOf((**MlflowExperiment)(nil)).Elem()
}

func (i *MlflowExperiment) ToMlflowExperimentOutput() MlflowExperimentOutput {
	return i.ToMlflowExperimentOutputWithContext(context.Background())
}

func (i *MlflowExperiment) ToMlflowExperimentOutputWithContext(ctx context.Context) MlflowExperimentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowExperimentOutput)
}

// MlflowExperimentArrayInput is an input type that accepts MlflowExperimentArray and MlflowExperimentArrayOutput values.
// You can construct a concrete instance of `MlflowExperimentArrayInput` via:
//
//	MlflowExperimentArray{ MlflowExperimentArgs{...} }
type MlflowExperimentArrayInput interface {
	pulumi.Input

	ToMlflowExperimentArrayOutput() MlflowExperimentArrayOutput
	ToMlflowExperimentArrayOutputWithContext(context.Context) MlflowExperimentArrayOutput
}

type MlflowExperimentArray []MlflowExperimentInput

func (MlflowExperimentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlflowExperiment)(nil)).Elem()
}

func (i MlflowExperimentArray) ToMlflowExperimentArrayOutput() MlflowExperimentArrayOutput {
	return i.ToMlflowExperimentArrayOutputWithContext(context.Background())
}

func (i MlflowExperimentArray) ToMlflowExperimentArrayOutputWithContext(ctx context.Context) MlflowExperimentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowExperimentArrayOutput)
}

// MlflowExperimentMapInput is an input type that accepts MlflowExperimentMap and MlflowExperimentMapOutput values.
// You can construct a concrete instance of `MlflowExperimentMapInput` via:
//
//	MlflowExperimentMap{ "key": MlflowExperimentArgs{...} }
type MlflowExperimentMapInput interface {
	pulumi.Input

	ToMlflowExperimentMapOutput() MlflowExperimentMapOutput
	ToMlflowExperimentMapOutputWithContext(context.Context) MlflowExperimentMapOutput
}

type MlflowExperimentMap map[string]MlflowExperimentInput

func (MlflowExperimentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlflowExperiment)(nil)).Elem()
}

func (i MlflowExperimentMap) ToMlflowExperimentMapOutput() MlflowExperimentMapOutput {
	return i.ToMlflowExperimentMapOutputWithContext(context.Background())
}

func (i MlflowExperimentMap) ToMlflowExperimentMapOutputWithContext(ctx context.Context) MlflowExperimentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlflowExperimentMapOutput)
}

type MlflowExperimentOutput struct{ *pulumi.OutputState }

func (MlflowExperimentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MlflowExperiment)(nil)).Elem()
}

func (o MlflowExperimentOutput) ToMlflowExperimentOutput() MlflowExperimentOutput {
	return o
}

func (o MlflowExperimentOutput) ToMlflowExperimentOutputWithContext(ctx context.Context) MlflowExperimentOutput {
	return o
}

func (o MlflowExperimentOutput) ArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.StringPtrOutput { return v.ArtifactLocation }).(pulumi.StringPtrOutput)
}

func (o MlflowExperimentOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.IntOutput { return v.CreationTime }).(pulumi.IntOutput)
}

func (o MlflowExperimentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MlflowExperimentOutput) ExperimentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.StringOutput { return v.ExperimentId }).(pulumi.StringOutput)
}

func (o MlflowExperimentOutput) LastUpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.IntOutput { return v.LastUpdateTime }).(pulumi.IntOutput)
}

func (o MlflowExperimentOutput) LifecycleStage() pulumi.StringOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.StringOutput { return v.LifecycleStage }).(pulumi.StringOutput)
}

func (o MlflowExperimentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MlflowExperiment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type MlflowExperimentArrayOutput struct{ *pulumi.OutputState }

func (MlflowExperimentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlflowExperiment)(nil)).Elem()
}

func (o MlflowExperimentArrayOutput) ToMlflowExperimentArrayOutput() MlflowExperimentArrayOutput {
	return o
}

func (o MlflowExperimentArrayOutput) ToMlflowExperimentArrayOutputWithContext(ctx context.Context) MlflowExperimentArrayOutput {
	return o
}

func (o MlflowExperimentArrayOutput) Index(i pulumi.IntInput) MlflowExperimentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MlflowExperiment {
		return vs[0].([]*MlflowExperiment)[vs[1].(int)]
	}).(MlflowExperimentOutput)
}

type MlflowExperimentMapOutput struct{ *pulumi.OutputState }

func (MlflowExperimentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlflowExperiment)(nil)).Elem()
}

func (o MlflowExperimentMapOutput) ToMlflowExperimentMapOutput() MlflowExperimentMapOutput {
	return o
}

func (o MlflowExperimentMapOutput) ToMlflowExperimentMapOutputWithContext(ctx context.Context) MlflowExperimentMapOutput {
	return o
}

func (o MlflowExperimentMapOutput) MapIndex(k pulumi.StringInput) MlflowExperimentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MlflowExperiment {
		return vs[0].(map[string]*MlflowExperiment)[vs[1].(string)]
	}).(MlflowExperimentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowExperimentInput)(nil)).Elem(), &MlflowExperiment{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowExperimentArrayInput)(nil)).Elem(), MlflowExperimentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlflowExperimentMapInput)(nil)).Elem(), MlflowExperimentMap{})
	pulumi.RegisterOutputType(MlflowExperimentOutput{})
	pulumi.RegisterOutputType(MlflowExperimentArrayOutput{})
	pulumi.RegisterOutputType(MlflowExperimentMapOutput{})
}
