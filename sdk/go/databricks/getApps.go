// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetApps(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetAppsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppsResult
	err := ctx.Invoke("databricks:index/getApps:getApps", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getApps.
type GetAppsResult struct {
	Apps []GetAppsApp `pulumi:"apps"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetAppsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetAppsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetAppsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("databricks:index/getApps:getApps", nil, GetAppsResultOutput{}, options).(GetAppsResultOutput), nil
	}).(GetAppsResultOutput)
}

// A collection of values returned by getApps.
type GetAppsResultOutput struct{ *pulumi.OutputState }

func (GetAppsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsResult)(nil)).Elem()
}

func (o GetAppsResultOutput) ToGetAppsResultOutput() GetAppsResultOutput {
	return o
}

func (o GetAppsResultOutput) ToGetAppsResultOutputWithContext(ctx context.Context) GetAppsResultOutput {
	return o
}

func (o GetAppsResultOutput) Apps() GetAppsAppArrayOutput {
	return o.ApplyT(func(v GetAppsResult) []GetAppsApp { return v.Apps }).(GetAppsAppArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppsResultOutput{})
}
