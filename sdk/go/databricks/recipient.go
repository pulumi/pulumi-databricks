// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-databricks/sdk/go/databricks/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Recipient struct {
	pulumi.CustomResourceState

	Activated                      pulumi.BoolOutput                   `pulumi:"activated"`
	ActivationUrl                  pulumi.StringOutput                 `pulumi:"activationUrl"`
	AuthenticationType             pulumi.StringOutput                 `pulumi:"authenticationType"`
	Cloud                          pulumi.StringOutput                 `pulumi:"cloud"`
	Comment                        pulumi.StringPtrOutput              `pulumi:"comment"`
	CreatedAt                      pulumi.IntOutput                    `pulumi:"createdAt"`
	CreatedBy                      pulumi.StringOutput                 `pulumi:"createdBy"`
	DataRecipientGlobalMetastoreId pulumi.StringPtrOutput              `pulumi:"dataRecipientGlobalMetastoreId"`
	IpAccessList                   RecipientIpAccessListPtrOutput      `pulumi:"ipAccessList"`
	MetastoreId                    pulumi.StringOutput                 `pulumi:"metastoreId"`
	Name                           pulumi.StringOutput                 `pulumi:"name"`
	Owner                          pulumi.StringPtrOutput              `pulumi:"owner"`
	PropertiesKvpairs              RecipientPropertiesKvpairsPtrOutput `pulumi:"propertiesKvpairs"`
	Region                         pulumi.StringOutput                 `pulumi:"region"`
	SharingCode                    pulumi.StringPtrOutput              `pulumi:"sharingCode"`
	Tokens                         RecipientTokenArrayOutput           `pulumi:"tokens"`
	UpdatedAt                      pulumi.IntOutput                    `pulumi:"updatedAt"`
	UpdatedBy                      pulumi.StringOutput                 `pulumi:"updatedBy"`
}

// NewRecipient registers a new resource with the given unique name, arguments, and options.
func NewRecipient(ctx *pulumi.Context,
	name string, args *RecipientArgs, opts ...pulumi.ResourceOption) (*Recipient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationType'")
	}
	if args.SharingCode != nil {
		args.SharingCode = pulumi.ToSecret(args.SharingCode).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sharingCode",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Recipient
	err := ctx.RegisterResource("databricks:index/recipient:Recipient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecipient gets an existing Recipient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecipient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecipientState, opts ...pulumi.ResourceOption) (*Recipient, error) {
	var resource Recipient
	err := ctx.ReadResource("databricks:index/recipient:Recipient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Recipient resources.
type recipientState struct {
	Activated                      *bool                       `pulumi:"activated"`
	ActivationUrl                  *string                     `pulumi:"activationUrl"`
	AuthenticationType             *string                     `pulumi:"authenticationType"`
	Cloud                          *string                     `pulumi:"cloud"`
	Comment                        *string                     `pulumi:"comment"`
	CreatedAt                      *int                        `pulumi:"createdAt"`
	CreatedBy                      *string                     `pulumi:"createdBy"`
	DataRecipientGlobalMetastoreId *string                     `pulumi:"dataRecipientGlobalMetastoreId"`
	IpAccessList                   *RecipientIpAccessList      `pulumi:"ipAccessList"`
	MetastoreId                    *string                     `pulumi:"metastoreId"`
	Name                           *string                     `pulumi:"name"`
	Owner                          *string                     `pulumi:"owner"`
	PropertiesKvpairs              *RecipientPropertiesKvpairs `pulumi:"propertiesKvpairs"`
	Region                         *string                     `pulumi:"region"`
	SharingCode                    *string                     `pulumi:"sharingCode"`
	Tokens                         []RecipientToken            `pulumi:"tokens"`
	UpdatedAt                      *int                        `pulumi:"updatedAt"`
	UpdatedBy                      *string                     `pulumi:"updatedBy"`
}

type RecipientState struct {
	Activated                      pulumi.BoolPtrInput
	ActivationUrl                  pulumi.StringPtrInput
	AuthenticationType             pulumi.StringPtrInput
	Cloud                          pulumi.StringPtrInput
	Comment                        pulumi.StringPtrInput
	CreatedAt                      pulumi.IntPtrInput
	CreatedBy                      pulumi.StringPtrInput
	DataRecipientGlobalMetastoreId pulumi.StringPtrInput
	IpAccessList                   RecipientIpAccessListPtrInput
	MetastoreId                    pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Owner                          pulumi.StringPtrInput
	PropertiesKvpairs              RecipientPropertiesKvpairsPtrInput
	Region                         pulumi.StringPtrInput
	SharingCode                    pulumi.StringPtrInput
	Tokens                         RecipientTokenArrayInput
	UpdatedAt                      pulumi.IntPtrInput
	UpdatedBy                      pulumi.StringPtrInput
}

func (RecipientState) ElementType() reflect.Type {
	return reflect.TypeOf((*recipientState)(nil)).Elem()
}

type recipientArgs struct {
	AuthenticationType             string                      `pulumi:"authenticationType"`
	Comment                        *string                     `pulumi:"comment"`
	DataRecipientGlobalMetastoreId *string                     `pulumi:"dataRecipientGlobalMetastoreId"`
	IpAccessList                   *RecipientIpAccessList      `pulumi:"ipAccessList"`
	Name                           *string                     `pulumi:"name"`
	Owner                          *string                     `pulumi:"owner"`
	PropertiesKvpairs              *RecipientPropertiesKvpairs `pulumi:"propertiesKvpairs"`
	SharingCode                    *string                     `pulumi:"sharingCode"`
	Tokens                         []RecipientToken            `pulumi:"tokens"`
}

// The set of arguments for constructing a Recipient resource.
type RecipientArgs struct {
	AuthenticationType             pulumi.StringInput
	Comment                        pulumi.StringPtrInput
	DataRecipientGlobalMetastoreId pulumi.StringPtrInput
	IpAccessList                   RecipientIpAccessListPtrInput
	Name                           pulumi.StringPtrInput
	Owner                          pulumi.StringPtrInput
	PropertiesKvpairs              RecipientPropertiesKvpairsPtrInput
	SharingCode                    pulumi.StringPtrInput
	Tokens                         RecipientTokenArrayInput
}

func (RecipientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recipientArgs)(nil)).Elem()
}

type RecipientInput interface {
	pulumi.Input

	ToRecipientOutput() RecipientOutput
	ToRecipientOutputWithContext(ctx context.Context) RecipientOutput
}

func (*Recipient) ElementType() reflect.Type {
	return reflect.TypeOf((**Recipient)(nil)).Elem()
}

func (i *Recipient) ToRecipientOutput() RecipientOutput {
	return i.ToRecipientOutputWithContext(context.Background())
}

func (i *Recipient) ToRecipientOutputWithContext(ctx context.Context) RecipientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientOutput)
}

// RecipientArrayInput is an input type that accepts RecipientArray and RecipientArrayOutput values.
// You can construct a concrete instance of `RecipientArrayInput` via:
//
//	RecipientArray{ RecipientArgs{...} }
type RecipientArrayInput interface {
	pulumi.Input

	ToRecipientArrayOutput() RecipientArrayOutput
	ToRecipientArrayOutputWithContext(context.Context) RecipientArrayOutput
}

type RecipientArray []RecipientInput

func (RecipientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Recipient)(nil)).Elem()
}

func (i RecipientArray) ToRecipientArrayOutput() RecipientArrayOutput {
	return i.ToRecipientArrayOutputWithContext(context.Background())
}

func (i RecipientArray) ToRecipientArrayOutputWithContext(ctx context.Context) RecipientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientArrayOutput)
}

// RecipientMapInput is an input type that accepts RecipientMap and RecipientMapOutput values.
// You can construct a concrete instance of `RecipientMapInput` via:
//
//	RecipientMap{ "key": RecipientArgs{...} }
type RecipientMapInput interface {
	pulumi.Input

	ToRecipientMapOutput() RecipientMapOutput
	ToRecipientMapOutputWithContext(context.Context) RecipientMapOutput
}

type RecipientMap map[string]RecipientInput

func (RecipientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Recipient)(nil)).Elem()
}

func (i RecipientMap) ToRecipientMapOutput() RecipientMapOutput {
	return i.ToRecipientMapOutputWithContext(context.Background())
}

func (i RecipientMap) ToRecipientMapOutputWithContext(ctx context.Context) RecipientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecipientMapOutput)
}

type RecipientOutput struct{ *pulumi.OutputState }

func (RecipientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Recipient)(nil)).Elem()
}

func (o RecipientOutput) ToRecipientOutput() RecipientOutput {
	return o
}

func (o RecipientOutput) ToRecipientOutputWithContext(ctx context.Context) RecipientOutput {
	return o
}

func (o RecipientOutput) Activated() pulumi.BoolOutput {
	return o.ApplyT(func(v *Recipient) pulumi.BoolOutput { return v.Activated }).(pulumi.BoolOutput)
}

func (o RecipientOutput) ActivationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.ActivationUrl }).(pulumi.StringOutput)
}

func (o RecipientOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.AuthenticationType }).(pulumi.StringOutput)
}

func (o RecipientOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.Cloud }).(pulumi.StringOutput)
}

func (o RecipientOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o RecipientOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *Recipient) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o RecipientOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

func (o RecipientOutput) DataRecipientGlobalMetastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringPtrOutput { return v.DataRecipientGlobalMetastoreId }).(pulumi.StringPtrOutput)
}

func (o RecipientOutput) IpAccessList() RecipientIpAccessListPtrOutput {
	return o.ApplyT(func(v *Recipient) RecipientIpAccessListPtrOutput { return v.IpAccessList }).(RecipientIpAccessListPtrOutput)
}

func (o RecipientOutput) MetastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.MetastoreId }).(pulumi.StringOutput)
}

func (o RecipientOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RecipientOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringPtrOutput { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o RecipientOutput) PropertiesKvpairs() RecipientPropertiesKvpairsPtrOutput {
	return o.ApplyT(func(v *Recipient) RecipientPropertiesKvpairsPtrOutput { return v.PropertiesKvpairs }).(RecipientPropertiesKvpairsPtrOutput)
}

func (o RecipientOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o RecipientOutput) SharingCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringPtrOutput { return v.SharingCode }).(pulumi.StringPtrOutput)
}

func (o RecipientOutput) Tokens() RecipientTokenArrayOutput {
	return o.ApplyT(func(v *Recipient) RecipientTokenArrayOutput { return v.Tokens }).(RecipientTokenArrayOutput)
}

func (o RecipientOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *Recipient) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

func (o RecipientOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Recipient) pulumi.StringOutput { return v.UpdatedBy }).(pulumi.StringOutput)
}

type RecipientArrayOutput struct{ *pulumi.OutputState }

func (RecipientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Recipient)(nil)).Elem()
}

func (o RecipientArrayOutput) ToRecipientArrayOutput() RecipientArrayOutput {
	return o
}

func (o RecipientArrayOutput) ToRecipientArrayOutputWithContext(ctx context.Context) RecipientArrayOutput {
	return o
}

func (o RecipientArrayOutput) Index(i pulumi.IntInput) RecipientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Recipient {
		return vs[0].([]*Recipient)[vs[1].(int)]
	}).(RecipientOutput)
}

type RecipientMapOutput struct{ *pulumi.OutputState }

func (RecipientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Recipient)(nil)).Elem()
}

func (o RecipientMapOutput) ToRecipientMapOutput() RecipientMapOutput {
	return o
}

func (o RecipientMapOutput) ToRecipientMapOutputWithContext(ctx context.Context) RecipientMapOutput {
	return o
}

func (o RecipientMapOutput) MapIndex(k pulumi.StringInput) RecipientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Recipient {
		return vs[0].(map[string]*Recipient)[vs[1].(string)]
	}).(RecipientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientInput)(nil)).Elem(), &Recipient{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientArrayInput)(nil)).Elem(), RecipientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecipientMapInput)(nil)).Elem(), RecipientMap{})
	pulumi.RegisterOutputType(RecipientOutput{})
	pulumi.RegisterOutputType(RecipientArrayOutput{})
	pulumi.RegisterOutputType(RecipientMapOutput{})
}
