// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCreator;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo {
    /**
     * @return (string) - Central clean room ID
     * 
     */
    private String centralCleanRoomId;
    /**
     * @return (string) - Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    private @Nullable String cloudVendor;
    /**
     * @return (list of CleanRoomCollaborator) - Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     */
    private @Nullable List<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators;
    /**
     * @return (ComplianceSecurityProfile) -
     * 
     */
    private GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile;
    /**
     * @return (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    private GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCreator creator;
    /**
     * @return (EgressNetworkPolicy) - Egress network policy to apply to the central clean room workspace
     * 
     */
    private @Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy;
    /**
     * @return (string) -
     * 
     */
    private @Nullable String region;

    private GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo() {}
    /**
     * @return (string) - Central clean room ID
     * 
     */
    public String centralCleanRoomId() {
        return this.centralCleanRoomId;
    }
    /**
     * @return (string) - Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    public Optional<String> cloudVendor() {
        return Optional.ofNullable(this.cloudVendor);
    }
    /**
     * @return (list of CleanRoomCollaborator) - Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     */
    public List<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators() {
        return this.collaborators == null ? List.of() : this.collaborators;
    }
    /**
     * @return (ComplianceSecurityProfile) -
     * 
     */
    public GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile() {
        return this.complianceSecurityProfile;
    }
    /**
     * @return (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    public GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCreator creator() {
        return this.creator;
    }
    /**
     * @return (EgressNetworkPolicy) - Egress network policy to apply to the central clean room workspace
     * 
     */
    public Optional<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy> egressNetworkPolicy() {
        return Optional.ofNullable(this.egressNetworkPolicy);
    }
    /**
     * @return (string) -
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String centralCleanRoomId;
        private @Nullable String cloudVendor;
        private @Nullable List<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators;
        private GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile;
        private GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCreator creator;
        private @Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy;
        private @Nullable String region;
        public Builder() {}
        public Builder(GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.centralCleanRoomId = defaults.centralCleanRoomId;
    	      this.cloudVendor = defaults.cloudVendor;
    	      this.collaborators = defaults.collaborators;
    	      this.complianceSecurityProfile = defaults.complianceSecurityProfile;
    	      this.creator = defaults.creator;
    	      this.egressNetworkPolicy = defaults.egressNetworkPolicy;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder centralCleanRoomId(String centralCleanRoomId) {
            if (centralCleanRoomId == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo", "centralCleanRoomId");
            }
            this.centralCleanRoomId = centralCleanRoomId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudVendor(@Nullable String cloudVendor) {

            this.cloudVendor = cloudVendor;
            return this;
        }
        @CustomType.Setter
        public Builder collaborators(@Nullable List<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators) {

            this.collaborators = collaborators;
            return this;
        }
        public Builder collaborators(GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCollaborator... collaborators) {
            return collaborators(List.of(collaborators));
        }
        @CustomType.Setter
        public Builder complianceSecurityProfile(GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile) {
            if (complianceSecurityProfile == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo", "complianceSecurityProfile");
            }
            this.complianceSecurityProfile = complianceSecurityProfile;
            return this;
        }
        @CustomType.Setter
        public Builder creator(GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoCreator creator) {
            if (creator == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo", "creator");
            }
            this.creator = creator;
            return this;
        }
        @CustomType.Setter
        public Builder egressNetworkPolicy(@Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy) {

            this.egressNetworkPolicy = egressNetworkPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        public GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo build() {
            final var _resultValue = new GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo();
            _resultValue.centralCleanRoomId = centralCleanRoomId;
            _resultValue.cloudVendor = cloudVendor;
            _resultValue.collaborators = collaborators;
            _resultValue.complianceSecurityProfile = complianceSecurityProfile;
            _resultValue.creator = creator;
            _resultValue.egressNetworkPolicy = egressNetworkPolicy;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
