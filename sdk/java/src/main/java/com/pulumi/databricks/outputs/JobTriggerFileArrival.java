// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTriggerFileArrival {
    /**
     * @return If set, the trigger starts a run only after the specified amount of time passed since the last time the trigger fired. The minimum allowed value is 60 seconds.
     * 
     */
    private @Nullable Integer minTimeBetweenTriggerSeconds;
    /**
     * @return string with URL under the Unity Catalog external location that will be monitored for new files. Please note that have a trailing slash character (`/`).
     * 
     */
    private String url;
    /**
     * @return If set, the trigger starts a run only after no file activity has occurred for the specified amount of time. This makes it possible to wait for a batch of incoming files to arrive before triggering a run. The minimum allowed value is 60 seconds.
     * 
     */
    private @Nullable Integer waitAfterLastChangeSeconds;

    private JobTriggerFileArrival() {}
    /**
     * @return If set, the trigger starts a run only after the specified amount of time passed since the last time the trigger fired. The minimum allowed value is 60 seconds.
     * 
     */
    public Optional<Integer> minTimeBetweenTriggerSeconds() {
        return Optional.ofNullable(this.minTimeBetweenTriggerSeconds);
    }
    /**
     * @return string with URL under the Unity Catalog external location that will be monitored for new files. Please note that have a trailing slash character (`/`).
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return If set, the trigger starts a run only after no file activity has occurred for the specified amount of time. This makes it possible to wait for a batch of incoming files to arrive before triggering a run. The minimum allowed value is 60 seconds.
     * 
     */
    public Optional<Integer> waitAfterLastChangeSeconds() {
        return Optional.ofNullable(this.waitAfterLastChangeSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTriggerFileArrival defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer minTimeBetweenTriggerSeconds;
        private String url;
        private @Nullable Integer waitAfterLastChangeSeconds;
        public Builder() {}
        public Builder(JobTriggerFileArrival defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minTimeBetweenTriggerSeconds = defaults.minTimeBetweenTriggerSeconds;
    	      this.url = defaults.url;
    	      this.waitAfterLastChangeSeconds = defaults.waitAfterLastChangeSeconds;
        }

        @CustomType.Setter
        public Builder minTimeBetweenTriggerSeconds(@Nullable Integer minTimeBetweenTriggerSeconds) {
            this.minTimeBetweenTriggerSeconds = minTimeBetweenTriggerSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder waitAfterLastChangeSeconds(@Nullable Integer waitAfterLastChangeSeconds) {
            this.waitAfterLastChangeSeconds = waitAfterLastChangeSeconds;
            return this;
        }
        public JobTriggerFileArrival build() {
            final var o = new JobTriggerFileArrival();
            o.minTimeBetweenTriggerSeconds = minTimeBetweenTriggerSeconds;
            o.url = url;
            o.waitAfterLastChangeSeconds = waitAfterLastChangeSeconds;
            return o;
        }
    }
}
