// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureAdlsGen1MountState extends com.pulumi.resources.ResourceArgs {

    public static final AzureAdlsGen1MountState Empty = new AzureAdlsGen1MountState();

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientSecretKey")
    private @Nullable Output<String> clientSecretKey;

    public Optional<Output<String>> clientSecretKey() {
        return Optional.ofNullable(this.clientSecretKey);
    }

    @Import(name="clientSecretScope")
    private @Nullable Output<String> clientSecretScope;

    public Optional<Output<String>> clientSecretScope() {
        return Optional.ofNullable(this.clientSecretScope);
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="directory")
    private @Nullable Output<String> directory;

    public Optional<Output<String>> directory() {
        return Optional.ofNullable(this.directory);
    }

    @Import(name="mountName")
    private @Nullable Output<String> mountName;

    public Optional<Output<String>> mountName() {
        return Optional.ofNullable(this.mountName);
    }

    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="sparkConfPrefix")
    private @Nullable Output<String> sparkConfPrefix;

    public Optional<Output<String>> sparkConfPrefix() {
        return Optional.ofNullable(this.sparkConfPrefix);
    }

    @Import(name="storageResourceName")
    private @Nullable Output<String> storageResourceName;

    public Optional<Output<String>> storageResourceName() {
        return Optional.ofNullable(this.storageResourceName);
    }

    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private AzureAdlsGen1MountState() {}

    private AzureAdlsGen1MountState(AzureAdlsGen1MountState $) {
        this.clientId = $.clientId;
        this.clientSecretKey = $.clientSecretKey;
        this.clientSecretScope = $.clientSecretScope;
        this.clusterId = $.clusterId;
        this.directory = $.directory;
        this.mountName = $.mountName;
        this.source = $.source;
        this.sparkConfPrefix = $.sparkConfPrefix;
        this.storageResourceName = $.storageResourceName;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureAdlsGen1MountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureAdlsGen1MountState $;

        public Builder() {
            $ = new AzureAdlsGen1MountState();
        }

        public Builder(AzureAdlsGen1MountState defaults) {
            $ = new AzureAdlsGen1MountState(Objects.requireNonNull(defaults));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecretKey(@Nullable Output<String> clientSecretKey) {
            $.clientSecretKey = clientSecretKey;
            return this;
        }

        public Builder clientSecretKey(String clientSecretKey) {
            return clientSecretKey(Output.of(clientSecretKey));
        }

        public Builder clientSecretScope(@Nullable Output<String> clientSecretScope) {
            $.clientSecretScope = clientSecretScope;
            return this;
        }

        public Builder clientSecretScope(String clientSecretScope) {
            return clientSecretScope(Output.of(clientSecretScope));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder directory(@Nullable Output<String> directory) {
            $.directory = directory;
            return this;
        }

        public Builder directory(String directory) {
            return directory(Output.of(directory));
        }

        public Builder mountName(@Nullable Output<String> mountName) {
            $.mountName = mountName;
            return this;
        }

        public Builder mountName(String mountName) {
            return mountName(Output.of(mountName));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder sparkConfPrefix(@Nullable Output<String> sparkConfPrefix) {
            $.sparkConfPrefix = sparkConfPrefix;
            return this;
        }

        public Builder sparkConfPrefix(String sparkConfPrefix) {
            return sparkConfPrefix(Output.of(sparkConfPrefix));
        }

        public Builder storageResourceName(@Nullable Output<String> storageResourceName) {
            $.storageResourceName = storageResourceName;
            return this;
        }

        public Builder storageResourceName(String storageResourceName) {
            return storageResourceName(Output.of(storageResourceName));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public AzureAdlsGen1MountState build() {
            return $;
        }
    }

}
