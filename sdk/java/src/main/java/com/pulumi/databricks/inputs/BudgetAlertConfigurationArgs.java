// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.BudgetAlertConfigurationActionConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetAlertConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BudgetAlertConfigurationArgs Empty = new BudgetAlertConfigurationArgs();

    /**
     * List of action configurations to take when the budget alert is triggered. Consists of the following fields:
     * 
     */
    @Import(name="actionConfigurations")
    private @Nullable Output<List<BudgetAlertConfigurationActionConfigurationArgs>> actionConfigurations;

    /**
     * @return List of action configurations to take when the budget alert is triggered. Consists of the following fields:
     * 
     */
    public Optional<Output<List<BudgetAlertConfigurationActionConfigurationArgs>>> actionConfigurations() {
        return Optional.ofNullable(this.actionConfigurations);
    }

    @Import(name="alertConfigurationId")
    private @Nullable Output<String> alertConfigurationId;

    public Optional<Output<String>> alertConfigurationId() {
        return Optional.ofNullable(this.alertConfigurationId);
    }

    /**
     * The threshold for the budget alert to determine if it is in a triggered state. The number is evaluated based on `quantity_type`.
     * 
     */
    @Import(name="quantityThreshold")
    private @Nullable Output<String> quantityThreshold;

    /**
     * @return The threshold for the budget alert to determine if it is in a triggered state. The number is evaluated based on `quantity_type`.
     * 
     */
    public Optional<Output<String>> quantityThreshold() {
        return Optional.ofNullable(this.quantityThreshold);
    }

    /**
     * The way to calculate cost for this budget alert. This is what quantity_threshold is measured in. (Enum: `LIST_PRICE_DOLLARS_USD`)
     * 
     */
    @Import(name="quantityType")
    private @Nullable Output<String> quantityType;

    /**
     * @return The way to calculate cost for this budget alert. This is what quantity_threshold is measured in. (Enum: `LIST_PRICE_DOLLARS_USD`)
     * 
     */
    public Optional<Output<String>> quantityType() {
        return Optional.ofNullable(this.quantityType);
    }

    /**
     * The time window of usage data for the budget. (Enum: `MONTH`)
     * 
     */
    @Import(name="timePeriod")
    private @Nullable Output<String> timePeriod;

    /**
     * @return The time window of usage data for the budget. (Enum: `MONTH`)
     * 
     */
    public Optional<Output<String>> timePeriod() {
        return Optional.ofNullable(this.timePeriod);
    }

    /**
     * The evaluation method to determine when this budget alert is in a triggered state. (Enum: `CUMULATIVE_SPENDING_EXCEEDED`)
     * 
     */
    @Import(name="triggerType")
    private @Nullable Output<String> triggerType;

    /**
     * @return The evaluation method to determine when this budget alert is in a triggered state. (Enum: `CUMULATIVE_SPENDING_EXCEEDED`)
     * 
     */
    public Optional<Output<String>> triggerType() {
        return Optional.ofNullable(this.triggerType);
    }

    private BudgetAlertConfigurationArgs() {}

    private BudgetAlertConfigurationArgs(BudgetAlertConfigurationArgs $) {
        this.actionConfigurations = $.actionConfigurations;
        this.alertConfigurationId = $.alertConfigurationId;
        this.quantityThreshold = $.quantityThreshold;
        this.quantityType = $.quantityType;
        this.timePeriod = $.timePeriod;
        this.triggerType = $.triggerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetAlertConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetAlertConfigurationArgs $;

        public Builder() {
            $ = new BudgetAlertConfigurationArgs();
        }

        public Builder(BudgetAlertConfigurationArgs defaults) {
            $ = new BudgetAlertConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionConfigurations List of action configurations to take when the budget alert is triggered. Consists of the following fields:
         * 
         * @return builder
         * 
         */
        public Builder actionConfigurations(@Nullable Output<List<BudgetAlertConfigurationActionConfigurationArgs>> actionConfigurations) {
            $.actionConfigurations = actionConfigurations;
            return this;
        }

        /**
         * @param actionConfigurations List of action configurations to take when the budget alert is triggered. Consists of the following fields:
         * 
         * @return builder
         * 
         */
        public Builder actionConfigurations(List<BudgetAlertConfigurationActionConfigurationArgs> actionConfigurations) {
            return actionConfigurations(Output.of(actionConfigurations));
        }

        /**
         * @param actionConfigurations List of action configurations to take when the budget alert is triggered. Consists of the following fields:
         * 
         * @return builder
         * 
         */
        public Builder actionConfigurations(BudgetAlertConfigurationActionConfigurationArgs... actionConfigurations) {
            return actionConfigurations(List.of(actionConfigurations));
        }

        public Builder alertConfigurationId(@Nullable Output<String> alertConfigurationId) {
            $.alertConfigurationId = alertConfigurationId;
            return this;
        }

        public Builder alertConfigurationId(String alertConfigurationId) {
            return alertConfigurationId(Output.of(alertConfigurationId));
        }

        /**
         * @param quantityThreshold The threshold for the budget alert to determine if it is in a triggered state. The number is evaluated based on `quantity_type`.
         * 
         * @return builder
         * 
         */
        public Builder quantityThreshold(@Nullable Output<String> quantityThreshold) {
            $.quantityThreshold = quantityThreshold;
            return this;
        }

        /**
         * @param quantityThreshold The threshold for the budget alert to determine if it is in a triggered state. The number is evaluated based on `quantity_type`.
         * 
         * @return builder
         * 
         */
        public Builder quantityThreshold(String quantityThreshold) {
            return quantityThreshold(Output.of(quantityThreshold));
        }

        /**
         * @param quantityType The way to calculate cost for this budget alert. This is what quantity_threshold is measured in. (Enum: `LIST_PRICE_DOLLARS_USD`)
         * 
         * @return builder
         * 
         */
        public Builder quantityType(@Nullable Output<String> quantityType) {
            $.quantityType = quantityType;
            return this;
        }

        /**
         * @param quantityType The way to calculate cost for this budget alert. This is what quantity_threshold is measured in. (Enum: `LIST_PRICE_DOLLARS_USD`)
         * 
         * @return builder
         * 
         */
        public Builder quantityType(String quantityType) {
            return quantityType(Output.of(quantityType));
        }

        /**
         * @param timePeriod The time window of usage data for the budget. (Enum: `MONTH`)
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(@Nullable Output<String> timePeriod) {
            $.timePeriod = timePeriod;
            return this;
        }

        /**
         * @param timePeriod The time window of usage data for the budget. (Enum: `MONTH`)
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(String timePeriod) {
            return timePeriod(Output.of(timePeriod));
        }

        /**
         * @param triggerType The evaluation method to determine when this budget alert is in a triggered state. (Enum: `CUMULATIVE_SPENDING_EXCEEDED`)
         * 
         * @return builder
         * 
         */
        public Builder triggerType(@Nullable Output<String> triggerType) {
            $.triggerType = triggerType;
            return this;
        }

        /**
         * @param triggerType The evaluation method to determine when this budget alert is in a triggered state. (Enum: `CUMULATIVE_SPENDING_EXCEEDED`)
         * 
         * @return builder
         * 
         */
        public Builder triggerType(String triggerType) {
            return triggerType(Output.of(triggerType));
        }

        public BudgetAlertConfigurationArgs build() {
            return $;
        }
    }

}
