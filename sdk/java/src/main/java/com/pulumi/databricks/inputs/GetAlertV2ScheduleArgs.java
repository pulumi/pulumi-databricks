// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertV2ScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAlertV2ScheduleArgs Empty = new GetAlertV2ScheduleArgs();

    /**
     * (string) - Indicate whether this schedule is paused or not. Possible values are: PAUSED, UNPAUSED
     * 
     */
    @Import(name="pauseStatus")
    private @Nullable Output<String> pauseStatus;

    /**
     * @return (string) - Indicate whether this schedule is paused or not. Possible values are: PAUSED, UNPAUSED
     * 
     */
    public Optional<Output<String>> pauseStatus() {
        return Optional.ofNullable(this.pauseStatus);
    }

    /**
     * (string) - A cron expression using quartz syntax that specifies the schedule for this pipeline.
     * Should use the quartz format described here: http://www.quartz-scheduler.org/documentation/quartz-2.1.7/tutorials/tutorial-lesson-06.html
     * 
     */
    @Import(name="quartzCronSchedule")
    private @Nullable Output<String> quartzCronSchedule;

    /**
     * @return (string) - A cron expression using quartz syntax that specifies the schedule for this pipeline.
     * Should use the quartz format described here: http://www.quartz-scheduler.org/documentation/quartz-2.1.7/tutorials/tutorial-lesson-06.html
     * 
     */
    public Optional<Output<String>> quartzCronSchedule() {
        return Optional.ofNullable(this.quartzCronSchedule);
    }

    /**
     * (string) - A Java timezone id. The schedule will be resolved using this timezone.
     * This will be combined with the quartz_cron_schedule to determine the schedule.
     * See https://docs.databricks.com/sql/language-manual/sql-ref-syntax-aux-conf-mgmt-set-timezone.html for details
     * 
     */
    @Import(name="timezoneId")
    private @Nullable Output<String> timezoneId;

    /**
     * @return (string) - A Java timezone id. The schedule will be resolved using this timezone.
     * This will be combined with the quartz_cron_schedule to determine the schedule.
     * See https://docs.databricks.com/sql/language-manual/sql-ref-syntax-aux-conf-mgmt-set-timezone.html for details
     * 
     */
    public Optional<Output<String>> timezoneId() {
        return Optional.ofNullable(this.timezoneId);
    }

    private GetAlertV2ScheduleArgs() {}

    private GetAlertV2ScheduleArgs(GetAlertV2ScheduleArgs $) {
        this.pauseStatus = $.pauseStatus;
        this.quartzCronSchedule = $.quartzCronSchedule;
        this.timezoneId = $.timezoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertV2ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertV2ScheduleArgs $;

        public Builder() {
            $ = new GetAlertV2ScheduleArgs();
        }

        public Builder(GetAlertV2ScheduleArgs defaults) {
            $ = new GetAlertV2ScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pauseStatus (string) - Indicate whether this schedule is paused or not. Possible values are: PAUSED, UNPAUSED
         * 
         * @return builder
         * 
         */
        public Builder pauseStatus(@Nullable Output<String> pauseStatus) {
            $.pauseStatus = pauseStatus;
            return this;
        }

        /**
         * @param pauseStatus (string) - Indicate whether this schedule is paused or not. Possible values are: PAUSED, UNPAUSED
         * 
         * @return builder
         * 
         */
        public Builder pauseStatus(String pauseStatus) {
            return pauseStatus(Output.of(pauseStatus));
        }

        /**
         * @param quartzCronSchedule (string) - A cron expression using quartz syntax that specifies the schedule for this pipeline.
         * Should use the quartz format described here: http://www.quartz-scheduler.org/documentation/quartz-2.1.7/tutorials/tutorial-lesson-06.html
         * 
         * @return builder
         * 
         */
        public Builder quartzCronSchedule(@Nullable Output<String> quartzCronSchedule) {
            $.quartzCronSchedule = quartzCronSchedule;
            return this;
        }

        /**
         * @param quartzCronSchedule (string) - A cron expression using quartz syntax that specifies the schedule for this pipeline.
         * Should use the quartz format described here: http://www.quartz-scheduler.org/documentation/quartz-2.1.7/tutorials/tutorial-lesson-06.html
         * 
         * @return builder
         * 
         */
        public Builder quartzCronSchedule(String quartzCronSchedule) {
            return quartzCronSchedule(Output.of(quartzCronSchedule));
        }

        /**
         * @param timezoneId (string) - A Java timezone id. The schedule will be resolved using this timezone.
         * This will be combined with the quartz_cron_schedule to determine the schedule.
         * See https://docs.databricks.com/sql/language-manual/sql-ref-syntax-aux-conf-mgmt-set-timezone.html for details
         * 
         * @return builder
         * 
         */
        public Builder timezoneId(@Nullable Output<String> timezoneId) {
            $.timezoneId = timezoneId;
            return this;
        }

        /**
         * @param timezoneId (string) - A Java timezone id. The schedule will be resolved using this timezone.
         * This will be combined with the quartz_cron_schedule to determine the schedule.
         * See https://docs.databricks.com/sql/language-manual/sql-ref-syntax-aux-conf-mgmt-set-timezone.html for details
         * 
         * @return builder
         * 
         */
        public Builder timezoneId(String timezoneId) {
            return timezoneId(Output.of(timezoneId));
        }

        public GetAlertV2ScheduleArgs build() {
            return $;
        }
    }

}
