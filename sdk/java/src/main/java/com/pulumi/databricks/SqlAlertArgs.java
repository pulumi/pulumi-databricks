// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.SqlAlertOptionsArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlAlertArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlAlertArgs Empty = new SqlAlertArgs();

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="options", required=true)
    private Output<SqlAlertOptionsArgs> options;

    public Output<SqlAlertOptionsArgs> options() {
        return this.options;
    }

    @Import(name="parent")
    private @Nullable Output<String> parent;

    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    @Import(name="queryId", required=true)
    private Output<String> queryId;

    public Output<String> queryId() {
        return this.queryId;
    }

    @Import(name="rearm")
    private @Nullable Output<Integer> rearm;

    public Optional<Output<Integer>> rearm() {
        return Optional.ofNullable(this.rearm);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private SqlAlertArgs() {}

    private SqlAlertArgs(SqlAlertArgs $) {
        this.createdAt = $.createdAt;
        this.name = $.name;
        this.options = $.options;
        this.parent = $.parent;
        this.queryId = $.queryId;
        this.rearm = $.rearm;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlAlertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlAlertArgs $;

        public Builder() {
            $ = new SqlAlertArgs();
        }

        public Builder(SqlAlertArgs defaults) {
            $ = new SqlAlertArgs(Objects.requireNonNull(defaults));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder options(Output<SqlAlertOptionsArgs> options) {
            $.options = options;
            return this;
        }

        public Builder options(SqlAlertOptionsArgs options) {
            return options(Output.of(options));
        }

        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public Builder queryId(Output<String> queryId) {
            $.queryId = queryId;
            return this;
        }

        public Builder queryId(String queryId) {
            return queryId(Output.of(queryId));
        }

        public Builder rearm(@Nullable Output<Integer> rearm) {
            $.rearm = rearm;
            return this;
        }

        public Builder rearm(Integer rearm) {
            return rearm(Output.of(rearm));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public SqlAlertArgs build() {
            if ($.options == null) {
                throw new MissingRequiredPropertyException("SqlAlertArgs", "options");
            }
            if ($.queryId == null) {
                throw new MissingRequiredPropertyException("SqlAlertArgs", "queryId");
            }
            return $;
        }
    }

}
