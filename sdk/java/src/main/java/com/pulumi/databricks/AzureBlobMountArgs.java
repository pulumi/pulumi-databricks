// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureBlobMountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureBlobMountArgs Empty = new AzureBlobMountArgs();

    @Import(name="authType", required=true)
    private Output<String> authType;

    public Output<String> authType() {
        return this.authType;
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="containerName", required=true)
    private Output<String> containerName;

    public Output<String> containerName() {
        return this.containerName;
    }

    @Import(name="directory")
    private @Nullable Output<String> directory;

    public Optional<Output<String>> directory() {
        return Optional.ofNullable(this.directory);
    }

    @Import(name="mountName", required=true)
    private Output<String> mountName;

    public Output<String> mountName() {
        return this.mountName;
    }

    @Import(name="storageAccountName", required=true)
    private Output<String> storageAccountName;

    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }

    @Import(name="tokenSecretKey", required=true)
    private Output<String> tokenSecretKey;

    public Output<String> tokenSecretKey() {
        return this.tokenSecretKey;
    }

    @Import(name="tokenSecretScope", required=true)
    private Output<String> tokenSecretScope;

    public Output<String> tokenSecretScope() {
        return this.tokenSecretScope;
    }

    private AzureBlobMountArgs() {}

    private AzureBlobMountArgs(AzureBlobMountArgs $) {
        this.authType = $.authType;
        this.clusterId = $.clusterId;
        this.containerName = $.containerName;
        this.directory = $.directory;
        this.mountName = $.mountName;
        this.storageAccountName = $.storageAccountName;
        this.tokenSecretKey = $.tokenSecretKey;
        this.tokenSecretScope = $.tokenSecretScope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureBlobMountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureBlobMountArgs $;

        public Builder() {
            $ = new AzureBlobMountArgs();
        }

        public Builder(AzureBlobMountArgs defaults) {
            $ = new AzureBlobMountArgs(Objects.requireNonNull(defaults));
        }

        public Builder authType(Output<String> authType) {
            $.authType = authType;
            return this;
        }

        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        public Builder directory(@Nullable Output<String> directory) {
            $.directory = directory;
            return this;
        }

        public Builder directory(String directory) {
            return directory(Output.of(directory));
        }

        public Builder mountName(Output<String> mountName) {
            $.mountName = mountName;
            return this;
        }

        public Builder mountName(String mountName) {
            return mountName(Output.of(mountName));
        }

        public Builder storageAccountName(Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        public Builder tokenSecretKey(Output<String> tokenSecretKey) {
            $.tokenSecretKey = tokenSecretKey;
            return this;
        }

        public Builder tokenSecretKey(String tokenSecretKey) {
            return tokenSecretKey(Output.of(tokenSecretKey));
        }

        public Builder tokenSecretScope(Output<String> tokenSecretScope) {
            $.tokenSecretScope = tokenSecretScope;
            return this;
        }

        public Builder tokenSecretScope(String tokenSecretScope) {
            return tokenSecretScope(Output.of(tokenSecretScope));
        }

        public AzureBlobMountArgs build() {
            $.authType = Objects.requireNonNull($.authType, "expected parameter 'authType' to be non-null");
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            $.mountName = Objects.requireNonNull($.mountName, "expected parameter 'mountName' to be non-null");
            $.storageAccountName = Objects.requireNonNull($.storageAccountName, "expected parameter 'storageAccountName' to be non-null");
            $.tokenSecretKey = Objects.requireNonNull($.tokenSecretKey, "expected parameter 'tokenSecretKey' to be non-null");
            $.tokenSecretScope = Objects.requireNonNull($.tokenSecretScope, "expected parameter 'tokenSecretScope' to be non-null");
            return $;
        }
    }

}
