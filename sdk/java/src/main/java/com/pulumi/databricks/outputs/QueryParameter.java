// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.QueryParameterDateRangeValue;
import com.pulumi.databricks.outputs.QueryParameterDateValue;
import com.pulumi.databricks.outputs.QueryParameterEnumValue;
import com.pulumi.databricks.outputs.QueryParameterNumericValue;
import com.pulumi.databricks.outputs.QueryParameterQueryBackedValue;
import com.pulumi.databricks.outputs.QueryParameterTextValue;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueryParameter {
    /**
     * @return Date-range query parameter value. Consists of following attributes (Can only specify one of `dynamic_date_range_value` or `date_range_value`):
     * 
     */
    private @Nullable QueryParameterDateRangeValue dateRangeValue;
    /**
     * @return Date query parameter value. Consists of following attributes (Can only specify one of `dynamic_date_value` or `date_value`):
     * 
     */
    private @Nullable QueryParameterDateValue dateValue;
    /**
     * @return Dropdown parameter value. Consists of following attributes:
     * 
     */
    private @Nullable QueryParameterEnumValue enumValue;
    /**
     * @return Literal parameter marker that appears between double curly braces in the query text.
     * 
     */
    private String name;
    /**
     * @return Numeric parameter value. Consists of following attributes:
     * 
     */
    private @Nullable QueryParameterNumericValue numericValue;
    /**
     * @return Query-based dropdown parameter value. Consists of following attributes:
     * 
     */
    private @Nullable QueryParameterQueryBackedValue queryBackedValue;
    /**
     * @return Text parameter value. Consists of following attributes:
     * 
     */
    private @Nullable QueryParameterTextValue textValue;
    /**
     * @return Text displayed in the user-facing parameter widget in the UI.
     * 
     */
    private @Nullable String title;

    private QueryParameter() {}
    /**
     * @return Date-range query parameter value. Consists of following attributes (Can only specify one of `dynamic_date_range_value` or `date_range_value`):
     * 
     */
    public Optional<QueryParameterDateRangeValue> dateRangeValue() {
        return Optional.ofNullable(this.dateRangeValue);
    }
    /**
     * @return Date query parameter value. Consists of following attributes (Can only specify one of `dynamic_date_value` or `date_value`):
     * 
     */
    public Optional<QueryParameterDateValue> dateValue() {
        return Optional.ofNullable(this.dateValue);
    }
    /**
     * @return Dropdown parameter value. Consists of following attributes:
     * 
     */
    public Optional<QueryParameterEnumValue> enumValue() {
        return Optional.ofNullable(this.enumValue);
    }
    /**
     * @return Literal parameter marker that appears between double curly braces in the query text.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Numeric parameter value. Consists of following attributes:
     * 
     */
    public Optional<QueryParameterNumericValue> numericValue() {
        return Optional.ofNullable(this.numericValue);
    }
    /**
     * @return Query-based dropdown parameter value. Consists of following attributes:
     * 
     */
    public Optional<QueryParameterQueryBackedValue> queryBackedValue() {
        return Optional.ofNullable(this.queryBackedValue);
    }
    /**
     * @return Text parameter value. Consists of following attributes:
     * 
     */
    public Optional<QueryParameterTextValue> textValue() {
        return Optional.ofNullable(this.textValue);
    }
    /**
     * @return Text displayed in the user-facing parameter widget in the UI.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueryParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable QueryParameterDateRangeValue dateRangeValue;
        private @Nullable QueryParameterDateValue dateValue;
        private @Nullable QueryParameterEnumValue enumValue;
        private String name;
        private @Nullable QueryParameterNumericValue numericValue;
        private @Nullable QueryParameterQueryBackedValue queryBackedValue;
        private @Nullable QueryParameterTextValue textValue;
        private @Nullable String title;
        public Builder() {}
        public Builder(QueryParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateRangeValue = defaults.dateRangeValue;
    	      this.dateValue = defaults.dateValue;
    	      this.enumValue = defaults.enumValue;
    	      this.name = defaults.name;
    	      this.numericValue = defaults.numericValue;
    	      this.queryBackedValue = defaults.queryBackedValue;
    	      this.textValue = defaults.textValue;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder dateRangeValue(@Nullable QueryParameterDateRangeValue dateRangeValue) {

            this.dateRangeValue = dateRangeValue;
            return this;
        }
        @CustomType.Setter
        public Builder dateValue(@Nullable QueryParameterDateValue dateValue) {

            this.dateValue = dateValue;
            return this;
        }
        @CustomType.Setter
        public Builder enumValue(@Nullable QueryParameterEnumValue enumValue) {

            this.enumValue = enumValue;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("QueryParameter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder numericValue(@Nullable QueryParameterNumericValue numericValue) {

            this.numericValue = numericValue;
            return this;
        }
        @CustomType.Setter
        public Builder queryBackedValue(@Nullable QueryParameterQueryBackedValue queryBackedValue) {

            this.queryBackedValue = queryBackedValue;
            return this;
        }
        @CustomType.Setter
        public Builder textValue(@Nullable QueryParameterTextValue textValue) {

            this.textValue = textValue;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {

            this.title = title;
            return this;
        }
        public QueryParameter build() {
            final var _resultValue = new QueryParameter();
            _resultValue.dateRangeValue = dateRangeValue;
            _resultValue.dateValue = dateValue;
            _resultValue.enumValue = enumValue;
            _resultValue.name = name;
            _resultValue.numericValue = numericValue;
            _resultValue.queryBackedValue = queryBackedValue;
            _resultValue.textValue = textValue;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
