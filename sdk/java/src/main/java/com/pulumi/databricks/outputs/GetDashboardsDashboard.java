// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDashboardsDashboard {
    /**
     * @return The timestamp of when the dashboard was created.
     * 
     */
    private String createTime;
    /**
     * @return The unique ID of the dashboard.
     * 
     */
    private String dashboardId;
    /**
     * @return The display name of the dashboard.
     * 
     */
    private @Nullable String displayName;
    private String etag;
    private String lifecycleState;
    private String parentPath;
    private String path;
    private @Nullable String serializedDashboard;
    private String updateTime;
    private @Nullable String warehouseId;

    private GetDashboardsDashboard() {}
    /**
     * @return The timestamp of when the dashboard was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The unique ID of the dashboard.
     * 
     */
    public String dashboardId() {
        return this.dashboardId;
    }
    /**
     * @return The display name of the dashboard.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String etag() {
        return this.etag;
    }
    public String lifecycleState() {
        return this.lifecycleState;
    }
    public String parentPath() {
        return this.parentPath;
    }
    public String path() {
        return this.path;
    }
    public Optional<String> serializedDashboard() {
        return Optional.ofNullable(this.serializedDashboard);
    }
    public String updateTime() {
        return this.updateTime;
    }
    public Optional<String> warehouseId() {
        return Optional.ofNullable(this.warehouseId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDashboardsDashboard defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String dashboardId;
        private @Nullable String displayName;
        private String etag;
        private String lifecycleState;
        private String parentPath;
        private String path;
        private @Nullable String serializedDashboard;
        private String updateTime;
        private @Nullable String warehouseId;
        public Builder() {}
        public Builder(GetDashboardsDashboard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dashboardId = defaults.dashboardId;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.parentPath = defaults.parentPath;
    	      this.path = defaults.path;
    	      this.serializedDashboard = defaults.serializedDashboard;
    	      this.updateTime = defaults.updateTime;
    	      this.warehouseId = defaults.warehouseId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardId(String dashboardId) {
            if (dashboardId == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "dashboardId");
            }
            this.dashboardId = dashboardId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            if (etag == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "etag");
            }
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleState(String lifecycleState) {
            if (lifecycleState == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "lifecycleState");
            }
            this.lifecycleState = lifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder parentPath(String parentPath) {
            if (parentPath == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "parentPath");
            }
            this.parentPath = parentPath;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder serializedDashboard(@Nullable String serializedDashboard) {

            this.serializedDashboard = serializedDashboard;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboard", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder warehouseId(@Nullable String warehouseId) {

            this.warehouseId = warehouseId;
            return this;
        }
        public GetDashboardsDashboard build() {
            final var _resultValue = new GetDashboardsDashboard();
            _resultValue.createTime = createTime;
            _resultValue.dashboardId = dashboardId;
            _resultValue.displayName = displayName;
            _resultValue.etag = etag;
            _resultValue.lifecycleState = lifecycleState;
            _resultValue.parentPath = parentPath;
            _resultValue.path = path;
            _resultValue.serializedDashboard = serializedDashboard;
            _resultValue.updateTime = updateTime;
            _resultValue.warehouseId = warehouseId;
            return _resultValue;
        }
    }
}
