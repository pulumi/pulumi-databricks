// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetStorageCredentialStorageCredentialInfoAwsIamRole;
import com.pulumi.databricks.outputs.GetStorageCredentialStorageCredentialInfoAzureManagedIdentity;
import com.pulumi.databricks.outputs.GetStorageCredentialStorageCredentialInfoAzureServicePrincipal;
import com.pulumi.databricks.outputs.GetStorageCredentialStorageCredentialInfoCloudflareApiToken;
import com.pulumi.databricks.outputs.GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccount;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStorageCredentialStorageCredentialInfo {
    private @Nullable GetStorageCredentialStorageCredentialInfoAwsIamRole awsIamRole;
    private @Nullable GetStorageCredentialStorageCredentialInfoAzureManagedIdentity azureManagedIdentity;
    private @Nullable GetStorageCredentialStorageCredentialInfoAzureServicePrincipal azureServicePrincipal;
    private @Nullable GetStorageCredentialStorageCredentialInfoCloudflareApiToken cloudflareApiToken;
    private @Nullable String comment;
    private @Nullable Integer createdAt;
    private @Nullable String createdBy;
    private @Nullable GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccount databricksGcpServiceAccount;
    private @Nullable String id;
    /**
     * @return Unique identifier of the parent Metastore.
     * 
     */
    private @Nullable String metastoreId;
    /**
     * @return The name of the storage credential
     * 
     */
    private @Nullable String name;
    /**
     * @return Username/groupname/sp application_id of the storage credential owner.
     * 
     */
    private @Nullable String owner;
    /**
     * @return Indicates whether the storage credential is only usable for read operations.
     * 
     */
    private @Nullable Boolean readOnly;
    private @Nullable Integer updatedAt;
    private @Nullable String updatedBy;
    private @Nullable Boolean usedForManagedStorage;

    private GetStorageCredentialStorageCredentialInfo() {}
    public Optional<GetStorageCredentialStorageCredentialInfoAwsIamRole> awsIamRole() {
        return Optional.ofNullable(this.awsIamRole);
    }
    public Optional<GetStorageCredentialStorageCredentialInfoAzureManagedIdentity> azureManagedIdentity() {
        return Optional.ofNullable(this.azureManagedIdentity);
    }
    public Optional<GetStorageCredentialStorageCredentialInfoAzureServicePrincipal> azureServicePrincipal() {
        return Optional.ofNullable(this.azureServicePrincipal);
    }
    public Optional<GetStorageCredentialStorageCredentialInfoCloudflareApiToken> cloudflareApiToken() {
        return Optional.ofNullable(this.cloudflareApiToken);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    public Optional<GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccount> databricksGcpServiceAccount() {
        return Optional.ofNullable(this.databricksGcpServiceAccount);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Unique identifier of the parent Metastore.
     * 
     */
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    /**
     * @return The name of the storage credential
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Username/groupname/sp application_id of the storage credential owner.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Indicates whether the storage credential is only usable for read operations.
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    public Optional<Integer> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }
    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }
    public Optional<Boolean> usedForManagedStorage() {
        return Optional.ofNullable(this.usedForManagedStorage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStorageCredentialStorageCredentialInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetStorageCredentialStorageCredentialInfoAwsIamRole awsIamRole;
        private @Nullable GetStorageCredentialStorageCredentialInfoAzureManagedIdentity azureManagedIdentity;
        private @Nullable GetStorageCredentialStorageCredentialInfoAzureServicePrincipal azureServicePrincipal;
        private @Nullable GetStorageCredentialStorageCredentialInfoCloudflareApiToken cloudflareApiToken;
        private @Nullable String comment;
        private @Nullable Integer createdAt;
        private @Nullable String createdBy;
        private @Nullable GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccount databricksGcpServiceAccount;
        private @Nullable String id;
        private @Nullable String metastoreId;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable Boolean readOnly;
        private @Nullable Integer updatedAt;
        private @Nullable String updatedBy;
        private @Nullable Boolean usedForManagedStorage;
        public Builder() {}
        public Builder(GetStorageCredentialStorageCredentialInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsIamRole = defaults.awsIamRole;
    	      this.azureManagedIdentity = defaults.azureManagedIdentity;
    	      this.azureServicePrincipal = defaults.azureServicePrincipal;
    	      this.cloudflareApiToken = defaults.cloudflareApiToken;
    	      this.comment = defaults.comment;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.databricksGcpServiceAccount = defaults.databricksGcpServiceAccount;
    	      this.id = defaults.id;
    	      this.metastoreId = defaults.metastoreId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.readOnly = defaults.readOnly;
    	      this.updatedAt = defaults.updatedAt;
    	      this.updatedBy = defaults.updatedBy;
    	      this.usedForManagedStorage = defaults.usedForManagedStorage;
        }

        @CustomType.Setter
        public Builder awsIamRole(@Nullable GetStorageCredentialStorageCredentialInfoAwsIamRole awsIamRole) {

            this.awsIamRole = awsIamRole;
            return this;
        }
        @CustomType.Setter
        public Builder azureManagedIdentity(@Nullable GetStorageCredentialStorageCredentialInfoAzureManagedIdentity azureManagedIdentity) {

            this.azureManagedIdentity = azureManagedIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder azureServicePrincipal(@Nullable GetStorageCredentialStorageCredentialInfoAzureServicePrincipal azureServicePrincipal) {

            this.azureServicePrincipal = azureServicePrincipal;
            return this;
        }
        @CustomType.Setter
        public Builder cloudflareApiToken(@Nullable GetStorageCredentialStorageCredentialInfoCloudflareApiToken cloudflareApiToken) {

            this.cloudflareApiToken = cloudflareApiToken;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable Integer createdAt) {

            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {

            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder databricksGcpServiceAccount(@Nullable GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccount databricksGcpServiceAccount) {

            this.databricksGcpServiceAccount = databricksGcpServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {

            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable Integer updatedAt) {

            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable String updatedBy) {

            this.updatedBy = updatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder usedForManagedStorage(@Nullable Boolean usedForManagedStorage) {

            this.usedForManagedStorage = usedForManagedStorage;
            return this;
        }
        public GetStorageCredentialStorageCredentialInfo build() {
            final var _resultValue = new GetStorageCredentialStorageCredentialInfo();
            _resultValue.awsIamRole = awsIamRole;
            _resultValue.azureManagedIdentity = azureManagedIdentity;
            _resultValue.azureServicePrincipal = azureServicePrincipal;
            _resultValue.cloudflareApiToken = cloudflareApiToken;
            _resultValue.comment = comment;
            _resultValue.createdAt = createdAt;
            _resultValue.createdBy = createdBy;
            _resultValue.databricksGcpServiceAccount = databricksGcpServiceAccount;
            _resultValue.id = id;
            _resultValue.metastoreId = metastoreId;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.readOnly = readOnly;
            _resultValue.updatedAt = updatedAt;
            _resultValue.updatedBy = updatedBy;
            _resultValue.usedForManagedStorage = usedForManagedStorage;
            return _resultValue;
        }
    }
}
