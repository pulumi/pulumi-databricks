// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTableTableInfoRowFilter {
    private String functionName;
    private List<String> inputColumnNames;

    private GetTableTableInfoRowFilter() {}
    public String functionName() {
        return this.functionName;
    }
    public List<String> inputColumnNames() {
        return this.inputColumnNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableTableInfoRowFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String functionName;
        private List<String> inputColumnNames;
        public Builder() {}
        public Builder(GetTableTableInfoRowFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionName = defaults.functionName;
    	      this.inputColumnNames = defaults.inputColumnNames;
        }

        @CustomType.Setter
        public Builder functionName(String functionName) {
            if (functionName == null) {
              throw new MissingRequiredPropertyException("GetTableTableInfoRowFilter", "functionName");
            }
            this.functionName = functionName;
            return this;
        }
        @CustomType.Setter
        public Builder inputColumnNames(List<String> inputColumnNames) {
            if (inputColumnNames == null) {
              throw new MissingRequiredPropertyException("GetTableTableInfoRowFilter", "inputColumnNames");
            }
            this.inputColumnNames = inputColumnNames;
            return this;
        }
        public Builder inputColumnNames(String... inputColumnNames) {
            return inputColumnNames(List.of(inputColumnNames));
        }
        public GetTableTableInfoRowFilter build() {
            final var _resultValue = new GetTableTableInfoRowFilter();
            _resultValue.functionName = functionName;
            _resultValue.inputColumnNames = inputColumnNames;
            return _resultValue;
        }
    }
}
