// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessControlRuleSetGrantRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessControlRuleSetGrantRuleArgs Empty = new AccessControlRuleSetGrantRuleArgs();

    @Import(name="principals")
    private @Nullable Output<List<String>> principals;

    public Optional<Output<List<String>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    private AccessControlRuleSetGrantRuleArgs() {}

    private AccessControlRuleSetGrantRuleArgs(AccessControlRuleSetGrantRuleArgs $) {
        this.principals = $.principals;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessControlRuleSetGrantRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessControlRuleSetGrantRuleArgs $;

        public Builder() {
            $ = new AccessControlRuleSetGrantRuleArgs();
        }

        public Builder(AccessControlRuleSetGrantRuleArgs defaults) {
            $ = new AccessControlRuleSetGrantRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder principals(@Nullable Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public AccessControlRuleSetGrantRuleArgs build() {
            if ($.role == null) {
                throw new MissingRequiredPropertyException("AccessControlRuleSetGrantRuleArgs", "role");
            }
            return $;
        }
    }

}
