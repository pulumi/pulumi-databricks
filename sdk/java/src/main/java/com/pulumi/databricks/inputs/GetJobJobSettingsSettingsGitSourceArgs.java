// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsGitSourceJobSourceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJobJobSettingsSettingsGitSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetJobJobSettingsSettingsGitSourceArgs Empty = new GetJobJobSettingsSettingsGitSourceArgs();

    @Import(name="branch")
    private @Nullable Output<String> branch;

    public Optional<Output<String>> branch() {
        return Optional.ofNullable(this.branch);
    }

    @Import(name="commit")
    private @Nullable Output<String> commit;

    public Optional<Output<String>> commit() {
        return Optional.ofNullable(this.commit);
    }

    @Import(name="jobSource")
    private @Nullable Output<GetJobJobSettingsSettingsGitSourceJobSourceArgs> jobSource;

    public Optional<Output<GetJobJobSettingsSettingsGitSourceJobSourceArgs>> jobSource() {
        return Optional.ofNullable(this.jobSource);
    }

    @Import(name="provider")
    private @Nullable Output<String> provider;

    public Optional<Output<String>> provider() {
        return Optional.ofNullable(this.provider);
    }

    @Import(name="tag")
    private @Nullable Output<String> tag;

    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    private GetJobJobSettingsSettingsGitSourceArgs() {}

    private GetJobJobSettingsSettingsGitSourceArgs(GetJobJobSettingsSettingsGitSourceArgs $) {
        this.branch = $.branch;
        this.commit = $.commit;
        this.jobSource = $.jobSource;
        this.provider = $.provider;
        this.tag = $.tag;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobJobSettingsSettingsGitSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobJobSettingsSettingsGitSourceArgs $;

        public Builder() {
            $ = new GetJobJobSettingsSettingsGitSourceArgs();
        }

        public Builder(GetJobJobSettingsSettingsGitSourceArgs defaults) {
            $ = new GetJobJobSettingsSettingsGitSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder branch(@Nullable Output<String> branch) {
            $.branch = branch;
            return this;
        }

        public Builder branch(String branch) {
            return branch(Output.of(branch));
        }

        public Builder commit(@Nullable Output<String> commit) {
            $.commit = commit;
            return this;
        }

        public Builder commit(String commit) {
            return commit(Output.of(commit));
        }

        public Builder jobSource(@Nullable Output<GetJobJobSettingsSettingsGitSourceJobSourceArgs> jobSource) {
            $.jobSource = jobSource;
            return this;
        }

        public Builder jobSource(GetJobJobSettingsSettingsGitSourceJobSourceArgs jobSource) {
            return jobSource(Output.of(jobSource));
        }

        public Builder provider(@Nullable Output<String> provider) {
            $.provider = provider;
            return this;
        }

        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public GetJobJobSettingsSettingsGitSourceArgs build() {
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
