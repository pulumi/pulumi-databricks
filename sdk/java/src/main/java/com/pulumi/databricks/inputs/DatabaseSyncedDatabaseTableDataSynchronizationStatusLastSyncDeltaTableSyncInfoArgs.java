// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs Empty = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs();

    /**
     * (string) - The timestamp when the above Delta version was committed in the source Delta table.
     * Note: This is the Delta commit time, not the time the data was written to the synced table
     * 
     */
    @Import(name="deltaCommitTimestamp")
    private @Nullable Output<String> deltaCommitTimestamp;

    /**
     * @return (string) - The timestamp when the above Delta version was committed in the source Delta table.
     * Note: This is the Delta commit time, not the time the data was written to the synced table
     * 
     */
    public Optional<Output<String>> deltaCommitTimestamp() {
        return Optional.ofNullable(this.deltaCommitTimestamp);
    }

    /**
     * (integer) - The Delta Lake commit version that was last successfully synced
     * 
     */
    @Import(name="deltaCommitVersion")
    private @Nullable Output<Integer> deltaCommitVersion;

    /**
     * @return (integer) - The Delta Lake commit version that was last successfully synced
     * 
     */
    public Optional<Output<Integer>> deltaCommitVersion() {
        return Optional.ofNullable(this.deltaCommitVersion);
    }

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs() {}

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs $) {
        this.deltaCommitTimestamp = $.deltaCommitTimestamp;
        this.deltaCommitVersion = $.deltaCommitVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs $;

        public Builder() {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs();
        }

        public Builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs defaults) {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deltaCommitTimestamp (string) - The timestamp when the above Delta version was committed in the source Delta table.
         * Note: This is the Delta commit time, not the time the data was written to the synced table
         * 
         * @return builder
         * 
         */
        public Builder deltaCommitTimestamp(@Nullable Output<String> deltaCommitTimestamp) {
            $.deltaCommitTimestamp = deltaCommitTimestamp;
            return this;
        }

        /**
         * @param deltaCommitTimestamp (string) - The timestamp when the above Delta version was committed in the source Delta table.
         * Note: This is the Delta commit time, not the time the data was written to the synced table
         * 
         * @return builder
         * 
         */
        public Builder deltaCommitTimestamp(String deltaCommitTimestamp) {
            return deltaCommitTimestamp(Output.of(deltaCommitTimestamp));
        }

        /**
         * @param deltaCommitVersion (integer) - The Delta Lake commit version that was last successfully synced
         * 
         * @return builder
         * 
         */
        public Builder deltaCommitVersion(@Nullable Output<Integer> deltaCommitVersion) {
            $.deltaCommitVersion = deltaCommitVersion;
            return this;
        }

        /**
         * @param deltaCommitVersion (integer) - The Delta Lake commit version that was last successfully synced
         * 
         * @return builder
         * 
         */
        public Builder deltaCommitVersion(Integer deltaCommitVersion) {
            return deltaCommitVersion(Output.of(deltaCommitVersion));
        }

        public DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs build() {
            return $;
        }
    }

}
