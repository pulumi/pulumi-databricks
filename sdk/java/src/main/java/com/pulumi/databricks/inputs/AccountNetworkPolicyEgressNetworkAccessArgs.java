// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs;
import com.pulumi.databricks.inputs.AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs;
import com.pulumi.databricks.inputs.AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountNetworkPolicyEgressNetworkAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountNetworkPolicyEgressNetworkAccessArgs Empty = new AccountNetworkPolicyEgressNetworkAccessArgs();

    /**
     * List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
     * 
     */
    @Import(name="allowedInternetDestinations")
    private @Nullable Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs>> allowedInternetDestinations;

    /**
     * @return List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
     * 
     */
    public Optional<Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs>>> allowedInternetDestinations() {
        return Optional.ofNullable(this.allowedInternetDestinations);
    }

    /**
     * List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
     * 
     */
    @Import(name="allowedStorageDestinations")
    private @Nullable Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs>> allowedStorageDestinations;

    /**
     * @return List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
     * 
     */
    public Optional<Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs>>> allowedStorageDestinations() {
        return Optional.ofNullable(this.allowedStorageDestinations);
    }

    /**
     * Optional. When policyEnforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
     * 
     */
    @Import(name="policyEnforcement")
    private @Nullable Output<AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs> policyEnforcement;

    /**
     * @return Optional. When policyEnforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
     * 
     */
    public Optional<Output<AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs>> policyEnforcement() {
        return Optional.ofNullable(this.policyEnforcement);
    }

    /**
     * The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
     * 
     */
    @Import(name="restrictionMode", required=true)
    private Output<String> restrictionMode;

    /**
     * @return The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
     * 
     */
    public Output<String> restrictionMode() {
        return this.restrictionMode;
    }

    private AccountNetworkPolicyEgressNetworkAccessArgs() {}

    private AccountNetworkPolicyEgressNetworkAccessArgs(AccountNetworkPolicyEgressNetworkAccessArgs $) {
        this.allowedInternetDestinations = $.allowedInternetDestinations;
        this.allowedStorageDestinations = $.allowedStorageDestinations;
        this.policyEnforcement = $.policyEnforcement;
        this.restrictionMode = $.restrictionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountNetworkPolicyEgressNetworkAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountNetworkPolicyEgressNetworkAccessArgs $;

        public Builder() {
            $ = new AccountNetworkPolicyEgressNetworkAccessArgs();
        }

        public Builder(AccountNetworkPolicyEgressNetworkAccessArgs defaults) {
            $ = new AccountNetworkPolicyEgressNetworkAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedInternetDestinations List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedInternetDestinations(@Nullable Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs>> allowedInternetDestinations) {
            $.allowedInternetDestinations = allowedInternetDestinations;
            return this;
        }

        /**
         * @param allowedInternetDestinations List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedInternetDestinations(List<AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs> allowedInternetDestinations) {
            return allowedInternetDestinations(Output.of(allowedInternetDestinations));
        }

        /**
         * @param allowedInternetDestinations List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedInternetDestinations(AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs... allowedInternetDestinations) {
            return allowedInternetDestinations(List.of(allowedInternetDestinations));
        }

        /**
         * @param allowedStorageDestinations List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedStorageDestinations(@Nullable Output<List<AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs>> allowedStorageDestinations) {
            $.allowedStorageDestinations = allowedStorageDestinations;
            return this;
        }

        /**
         * @param allowedStorageDestinations List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedStorageDestinations(List<AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs> allowedStorageDestinations) {
            return allowedStorageDestinations(Output.of(allowedStorageDestinations));
        }

        /**
         * @param allowedStorageDestinations List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
         * 
         * @return builder
         * 
         */
        public Builder allowedStorageDestinations(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs... allowedStorageDestinations) {
            return allowedStorageDestinations(List.of(allowedStorageDestinations));
        }

        /**
         * @param policyEnforcement Optional. When policyEnforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
         * 
         * @return builder
         * 
         */
        public Builder policyEnforcement(@Nullable Output<AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs> policyEnforcement) {
            $.policyEnforcement = policyEnforcement;
            return this;
        }

        /**
         * @param policyEnforcement Optional. When policyEnforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
         * 
         * @return builder
         * 
         */
        public Builder policyEnforcement(AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs policyEnforcement) {
            return policyEnforcement(Output.of(policyEnforcement));
        }

        /**
         * @param restrictionMode The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
         * 
         * @return builder
         * 
         */
        public Builder restrictionMode(Output<String> restrictionMode) {
            $.restrictionMode = restrictionMode;
            return this;
        }

        /**
         * @param restrictionMode The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
         * 
         * @return builder
         * 
         */
        public Builder restrictionMode(String restrictionMode) {
            return restrictionMode(Output.of(restrictionMode));
        }

        public AccountNetworkPolicyEgressNetworkAccessArgs build() {
            if ($.restrictionMode == null) {
                throw new MissingRequiredPropertyException("AccountNetworkPolicyEgressNetworkAccessArgs", "restrictionMode");
            }
            return $;
        }
    }

}
