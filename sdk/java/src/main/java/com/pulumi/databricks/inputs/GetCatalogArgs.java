// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetCatalogCatalogInfoArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogArgs Empty = new GetCatalogArgs();

    /**
     * the [CatalogInfo](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/catalog#CatalogInfo) object for a Unity Catalog catalog. This contains the following attributes (see ):
     * 
     */
    @Import(name="catalogInfo")
    private @Nullable Output<GetCatalogCatalogInfoArgs> catalogInfo;

    /**
     * @return the [CatalogInfo](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/catalog#CatalogInfo) object for a Unity Catalog catalog. This contains the following attributes (see ):
     * 
     */
    public Optional<Output<GetCatalogCatalogInfoArgs>> catalogInfo() {
        return Optional.ofNullable(this.catalogInfo);
    }

    /**
     * same as the `name`
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return same as the `name`
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * name of the catalog
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return name of the catalog
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetCatalogArgs() {}

    private GetCatalogArgs(GetCatalogArgs $) {
        this.catalogInfo = $.catalogInfo;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogArgs $;

        public Builder() {
            $ = new GetCatalogArgs();
        }

        public Builder(GetCatalogArgs defaults) {
            $ = new GetCatalogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogInfo the [CatalogInfo](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/catalog#CatalogInfo) object for a Unity Catalog catalog. This contains the following attributes (see ):
         * 
         * @return builder
         * 
         */
        public Builder catalogInfo(@Nullable Output<GetCatalogCatalogInfoArgs> catalogInfo) {
            $.catalogInfo = catalogInfo;
            return this;
        }

        /**
         * @param catalogInfo the [CatalogInfo](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/catalog#CatalogInfo) object for a Unity Catalog catalog. This contains the following attributes (see ):
         * 
         * @return builder
         * 
         */
        public Builder catalogInfo(GetCatalogCatalogInfoArgs catalogInfo) {
            return catalogInfo(Output.of(catalogInfo));
        }

        /**
         * @param id same as the `name`
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id same as the `name`
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name name of the catalog
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name name of the catalog
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetCatalogArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetCatalogArgs", "name");
            }
            return $;
        }
    }

}
