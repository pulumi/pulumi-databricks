// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetFunctionsFunctionArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFunctionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFunctionsArgs Empty = new GetFunctionsArgs();

    /**
     * Name of databricks_catalog.
     * 
     */
    @Import(name="catalogName", required=true)
    private Output<String> catalogName;

    /**
     * @return Name of databricks_catalog.
     * 
     */
    public Output<String> catalogName() {
        return this.catalogName;
    }

    /**
     * list of objects describing individual UDF. Each object consists of the following attributes (refer to [REST API documentation](https://docs.databricks.com/api/workspace/functions/list#functions) for up-to-date list of attributes. Default type is String):
     * 
     */
    @Import(name="functions")
    private @Nullable Output<List<GetFunctionsFunctionArgs>> functions;

    /**
     * @return list of objects describing individual UDF. Each object consists of the following attributes (refer to [REST API documentation](https://docs.databricks.com/api/workspace/functions/list#functions) for up-to-date list of attributes. Default type is String):
     * 
     */
    public Optional<Output<List<GetFunctionsFunctionArgs>>> functions() {
        return Optional.ofNullable(this.functions);
    }

    /**
     * flag to specify if include UDFs in the response for which the principal can only access selective metadata for.
     * 
     */
    @Import(name="includeBrowse")
    private @Nullable Output<Boolean> includeBrowse;

    /**
     * @return flag to specify if include UDFs in the response for which the principal can only access selective metadata for.
     * 
     */
    public Optional<Output<Boolean>> includeBrowse() {
        return Optional.ofNullable(this.includeBrowse);
    }

    /**
     * Name of databricks_schema.
     * 
     */
    @Import(name="schemaName", required=true)
    private Output<String> schemaName;

    /**
     * @return Name of databricks_schema.
     * 
     */
    public Output<String> schemaName() {
        return this.schemaName;
    }

    private GetFunctionsArgs() {}

    private GetFunctionsArgs(GetFunctionsArgs $) {
        this.catalogName = $.catalogName;
        this.functions = $.functions;
        this.includeBrowse = $.includeBrowse;
        this.schemaName = $.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFunctionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFunctionsArgs $;

        public Builder() {
            $ = new GetFunctionsArgs();
        }

        public Builder(GetFunctionsArgs defaults) {
            $ = new GetFunctionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogName Name of databricks_catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalogName(Output<String> catalogName) {
            $.catalogName = catalogName;
            return this;
        }

        /**
         * @param catalogName Name of databricks_catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalogName(String catalogName) {
            return catalogName(Output.of(catalogName));
        }

        /**
         * @param functions list of objects describing individual UDF. Each object consists of the following attributes (refer to [REST API documentation](https://docs.databricks.com/api/workspace/functions/list#functions) for up-to-date list of attributes. Default type is String):
         * 
         * @return builder
         * 
         */
        public Builder functions(@Nullable Output<List<GetFunctionsFunctionArgs>> functions) {
            $.functions = functions;
            return this;
        }

        /**
         * @param functions list of objects describing individual UDF. Each object consists of the following attributes (refer to [REST API documentation](https://docs.databricks.com/api/workspace/functions/list#functions) for up-to-date list of attributes. Default type is String):
         * 
         * @return builder
         * 
         */
        public Builder functions(List<GetFunctionsFunctionArgs> functions) {
            return functions(Output.of(functions));
        }

        /**
         * @param functions list of objects describing individual UDF. Each object consists of the following attributes (refer to [REST API documentation](https://docs.databricks.com/api/workspace/functions/list#functions) for up-to-date list of attributes. Default type is String):
         * 
         * @return builder
         * 
         */
        public Builder functions(GetFunctionsFunctionArgs... functions) {
            return functions(List.of(functions));
        }

        /**
         * @param includeBrowse flag to specify if include UDFs in the response for which the principal can only access selective metadata for.
         * 
         * @return builder
         * 
         */
        public Builder includeBrowse(@Nullable Output<Boolean> includeBrowse) {
            $.includeBrowse = includeBrowse;
            return this;
        }

        /**
         * @param includeBrowse flag to specify if include UDFs in the response for which the principal can only access selective metadata for.
         * 
         * @return builder
         * 
         */
        public Builder includeBrowse(Boolean includeBrowse) {
            return includeBrowse(Output.of(includeBrowse));
        }

        /**
         * @param schemaName Name of databricks_schema.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(Output<String> schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        /**
         * @param schemaName Name of databricks_schema.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(String schemaName) {
            return schemaName(Output.of(schemaName));
        }

        public GetFunctionsArgs build() {
            if ($.catalogName == null) {
                throw new MissingRequiredPropertyException("GetFunctionsArgs", "catalogName");
            }
            if ($.schemaName == null) {
                throw new MissingRequiredPropertyException("GetFunctionsArgs", "schemaName");
            }
            return $;
        }
    }

}
