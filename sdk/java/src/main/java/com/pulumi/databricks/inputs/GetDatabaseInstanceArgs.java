// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseInstanceArgs Empty = new GetDatabaseInstanceArgs();

    /**
     * (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<String> capacity;

    /**
     * @return (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    public Optional<Output<String>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The name of the instance. This is the unique identifier for the instance
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the instance. This is the unique identifier for the instance
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (boolean) - Whether the instance is stopped
     * 
     */
    @Import(name="stopped")
    private @Nullable Output<Boolean> stopped;

    /**
     * @return (boolean) - Whether the instance is stopped
     * 
     */
    public Optional<Output<Boolean>> stopped() {
        return Optional.ofNullable(this.stopped);
    }

    private GetDatabaseInstanceArgs() {}

    private GetDatabaseInstanceArgs(GetDatabaseInstanceArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
        this.stopped = $.stopped;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseInstanceArgs $;

        public Builder() {
            $ = new GetDatabaseInstanceArgs();
        }

        public Builder(GetDatabaseInstanceArgs defaults) {
            $ = new GetDatabaseInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<String> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
         * 
         * @return builder
         * 
         */
        public Builder capacity(String capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param name The name of the instance. This is the unique identifier for the instance
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the instance. This is the unique identifier for the instance
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param stopped (boolean) - Whether the instance is stopped
         * 
         * @return builder
         * 
         */
        public Builder stopped(@Nullable Output<Boolean> stopped) {
            $.stopped = stopped;
            return this;
        }

        /**
         * @param stopped (boolean) - Whether the instance is stopped
         * 
         * @return builder
         * 
         */
        public Builder stopped(Boolean stopped) {
            return stopped(Output.of(stopped));
        }

        public GetDatabaseInstanceArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDatabaseInstanceArgs", "name");
            }
            return $;
        }
    }

}
