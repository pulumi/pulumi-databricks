// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetClusterClusterInfoAutoscale;
import com.pulumi.databricks.inputs.GetClusterClusterInfoAwsAttributes;
import com.pulumi.databricks.inputs.GetClusterClusterInfoAzureAttributes;
import com.pulumi.databricks.inputs.GetClusterClusterInfoClusterLogConf;
import com.pulumi.databricks.inputs.GetClusterClusterInfoClusterLogStatus;
import com.pulumi.databricks.inputs.GetClusterClusterInfoDockerImage;
import com.pulumi.databricks.inputs.GetClusterClusterInfoDriver;
import com.pulumi.databricks.inputs.GetClusterClusterInfoExecutor;
import com.pulumi.databricks.inputs.GetClusterClusterInfoGcpAttributes;
import com.pulumi.databricks.inputs.GetClusterClusterInfoInitScript;
import com.pulumi.databricks.inputs.GetClusterClusterInfoSpec;
import com.pulumi.databricks.inputs.GetClusterClusterInfoTerminationReason;
import com.pulumi.databricks.inputs.GetClusterClusterInfoWorkloadType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterClusterInfo extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterClusterInfo Empty = new GetClusterClusterInfo();

    @Import(name="autoscale")
    private @Nullable GetClusterClusterInfoAutoscale autoscale;

    public Optional<GetClusterClusterInfoAutoscale> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }

    @Import(name="autoterminationMinutes")
    private @Nullable Integer autoterminationMinutes;

    public Optional<Integer> autoterminationMinutes() {
        return Optional.ofNullable(this.autoterminationMinutes);
    }

    @Import(name="awsAttributes")
    private @Nullable GetClusterClusterInfoAwsAttributes awsAttributes;

    public Optional<GetClusterClusterInfoAwsAttributes> awsAttributes() {
        return Optional.ofNullable(this.awsAttributes);
    }

    @Import(name="azureAttributes")
    private @Nullable GetClusterClusterInfoAzureAttributes azureAttributes;

    public Optional<GetClusterClusterInfoAzureAttributes> azureAttributes() {
        return Optional.ofNullable(this.azureAttributes);
    }

    @Import(name="clusterCores")
    private @Nullable Double clusterCores;

    public Optional<Double> clusterCores() {
        return Optional.ofNullable(this.clusterCores);
    }

    @Import(name="clusterId")
    private @Nullable String clusterId;

    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="clusterLogConf")
    private @Nullable GetClusterClusterInfoClusterLogConf clusterLogConf;

    public Optional<GetClusterClusterInfoClusterLogConf> clusterLogConf() {
        return Optional.ofNullable(this.clusterLogConf);
    }

    @Import(name="clusterLogStatus")
    private @Nullable GetClusterClusterInfoClusterLogStatus clusterLogStatus;

    public Optional<GetClusterClusterInfoClusterLogStatus> clusterLogStatus() {
        return Optional.ofNullable(this.clusterLogStatus);
    }

    @Import(name="clusterMemoryMb")
    private @Nullable Integer clusterMemoryMb;

    public Optional<Integer> clusterMemoryMb() {
        return Optional.ofNullable(this.clusterMemoryMb);
    }

    @Import(name="clusterName")
    private @Nullable String clusterName;

    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    @Import(name="clusterSource")
    private @Nullable String clusterSource;

    public Optional<String> clusterSource() {
        return Optional.ofNullable(this.clusterSource);
    }

    @Import(name="creatorUserName")
    private @Nullable String creatorUserName;

    public Optional<String> creatorUserName() {
        return Optional.ofNullable(this.creatorUserName);
    }

    @Import(name="customTags")
    private @Nullable Map<String,String> customTags;

    public Optional<Map<String,String>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    @Import(name="dataSecurityMode")
    private @Nullable String dataSecurityMode;

    public Optional<String> dataSecurityMode() {
        return Optional.ofNullable(this.dataSecurityMode);
    }

    @Import(name="defaultTags")
    private @Nullable Map<String,String> defaultTags;

    public Optional<Map<String,String>> defaultTags() {
        return Optional.ofNullable(this.defaultTags);
    }

    @Import(name="dockerImage")
    private @Nullable GetClusterClusterInfoDockerImage dockerImage;

    public Optional<GetClusterClusterInfoDockerImage> dockerImage() {
        return Optional.ofNullable(this.dockerImage);
    }

    @Import(name="driver")
    private @Nullable GetClusterClusterInfoDriver driver;

    public Optional<GetClusterClusterInfoDriver> driver() {
        return Optional.ofNullable(this.driver);
    }

    @Import(name="driverInstancePoolId")
    private @Nullable String driverInstancePoolId;

    public Optional<String> driverInstancePoolId() {
        return Optional.ofNullable(this.driverInstancePoolId);
    }

    @Import(name="driverNodeTypeId")
    private @Nullable String driverNodeTypeId;

    public Optional<String> driverNodeTypeId() {
        return Optional.ofNullable(this.driverNodeTypeId);
    }

    @Import(name="enableElasticDisk")
    private @Nullable Boolean enableElasticDisk;

    public Optional<Boolean> enableElasticDisk() {
        return Optional.ofNullable(this.enableElasticDisk);
    }

    @Import(name="enableLocalDiskEncryption")
    private @Nullable Boolean enableLocalDiskEncryption;

    public Optional<Boolean> enableLocalDiskEncryption() {
        return Optional.ofNullable(this.enableLocalDiskEncryption);
    }

    @Import(name="executors")
    private @Nullable List<GetClusterClusterInfoExecutor> executors;

    public Optional<List<GetClusterClusterInfoExecutor>> executors() {
        return Optional.ofNullable(this.executors);
    }

    @Import(name="gcpAttributes")
    private @Nullable GetClusterClusterInfoGcpAttributes gcpAttributes;

    public Optional<GetClusterClusterInfoGcpAttributes> gcpAttributes() {
        return Optional.ofNullable(this.gcpAttributes);
    }

    @Import(name="initScripts")
    private @Nullable List<GetClusterClusterInfoInitScript> initScripts;

    public Optional<List<GetClusterClusterInfoInitScript>> initScripts() {
        return Optional.ofNullable(this.initScripts);
    }

    @Import(name="instancePoolId")
    private @Nullable String instancePoolId;

    public Optional<String> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }

    @Import(name="isSingleNode")
    private @Nullable Boolean isSingleNode;

    public Optional<Boolean> isSingleNode() {
        return Optional.ofNullable(this.isSingleNode);
    }

    @Import(name="jdbcPort")
    private @Nullable Integer jdbcPort;

    public Optional<Integer> jdbcPort() {
        return Optional.ofNullable(this.jdbcPort);
    }

    @Import(name="kind")
    private @Nullable String kind;

    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="lastRestartedTime")
    private @Nullable Integer lastRestartedTime;

    public Optional<Integer> lastRestartedTime() {
        return Optional.ofNullable(this.lastRestartedTime);
    }

    @Import(name="lastStateLossTime")
    private @Nullable Integer lastStateLossTime;

    public Optional<Integer> lastStateLossTime() {
        return Optional.ofNullable(this.lastStateLossTime);
    }

    @Import(name="nodeTypeId")
    private @Nullable String nodeTypeId;

    public Optional<String> nodeTypeId() {
        return Optional.ofNullable(this.nodeTypeId);
    }

    @Import(name="numWorkers")
    private @Nullable Integer numWorkers;

    public Optional<Integer> numWorkers() {
        return Optional.ofNullable(this.numWorkers);
    }

    @Import(name="policyId")
    private @Nullable String policyId;

    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    @Import(name="runtimeEngine")
    private @Nullable String runtimeEngine;

    public Optional<String> runtimeEngine() {
        return Optional.ofNullable(this.runtimeEngine);
    }

    @Import(name="singleUserName")
    private @Nullable String singleUserName;

    public Optional<String> singleUserName() {
        return Optional.ofNullable(this.singleUserName);
    }

    @Import(name="sparkConf")
    private @Nullable Map<String,String> sparkConf;

    public Optional<Map<String,String>> sparkConf() {
        return Optional.ofNullable(this.sparkConf);
    }

    @Import(name="sparkContextId")
    private @Nullable Integer sparkContextId;

    public Optional<Integer> sparkContextId() {
        return Optional.ofNullable(this.sparkContextId);
    }

    @Import(name="sparkEnvVars")
    private @Nullable Map<String,String> sparkEnvVars;

    public Optional<Map<String,String>> sparkEnvVars() {
        return Optional.ofNullable(this.sparkEnvVars);
    }

    @Import(name="sparkVersion")
    private @Nullable String sparkVersion;

    public Optional<String> sparkVersion() {
        return Optional.ofNullable(this.sparkVersion);
    }

    @Import(name="spec")
    private @Nullable GetClusterClusterInfoSpec spec;

    public Optional<GetClusterClusterInfoSpec> spec() {
        return Optional.ofNullable(this.spec);
    }

    @Import(name="sshPublicKeys")
    private @Nullable List<String> sshPublicKeys;

    public Optional<List<String>> sshPublicKeys() {
        return Optional.ofNullable(this.sshPublicKeys);
    }

    @Import(name="startTime")
    private @Nullable Integer startTime;

    public Optional<Integer> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="stateMessage")
    private @Nullable String stateMessage;

    public Optional<String> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }

    @Import(name="terminatedTime")
    private @Nullable Integer terminatedTime;

    public Optional<Integer> terminatedTime() {
        return Optional.ofNullable(this.terminatedTime);
    }

    @Import(name="terminationReason")
    private @Nullable GetClusterClusterInfoTerminationReason terminationReason;

    public Optional<GetClusterClusterInfoTerminationReason> terminationReason() {
        return Optional.ofNullable(this.terminationReason);
    }

    @Import(name="useMlRuntime")
    private @Nullable Boolean useMlRuntime;

    public Optional<Boolean> useMlRuntime() {
        return Optional.ofNullable(this.useMlRuntime);
    }

    @Import(name="workloadType")
    private @Nullable GetClusterClusterInfoWorkloadType workloadType;

    public Optional<GetClusterClusterInfoWorkloadType> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    private GetClusterClusterInfo() {}

    private GetClusterClusterInfo(GetClusterClusterInfo $) {
        this.autoscale = $.autoscale;
        this.autoterminationMinutes = $.autoterminationMinutes;
        this.awsAttributes = $.awsAttributes;
        this.azureAttributes = $.azureAttributes;
        this.clusterCores = $.clusterCores;
        this.clusterId = $.clusterId;
        this.clusterLogConf = $.clusterLogConf;
        this.clusterLogStatus = $.clusterLogStatus;
        this.clusterMemoryMb = $.clusterMemoryMb;
        this.clusterName = $.clusterName;
        this.clusterSource = $.clusterSource;
        this.creatorUserName = $.creatorUserName;
        this.customTags = $.customTags;
        this.dataSecurityMode = $.dataSecurityMode;
        this.defaultTags = $.defaultTags;
        this.dockerImage = $.dockerImage;
        this.driver = $.driver;
        this.driverInstancePoolId = $.driverInstancePoolId;
        this.driverNodeTypeId = $.driverNodeTypeId;
        this.enableElasticDisk = $.enableElasticDisk;
        this.enableLocalDiskEncryption = $.enableLocalDiskEncryption;
        this.executors = $.executors;
        this.gcpAttributes = $.gcpAttributes;
        this.initScripts = $.initScripts;
        this.instancePoolId = $.instancePoolId;
        this.isSingleNode = $.isSingleNode;
        this.jdbcPort = $.jdbcPort;
        this.kind = $.kind;
        this.lastRestartedTime = $.lastRestartedTime;
        this.lastStateLossTime = $.lastStateLossTime;
        this.nodeTypeId = $.nodeTypeId;
        this.numWorkers = $.numWorkers;
        this.policyId = $.policyId;
        this.runtimeEngine = $.runtimeEngine;
        this.singleUserName = $.singleUserName;
        this.sparkConf = $.sparkConf;
        this.sparkContextId = $.sparkContextId;
        this.sparkEnvVars = $.sparkEnvVars;
        this.sparkVersion = $.sparkVersion;
        this.spec = $.spec;
        this.sshPublicKeys = $.sshPublicKeys;
        this.startTime = $.startTime;
        this.state = $.state;
        this.stateMessage = $.stateMessage;
        this.terminatedTime = $.terminatedTime;
        this.terminationReason = $.terminationReason;
        this.useMlRuntime = $.useMlRuntime;
        this.workloadType = $.workloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterClusterInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterClusterInfo $;

        public Builder() {
            $ = new GetClusterClusterInfo();
        }

        public Builder(GetClusterClusterInfo defaults) {
            $ = new GetClusterClusterInfo(Objects.requireNonNull(defaults));
        }

        public Builder autoscale(@Nullable GetClusterClusterInfoAutoscale autoscale) {
            $.autoscale = autoscale;
            return this;
        }

        public Builder autoterminationMinutes(@Nullable Integer autoterminationMinutes) {
            $.autoterminationMinutes = autoterminationMinutes;
            return this;
        }

        public Builder awsAttributes(@Nullable GetClusterClusterInfoAwsAttributes awsAttributes) {
            $.awsAttributes = awsAttributes;
            return this;
        }

        public Builder azureAttributes(@Nullable GetClusterClusterInfoAzureAttributes azureAttributes) {
            $.azureAttributes = azureAttributes;
            return this;
        }

        public Builder clusterCores(@Nullable Double clusterCores) {
            $.clusterCores = clusterCores;
            return this;
        }

        public Builder clusterId(@Nullable String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterLogConf(@Nullable GetClusterClusterInfoClusterLogConf clusterLogConf) {
            $.clusterLogConf = clusterLogConf;
            return this;
        }

        public Builder clusterLogStatus(@Nullable GetClusterClusterInfoClusterLogStatus clusterLogStatus) {
            $.clusterLogStatus = clusterLogStatus;
            return this;
        }

        public Builder clusterMemoryMb(@Nullable Integer clusterMemoryMb) {
            $.clusterMemoryMb = clusterMemoryMb;
            return this;
        }

        public Builder clusterName(@Nullable String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterSource(@Nullable String clusterSource) {
            $.clusterSource = clusterSource;
            return this;
        }

        public Builder creatorUserName(@Nullable String creatorUserName) {
            $.creatorUserName = creatorUserName;
            return this;
        }

        public Builder customTags(@Nullable Map<String,String> customTags) {
            $.customTags = customTags;
            return this;
        }

        public Builder dataSecurityMode(@Nullable String dataSecurityMode) {
            $.dataSecurityMode = dataSecurityMode;
            return this;
        }

        public Builder defaultTags(@Nullable Map<String,String> defaultTags) {
            $.defaultTags = defaultTags;
            return this;
        }

        public Builder dockerImage(@Nullable GetClusterClusterInfoDockerImage dockerImage) {
            $.dockerImage = dockerImage;
            return this;
        }

        public Builder driver(@Nullable GetClusterClusterInfoDriver driver) {
            $.driver = driver;
            return this;
        }

        public Builder driverInstancePoolId(@Nullable String driverInstancePoolId) {
            $.driverInstancePoolId = driverInstancePoolId;
            return this;
        }

        public Builder driverNodeTypeId(@Nullable String driverNodeTypeId) {
            $.driverNodeTypeId = driverNodeTypeId;
            return this;
        }

        public Builder enableElasticDisk(@Nullable Boolean enableElasticDisk) {
            $.enableElasticDisk = enableElasticDisk;
            return this;
        }

        public Builder enableLocalDiskEncryption(@Nullable Boolean enableLocalDiskEncryption) {
            $.enableLocalDiskEncryption = enableLocalDiskEncryption;
            return this;
        }

        public Builder executors(@Nullable List<GetClusterClusterInfoExecutor> executors) {
            $.executors = executors;
            return this;
        }

        public Builder executors(GetClusterClusterInfoExecutor... executors) {
            return executors(List.of(executors));
        }

        public Builder gcpAttributes(@Nullable GetClusterClusterInfoGcpAttributes gcpAttributes) {
            $.gcpAttributes = gcpAttributes;
            return this;
        }

        public Builder initScripts(@Nullable List<GetClusterClusterInfoInitScript> initScripts) {
            $.initScripts = initScripts;
            return this;
        }

        public Builder initScripts(GetClusterClusterInfoInitScript... initScripts) {
            return initScripts(List.of(initScripts));
        }

        public Builder instancePoolId(@Nullable String instancePoolId) {
            $.instancePoolId = instancePoolId;
            return this;
        }

        public Builder isSingleNode(@Nullable Boolean isSingleNode) {
            $.isSingleNode = isSingleNode;
            return this;
        }

        public Builder jdbcPort(@Nullable Integer jdbcPort) {
            $.jdbcPort = jdbcPort;
            return this;
        }

        public Builder kind(@Nullable String kind) {
            $.kind = kind;
            return this;
        }

        public Builder lastRestartedTime(@Nullable Integer lastRestartedTime) {
            $.lastRestartedTime = lastRestartedTime;
            return this;
        }

        public Builder lastStateLossTime(@Nullable Integer lastStateLossTime) {
            $.lastStateLossTime = lastStateLossTime;
            return this;
        }

        public Builder nodeTypeId(@Nullable String nodeTypeId) {
            $.nodeTypeId = nodeTypeId;
            return this;
        }

        public Builder numWorkers(@Nullable Integer numWorkers) {
            $.numWorkers = numWorkers;
            return this;
        }

        public Builder policyId(@Nullable String policyId) {
            $.policyId = policyId;
            return this;
        }

        public Builder runtimeEngine(@Nullable String runtimeEngine) {
            $.runtimeEngine = runtimeEngine;
            return this;
        }

        public Builder singleUserName(@Nullable String singleUserName) {
            $.singleUserName = singleUserName;
            return this;
        }

        public Builder sparkConf(@Nullable Map<String,String> sparkConf) {
            $.sparkConf = sparkConf;
            return this;
        }

        public Builder sparkContextId(@Nullable Integer sparkContextId) {
            $.sparkContextId = sparkContextId;
            return this;
        }

        public Builder sparkEnvVars(@Nullable Map<String,String> sparkEnvVars) {
            $.sparkEnvVars = sparkEnvVars;
            return this;
        }

        public Builder sparkVersion(@Nullable String sparkVersion) {
            $.sparkVersion = sparkVersion;
            return this;
        }

        public Builder spec(@Nullable GetClusterClusterInfoSpec spec) {
            $.spec = spec;
            return this;
        }

        public Builder sshPublicKeys(@Nullable List<String> sshPublicKeys) {
            $.sshPublicKeys = sshPublicKeys;
            return this;
        }

        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }

        public Builder startTime(@Nullable Integer startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder stateMessage(@Nullable String stateMessage) {
            $.stateMessage = stateMessage;
            return this;
        }

        public Builder terminatedTime(@Nullable Integer terminatedTime) {
            $.terminatedTime = terminatedTime;
            return this;
        }

        public Builder terminationReason(@Nullable GetClusterClusterInfoTerminationReason terminationReason) {
            $.terminationReason = terminationReason;
            return this;
        }

        public Builder useMlRuntime(@Nullable Boolean useMlRuntime) {
            $.useMlRuntime = useMlRuntime;
            return this;
        }

        public Builder workloadType(@Nullable GetClusterClusterInfoWorkloadType workloadType) {
            $.workloadType = workloadType;
            return this;
        }

        public GetClusterClusterInfo build() {
            return $;
        }
    }

}
