// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetRegisteredModelModelInfoAlias;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegisteredModelModelInfo {
    private @Nullable List<GetRegisteredModelModelInfoAlias> aliases;
    private @Nullable Boolean browseOnly;
    private @Nullable String catalogName;
    private @Nullable String comment;
    private @Nullable Integer createdAt;
    private @Nullable String createdBy;
    private @Nullable String fullName;
    private @Nullable String metastoreId;
    private @Nullable String name;
    private @Nullable String owner;
    private @Nullable String schemaName;
    private @Nullable String storageLocation;
    private @Nullable Integer updatedAt;
    private @Nullable String updatedBy;

    private GetRegisteredModelModelInfo() {}
    public List<GetRegisteredModelModelInfoAlias> aliases() {
        return this.aliases == null ? List.of() : this.aliases;
    }
    public Optional<Boolean> browseOnly() {
        return Optional.ofNullable(this.browseOnly);
    }
    public Optional<String> catalogName() {
        return Optional.ofNullable(this.catalogName);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    public Optional<String> fullName() {
        return Optional.ofNullable(this.fullName);
    }
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    public Optional<String> storageLocation() {
        return Optional.ofNullable(this.storageLocation);
    }
    public Optional<Integer> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }
    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegisteredModelModelInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetRegisteredModelModelInfoAlias> aliases;
        private @Nullable Boolean browseOnly;
        private @Nullable String catalogName;
        private @Nullable String comment;
        private @Nullable Integer createdAt;
        private @Nullable String createdBy;
        private @Nullable String fullName;
        private @Nullable String metastoreId;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable String schemaName;
        private @Nullable String storageLocation;
        private @Nullable Integer updatedAt;
        private @Nullable String updatedBy;
        public Builder() {}
        public Builder(GetRegisteredModelModelInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliases = defaults.aliases;
    	      this.browseOnly = defaults.browseOnly;
    	      this.catalogName = defaults.catalogName;
    	      this.comment = defaults.comment;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.fullName = defaults.fullName;
    	      this.metastoreId = defaults.metastoreId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.schemaName = defaults.schemaName;
    	      this.storageLocation = defaults.storageLocation;
    	      this.updatedAt = defaults.updatedAt;
    	      this.updatedBy = defaults.updatedBy;
        }

        @CustomType.Setter
        public Builder aliases(@Nullable List<GetRegisteredModelModelInfoAlias> aliases) {

            this.aliases = aliases;
            return this;
        }
        public Builder aliases(GetRegisteredModelModelInfoAlias... aliases) {
            return aliases(List.of(aliases));
        }
        @CustomType.Setter
        public Builder browseOnly(@Nullable Boolean browseOnly) {

            this.browseOnly = browseOnly;
            return this;
        }
        @CustomType.Setter
        public Builder catalogName(@Nullable String catalogName) {

            this.catalogName = catalogName;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable Integer createdAt) {

            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {

            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder fullName(@Nullable String fullName) {

            this.fullName = fullName;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {

            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {

            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder storageLocation(@Nullable String storageLocation) {

            this.storageLocation = storageLocation;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable Integer updatedAt) {

            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable String updatedBy) {

            this.updatedBy = updatedBy;
            return this;
        }
        public GetRegisteredModelModelInfo build() {
            final var _resultValue = new GetRegisteredModelModelInfo();
            _resultValue.aliases = aliases;
            _resultValue.browseOnly = browseOnly;
            _resultValue.catalogName = catalogName;
            _resultValue.comment = comment;
            _resultValue.createdAt = createdAt;
            _resultValue.createdBy = createdBy;
            _resultValue.fullName = fullName;
            _resultValue.metastoreId = metastoreId;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.schemaName = schemaName;
            _resultValue.storageLocation = storageLocation;
            _resultValue.updatedAt = updatedAt;
            _resultValue.updatedBy = updatedBy;
            return _resultValue;
        }
    }
}
