// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoAwsAttributes;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoAzureAttributes;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoDiskSpec;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoGcpAttributes;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoInstancePoolFleetAttribute;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoPreloadedDockerImage;
import com.pulumi.databricks.outputs.GetInstancePoolPoolInfoStats;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancePoolPoolInfo {
    private @Nullable GetInstancePoolPoolInfoAwsAttributes awsAttributes;
    private @Nullable GetInstancePoolPoolInfoAzureAttributes azureAttributes;
    private @Nullable Map<String,Object> customTags;
    private Map<String,Object> defaultTags;
    private @Nullable GetInstancePoolPoolInfoDiskSpec diskSpec;
    private @Nullable Boolean enableElasticDisk;
    private @Nullable GetInstancePoolPoolInfoGcpAttributes gcpAttributes;
    private Integer idleInstanceAutoterminationMinutes;
    private @Nullable List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes;
    private String instancePoolId;
    private String instancePoolName;
    private @Nullable Integer maxCapacity;
    private @Nullable Integer minIdleInstances;
    private @Nullable String nodeTypeId;
    private @Nullable List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages;
    private @Nullable List<String> preloadedSparkVersions;
    private @Nullable String state;
    private @Nullable GetInstancePoolPoolInfoStats stats;

    private GetInstancePoolPoolInfo() {}
    public Optional<GetInstancePoolPoolInfoAwsAttributes> awsAttributes() {
        return Optional.ofNullable(this.awsAttributes);
    }
    public Optional<GetInstancePoolPoolInfoAzureAttributes> azureAttributes() {
        return Optional.ofNullable(this.azureAttributes);
    }
    public Map<String,Object> customTags() {
        return this.customTags == null ? Map.of() : this.customTags;
    }
    public Map<String,Object> defaultTags() {
        return this.defaultTags;
    }
    public Optional<GetInstancePoolPoolInfoDiskSpec> diskSpec() {
        return Optional.ofNullable(this.diskSpec);
    }
    public Optional<Boolean> enableElasticDisk() {
        return Optional.ofNullable(this.enableElasticDisk);
    }
    public Optional<GetInstancePoolPoolInfoGcpAttributes> gcpAttributes() {
        return Optional.ofNullable(this.gcpAttributes);
    }
    public Integer idleInstanceAutoterminationMinutes() {
        return this.idleInstanceAutoterminationMinutes;
    }
    public List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes() {
        return this.instancePoolFleetAttributes == null ? List.of() : this.instancePoolFleetAttributes;
    }
    public String instancePoolId() {
        return this.instancePoolId;
    }
    public String instancePoolName() {
        return this.instancePoolName;
    }
    public Optional<Integer> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    public Optional<Integer> minIdleInstances() {
        return Optional.ofNullable(this.minIdleInstances);
    }
    public Optional<String> nodeTypeId() {
        return Optional.ofNullable(this.nodeTypeId);
    }
    public List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages() {
        return this.preloadedDockerImages == null ? List.of() : this.preloadedDockerImages;
    }
    public List<String> preloadedSparkVersions() {
        return this.preloadedSparkVersions == null ? List.of() : this.preloadedSparkVersions;
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<GetInstancePoolPoolInfoStats> stats() {
        return Optional.ofNullable(this.stats);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePoolPoolInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetInstancePoolPoolInfoAwsAttributes awsAttributes;
        private @Nullable GetInstancePoolPoolInfoAzureAttributes azureAttributes;
        private @Nullable Map<String,Object> customTags;
        private Map<String,Object> defaultTags;
        private @Nullable GetInstancePoolPoolInfoDiskSpec diskSpec;
        private @Nullable Boolean enableElasticDisk;
        private @Nullable GetInstancePoolPoolInfoGcpAttributes gcpAttributes;
        private Integer idleInstanceAutoterminationMinutes;
        private @Nullable List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes;
        private String instancePoolId;
        private String instancePoolName;
        private @Nullable Integer maxCapacity;
        private @Nullable Integer minIdleInstances;
        private @Nullable String nodeTypeId;
        private @Nullable List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages;
        private @Nullable List<String> preloadedSparkVersions;
        private @Nullable String state;
        private @Nullable GetInstancePoolPoolInfoStats stats;
        public Builder() {}
        public Builder(GetInstancePoolPoolInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsAttributes = defaults.awsAttributes;
    	      this.azureAttributes = defaults.azureAttributes;
    	      this.customTags = defaults.customTags;
    	      this.defaultTags = defaults.defaultTags;
    	      this.diskSpec = defaults.diskSpec;
    	      this.enableElasticDisk = defaults.enableElasticDisk;
    	      this.gcpAttributes = defaults.gcpAttributes;
    	      this.idleInstanceAutoterminationMinutes = defaults.idleInstanceAutoterminationMinutes;
    	      this.instancePoolFleetAttributes = defaults.instancePoolFleetAttributes;
    	      this.instancePoolId = defaults.instancePoolId;
    	      this.instancePoolName = defaults.instancePoolName;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minIdleInstances = defaults.minIdleInstances;
    	      this.nodeTypeId = defaults.nodeTypeId;
    	      this.preloadedDockerImages = defaults.preloadedDockerImages;
    	      this.preloadedSparkVersions = defaults.preloadedSparkVersions;
    	      this.state = defaults.state;
    	      this.stats = defaults.stats;
        }

        @CustomType.Setter
        public Builder awsAttributes(@Nullable GetInstancePoolPoolInfoAwsAttributes awsAttributes) {

            this.awsAttributes = awsAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder azureAttributes(@Nullable GetInstancePoolPoolInfoAzureAttributes azureAttributes) {

            this.azureAttributes = azureAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder customTags(@Nullable Map<String,Object> customTags) {

            this.customTags = customTags;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTags(Map<String,Object> defaultTags) {
            if (defaultTags == null) {
              throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "defaultTags");
            }
            this.defaultTags = defaultTags;
            return this;
        }
        @CustomType.Setter
        public Builder diskSpec(@Nullable GetInstancePoolPoolInfoDiskSpec diskSpec) {

            this.diskSpec = diskSpec;
            return this;
        }
        @CustomType.Setter
        public Builder enableElasticDisk(@Nullable Boolean enableElasticDisk) {

            this.enableElasticDisk = enableElasticDisk;
            return this;
        }
        @CustomType.Setter
        public Builder gcpAttributes(@Nullable GetInstancePoolPoolInfoGcpAttributes gcpAttributes) {

            this.gcpAttributes = gcpAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder idleInstanceAutoterminationMinutes(Integer idleInstanceAutoterminationMinutes) {
            if (idleInstanceAutoterminationMinutes == null) {
              throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "idleInstanceAutoterminationMinutes");
            }
            this.idleInstanceAutoterminationMinutes = idleInstanceAutoterminationMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder instancePoolFleetAttributes(@Nullable List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes) {

            this.instancePoolFleetAttributes = instancePoolFleetAttributes;
            return this;
        }
        public Builder instancePoolFleetAttributes(GetInstancePoolPoolInfoInstancePoolFleetAttribute... instancePoolFleetAttributes) {
            return instancePoolFleetAttributes(List.of(instancePoolFleetAttributes));
        }
        @CustomType.Setter
        public Builder instancePoolId(String instancePoolId) {
            if (instancePoolId == null) {
              throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "instancePoolId");
            }
            this.instancePoolId = instancePoolId;
            return this;
        }
        @CustomType.Setter
        public Builder instancePoolName(String instancePoolName) {
            if (instancePoolName == null) {
              throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "instancePoolName");
            }
            this.instancePoolName = instancePoolName;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(@Nullable Integer maxCapacity) {

            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder minIdleInstances(@Nullable Integer minIdleInstances) {

            this.minIdleInstances = minIdleInstances;
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypeId(@Nullable String nodeTypeId) {

            this.nodeTypeId = nodeTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder preloadedDockerImages(@Nullable List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages) {

            this.preloadedDockerImages = preloadedDockerImages;
            return this;
        }
        public Builder preloadedDockerImages(GetInstancePoolPoolInfoPreloadedDockerImage... preloadedDockerImages) {
            return preloadedDockerImages(List.of(preloadedDockerImages));
        }
        @CustomType.Setter
        public Builder preloadedSparkVersions(@Nullable List<String> preloadedSparkVersions) {

            this.preloadedSparkVersions = preloadedSparkVersions;
            return this;
        }
        public Builder preloadedSparkVersions(String... preloadedSparkVersions) {
            return preloadedSparkVersions(List.of(preloadedSparkVersions));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stats(@Nullable GetInstancePoolPoolInfoStats stats) {

            this.stats = stats;
            return this;
        }
        public GetInstancePoolPoolInfo build() {
            final var _resultValue = new GetInstancePoolPoolInfo();
            _resultValue.awsAttributes = awsAttributes;
            _resultValue.azureAttributes = azureAttributes;
            _resultValue.customTags = customTags;
            _resultValue.defaultTags = defaultTags;
            _resultValue.diskSpec = diskSpec;
            _resultValue.enableElasticDisk = enableElasticDisk;
            _resultValue.gcpAttributes = gcpAttributes;
            _resultValue.idleInstanceAutoterminationMinutes = idleInstanceAutoterminationMinutes;
            _resultValue.instancePoolFleetAttributes = instancePoolFleetAttributes;
            _resultValue.instancePoolId = instancePoolId;
            _resultValue.instancePoolName = instancePoolName;
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.minIdleInstances = minIdleInstances;
            _resultValue.nodeTypeId = nodeTypeId;
            _resultValue.preloadedDockerImages = preloadedDockerImages;
            _resultValue.preloadedSparkVersions = preloadedSparkVersions;
            _resultValue.state = state;
            _resultValue.stats = stats;
            return _resultValue;
        }
    }
}
