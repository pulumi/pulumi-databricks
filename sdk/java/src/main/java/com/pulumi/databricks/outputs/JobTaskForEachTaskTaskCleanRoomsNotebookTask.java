// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTaskForEachTaskTaskCleanRoomsNotebookTask {
    /**
     * @return The clean room that the notebook belongs to.
     * 
     */
    private String cleanRoomName;
    /**
     * @return Checksum to validate the freshness of the notebook resource.
     * 
     */
    private @Nullable String etag;
    /**
     * @return Base parameters to be used for the clean room notebook job.
     * 
     */
    private @Nullable Map<String,String> notebookBaseParameters;
    /**
     * @return Name of the notebook being run.
     * 
     */
    private String notebookName;

    private JobTaskForEachTaskTaskCleanRoomsNotebookTask() {}
    /**
     * @return The clean room that the notebook belongs to.
     * 
     */
    public String cleanRoomName() {
        return this.cleanRoomName;
    }
    /**
     * @return Checksum to validate the freshness of the notebook resource.
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return Base parameters to be used for the clean room notebook job.
     * 
     */
    public Map<String,String> notebookBaseParameters() {
        return this.notebookBaseParameters == null ? Map.of() : this.notebookBaseParameters;
    }
    /**
     * @return Name of the notebook being run.
     * 
     */
    public String notebookName() {
        return this.notebookName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTaskForEachTaskTaskCleanRoomsNotebookTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cleanRoomName;
        private @Nullable String etag;
        private @Nullable Map<String,String> notebookBaseParameters;
        private String notebookName;
        public Builder() {}
        public Builder(JobTaskForEachTaskTaskCleanRoomsNotebookTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanRoomName = defaults.cleanRoomName;
    	      this.etag = defaults.etag;
    	      this.notebookBaseParameters = defaults.notebookBaseParameters;
    	      this.notebookName = defaults.notebookName;
        }

        @CustomType.Setter
        public Builder cleanRoomName(String cleanRoomName) {
            if (cleanRoomName == null) {
              throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskCleanRoomsNotebookTask", "cleanRoomName");
            }
            this.cleanRoomName = cleanRoomName;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {

            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder notebookBaseParameters(@Nullable Map<String,String> notebookBaseParameters) {

            this.notebookBaseParameters = notebookBaseParameters;
            return this;
        }
        @CustomType.Setter
        public Builder notebookName(String notebookName) {
            if (notebookName == null) {
              throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskCleanRoomsNotebookTask", "notebookName");
            }
            this.notebookName = notebookName;
            return this;
        }
        public JobTaskForEachTaskTaskCleanRoomsNotebookTask build() {
            final var _resultValue = new JobTaskForEachTaskTaskCleanRoomsNotebookTask();
            _resultValue.cleanRoomName = cleanRoomName;
            _resultValue.etag = etag;
            _resultValue.notebookBaseParameters = notebookBaseParameters;
            _resultValue.notebookName = notebookName;
            return _resultValue;
        }
    }
}
