// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetRecipientFederationPolicyOidcPolicyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecipientFederationPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecipientFederationPolicyArgs Empty = new GetRecipientFederationPolicyArgs();

    /**
     * (string) - Description of the policy. This is a user-provided description
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return (string) - Description of the policy. This is a user-provided description
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Name of the federation policy. A recipient can have multiple policies with different names.
     * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the federation policy. A recipient can have multiple policies with different names.
     * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
     * 
     */
    @Import(name="oidcPolicy")
    private @Nullable Output<GetRecipientFederationPolicyOidcPolicyArgs> oidcPolicy;

    /**
     * @return (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
     * 
     */
    public Optional<Output<GetRecipientFederationPolicyOidcPolicyArgs>> oidcPolicy() {
        return Optional.ofNullable(this.oidcPolicy);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private GetRecipientFederationPolicyArgs() {}

    private GetRecipientFederationPolicyArgs(GetRecipientFederationPolicyArgs $) {
        this.comment = $.comment;
        this.name = $.name;
        this.oidcPolicy = $.oidcPolicy;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecipientFederationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecipientFederationPolicyArgs $;

        public Builder() {
            $ = new GetRecipientFederationPolicyArgs();
        }

        public Builder(GetRecipientFederationPolicyArgs defaults) {
            $ = new GetRecipientFederationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment (string) - Description of the policy. This is a user-provided description
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment (string) - Description of the policy. This is a user-provided description
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param name Name of the federation policy. A recipient can have multiple policies with different names.
         * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the federation policy. A recipient can have multiple policies with different names.
         * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param oidcPolicy (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
         * 
         * @return builder
         * 
         */
        public Builder oidcPolicy(@Nullable Output<GetRecipientFederationPolicyOidcPolicyArgs> oidcPolicy) {
            $.oidcPolicy = oidcPolicy;
            return this;
        }

        /**
         * @param oidcPolicy (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
         * 
         * @return builder
         * 
         */
        public Builder oidcPolicy(GetRecipientFederationPolicyOidcPolicyArgs oidcPolicy) {
            return oidcPolicy(Output.of(oidcPolicy));
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public GetRecipientFederationPolicyArgs build() {
            return $;
        }
    }

}
