// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetServingEndpointsEndpointConfigServedEntityExternalModel;
import com.pulumi.databricks.inputs.GetServingEndpointsEndpointConfigServedEntityFoundationModel;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServingEndpointsEndpointConfigServedEntity extends com.pulumi.resources.InvokeArgs {

    public static final GetServingEndpointsEndpointConfigServedEntity Empty = new GetServingEndpointsEndpointConfigServedEntity();

    @Import(name="entityName")
    private @Nullable String entityName;

    public Optional<String> entityName() {
        return Optional.ofNullable(this.entityName);
    }

    @Import(name="entityVersion")
    private @Nullable String entityVersion;

    public Optional<String> entityVersion() {
        return Optional.ofNullable(this.entityVersion);
    }

    @Import(name="externalModels")
    private @Nullable List<GetServingEndpointsEndpointConfigServedEntityExternalModel> externalModels;

    public Optional<List<GetServingEndpointsEndpointConfigServedEntityExternalModel>> externalModels() {
        return Optional.ofNullable(this.externalModels);
    }

    @Import(name="foundationModels")
    private @Nullable List<GetServingEndpointsEndpointConfigServedEntityFoundationModel> foundationModels;

    public Optional<List<GetServingEndpointsEndpointConfigServedEntityFoundationModel>> foundationModels() {
        return Optional.ofNullable(this.foundationModels);
    }

    /**
     * The name of the model serving endpoint.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the model serving endpoint.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetServingEndpointsEndpointConfigServedEntity() {}

    private GetServingEndpointsEndpointConfigServedEntity(GetServingEndpointsEndpointConfigServedEntity $) {
        this.entityName = $.entityName;
        this.entityVersion = $.entityVersion;
        this.externalModels = $.externalModels;
        this.foundationModels = $.foundationModels;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServingEndpointsEndpointConfigServedEntity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServingEndpointsEndpointConfigServedEntity $;

        public Builder() {
            $ = new GetServingEndpointsEndpointConfigServedEntity();
        }

        public Builder(GetServingEndpointsEndpointConfigServedEntity defaults) {
            $ = new GetServingEndpointsEndpointConfigServedEntity(Objects.requireNonNull(defaults));
        }

        public Builder entityName(@Nullable String entityName) {
            $.entityName = entityName;
            return this;
        }

        public Builder entityVersion(@Nullable String entityVersion) {
            $.entityVersion = entityVersion;
            return this;
        }

        public Builder externalModels(@Nullable List<GetServingEndpointsEndpointConfigServedEntityExternalModel> externalModels) {
            $.externalModels = externalModels;
            return this;
        }

        public Builder externalModels(GetServingEndpointsEndpointConfigServedEntityExternalModel... externalModels) {
            return externalModels(List.of(externalModels));
        }

        public Builder foundationModels(@Nullable List<GetServingEndpointsEndpointConfigServedEntityFoundationModel> foundationModels) {
            $.foundationModels = foundationModels;
            return this;
        }

        public Builder foundationModels(GetServingEndpointsEndpointConfigServedEntityFoundationModel... foundationModels) {
            return foundationModels(List.of(foundationModels));
        }

        /**
         * @param name The name of the model serving endpoint.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetServingEndpointsEndpointConfigServedEntity build() {
            return $;
        }
    }

}
