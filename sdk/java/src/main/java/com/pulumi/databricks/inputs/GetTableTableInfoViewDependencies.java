// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetTableTableInfoViewDependenciesDependency;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTableTableInfoViewDependencies extends com.pulumi.resources.InvokeArgs {

    public static final GetTableTableInfoViewDependencies Empty = new GetTableTableInfoViewDependencies();

    @Import(name="dependencies")
    private @Nullable List<GetTableTableInfoViewDependenciesDependency> dependencies;

    public Optional<List<GetTableTableInfoViewDependenciesDependency>> dependencies() {
        return Optional.ofNullable(this.dependencies);
    }

    private GetTableTableInfoViewDependencies() {}

    private GetTableTableInfoViewDependencies(GetTableTableInfoViewDependencies $) {
        this.dependencies = $.dependencies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTableTableInfoViewDependencies defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTableTableInfoViewDependencies $;

        public Builder() {
            $ = new GetTableTableInfoViewDependencies();
        }

        public Builder(GetTableTableInfoViewDependencies defaults) {
            $ = new GetTableTableInfoViewDependencies(Objects.requireNonNull(defaults));
        }

        public Builder dependencies(@Nullable List<GetTableTableInfoViewDependenciesDependency> dependencies) {
            $.dependencies = dependencies;
            return this;
        }

        public Builder dependencies(GetTableTableInfoViewDependenciesDependency... dependencies) {
            return dependencies(List.of(dependencies));
        }

        public GetTableTableInfoViewDependencies build() {
            return $;
        }
    }

}
