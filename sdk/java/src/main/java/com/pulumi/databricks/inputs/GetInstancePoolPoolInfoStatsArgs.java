// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePoolPoolInfoStatsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetInstancePoolPoolInfoStatsArgs Empty = new GetInstancePoolPoolInfoStatsArgs();

    @Import(name="idleCount")
    private @Nullable Output<Integer> idleCount;

    public Optional<Output<Integer>> idleCount() {
        return Optional.ofNullable(this.idleCount);
    }

    @Import(name="pendingIdleCount")
    private @Nullable Output<Integer> pendingIdleCount;

    public Optional<Output<Integer>> pendingIdleCount() {
        return Optional.ofNullable(this.pendingIdleCount);
    }

    @Import(name="pendingUsedCount")
    private @Nullable Output<Integer> pendingUsedCount;

    public Optional<Output<Integer>> pendingUsedCount() {
        return Optional.ofNullable(this.pendingUsedCount);
    }

    @Import(name="usedCount")
    private @Nullable Output<Integer> usedCount;

    public Optional<Output<Integer>> usedCount() {
        return Optional.ofNullable(this.usedCount);
    }

    private GetInstancePoolPoolInfoStatsArgs() {}

    private GetInstancePoolPoolInfoStatsArgs(GetInstancePoolPoolInfoStatsArgs $) {
        this.idleCount = $.idleCount;
        this.pendingIdleCount = $.pendingIdleCount;
        this.pendingUsedCount = $.pendingUsedCount;
        this.usedCount = $.usedCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePoolPoolInfoStatsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePoolPoolInfoStatsArgs $;

        public Builder() {
            $ = new GetInstancePoolPoolInfoStatsArgs();
        }

        public Builder(GetInstancePoolPoolInfoStatsArgs defaults) {
            $ = new GetInstancePoolPoolInfoStatsArgs(Objects.requireNonNull(defaults));
        }

        public Builder idleCount(@Nullable Output<Integer> idleCount) {
            $.idleCount = idleCount;
            return this;
        }

        public Builder idleCount(Integer idleCount) {
            return idleCount(Output.of(idleCount));
        }

        public Builder pendingIdleCount(@Nullable Output<Integer> pendingIdleCount) {
            $.pendingIdleCount = pendingIdleCount;
            return this;
        }

        public Builder pendingIdleCount(Integer pendingIdleCount) {
            return pendingIdleCount(Output.of(pendingIdleCount));
        }

        public Builder pendingUsedCount(@Nullable Output<Integer> pendingUsedCount) {
            $.pendingUsedCount = pendingUsedCount;
            return this;
        }

        public Builder pendingUsedCount(Integer pendingUsedCount) {
            return pendingUsedCount(Output.of(pendingUsedCount));
        }

        public Builder usedCount(@Nullable Output<Integer> usedCount) {
            $.usedCount = usedCount;
            return this;
        }

        public Builder usedCount(Integer usedCount) {
            return usedCount(Output.of(usedCount));
        }

        public GetInstancePoolPoolInfoStatsArgs build() {
            return $;
        }
    }

}
