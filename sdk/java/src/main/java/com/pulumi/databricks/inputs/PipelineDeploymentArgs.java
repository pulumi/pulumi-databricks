// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDeploymentArgs Empty = new PipelineDeploymentArgs();

    /**
     * The deployment method that manages the pipeline.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return The deployment method that manages the pipeline.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * The path to the file containing metadata about the deployment.
     * 
     */
    @Import(name="metadataFilePath")
    private @Nullable Output<String> metadataFilePath;

    /**
     * @return The path to the file containing metadata about the deployment.
     * 
     */
    public Optional<Output<String>> metadataFilePath() {
        return Optional.ofNullable(this.metadataFilePath);
    }

    private PipelineDeploymentArgs() {}

    private PipelineDeploymentArgs(PipelineDeploymentArgs $) {
        this.kind = $.kind;
        this.metadataFilePath = $.metadataFilePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDeploymentArgs $;

        public Builder() {
            $ = new PipelineDeploymentArgs();
        }

        public Builder(PipelineDeploymentArgs defaults) {
            $ = new PipelineDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind The deployment method that manages the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The deployment method that manages the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param metadataFilePath The path to the file containing metadata about the deployment.
         * 
         * @return builder
         * 
         */
        public Builder metadataFilePath(@Nullable Output<String> metadataFilePath) {
            $.metadataFilePath = metadataFilePath;
            return this;
        }

        /**
         * @param metadataFilePath The path to the file containing metadata about the deployment.
         * 
         * @return builder
         * 
         */
        public Builder metadataFilePath(String metadataFilePath) {
            return metadataFilePath(Output.of(metadataFilePath));
        }

        public PipelineDeploymentArgs build() {
            if ($.kind == null) {
                throw new MissingRequiredPropertyException("PipelineDeploymentArgs", "kind");
            }
            return $;
        }
    }

}
