// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class JobTriggerPeriodicArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTriggerPeriodicArgs Empty = new JobTriggerPeriodicArgs();

    /**
     * Specifies the interval at which the job should run. This value is required.
     * 
     */
    @Import(name="interval", required=true)
    private Output<Integer> interval;

    /**
     * @return Specifies the interval at which the job should run. This value is required.
     * 
     */
    public Output<Integer> interval() {
        return this.interval;
    }

    /**
     * Options are {&#34;DAYS&#34;, &#34;HOURS&#34;, &#34;WEEKS&#34;}.
     * 
     */
    @Import(name="unit", required=true)
    private Output<String> unit;

    /**
     * @return Options are {&#34;DAYS&#34;, &#34;HOURS&#34;, &#34;WEEKS&#34;}.
     * 
     */
    public Output<String> unit() {
        return this.unit;
    }

    private JobTriggerPeriodicArgs() {}

    private JobTriggerPeriodicArgs(JobTriggerPeriodicArgs $) {
        this.interval = $.interval;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTriggerPeriodicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTriggerPeriodicArgs $;

        public Builder() {
            $ = new JobTriggerPeriodicArgs();
        }

        public Builder(JobTriggerPeriodicArgs defaults) {
            $ = new JobTriggerPeriodicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interval Specifies the interval at which the job should run. This value is required.
         * 
         * @return builder
         * 
         */
        public Builder interval(Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval Specifies the interval at which the job should run. This value is required.
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param unit Options are {&#34;DAYS&#34;, &#34;HOURS&#34;, &#34;WEEKS&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder unit(Output<String> unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param unit Options are {&#34;DAYS&#34;, &#34;HOURS&#34;, &#34;WEEKS&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder unit(String unit) {
            return unit(Output.of(unit));
        }

        public JobTriggerPeriodicArgs build() {
            if ($.interval == null) {
                throw new MissingRequiredPropertyException("JobTriggerPeriodicArgs", "interval");
            }
            if ($.unit == null) {
                throw new MissingRequiredPropertyException("JobTriggerPeriodicArgs", "unit");
            }
            return $;
        }
    }

}
