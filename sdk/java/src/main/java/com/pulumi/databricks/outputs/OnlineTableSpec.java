// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.OnlineTableSpecRunContinuously;
import com.pulumi.databricks.outputs.OnlineTableSpecRunTriggered;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OnlineTableSpec {
    /**
     * @return Whether to create a full-copy pipeline -- a pipeline that stops after creates a full copy of the source table upon initialization and does not process any change data feeds (CDFs) afterwards. The pipeline can still be manually triggered afterwards, but it always perform a full copy of the source table and there are no incremental updates. This mode is useful for syncing views or tables without CDFs to online tables. Note that the full-copy pipeline only supports &#34;triggered&#34; scheduling policy.
     * 
     */
    private @Nullable Boolean performFullCopy;
    /**
     * @return ID of the associated Delta Live Table pipeline.
     * 
     */
    private @Nullable String pipelineId;
    /**
     * @return list of the columns comprising the primary key.
     * 
     */
    private @Nullable List<String> primaryKeyColumns;
    /**
     * @return empty block that specifies that pipeline runs continuously after generating the initial data.  Conflicts with `run_triggered`.
     * 
     */
    private @Nullable OnlineTableSpecRunContinuously runContinuously;
    /**
     * @return empty block that specifies that pipeline stops after generating the initial data and can be triggered later (manually, through a cron job or through data triggers).
     * 
     */
    private @Nullable OnlineTableSpecRunTriggered runTriggered;
    /**
     * @return full name of the source table.
     * 
     */
    private @Nullable String sourceTableFullName;
    /**
     * @return Time series key to deduplicate (tie-break) rows with the same primary key.
     * 
     */
    private @Nullable String timeseriesKey;

    private OnlineTableSpec() {}
    /**
     * @return Whether to create a full-copy pipeline -- a pipeline that stops after creates a full copy of the source table upon initialization and does not process any change data feeds (CDFs) afterwards. The pipeline can still be manually triggered afterwards, but it always perform a full copy of the source table and there are no incremental updates. This mode is useful for syncing views or tables without CDFs to online tables. Note that the full-copy pipeline only supports &#34;triggered&#34; scheduling policy.
     * 
     */
    public Optional<Boolean> performFullCopy() {
        return Optional.ofNullable(this.performFullCopy);
    }
    /**
     * @return ID of the associated Delta Live Table pipeline.
     * 
     */
    public Optional<String> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }
    /**
     * @return list of the columns comprising the primary key.
     * 
     */
    public List<String> primaryKeyColumns() {
        return this.primaryKeyColumns == null ? List.of() : this.primaryKeyColumns;
    }
    /**
     * @return empty block that specifies that pipeline runs continuously after generating the initial data.  Conflicts with `run_triggered`.
     * 
     */
    public Optional<OnlineTableSpecRunContinuously> runContinuously() {
        return Optional.ofNullable(this.runContinuously);
    }
    /**
     * @return empty block that specifies that pipeline stops after generating the initial data and can be triggered later (manually, through a cron job or through data triggers).
     * 
     */
    public Optional<OnlineTableSpecRunTriggered> runTriggered() {
        return Optional.ofNullable(this.runTriggered);
    }
    /**
     * @return full name of the source table.
     * 
     */
    public Optional<String> sourceTableFullName() {
        return Optional.ofNullable(this.sourceTableFullName);
    }
    /**
     * @return Time series key to deduplicate (tie-break) rows with the same primary key.
     * 
     */
    public Optional<String> timeseriesKey() {
        return Optional.ofNullable(this.timeseriesKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnlineTableSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean performFullCopy;
        private @Nullable String pipelineId;
        private @Nullable List<String> primaryKeyColumns;
        private @Nullable OnlineTableSpecRunContinuously runContinuously;
        private @Nullable OnlineTableSpecRunTriggered runTriggered;
        private @Nullable String sourceTableFullName;
        private @Nullable String timeseriesKey;
        public Builder() {}
        public Builder(OnlineTableSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.performFullCopy = defaults.performFullCopy;
    	      this.pipelineId = defaults.pipelineId;
    	      this.primaryKeyColumns = defaults.primaryKeyColumns;
    	      this.runContinuously = defaults.runContinuously;
    	      this.runTriggered = defaults.runTriggered;
    	      this.sourceTableFullName = defaults.sourceTableFullName;
    	      this.timeseriesKey = defaults.timeseriesKey;
        }

        @CustomType.Setter
        public Builder performFullCopy(@Nullable Boolean performFullCopy) {

            this.performFullCopy = performFullCopy;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(@Nullable String pipelineId) {

            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKeyColumns(@Nullable List<String> primaryKeyColumns) {

            this.primaryKeyColumns = primaryKeyColumns;
            return this;
        }
        public Builder primaryKeyColumns(String... primaryKeyColumns) {
            return primaryKeyColumns(List.of(primaryKeyColumns));
        }
        @CustomType.Setter
        public Builder runContinuously(@Nullable OnlineTableSpecRunContinuously runContinuously) {

            this.runContinuously = runContinuously;
            return this;
        }
        @CustomType.Setter
        public Builder runTriggered(@Nullable OnlineTableSpecRunTriggered runTriggered) {

            this.runTriggered = runTriggered;
            return this;
        }
        @CustomType.Setter
        public Builder sourceTableFullName(@Nullable String sourceTableFullName) {

            this.sourceTableFullName = sourceTableFullName;
            return this;
        }
        @CustomType.Setter
        public Builder timeseriesKey(@Nullable String timeseriesKey) {

            this.timeseriesKey = timeseriesKey;
            return this;
        }
        public OnlineTableSpec build() {
            final var _resultValue = new OnlineTableSpec();
            _resultValue.performFullCopy = performFullCopy;
            _resultValue.pipelineId = pipelineId;
            _resultValue.primaryKeyColumns = primaryKeyColumns;
            _resultValue.runContinuously = runContinuously;
            _resultValue.runTriggered = runTriggered;
            _resultValue.sourceTableFullName = sourceTableFullName;
            _resultValue.timeseriesKey = timeseriesKey;
            return _resultValue;
        }
    }
}
