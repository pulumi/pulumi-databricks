// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePoolAwsAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePoolAwsAttributesArgs Empty = new InstancePoolAwsAttributesArgs();

    /**
     * (String) Availability type used for all instances in the pool. Only `ON_DEMAND` and `SPOT` are supported.
     * 
     */
    @Import(name="availability")
    private @Nullable Output<String> availability;

    /**
     * @return (String) Availability type used for all instances in the pool. Only `ON_DEMAND` and `SPOT` are supported.
     * 
     */
    public Optional<Output<String>> availability() {
        return Optional.ofNullable(this.availability);
    }

    /**
     * (Integer) The max price for AWS spot instances, as a percentage of the corresponding instance type’s on-demand price. For example, if this field is set to 50, and the instance pool needs a new i3.xlarge spot instance, then the max price is half of the price of on-demand i3.xlarge instances. Similarly, if this field is set to 200, the max price is twice the price of on-demand i3.xlarge instances. If not specified, the *default value is 100*. When spot instances are requested for this instance pool, only spot instances whose max price percentage matches this field are considered. *For safety, this field cannot be greater than 10000.*
     * 
     */
    @Import(name="spotBidPricePercent")
    private @Nullable Output<Integer> spotBidPricePercent;

    /**
     * @return (Integer) The max price for AWS spot instances, as a percentage of the corresponding instance type’s on-demand price. For example, if this field is set to 50, and the instance pool needs a new i3.xlarge spot instance, then the max price is half of the price of on-demand i3.xlarge instances. Similarly, if this field is set to 200, the max price is twice the price of on-demand i3.xlarge instances. If not specified, the *default value is 100*. When spot instances are requested for this instance pool, only spot instances whose max price percentage matches this field are considered. *For safety, this field cannot be greater than 10000.*
     * 
     */
    public Optional<Output<Integer>> spotBidPricePercent() {
        return Optional.ofNullable(this.spotBidPricePercent);
    }

    /**
     * (String) Identifier for the availability zone/datacenter in which the instance pool resides. This string is of the form like `&#34;us-west-2a&#34;`. The provided availability zone must be in the same region as the Databricks deployment. For example, `&#34;us-west-2a&#34;` is not a valid zone ID if the Databricks deployment resides in the `&#34;us-east-1&#34;` region. If not specified, a default zone is used. You can find the list of available zones as well as the default value by using the [List Zones API](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterclusterservicelistavailablezones).
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return (String) Identifier for the availability zone/datacenter in which the instance pool resides. This string is of the form like `&#34;us-west-2a&#34;`. The provided availability zone must be in the same region as the Databricks deployment. For example, `&#34;us-west-2a&#34;` is not a valid zone ID if the Databricks deployment resides in the `&#34;us-east-1&#34;` region. If not specified, a default zone is used. You can find the list of available zones as well as the default value by using the [List Zones API](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterclusterservicelistavailablezones).
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private InstancePoolAwsAttributesArgs() {}

    private InstancePoolAwsAttributesArgs(InstancePoolAwsAttributesArgs $) {
        this.availability = $.availability;
        this.spotBidPricePercent = $.spotBidPricePercent;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePoolAwsAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePoolAwsAttributesArgs $;

        public Builder() {
            $ = new InstancePoolAwsAttributesArgs();
        }

        public Builder(InstancePoolAwsAttributesArgs defaults) {
            $ = new InstancePoolAwsAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availability (String) Availability type used for all instances in the pool. Only `ON_DEMAND` and `SPOT` are supported.
         * 
         * @return builder
         * 
         */
        public Builder availability(@Nullable Output<String> availability) {
            $.availability = availability;
            return this;
        }

        /**
         * @param availability (String) Availability type used for all instances in the pool. Only `ON_DEMAND` and `SPOT` are supported.
         * 
         * @return builder
         * 
         */
        public Builder availability(String availability) {
            return availability(Output.of(availability));
        }

        /**
         * @param spotBidPricePercent (Integer) The max price for AWS spot instances, as a percentage of the corresponding instance type’s on-demand price. For example, if this field is set to 50, and the instance pool needs a new i3.xlarge spot instance, then the max price is half of the price of on-demand i3.xlarge instances. Similarly, if this field is set to 200, the max price is twice the price of on-demand i3.xlarge instances. If not specified, the *default value is 100*. When spot instances are requested for this instance pool, only spot instances whose max price percentage matches this field are considered. *For safety, this field cannot be greater than 10000.*
         * 
         * @return builder
         * 
         */
        public Builder spotBidPricePercent(@Nullable Output<Integer> spotBidPricePercent) {
            $.spotBidPricePercent = spotBidPricePercent;
            return this;
        }

        /**
         * @param spotBidPricePercent (Integer) The max price for AWS spot instances, as a percentage of the corresponding instance type’s on-demand price. For example, if this field is set to 50, and the instance pool needs a new i3.xlarge spot instance, then the max price is half of the price of on-demand i3.xlarge instances. Similarly, if this field is set to 200, the max price is twice the price of on-demand i3.xlarge instances. If not specified, the *default value is 100*. When spot instances are requested for this instance pool, only spot instances whose max price percentage matches this field are considered. *For safety, this field cannot be greater than 10000.*
         * 
         * @return builder
         * 
         */
        public Builder spotBidPricePercent(Integer spotBidPricePercent) {
            return spotBidPricePercent(Output.of(spotBidPricePercent));
        }

        /**
         * @param zoneId (String) Identifier for the availability zone/datacenter in which the instance pool resides. This string is of the form like `&#34;us-west-2a&#34;`. The provided availability zone must be in the same region as the Databricks deployment. For example, `&#34;us-west-2a&#34;` is not a valid zone ID if the Databricks deployment resides in the `&#34;us-east-1&#34;` region. If not specified, a default zone is used. You can find the list of available zones as well as the default value by using the [List Zones API](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterclusterservicelistavailablezones).
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId (String) Identifier for the availability zone/datacenter in which the instance pool resides. This string is of the form like `&#34;us-west-2a&#34;`. The provided availability zone must be in the same region as the Databricks deployment. For example, `&#34;us-west-2a&#34;` is not a valid zone ID if the Databricks deployment resides in the `&#34;us-east-1&#34;` region. If not specified, a default zone is used. You can find the list of available zones as well as the default value by using the [List Zones API](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterclusterservicelistavailablezones).
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public InstancePoolAwsAttributesArgs build() {
            return $;
        }
    }

}
