// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains {
    /**
     * @return the list of approved domains. To allow all subdomains for a given domain, use a wildcard symbol (`*`) before the domain name, i.e., `*.databricks.com` will allow to embed into any site under the `databricks.com`.
     * 
     */
    private List<String> approvedDomains;

    private AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains() {}
    /**
     * @return the list of approved domains. To allow all subdomains for a given domain, use a wildcard symbol (`*`) before the domain name, i.e., `*.databricks.com` will allow to embed into any site under the `databricks.com`.
     * 
     */
    public List<String> approvedDomains() {
        return this.approvedDomains;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> approvedDomains;
        public Builder() {}
        public Builder(AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvedDomains = defaults.approvedDomains;
        }

        @CustomType.Setter
        public Builder approvedDomains(List<String> approvedDomains) {
            if (approvedDomains == null) {
              throw new MissingRequiredPropertyException("AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains", "approvedDomains");
            }
            this.approvedDomains = approvedDomains;
            return this;
        }
        public Builder approvedDomains(String... approvedDomains) {
            return approvedDomains(List.of(approvedDomains));
        }
        public AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains build() {
            final var _resultValue = new AibiDashboardEmbeddingApprovedDomainsSettingAibiDashboardEmbeddingApprovedDomains();
            _resultValue.approvedDomains = approvedDomains;
            return _resultValue;
        }
    }
}
