// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSparkVersionResult {
    private @Nullable Boolean beta;
    private @Nullable Boolean genomics;
    private @Nullable Boolean gpu;
    /**
     * @deprecated
     * Not required anymore - it&#39;s automatically enabled on the Graviton-based node types
     * 
     */
    @Deprecated /* Not required anymore - it's automatically enabled on the Graviton-based node types */
    private @Nullable Boolean graviton;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean latest;
    private @Nullable Boolean longTermSupport;
    private @Nullable Boolean ml;
    /**
     * @deprecated
     * Specify runtime_engine=&#34;PHOTON&#34; in the cluster configuration
     * 
     */
    @Deprecated /* Specify runtime_engine=""PHOTON"" in the cluster configuration */
    private @Nullable Boolean photon;
    private @Nullable String scala;
    private @Nullable String sparkVersion;

    private GetSparkVersionResult() {}
    public Optional<Boolean> beta() {
        return Optional.ofNullable(this.beta);
    }
    public Optional<Boolean> genomics() {
        return Optional.ofNullable(this.genomics);
    }
    public Optional<Boolean> gpu() {
        return Optional.ofNullable(this.gpu);
    }
    /**
     * @deprecated
     * Not required anymore - it&#39;s automatically enabled on the Graviton-based node types
     * 
     */
    @Deprecated /* Not required anymore - it's automatically enabled on the Graviton-based node types */
    public Optional<Boolean> graviton() {
        return Optional.ofNullable(this.graviton);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> latest() {
        return Optional.ofNullable(this.latest);
    }
    public Optional<Boolean> longTermSupport() {
        return Optional.ofNullable(this.longTermSupport);
    }
    public Optional<Boolean> ml() {
        return Optional.ofNullable(this.ml);
    }
    /**
     * @deprecated
     * Specify runtime_engine=&#34;PHOTON&#34; in the cluster configuration
     * 
     */
    @Deprecated /* Specify runtime_engine=""PHOTON"" in the cluster configuration */
    public Optional<Boolean> photon() {
        return Optional.ofNullable(this.photon);
    }
    public Optional<String> scala() {
        return Optional.ofNullable(this.scala);
    }
    public Optional<String> sparkVersion() {
        return Optional.ofNullable(this.sparkVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSparkVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean beta;
        private @Nullable Boolean genomics;
        private @Nullable Boolean gpu;
        private @Nullable Boolean graviton;
        private String id;
        private @Nullable Boolean latest;
        private @Nullable Boolean longTermSupport;
        private @Nullable Boolean ml;
        private @Nullable Boolean photon;
        private @Nullable String scala;
        private @Nullable String sparkVersion;
        public Builder() {}
        public Builder(GetSparkVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beta = defaults.beta;
    	      this.genomics = defaults.genomics;
    	      this.gpu = defaults.gpu;
    	      this.graviton = defaults.graviton;
    	      this.id = defaults.id;
    	      this.latest = defaults.latest;
    	      this.longTermSupport = defaults.longTermSupport;
    	      this.ml = defaults.ml;
    	      this.photon = defaults.photon;
    	      this.scala = defaults.scala;
    	      this.sparkVersion = defaults.sparkVersion;
        }

        @CustomType.Setter
        public Builder beta(@Nullable Boolean beta) {
            this.beta = beta;
            return this;
        }
        @CustomType.Setter
        public Builder genomics(@Nullable Boolean genomics) {
            this.genomics = genomics;
            return this;
        }
        @CustomType.Setter
        public Builder gpu(@Nullable Boolean gpu) {
            this.gpu = gpu;
            return this;
        }
        @CustomType.Setter
        public Builder graviton(@Nullable Boolean graviton) {
            this.graviton = graviton;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder latest(@Nullable Boolean latest) {
            this.latest = latest;
            return this;
        }
        @CustomType.Setter
        public Builder longTermSupport(@Nullable Boolean longTermSupport) {
            this.longTermSupport = longTermSupport;
            return this;
        }
        @CustomType.Setter
        public Builder ml(@Nullable Boolean ml) {
            this.ml = ml;
            return this;
        }
        @CustomType.Setter
        public Builder photon(@Nullable Boolean photon) {
            this.photon = photon;
            return this;
        }
        @CustomType.Setter
        public Builder scala(@Nullable String scala) {
            this.scala = scala;
            return this;
        }
        @CustomType.Setter
        public Builder sparkVersion(@Nullable String sparkVersion) {
            this.sparkVersion = sparkVersion;
            return this;
        }
        public GetSparkVersionResult build() {
            final var _resultValue = new GetSparkVersionResult();
            _resultValue.beta = beta;
            _resultValue.genomics = genomics;
            _resultValue.gpu = gpu;
            _resultValue.graviton = graviton;
            _resultValue.id = id;
            _resultValue.latest = latest;
            _resultValue.longTermSupport = longTermSupport;
            _resultValue.ml = ml;
            _resultValue.photon = photon;
            _resultValue.scala = scala;
            _resultValue.sparkVersion = sparkVersion;
            return _resultValue;
        }
    }
}
