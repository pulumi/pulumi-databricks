// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetRegisteredModelVersionsModelVersion;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRegisteredModelVersionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRegisteredModelVersionsPlainArgs Empty = new GetRegisteredModelVersionsPlainArgs();

    /**
     * The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     * 
     */
    @Import(name="fullName", required=true)
    private String fullName;

    /**
     * @return The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     * 
     */
    public String fullName() {
        return this.fullName;
    }

    /**
     * list of objects describing the model versions. Each object consists of following attributes:
     * 
     */
    @Import(name="modelVersions")
    private @Nullable List<GetRegisteredModelVersionsModelVersion> modelVersions;

    /**
     * @return list of objects describing the model versions. Each object consists of following attributes:
     * 
     */
    public Optional<List<GetRegisteredModelVersionsModelVersion>> modelVersions() {
        return Optional.ofNullable(this.modelVersions);
    }

    private GetRegisteredModelVersionsPlainArgs() {}

    private GetRegisteredModelVersionsPlainArgs(GetRegisteredModelVersionsPlainArgs $) {
        this.fullName = $.fullName;
        this.modelVersions = $.modelVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRegisteredModelVersionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRegisteredModelVersionsPlainArgs $;

        public Builder() {
            $ = new GetRegisteredModelVersionsPlainArgs();
        }

        public Builder(GetRegisteredModelVersionsPlainArgs defaults) {
            $ = new GetRegisteredModelVersionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fullName The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
         * 
         * @return builder
         * 
         */
        public Builder fullName(String fullName) {
            $.fullName = fullName;
            return this;
        }

        /**
         * @param modelVersions list of objects describing the model versions. Each object consists of following attributes:
         * 
         * @return builder
         * 
         */
        public Builder modelVersions(@Nullable List<GetRegisteredModelVersionsModelVersion> modelVersions) {
            $.modelVersions = modelVersions;
            return this;
        }

        /**
         * @param modelVersions list of objects describing the model versions. Each object consists of following attributes:
         * 
         * @return builder
         * 
         */
        public Builder modelVersions(GetRegisteredModelVersionsModelVersion... modelVersions) {
            return modelVersions(List.of(modelVersions));
        }

        public GetRegisteredModelVersionsPlainArgs build() {
            if ($.fullName == null) {
                throw new MissingRequiredPropertyException("GetRegisteredModelVersionsPlainArgs", "fullName");
            }
            return $;
        }
    }

}
