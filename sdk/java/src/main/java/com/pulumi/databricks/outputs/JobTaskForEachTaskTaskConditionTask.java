// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class JobTaskForEachTaskTaskConditionTask {
    private String left;
    private String op;
    private String right;

    private JobTaskForEachTaskTaskConditionTask() {}
    public String left() {
        return this.left;
    }
    public String op() {
        return this.op;
    }
    public String right() {
        return this.right;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTaskForEachTaskTaskConditionTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String left;
        private String op;
        private String right;
        public Builder() {}
        public Builder(JobTaskForEachTaskTaskConditionTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.left = defaults.left;
    	      this.op = defaults.op;
    	      this.right = defaults.right;
        }

        @CustomType.Setter
        public Builder left(String left) {
            if (left == null) {
              throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTask", "left");
            }
            this.left = left;
            return this;
        }
        @CustomType.Setter
        public Builder op(String op) {
            if (op == null) {
              throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTask", "op");
            }
            this.op = op;
            return this;
        }
        @CustomType.Setter
        public Builder right(String right) {
            if (right == null) {
              throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTask", "right");
            }
            this.right = right;
            return this;
        }
        public JobTaskForEachTaskTaskConditionTask build() {
            final var _resultValue = new JobTaskForEachTaskTaskConditionTask();
            _resultValue.left = left;
            _resultValue.op = op;
            _resultValue.right = right;
            return _resultValue;
        }
    }
}
