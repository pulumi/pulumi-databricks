// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.CredentialAwsIamRoleArgs;
import com.pulumi.databricks.inputs.CredentialAzureManagedIdentityArgs;
import com.pulumi.databricks.inputs.CredentialAzureServicePrincipalArgs;
import com.pulumi.databricks.inputs.CredentialDatabricksGcpServiceAccountArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final CredentialArgs Empty = new CredentialArgs();

    @Import(name="awsIamRole")
    private @Nullable Output<CredentialAwsIamRoleArgs> awsIamRole;

    public Optional<Output<CredentialAwsIamRoleArgs>> awsIamRole() {
        return Optional.ofNullable(this.awsIamRole);
    }

    @Import(name="azureManagedIdentity")
    private @Nullable Output<CredentialAzureManagedIdentityArgs> azureManagedIdentity;

    public Optional<Output<CredentialAzureManagedIdentityArgs>> azureManagedIdentity() {
        return Optional.ofNullable(this.azureManagedIdentity);
    }

    @Import(name="azureServicePrincipal")
    private @Nullable Output<CredentialAzureServicePrincipalArgs> azureServicePrincipal;

    public Optional<Output<CredentialAzureServicePrincipalArgs>> azureServicePrincipal() {
        return Optional.ofNullable(this.azureServicePrincipal);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdAt")
    private @Nullable Output<Integer> createdAt;

    public Optional<Output<Integer>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    @Import(name="databricksGcpServiceAccount")
    private @Nullable Output<CredentialDatabricksGcpServiceAccountArgs> databricksGcpServiceAccount;

    public Optional<Output<CredentialDatabricksGcpServiceAccountArgs>> databricksGcpServiceAccount() {
        return Optional.ofNullable(this.databricksGcpServiceAccount);
    }

    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    @Import(name="forceUpdate")
    private @Nullable Output<Boolean> forceUpdate;

    public Optional<Output<Boolean>> forceUpdate() {
        return Optional.ofNullable(this.forceUpdate);
    }

    @Import(name="fullName")
    private @Nullable Output<String> fullName;

    public Optional<Output<String>> fullName() {
        return Optional.ofNullable(this.fullName);
    }

    @Import(name="isolationMode")
    private @Nullable Output<String> isolationMode;

    public Optional<Output<String>> isolationMode() {
        return Optional.ofNullable(this.isolationMode);
    }

    @Import(name="metastoreId")
    private @Nullable Output<String> metastoreId;

    public Optional<Output<String>> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="purpose", required=true)
    private Output<String> purpose;

    public Output<String> purpose() {
        return this.purpose;
    }

    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    @Import(name="skipValidation")
    private @Nullable Output<Boolean> skipValidation;

    public Optional<Output<Boolean>> skipValidation() {
        return Optional.ofNullable(this.skipValidation);
    }

    @Import(name="updatedAt")
    private @Nullable Output<Integer> updatedAt;

    public Optional<Output<Integer>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="updatedBy")
    private @Nullable Output<String> updatedBy;

    public Optional<Output<String>> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    @Import(name="usedForManagedStorage")
    private @Nullable Output<Boolean> usedForManagedStorage;

    public Optional<Output<Boolean>> usedForManagedStorage() {
        return Optional.ofNullable(this.usedForManagedStorage);
    }

    private CredentialArgs() {}

    private CredentialArgs(CredentialArgs $) {
        this.awsIamRole = $.awsIamRole;
        this.azureManagedIdentity = $.azureManagedIdentity;
        this.azureServicePrincipal = $.azureServicePrincipal;
        this.comment = $.comment;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.databricksGcpServiceAccount = $.databricksGcpServiceAccount;
        this.forceDestroy = $.forceDestroy;
        this.forceUpdate = $.forceUpdate;
        this.fullName = $.fullName;
        this.isolationMode = $.isolationMode;
        this.metastoreId = $.metastoreId;
        this.name = $.name;
        this.owner = $.owner;
        this.purpose = $.purpose;
        this.readOnly = $.readOnly;
        this.skipValidation = $.skipValidation;
        this.updatedAt = $.updatedAt;
        this.updatedBy = $.updatedBy;
        this.usedForManagedStorage = $.usedForManagedStorage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CredentialArgs $;

        public Builder() {
            $ = new CredentialArgs();
        }

        public Builder(CredentialArgs defaults) {
            $ = new CredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsIamRole(@Nullable Output<CredentialAwsIamRoleArgs> awsIamRole) {
            $.awsIamRole = awsIamRole;
            return this;
        }

        public Builder awsIamRole(CredentialAwsIamRoleArgs awsIamRole) {
            return awsIamRole(Output.of(awsIamRole));
        }

        public Builder azureManagedIdentity(@Nullable Output<CredentialAzureManagedIdentityArgs> azureManagedIdentity) {
            $.azureManagedIdentity = azureManagedIdentity;
            return this;
        }

        public Builder azureManagedIdentity(CredentialAzureManagedIdentityArgs azureManagedIdentity) {
            return azureManagedIdentity(Output.of(azureManagedIdentity));
        }

        public Builder azureServicePrincipal(@Nullable Output<CredentialAzureServicePrincipalArgs> azureServicePrincipal) {
            $.azureServicePrincipal = azureServicePrincipal;
            return this;
        }

        public Builder azureServicePrincipal(CredentialAzureServicePrincipalArgs azureServicePrincipal) {
            return azureServicePrincipal(Output.of(azureServicePrincipal));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder createdAt(@Nullable Output<Integer> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(Integer createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        public Builder databricksGcpServiceAccount(@Nullable Output<CredentialDatabricksGcpServiceAccountArgs> databricksGcpServiceAccount) {
            $.databricksGcpServiceAccount = databricksGcpServiceAccount;
            return this;
        }

        public Builder databricksGcpServiceAccount(CredentialDatabricksGcpServiceAccountArgs databricksGcpServiceAccount) {
            return databricksGcpServiceAccount(Output.of(databricksGcpServiceAccount));
        }

        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        public Builder forceUpdate(@Nullable Output<Boolean> forceUpdate) {
            $.forceUpdate = forceUpdate;
            return this;
        }

        public Builder forceUpdate(Boolean forceUpdate) {
            return forceUpdate(Output.of(forceUpdate));
        }

        public Builder fullName(@Nullable Output<String> fullName) {
            $.fullName = fullName;
            return this;
        }

        public Builder fullName(String fullName) {
            return fullName(Output.of(fullName));
        }

        public Builder isolationMode(@Nullable Output<String> isolationMode) {
            $.isolationMode = isolationMode;
            return this;
        }

        public Builder isolationMode(String isolationMode) {
            return isolationMode(Output.of(isolationMode));
        }

        public Builder metastoreId(@Nullable Output<String> metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        public Builder metastoreId(String metastoreId) {
            return metastoreId(Output.of(metastoreId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder purpose(Output<String> purpose) {
            $.purpose = purpose;
            return this;
        }

        public Builder purpose(String purpose) {
            return purpose(Output.of(purpose));
        }

        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder skipValidation(@Nullable Output<Boolean> skipValidation) {
            $.skipValidation = skipValidation;
            return this;
        }

        public Builder skipValidation(Boolean skipValidation) {
            return skipValidation(Output.of(skipValidation));
        }

        public Builder updatedAt(@Nullable Output<Integer> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(Integer updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public Builder updatedBy(@Nullable Output<String> updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        public Builder updatedBy(String updatedBy) {
            return updatedBy(Output.of(updatedBy));
        }

        public Builder usedForManagedStorage(@Nullable Output<Boolean> usedForManagedStorage) {
            $.usedForManagedStorage = usedForManagedStorage;
            return this;
        }

        public Builder usedForManagedStorage(Boolean usedForManagedStorage) {
            return usedForManagedStorage(Output.of(usedForManagedStorage));
        }

        public CredentialArgs build() {
            if ($.purpose == null) {
                throw new MissingRequiredPropertyException("CredentialArgs", "purpose");
            }
            return $;
        }
    }

}
