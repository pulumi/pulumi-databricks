// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePoolPoolInfoStats extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePoolPoolInfoStats Empty = new GetInstancePoolPoolInfoStats();

    @Import(name="idleCount")
    private @Nullable Integer idleCount;

    public Optional<Integer> idleCount() {
        return Optional.ofNullable(this.idleCount);
    }

    @Import(name="pendingIdleCount")
    private @Nullable Integer pendingIdleCount;

    public Optional<Integer> pendingIdleCount() {
        return Optional.ofNullable(this.pendingIdleCount);
    }

    @Import(name="pendingUsedCount")
    private @Nullable Integer pendingUsedCount;

    public Optional<Integer> pendingUsedCount() {
        return Optional.ofNullable(this.pendingUsedCount);
    }

    @Import(name="usedCount")
    private @Nullable Integer usedCount;

    public Optional<Integer> usedCount() {
        return Optional.ofNullable(this.usedCount);
    }

    private GetInstancePoolPoolInfoStats() {}

    private GetInstancePoolPoolInfoStats(GetInstancePoolPoolInfoStats $) {
        this.idleCount = $.idleCount;
        this.pendingIdleCount = $.pendingIdleCount;
        this.pendingUsedCount = $.pendingUsedCount;
        this.usedCount = $.usedCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePoolPoolInfoStats defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePoolPoolInfoStats $;

        public Builder() {
            $ = new GetInstancePoolPoolInfoStats();
        }

        public Builder(GetInstancePoolPoolInfoStats defaults) {
            $ = new GetInstancePoolPoolInfoStats(Objects.requireNonNull(defaults));
        }

        public Builder idleCount(@Nullable Integer idleCount) {
            $.idleCount = idleCount;
            return this;
        }

        public Builder pendingIdleCount(@Nullable Integer pendingIdleCount) {
            $.pendingIdleCount = pendingIdleCount;
            return this;
        }

        public Builder pendingUsedCount(@Nullable Integer pendingUsedCount) {
            $.pendingUsedCount = pendingUsedCount;
            return this;
        }

        public Builder usedCount(@Nullable Integer usedCount) {
            $.usedCount = usedCount;
            return this;
        }

        public GetInstancePoolPoolInfoStats build() {
            return $;
        }
    }

}
