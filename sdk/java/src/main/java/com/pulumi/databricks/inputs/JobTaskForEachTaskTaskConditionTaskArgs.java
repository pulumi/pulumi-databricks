// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class JobTaskForEachTaskTaskConditionTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskForEachTaskTaskConditionTaskArgs Empty = new JobTaskForEachTaskTaskConditionTaskArgs();

    @Import(name="left", required=true)
    private Output<String> left;

    public Output<String> left() {
        return this.left;
    }

    @Import(name="op", required=true)
    private Output<String> op;

    public Output<String> op() {
        return this.op;
    }

    @Import(name="right", required=true)
    private Output<String> right;

    public Output<String> right() {
        return this.right;
    }

    private JobTaskForEachTaskTaskConditionTaskArgs() {}

    private JobTaskForEachTaskTaskConditionTaskArgs(JobTaskForEachTaskTaskConditionTaskArgs $) {
        this.left = $.left;
        this.op = $.op;
        this.right = $.right;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskForEachTaskTaskConditionTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskForEachTaskTaskConditionTaskArgs $;

        public Builder() {
            $ = new JobTaskForEachTaskTaskConditionTaskArgs();
        }

        public Builder(JobTaskForEachTaskTaskConditionTaskArgs defaults) {
            $ = new JobTaskForEachTaskTaskConditionTaskArgs(Objects.requireNonNull(defaults));
        }

        public Builder left(Output<String> left) {
            $.left = left;
            return this;
        }

        public Builder left(String left) {
            return left(Output.of(left));
        }

        public Builder op(Output<String> op) {
            $.op = op;
            return this;
        }

        public Builder op(String op) {
            return op(Output.of(op));
        }

        public Builder right(Output<String> right) {
            $.right = right;
            return this;
        }

        public Builder right(String right) {
            return right(Output.of(right));
        }

        public JobTaskForEachTaskTaskConditionTaskArgs build() {
            if ($.left == null) {
                throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTaskArgs", "left");
            }
            if ($.op == null) {
                throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTaskArgs", "op");
            }
            if ($.right == null) {
                throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskConditionTaskArgs", "right");
            }
            return $;
        }
    }

}
