// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.JobTaskSqlTaskAlertSubscriptionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskSqlTaskAlertArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskSqlTaskAlertArgs Empty = new JobTaskSqlTaskAlertArgs();

    /**
     * (String) identifier of the Databricks SQL Alert.
     * 
     */
    @Import(name="alertId", required=true)
    private Output<String> alertId;

    /**
     * @return (String) identifier of the Databricks SQL Alert.
     * 
     */
    public Output<String> alertId() {
        return this.alertId;
    }

    /**
     * flag that specifies if subscriptions are paused or not.
     * 
     */
    @Import(name="pauseSubscriptions")
    private @Nullable Output<Boolean> pauseSubscriptions;

    /**
     * @return flag that specifies if subscriptions are paused or not.
     * 
     */
    public Optional<Output<Boolean>> pauseSubscriptions() {
        return Optional.ofNullable(this.pauseSubscriptions);
    }

    /**
     * a list of subscription blocks consisting out of one of the required fields: `user_name` for user emails or `destination_id` - for Alert destination&#39;s identifier.
     * 
     */
    @Import(name="subscriptions", required=true)
    private Output<List<JobTaskSqlTaskAlertSubscriptionArgs>> subscriptions;

    /**
     * @return a list of subscription blocks consisting out of one of the required fields: `user_name` for user emails or `destination_id` - for Alert destination&#39;s identifier.
     * 
     */
    public Output<List<JobTaskSqlTaskAlertSubscriptionArgs>> subscriptions() {
        return this.subscriptions;
    }

    private JobTaskSqlTaskAlertArgs() {}

    private JobTaskSqlTaskAlertArgs(JobTaskSqlTaskAlertArgs $) {
        this.alertId = $.alertId;
        this.pauseSubscriptions = $.pauseSubscriptions;
        this.subscriptions = $.subscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskSqlTaskAlertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskSqlTaskAlertArgs $;

        public Builder() {
            $ = new JobTaskSqlTaskAlertArgs();
        }

        public Builder(JobTaskSqlTaskAlertArgs defaults) {
            $ = new JobTaskSqlTaskAlertArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alertId (String) identifier of the Databricks SQL Alert.
         * 
         * @return builder
         * 
         */
        public Builder alertId(Output<String> alertId) {
            $.alertId = alertId;
            return this;
        }

        /**
         * @param alertId (String) identifier of the Databricks SQL Alert.
         * 
         * @return builder
         * 
         */
        public Builder alertId(String alertId) {
            return alertId(Output.of(alertId));
        }

        /**
         * @param pauseSubscriptions flag that specifies if subscriptions are paused or not.
         * 
         * @return builder
         * 
         */
        public Builder pauseSubscriptions(@Nullable Output<Boolean> pauseSubscriptions) {
            $.pauseSubscriptions = pauseSubscriptions;
            return this;
        }

        /**
         * @param pauseSubscriptions flag that specifies if subscriptions are paused or not.
         * 
         * @return builder
         * 
         */
        public Builder pauseSubscriptions(Boolean pauseSubscriptions) {
            return pauseSubscriptions(Output.of(pauseSubscriptions));
        }

        /**
         * @param subscriptions a list of subscription blocks consisting out of one of the required fields: `user_name` for user emails or `destination_id` - for Alert destination&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(Output<List<JobTaskSqlTaskAlertSubscriptionArgs>> subscriptions) {
            $.subscriptions = subscriptions;
            return this;
        }

        /**
         * @param subscriptions a list of subscription blocks consisting out of one of the required fields: `user_name` for user emails or `destination_id` - for Alert destination&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(List<JobTaskSqlTaskAlertSubscriptionArgs> subscriptions) {
            return subscriptions(Output.of(subscriptions));
        }

        /**
         * @param subscriptions a list of subscription blocks consisting out of one of the required fields: `user_name` for user emails or `destination_id` - for Alert destination&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(JobTaskSqlTaskAlertSubscriptionArgs... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }

        public JobTaskSqlTaskAlertArgs build() {
            $.alertId = Objects.requireNonNull($.alertId, "expected parameter 'alertId' to be non-null");
            $.subscriptions = Objects.requireNonNull($.subscriptions, "expected parameter 'subscriptions' to be non-null");
            return $;
        }
    }

}
