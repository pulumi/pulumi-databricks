// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoDiskSpecDiskType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePoolPoolInfoDiskSpec extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePoolPoolInfoDiskSpec Empty = new GetInstancePoolPoolInfoDiskSpec();

    @Import(name="diskCount")
    private @Nullable Integer diskCount;

    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }

    @Import(name="diskSize")
    private @Nullable Integer diskSize;

    public Optional<Integer> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }

    @Import(name="diskType")
    private @Nullable GetInstancePoolPoolInfoDiskSpecDiskType diskType;

    public Optional<GetInstancePoolPoolInfoDiskSpecDiskType> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    private GetInstancePoolPoolInfoDiskSpec() {}

    private GetInstancePoolPoolInfoDiskSpec(GetInstancePoolPoolInfoDiskSpec $) {
        this.diskCount = $.diskCount;
        this.diskSize = $.diskSize;
        this.diskType = $.diskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePoolPoolInfoDiskSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePoolPoolInfoDiskSpec $;

        public Builder() {
            $ = new GetInstancePoolPoolInfoDiskSpec();
        }

        public Builder(GetInstancePoolPoolInfoDiskSpec defaults) {
            $ = new GetInstancePoolPoolInfoDiskSpec(Objects.requireNonNull(defaults));
        }

        public Builder diskCount(@Nullable Integer diskCount) {
            $.diskCount = diskCount;
            return this;
        }

        public Builder diskSize(@Nullable Integer diskSize) {
            $.diskSize = diskSize;
            return this;
        }

        public Builder diskType(@Nullable GetInstancePoolPoolInfoDiskSpecDiskType diskType) {
            $.diskType = diskType;
            return this;
        }

        public GetInstancePoolPoolInfoDiskSpec build() {
            return $;
        }
    }

}
