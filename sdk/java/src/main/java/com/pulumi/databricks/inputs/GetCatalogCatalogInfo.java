// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetCatalogCatalogInfoEffectivePredictiveOptimizationFlag;
import com.pulumi.databricks.inputs.GetCatalogCatalogInfoProvisioningInfo;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogCatalogInfo extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogCatalogInfo Empty = new GetCatalogCatalogInfo();

    @Import(name="browseOnly")
    private @Nullable Boolean browseOnly;

    public Optional<Boolean> browseOnly() {
        return Optional.ofNullable(this.browseOnly);
    }

    @Import(name="catalogType")
    private @Nullable String catalogType;

    public Optional<String> catalogType() {
        return Optional.ofNullable(this.catalogType);
    }

    @Import(name="comment")
    private @Nullable String comment;

    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="connectionName")
    private @Nullable String connectionName;

    public Optional<String> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    @Import(name="createdAt")
    private @Nullable Integer createdAt;

    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="createdBy")
    private @Nullable String createdBy;

    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    @Import(name="effectivePredictiveOptimizationFlag")
    private @Nullable GetCatalogCatalogInfoEffectivePredictiveOptimizationFlag effectivePredictiveOptimizationFlag;

    public Optional<GetCatalogCatalogInfoEffectivePredictiveOptimizationFlag> effectivePredictiveOptimizationFlag() {
        return Optional.ofNullable(this.effectivePredictiveOptimizationFlag);
    }

    @Import(name="enablePredictiveOptimization")
    private @Nullable String enablePredictiveOptimization;

    public Optional<String> enablePredictiveOptimization() {
        return Optional.ofNullable(this.enablePredictiveOptimization);
    }

    @Import(name="fullName")
    private @Nullable String fullName;

    public Optional<String> fullName() {
        return Optional.ofNullable(this.fullName);
    }

    @Import(name="isolationMode")
    private @Nullable String isolationMode;

    public Optional<String> isolationMode() {
        return Optional.ofNullable(this.isolationMode);
    }

    @Import(name="metastoreId")
    private @Nullable String metastoreId;

    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="options")
    private @Nullable Map<String,String> options;

    public Optional<Map<String,String>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="owner")
    private @Nullable String owner;

    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="properties")
    private @Nullable Map<String,String> properties;

    public Optional<Map<String,String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    @Import(name="providerName")
    private @Nullable String providerName;

    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    @Import(name="provisioningInfo")
    private @Nullable GetCatalogCatalogInfoProvisioningInfo provisioningInfo;

    public Optional<GetCatalogCatalogInfoProvisioningInfo> provisioningInfo() {
        return Optional.ofNullable(this.provisioningInfo);
    }

    @Import(name="securableKind")
    private @Nullable String securableKind;

    public Optional<String> securableKind() {
        return Optional.ofNullable(this.securableKind);
    }

    @Import(name="securableType")
    private @Nullable String securableType;

    public Optional<String> securableType() {
        return Optional.ofNullable(this.securableType);
    }

    @Import(name="shareName")
    private @Nullable String shareName;

    public Optional<String> shareName() {
        return Optional.ofNullable(this.shareName);
    }

    @Import(name="storageLocation")
    private @Nullable String storageLocation;

    public Optional<String> storageLocation() {
        return Optional.ofNullable(this.storageLocation);
    }

    @Import(name="storageRoot")
    private @Nullable String storageRoot;

    public Optional<String> storageRoot() {
        return Optional.ofNullable(this.storageRoot);
    }

    @Import(name="updatedAt")
    private @Nullable Integer updatedAt;

    public Optional<Integer> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="updatedBy")
    private @Nullable String updatedBy;

    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    private GetCatalogCatalogInfo() {}

    private GetCatalogCatalogInfo(GetCatalogCatalogInfo $) {
        this.browseOnly = $.browseOnly;
        this.catalogType = $.catalogType;
        this.comment = $.comment;
        this.connectionName = $.connectionName;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.effectivePredictiveOptimizationFlag = $.effectivePredictiveOptimizationFlag;
        this.enablePredictiveOptimization = $.enablePredictiveOptimization;
        this.fullName = $.fullName;
        this.isolationMode = $.isolationMode;
        this.metastoreId = $.metastoreId;
        this.name = $.name;
        this.options = $.options;
        this.owner = $.owner;
        this.properties = $.properties;
        this.providerName = $.providerName;
        this.provisioningInfo = $.provisioningInfo;
        this.securableKind = $.securableKind;
        this.securableType = $.securableType;
        this.shareName = $.shareName;
        this.storageLocation = $.storageLocation;
        this.storageRoot = $.storageRoot;
        this.updatedAt = $.updatedAt;
        this.updatedBy = $.updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogCatalogInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogCatalogInfo $;

        public Builder() {
            $ = new GetCatalogCatalogInfo();
        }

        public Builder(GetCatalogCatalogInfo defaults) {
            $ = new GetCatalogCatalogInfo(Objects.requireNonNull(defaults));
        }

        public Builder browseOnly(@Nullable Boolean browseOnly) {
            $.browseOnly = browseOnly;
            return this;
        }

        public Builder catalogType(@Nullable String catalogType) {
            $.catalogType = catalogType;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        public Builder connectionName(@Nullable String connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        public Builder createdAt(@Nullable Integer createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder effectivePredictiveOptimizationFlag(@Nullable GetCatalogCatalogInfoEffectivePredictiveOptimizationFlag effectivePredictiveOptimizationFlag) {
            $.effectivePredictiveOptimizationFlag = effectivePredictiveOptimizationFlag;
            return this;
        }

        public Builder enablePredictiveOptimization(@Nullable String enablePredictiveOptimization) {
            $.enablePredictiveOptimization = enablePredictiveOptimization;
            return this;
        }

        public Builder fullName(@Nullable String fullName) {
            $.fullName = fullName;
            return this;
        }

        public Builder isolationMode(@Nullable String isolationMode) {
            $.isolationMode = isolationMode;
            return this;
        }

        public Builder metastoreId(@Nullable String metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder options(@Nullable Map<String,String> options) {
            $.options = options;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            $.owner = owner;
            return this;
        }

        public Builder properties(@Nullable Map<String,String> properties) {
            $.properties = properties;
            return this;
        }

        public Builder providerName(@Nullable String providerName) {
            $.providerName = providerName;
            return this;
        }

        public Builder provisioningInfo(@Nullable GetCatalogCatalogInfoProvisioningInfo provisioningInfo) {
            $.provisioningInfo = provisioningInfo;
            return this;
        }

        public Builder securableKind(@Nullable String securableKind) {
            $.securableKind = securableKind;
            return this;
        }

        public Builder securableType(@Nullable String securableType) {
            $.securableType = securableType;
            return this;
        }

        public Builder shareName(@Nullable String shareName) {
            $.shareName = shareName;
            return this;
        }

        public Builder storageLocation(@Nullable String storageLocation) {
            $.storageLocation = storageLocation;
            return this;
        }

        public Builder storageRoot(@Nullable String storageRoot) {
            $.storageRoot = storageRoot;
            return this;
        }

        public Builder updatedAt(@Nullable Integer updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedBy(@Nullable String updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        public GetCatalogCatalogInfo build() {
            return $;
        }
    }

}
