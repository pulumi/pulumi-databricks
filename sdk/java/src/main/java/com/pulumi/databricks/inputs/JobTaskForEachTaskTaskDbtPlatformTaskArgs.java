// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskForEachTaskTaskDbtPlatformTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskForEachTaskTaskDbtPlatformTaskArgs Empty = new JobTaskForEachTaskTaskDbtPlatformTaskArgs();

    /**
     * The resource name of the UC connection to authenticate from Databricks to Power BI
     * 
     */
    @Import(name="connectionResourceName")
    private @Nullable Output<String> connectionResourceName;

    /**
     * @return The resource name of the UC connection to authenticate from Databricks to Power BI
     * 
     */
    public Optional<Output<String>> connectionResourceName() {
        return Optional.ofNullable(this.connectionResourceName);
    }

    @Import(name="dbtPlatformJobId")
    private @Nullable Output<String> dbtPlatformJobId;

    public Optional<Output<String>> dbtPlatformJobId() {
        return Optional.ofNullable(this.dbtPlatformJobId);
    }

    private JobTaskForEachTaskTaskDbtPlatformTaskArgs() {}

    private JobTaskForEachTaskTaskDbtPlatformTaskArgs(JobTaskForEachTaskTaskDbtPlatformTaskArgs $) {
        this.connectionResourceName = $.connectionResourceName;
        this.dbtPlatformJobId = $.dbtPlatformJobId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskForEachTaskTaskDbtPlatformTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskForEachTaskTaskDbtPlatformTaskArgs $;

        public Builder() {
            $ = new JobTaskForEachTaskTaskDbtPlatformTaskArgs();
        }

        public Builder(JobTaskForEachTaskTaskDbtPlatformTaskArgs defaults) {
            $ = new JobTaskForEachTaskTaskDbtPlatformTaskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionResourceName The resource name of the UC connection to authenticate from Databricks to Power BI
         * 
         * @return builder
         * 
         */
        public Builder connectionResourceName(@Nullable Output<String> connectionResourceName) {
            $.connectionResourceName = connectionResourceName;
            return this;
        }

        /**
         * @param connectionResourceName The resource name of the UC connection to authenticate from Databricks to Power BI
         * 
         * @return builder
         * 
         */
        public Builder connectionResourceName(String connectionResourceName) {
            return connectionResourceName(Output.of(connectionResourceName));
        }

        public Builder dbtPlatformJobId(@Nullable Output<String> dbtPlatformJobId) {
            $.dbtPlatformJobId = dbtPlatformJobId;
            return this;
        }

        public Builder dbtPlatformJobId(String dbtPlatformJobId) {
            return dbtPlatformJobId(Output.of(dbtPlatformJobId));
        }

        public JobTaskForEachTaskTaskDbtPlatformTaskArgs build() {
            return $;
        }
    }

}
