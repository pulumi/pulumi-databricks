// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCleanRoomAutoApprovalRuleResult {
    /**
     * @return (string) - Collaborator alias of the author covered by the rule.
     * Only one of `author_collaborator_alias` and `author_scope` can be set
     * 
     */
    private @Nullable String authorCollaboratorAlias;
    /**
     * @return (string) - Scope of authors covered by the rule.
     * Only one of `author_collaborator_alias` and `author_scope` can be set. Possible values are: `ANY_AUTHOR`
     * 
     */
    private @Nullable String authorScope;
    /**
     * @return (string) - The name of the clean room this auto-approval rule belongs to
     * 
     */
    private @Nullable String cleanRoomName;
    /**
     * @return (integer) - Timestamp of when the rule was created, in epoch milliseconds
     * 
     */
    private Integer createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (string) - A generated UUID identifying the rule
     * 
     */
    private String ruleId;
    /**
     * @return (string) - The owner of the rule to whom the rule applies
     * 
     */
    private String ruleOwnerCollaboratorAlias;
    /**
     * @return (string) - Collaborator alias of the runner covered by the rule
     * 
     */
    private @Nullable String runnerCollaboratorAlias;
    private @Nullable String workspaceId;

    private GetCleanRoomAutoApprovalRuleResult() {}
    /**
     * @return (string) - Collaborator alias of the author covered by the rule.
     * Only one of `author_collaborator_alias` and `author_scope` can be set
     * 
     */
    public Optional<String> authorCollaboratorAlias() {
        return Optional.ofNullable(this.authorCollaboratorAlias);
    }
    /**
     * @return (string) - Scope of authors covered by the rule.
     * Only one of `author_collaborator_alias` and `author_scope` can be set. Possible values are: `ANY_AUTHOR`
     * 
     */
    public Optional<String> authorScope() {
        return Optional.ofNullable(this.authorScope);
    }
    /**
     * @return (string) - The name of the clean room this auto-approval rule belongs to
     * 
     */
    public Optional<String> cleanRoomName() {
        return Optional.ofNullable(this.cleanRoomName);
    }
    /**
     * @return (integer) - Timestamp of when the rule was created, in epoch milliseconds
     * 
     */
    public Integer createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (string) - A generated UUID identifying the rule
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }
    /**
     * @return (string) - The owner of the rule to whom the rule applies
     * 
     */
    public String ruleOwnerCollaboratorAlias() {
        return this.ruleOwnerCollaboratorAlias;
    }
    /**
     * @return (string) - Collaborator alias of the runner covered by the rule
     * 
     */
    public Optional<String> runnerCollaboratorAlias() {
        return Optional.ofNullable(this.runnerCollaboratorAlias);
    }
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCleanRoomAutoApprovalRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authorCollaboratorAlias;
        private @Nullable String authorScope;
        private @Nullable String cleanRoomName;
        private Integer createdAt;
        private String id;
        private String ruleId;
        private String ruleOwnerCollaboratorAlias;
        private @Nullable String runnerCollaboratorAlias;
        private @Nullable String workspaceId;
        public Builder() {}
        public Builder(GetCleanRoomAutoApprovalRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorCollaboratorAlias = defaults.authorCollaboratorAlias;
    	      this.authorScope = defaults.authorScope;
    	      this.cleanRoomName = defaults.cleanRoomName;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.ruleId = defaults.ruleId;
    	      this.ruleOwnerCollaboratorAlias = defaults.ruleOwnerCollaboratorAlias;
    	      this.runnerCollaboratorAlias = defaults.runnerCollaboratorAlias;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder authorCollaboratorAlias(@Nullable String authorCollaboratorAlias) {

            this.authorCollaboratorAlias = authorCollaboratorAlias;
            return this;
        }
        @CustomType.Setter
        public Builder authorScope(@Nullable String authorScope) {

            this.authorScope = authorScope;
            return this;
        }
        @CustomType.Setter
        public Builder cleanRoomName(@Nullable String cleanRoomName) {

            this.cleanRoomName = cleanRoomName;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(Integer createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomAutoApprovalRuleResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomAutoApprovalRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomAutoApprovalRuleResult", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder ruleOwnerCollaboratorAlias(String ruleOwnerCollaboratorAlias) {
            if (ruleOwnerCollaboratorAlias == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomAutoApprovalRuleResult", "ruleOwnerCollaboratorAlias");
            }
            this.ruleOwnerCollaboratorAlias = ruleOwnerCollaboratorAlias;
            return this;
        }
        @CustomType.Setter
        public Builder runnerCollaboratorAlias(@Nullable String runnerCollaboratorAlias) {

            this.runnerCollaboratorAlias = runnerCollaboratorAlias;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(@Nullable String workspaceId) {

            this.workspaceId = workspaceId;
            return this;
        }
        public GetCleanRoomAutoApprovalRuleResult build() {
            final var _resultValue = new GetCleanRoomAutoApprovalRuleResult();
            _resultValue.authorCollaboratorAlias = authorCollaboratorAlias;
            _resultValue.authorScope = authorScope;
            _resultValue.cleanRoomName = cleanRoomName;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.ruleId = ruleId;
            _resultValue.ruleOwnerCollaboratorAlias = ruleOwnerCollaboratorAlias;
            _resultValue.runnerCollaboratorAlias = runnerCollaboratorAlias;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
