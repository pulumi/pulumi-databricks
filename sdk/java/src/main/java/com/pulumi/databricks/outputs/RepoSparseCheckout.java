// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RepoSparseCheckout {
    /**
     * @return array of paths (directories) that will be used for sparse checkout.  List of patterns could be updated in-place.
     * 
     * Addition or removal of the `sparse_checkout` configuration block will lead to recreation of the repo.
     * 
     */
    private List<String> patterns;

    private RepoSparseCheckout() {}
    /**
     * @return array of paths (directories) that will be used for sparse checkout.  List of patterns could be updated in-place.
     * 
     * Addition or removal of the `sparse_checkout` configuration block will lead to recreation of the repo.
     * 
     */
    public List<String> patterns() {
        return this.patterns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepoSparseCheckout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> patterns;
        public Builder() {}
        public Builder(RepoSparseCheckout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.patterns = defaults.patterns;
        }

        @CustomType.Setter
        public Builder patterns(List<String> patterns) {
            if (patterns == null) {
              throw new MissingRequiredPropertyException("RepoSparseCheckout", "patterns");
            }
            this.patterns = patterns;
            return this;
        }
        public Builder patterns(String... patterns) {
            return patterns(List.of(patterns));
        }
        public RepoSparseCheckout build() {
            final var _resultValue = new RepoSparseCheckout();
            _resultValue.patterns = patterns;
            return _resultValue;
        }
    }
}
