// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelServingConfigServedModel {
    /**
     * @return a map of environment variable name/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: `{{secrets/secret_scope/secret_key}}`.
     * 
     */
    private @Nullable Map<String,Object> environmentVars;
    /**
     * @return ARN of the instance profile that the served model will use to access AWS resources.
     * 
     */
    private @Nullable String instanceProfileArn;
    /**
     * @return The name of the model in Databricks Model Registry to be served.
     * 
     */
    private String modelName;
    /**
     * @return The version of the model in Databricks Model Registry to be served.
     * 
     */
    private String modelVersion;
    /**
     * @return The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
     * 
     */
    private @Nullable String name;
    /**
     * @return Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
     * 
     */
    private @Nullable Boolean scaleToZeroEnabled;
    /**
     * @return The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
     * 
     */
    private String workloadSize;

    private ModelServingConfigServedModel() {}
    /**
     * @return a map of environment variable name/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: `{{secrets/secret_scope/secret_key}}`.
     * 
     */
    public Map<String,Object> environmentVars() {
        return this.environmentVars == null ? Map.of() : this.environmentVars;
    }
    /**
     * @return ARN of the instance profile that the served model will use to access AWS resources.
     * 
     */
    public Optional<String> instanceProfileArn() {
        return Optional.ofNullable(this.instanceProfileArn);
    }
    /**
     * @return The name of the model in Databricks Model Registry to be served.
     * 
     */
    public String modelName() {
        return this.modelName;
    }
    /**
     * @return The version of the model in Databricks Model Registry to be served.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
     * 
     */
    public Optional<Boolean> scaleToZeroEnabled() {
        return Optional.ofNullable(this.scaleToZeroEnabled);
    }
    /**
     * @return The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
     * 
     */
    public String workloadSize() {
        return this.workloadSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelServingConfigServedModel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> environmentVars;
        private @Nullable String instanceProfileArn;
        private String modelName;
        private String modelVersion;
        private @Nullable String name;
        private @Nullable Boolean scaleToZeroEnabled;
        private String workloadSize;
        public Builder() {}
        public Builder(ModelServingConfigServedModel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentVars = defaults.environmentVars;
    	      this.instanceProfileArn = defaults.instanceProfileArn;
    	      this.modelName = defaults.modelName;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.scaleToZeroEnabled = defaults.scaleToZeroEnabled;
    	      this.workloadSize = defaults.workloadSize;
        }

        @CustomType.Setter
        public Builder environmentVars(@Nullable Map<String,Object> environmentVars) {
            this.environmentVars = environmentVars;
            return this;
        }
        @CustomType.Setter
        public Builder instanceProfileArn(@Nullable String instanceProfileArn) {
            this.instanceProfileArn = instanceProfileArn;
            return this;
        }
        @CustomType.Setter
        public Builder modelName(String modelName) {
            this.modelName = Objects.requireNonNull(modelName);
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            this.modelVersion = Objects.requireNonNull(modelVersion);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scaleToZeroEnabled(@Nullable Boolean scaleToZeroEnabled) {
            this.scaleToZeroEnabled = scaleToZeroEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder workloadSize(String workloadSize) {
            this.workloadSize = Objects.requireNonNull(workloadSize);
            return this;
        }
        public ModelServingConfigServedModel build() {
            final var o = new ModelServingConfigServedModel();
            o.environmentVars = environmentVars;
            o.instanceProfileArn = instanceProfileArn;
            o.modelName = modelName;
            o.modelVersion = modelVersion;
            o.name = name;
            o.scaleToZeroEnabled = scaleToZeroEnabled;
            o.workloadSize = workloadSize;
            return o;
        }
    }
}
