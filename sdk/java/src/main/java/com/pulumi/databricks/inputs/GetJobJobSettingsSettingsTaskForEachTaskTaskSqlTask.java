// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskAlert;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskDashboard;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskFile;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskQuery;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask extends com.pulumi.resources.InvokeArgs {

    public static final GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask Empty = new GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask();

    @Import(name="alert")
    private @Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskAlert alert;

    public Optional<GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskAlert> alert() {
        return Optional.ofNullable(this.alert);
    }

    @Import(name="dashboard")
    private @Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskDashboard dashboard;

    public Optional<GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskDashboard> dashboard() {
        return Optional.ofNullable(this.dashboard);
    }

    @Import(name="file")
    private @Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskFile file;

    public Optional<GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskFile> file() {
        return Optional.ofNullable(this.file);
    }

    @Import(name="parameters")
    private @Nullable Map<String,Object> parameters;

    public Optional<Map<String,Object>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="query")
    private @Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskQuery query;

    public Optional<GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskQuery> query() {
        return Optional.ofNullable(this.query);
    }

    @Import(name="warehouseId", required=true)
    private String warehouseId;

    public String warehouseId() {
        return this.warehouseId;
    }

    private GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask() {}

    private GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask(GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask $) {
        this.alert = $.alert;
        this.dashboard = $.dashboard;
        this.file = $.file;
        this.parameters = $.parameters;
        this.query = $.query;
        this.warehouseId = $.warehouseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask $;

        public Builder() {
            $ = new GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask();
        }

        public Builder(GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask defaults) {
            $ = new GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask(Objects.requireNonNull(defaults));
        }

        public Builder alert(@Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskAlert alert) {
            $.alert = alert;
            return this;
        }

        public Builder dashboard(@Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskDashboard dashboard) {
            $.dashboard = dashboard;
            return this;
        }

        public Builder file(@Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskFile file) {
            $.file = file;
            return this;
        }

        public Builder parameters(@Nullable Map<String,Object> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder query(@Nullable GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTaskQuery query) {
            $.query = query;
            return this;
        }

        public Builder warehouseId(String warehouseId) {
            $.warehouseId = warehouseId;
            return this;
        }

        public GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask build() {
            if ($.warehouseId == null) {
                throw new MissingRequiredPropertyException("GetJobJobSettingsSettingsTaskForEachTaskTaskSqlTask", "warehouseId");
            }
            return $;
        }
    }

}
