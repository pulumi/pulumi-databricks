// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.MountArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.MountState;
import com.pulumi.databricks.outputs.MountAbfs;
import com.pulumi.databricks.outputs.MountAdl;
import com.pulumi.databricks.outputs.MountGs;
import com.pulumi.databricks.outputs.MountS3;
import com.pulumi.databricks.outputs.MountWasb;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * -&gt; **Note** Importing this resource is not currently supported.
 * 
 */
@ResourceType(type="databricks:index/mount:Mount")
public class Mount extends com.pulumi.resources.CustomResource {
    @Export(name="abfs", refs={MountAbfs.class}, tree="[0]")
    private Output</* @Nullable */ MountAbfs> abfs;

    public Output<Optional<MountAbfs>> abfs() {
        return Codegen.optional(this.abfs);
    }
    @Export(name="adl", refs={MountAdl.class}, tree="[0]")
    private Output</* @Nullable */ MountAdl> adl;

    public Output<Optional<MountAdl>> adl() {
        return Codegen.optional(this.adl);
    }
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    public Output<String> clusterId() {
        return this.clusterId;
    }
    @Export(name="encryptionType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionType;

    public Output<Optional<String>> encryptionType() {
        return Codegen.optional(this.encryptionType);
    }
    @Export(name="extraConfigs", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> extraConfigs;

    public Output<Optional<Map<String,Object>>> extraConfigs() {
        return Codegen.optional(this.extraConfigs);
    }
    @Export(name="gs", refs={MountGs.class}, tree="[0]")
    private Output</* @Nullable */ MountGs> gs;

    public Output<Optional<MountGs>> gs() {
        return Codegen.optional(this.gs);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="resourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceId;

    public Output<Optional<String>> resourceId() {
        return Codegen.optional(this.resourceId);
    }
    @Export(name="s3", refs={MountS3.class}, tree="[0]")
    private Output</* @Nullable */ MountS3> s3;

    public Output<Optional<MountS3>> s3() {
        return Codegen.optional(this.s3);
    }
    /**
     * (String) HDFS-compatible url
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output<String> source;

    /**
     * @return (String) HDFS-compatible url
     * 
     */
    public Output<String> source() {
        return this.source;
    }
    @Export(name="uri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> uri;

    public Output<Optional<String>> uri() {
        return Codegen.optional(this.uri);
    }
    @Export(name="wasb", refs={MountWasb.class}, tree="[0]")
    private Output</* @Nullable */ MountWasb> wasb;

    public Output<Optional<MountWasb>> wasb() {
        return Codegen.optional(this.wasb);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Mount(String name) {
        this(name, MountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Mount(String name, @Nullable MountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Mount(String name, @Nullable MountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/mount:Mount", name, args == null ? MountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Mount(String name, Output<String> id, @Nullable MountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/mount:Mount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Mount get(String name, Output<String> id, @Nullable MountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Mount(name, id, state, options);
    }
}
