// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs Empty = new ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs();

    /**
     * The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
     * 
     */
    @Import(name="awsAccessKeyId")
    private @Nullable Output<String> awsAccessKeyId;

    /**
     * @return The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
     * 
     */
    public Optional<Output<String>> awsAccessKeyId() {
        return Optional.ofNullable(this.awsAccessKeyId);
    }

    @Import(name="awsAccessKeyIdPlaintext")
    private @Nullable Output<String> awsAccessKeyIdPlaintext;

    public Optional<Output<String>> awsAccessKeyIdPlaintext() {
        return Optional.ofNullable(this.awsAccessKeyIdPlaintext);
    }

    /**
     * The AWS region to use. Bedrock has to be enabled there.
     * 
     */
    @Import(name="awsRegion", required=true)
    private Output<String> awsRegion;

    /**
     * @return The AWS region to use. Bedrock has to be enabled there.
     * 
     */
    public Output<String> awsRegion() {
        return this.awsRegion;
    }

    /**
     * The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
     * 
     */
    @Import(name="awsSecretAccessKey")
    private @Nullable Output<String> awsSecretAccessKey;

    /**
     * @return The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
     * 
     */
    public Optional<Output<String>> awsSecretAccessKey() {
        return Optional.ofNullable(this.awsSecretAccessKey);
    }

    @Import(name="awsSecretAccessKeyPlaintext")
    private @Nullable Output<String> awsSecretAccessKeyPlaintext;

    public Optional<Output<String>> awsSecretAccessKeyPlaintext() {
        return Optional.ofNullable(this.awsSecretAccessKeyPlaintext);
    }

    /**
     * The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: `Anthropic`, `Cohere`, `AI21Labs`, `Amazon`.
     * 
     */
    @Import(name="bedrockProvider", required=true)
    private Output<String> bedrockProvider;

    /**
     * @return The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: `Anthropic`, `Cohere`, `AI21Labs`, `Amazon`.
     * 
     */
    public Output<String> bedrockProvider() {
        return this.bedrockProvider;
    }

    private ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs() {}

    private ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs(ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs $) {
        this.awsAccessKeyId = $.awsAccessKeyId;
        this.awsAccessKeyIdPlaintext = $.awsAccessKeyIdPlaintext;
        this.awsRegion = $.awsRegion;
        this.awsSecretAccessKey = $.awsSecretAccessKey;
        this.awsSecretAccessKeyPlaintext = $.awsSecretAccessKeyPlaintext;
        this.bedrockProvider = $.bedrockProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs $;

        public Builder() {
            $ = new ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs();
        }

        public Builder(ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs defaults) {
            $ = new ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccessKeyId The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(@Nullable Output<String> awsAccessKeyId) {
            $.awsAccessKeyId = awsAccessKeyId;
            return this;
        }

        /**
         * @param awsAccessKeyId The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(String awsAccessKeyId) {
            return awsAccessKeyId(Output.of(awsAccessKeyId));
        }

        public Builder awsAccessKeyIdPlaintext(@Nullable Output<String> awsAccessKeyIdPlaintext) {
            $.awsAccessKeyIdPlaintext = awsAccessKeyIdPlaintext;
            return this;
        }

        public Builder awsAccessKeyIdPlaintext(String awsAccessKeyIdPlaintext) {
            return awsAccessKeyIdPlaintext(Output.of(awsAccessKeyIdPlaintext));
        }

        /**
         * @param awsRegion The AWS region to use. Bedrock has to be enabled there.
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(Output<String> awsRegion) {
            $.awsRegion = awsRegion;
            return this;
        }

        /**
         * @param awsRegion The AWS region to use. Bedrock has to be enabled there.
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(String awsRegion) {
            return awsRegion(Output.of(awsRegion));
        }

        /**
         * @param awsSecretAccessKey The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(@Nullable Output<String> awsSecretAccessKey) {
            $.awsSecretAccessKey = awsSecretAccessKey;
            return this;
        }

        /**
         * @param awsSecretAccessKey The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(String awsSecretAccessKey) {
            return awsSecretAccessKey(Output.of(awsSecretAccessKey));
        }

        public Builder awsSecretAccessKeyPlaintext(@Nullable Output<String> awsSecretAccessKeyPlaintext) {
            $.awsSecretAccessKeyPlaintext = awsSecretAccessKeyPlaintext;
            return this;
        }

        public Builder awsSecretAccessKeyPlaintext(String awsSecretAccessKeyPlaintext) {
            return awsSecretAccessKeyPlaintext(Output.of(awsSecretAccessKeyPlaintext));
        }

        /**
         * @param bedrockProvider The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: `Anthropic`, `Cohere`, `AI21Labs`, `Amazon`.
         * 
         * @return builder
         * 
         */
        public Builder bedrockProvider(Output<String> bedrockProvider) {
            $.bedrockProvider = bedrockProvider;
            return this;
        }

        /**
         * @param bedrockProvider The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: `Anthropic`, `Cohere`, `AI21Labs`, `Amazon`.
         * 
         * @return builder
         * 
         */
        public Builder bedrockProvider(String bedrockProvider) {
            return bedrockProvider(Output.of(bedrockProvider));
        }

        public ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs build() {
            if ($.awsRegion == null) {
                throw new MissingRequiredPropertyException("ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs", "awsRegion");
            }
            if ($.bedrockProvider == null) {
                throw new MissingRequiredPropertyException("ModelServingConfigServedEntityExternalModelAmazonBedrockConfigArgs", "bedrockProvider");
            }
            return $;
        }
    }

}
