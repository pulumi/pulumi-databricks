// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs Empty = new AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs();

    /**
     * The Azure storage account name
     * 
     */
    @Import(name="azureStorageAccount")
    private @Nullable Output<String> azureStorageAccount;

    /**
     * @return The Azure storage account name
     * 
     */
    public Optional<Output<String>> azureStorageAccount() {
        return Optional.ofNullable(this.azureStorageAccount);
    }

    /**
     * The Azure storage service type (blob, dfs, etc.)
     * 
     */
    @Import(name="azureStorageService")
    private @Nullable Output<String> azureStorageService;

    /**
     * @return The Azure storage service type (blob, dfs, etc.)
     * 
     */
    public Optional<Output<String>> azureStorageService() {
        return Optional.ofNullable(this.azureStorageService);
    }

    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * The region of the S3 bucket
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the S3 bucket
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The type of storage destination. Possible values are: AWS_S3, AZURE_STORAGE, GOOGLE_CLOUD_STORAGE
     * 
     */
    @Import(name="storageDestinationType")
    private @Nullable Output<String> storageDestinationType;

    /**
     * @return The type of storage destination. Possible values are: AWS_S3, AZURE_STORAGE, GOOGLE_CLOUD_STORAGE
     * 
     */
    public Optional<Output<String>> storageDestinationType() {
        return Optional.ofNullable(this.storageDestinationType);
    }

    private AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs() {}

    private AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs $) {
        this.azureStorageAccount = $.azureStorageAccount;
        this.azureStorageService = $.azureStorageService;
        this.bucketName = $.bucketName;
        this.region = $.region;
        this.storageDestinationType = $.storageDestinationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs $;

        public Builder() {
            $ = new AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs();
        }

        public Builder(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs defaults) {
            $ = new AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureStorageAccount The Azure storage account name
         * 
         * @return builder
         * 
         */
        public Builder azureStorageAccount(@Nullable Output<String> azureStorageAccount) {
            $.azureStorageAccount = azureStorageAccount;
            return this;
        }

        /**
         * @param azureStorageAccount The Azure storage account name
         * 
         * @return builder
         * 
         */
        public Builder azureStorageAccount(String azureStorageAccount) {
            return azureStorageAccount(Output.of(azureStorageAccount));
        }

        /**
         * @param azureStorageService The Azure storage service type (blob, dfs, etc.)
         * 
         * @return builder
         * 
         */
        public Builder azureStorageService(@Nullable Output<String> azureStorageService) {
            $.azureStorageService = azureStorageService;
            return this;
        }

        /**
         * @param azureStorageService The Azure storage service type (blob, dfs, etc.)
         * 
         * @return builder
         * 
         */
        public Builder azureStorageService(String azureStorageService) {
            return azureStorageService(Output.of(azureStorageService));
        }

        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param region The region of the S3 bucket
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the S3 bucket
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param storageDestinationType The type of storage destination. Possible values are: AWS_S3, AZURE_STORAGE, GOOGLE_CLOUD_STORAGE
         * 
         * @return builder
         * 
         */
        public Builder storageDestinationType(@Nullable Output<String> storageDestinationType) {
            $.storageDestinationType = storageDestinationType;
            return this;
        }

        /**
         * @param storageDestinationType The type of storage destination. Possible values are: AWS_S3, AZURE_STORAGE, GOOGLE_CLOUD_STORAGE
         * 
         * @return builder
         * 
         */
        public Builder storageDestinationType(String storageDestinationType) {
            return storageDestinationType(Output.of(storageDestinationType));
        }

        public AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs build() {
            return $;
        }
    }

}
