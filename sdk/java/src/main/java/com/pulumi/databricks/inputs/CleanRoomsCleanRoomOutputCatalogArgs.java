// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CleanRoomsCleanRoomOutputCatalogArgs extends com.pulumi.resources.ResourceArgs {

    public static final CleanRoomsCleanRoomOutputCatalogArgs Empty = new CleanRoomsCleanRoomOutputCatalogArgs();

    /**
     * The name of the output catalog in UC.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements).
     * The field will always exist if status is CREATED
     * 
     */
    @Import(name="catalogName")
    private @Nullable Output<String> catalogName;

    /**
     * @return The name of the output catalog in UC.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements).
     * The field will always exist if status is CREATED
     * 
     */
    public Optional<Output<String>> catalogName() {
        return Optional.ofNullable(this.catalogName);
    }

    /**
     * (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private CleanRoomsCleanRoomOutputCatalogArgs() {}

    private CleanRoomsCleanRoomOutputCatalogArgs(CleanRoomsCleanRoomOutputCatalogArgs $) {
        this.catalogName = $.catalogName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CleanRoomsCleanRoomOutputCatalogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CleanRoomsCleanRoomOutputCatalogArgs $;

        public Builder() {
            $ = new CleanRoomsCleanRoomOutputCatalogArgs();
        }

        public Builder(CleanRoomsCleanRoomOutputCatalogArgs defaults) {
            $ = new CleanRoomsCleanRoomOutputCatalogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogName The name of the output catalog in UC.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements).
         * The field will always exist if status is CREATED
         * 
         * @return builder
         * 
         */
        public Builder catalogName(@Nullable Output<String> catalogName) {
            $.catalogName = catalogName;
            return this;
        }

        /**
         * @param catalogName The name of the output catalog in UC.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements).
         * The field will always exist if status is CREATED
         * 
         * @return builder
         * 
         */
        public Builder catalogName(String catalogName) {
            return catalogName(Output.of(catalogName));
        }

        /**
         * @param status (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public CleanRoomsCleanRoomOutputCatalogArgs build() {
            return $;
        }
    }

}
