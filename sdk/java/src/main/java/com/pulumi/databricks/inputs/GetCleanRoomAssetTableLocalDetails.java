// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetCleanRoomAssetTableLocalDetailsPartition;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCleanRoomAssetTableLocalDetails extends com.pulumi.resources.InvokeArgs {

    public static final GetCleanRoomAssetTableLocalDetails Empty = new GetCleanRoomAssetTableLocalDetails();

    /**
     * (string) - The fully qualified name of the volume in its owner&#39;s local metastore,
     * in the format of *catalog*.*schema*.*volume_name*
     * 
     */
    @Import(name="localName", required=true)
    private String localName;

    /**
     * @return (string) - The fully qualified name of the volume in its owner&#39;s local metastore,
     * in the format of *catalog*.*schema*.*volume_name*
     * 
     */
    public String localName() {
        return this.localName;
    }

    /**
     * (list of Partition) - Partition filtering specification for a shared table
     * 
     */
    @Import(name="partitions")
    private @Nullable List<GetCleanRoomAssetTableLocalDetailsPartition> partitions;

    /**
     * @return (list of Partition) - Partition filtering specification for a shared table
     * 
     */
    public Optional<List<GetCleanRoomAssetTableLocalDetailsPartition>> partitions() {
        return Optional.ofNullable(this.partitions);
    }

    private GetCleanRoomAssetTableLocalDetails() {}

    private GetCleanRoomAssetTableLocalDetails(GetCleanRoomAssetTableLocalDetails $) {
        this.localName = $.localName;
        this.partitions = $.partitions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCleanRoomAssetTableLocalDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCleanRoomAssetTableLocalDetails $;

        public Builder() {
            $ = new GetCleanRoomAssetTableLocalDetails();
        }

        public Builder(GetCleanRoomAssetTableLocalDetails defaults) {
            $ = new GetCleanRoomAssetTableLocalDetails(Objects.requireNonNull(defaults));
        }

        /**
         * @param localName (string) - The fully qualified name of the volume in its owner&#39;s local metastore,
         * in the format of *catalog*.*schema*.*volume_name*
         * 
         * @return builder
         * 
         */
        public Builder localName(String localName) {
            $.localName = localName;
            return this;
        }

        /**
         * @param partitions (list of Partition) - Partition filtering specification for a shared table
         * 
         * @return builder
         * 
         */
        public Builder partitions(@Nullable List<GetCleanRoomAssetTableLocalDetailsPartition> partitions) {
            $.partitions = partitions;
            return this;
        }

        /**
         * @param partitions (list of Partition) - Partition filtering specification for a shared table
         * 
         * @return builder
         * 
         */
        public Builder partitions(GetCleanRoomAssetTableLocalDetailsPartition... partitions) {
            return partitions(List.of(partitions));
        }

        public GetCleanRoomAssetTableLocalDetails build() {
            if ($.localName == null) {
                throw new MissingRequiredPropertyException("GetCleanRoomAssetTableLocalDetails", "localName");
            }
            return $;
        }
    }

}
