// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoom;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCleanRoomsCleanRoomsResult {
    private List<GetCleanRoomsCleanRoomsCleanRoom> cleanRooms;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetCleanRoomsCleanRoomsResult() {}
    public List<GetCleanRoomsCleanRoomsCleanRoom> cleanRooms() {
        return this.cleanRooms;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCleanRoomsCleanRoomsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCleanRoomsCleanRoomsCleanRoom> cleanRooms;
        private String id;
        public Builder() {}
        public Builder(GetCleanRoomsCleanRoomsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanRooms = defaults.cleanRooms;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder cleanRooms(List<GetCleanRoomsCleanRoomsCleanRoom> cleanRooms) {
            if (cleanRooms == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsResult", "cleanRooms");
            }
            this.cleanRooms = cleanRooms;
            return this;
        }
        public Builder cleanRooms(GetCleanRoomsCleanRoomsCleanRoom... cleanRooms) {
            return cleanRooms(List.of(cleanRooms));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetCleanRoomsCleanRoomsResult build() {
            final var _resultValue = new GetCleanRoomsCleanRoomsResult();
            _resultValue.cleanRooms = cleanRooms;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
