// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs;
import com.pulumi.databricks.inputs.CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfileArgs;
import com.pulumi.databricks.inputs.CleanRoomsCleanRoomRemoteDetailedInfoCreatorArgs;
import com.pulumi.databricks.inputs.CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CleanRoomsCleanRoomRemoteDetailedInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final CleanRoomsCleanRoomRemoteDetailedInfoArgs Empty = new CleanRoomsCleanRoomRemoteDetailedInfoArgs();

    /**
     * (string) - Central clean room ID
     * 
     */
    @Import(name="centralCleanRoomId")
    private @Nullable Output<String> centralCleanRoomId;

    /**
     * @return (string) - Central clean room ID
     * 
     */
    public Optional<Output<String>> centralCleanRoomId() {
        return Optional.ofNullable(this.centralCleanRoomId);
    }

    /**
     * Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    @Import(name="cloudVendor")
    private @Nullable Output<String> cloudVendor;

    /**
     * @return Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    public Optional<Output<String>> cloudVendor() {
        return Optional.ofNullable(this.cloudVendor);
    }

    /**
     * Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     * 1. It has the creator&#39;s global_metastore_id (determined by caller of CreateCleanRoom).
     * 
     * 2. Its invite_recipient_email is empty
     * 
     */
    @Import(name="collaborators")
    private @Nullable Output<List<CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs>> collaborators;

    /**
     * @return Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     * 1. It has the creator&#39;s global_metastore_id (determined by caller of CreateCleanRoom).
     * 
     * 2. Its invite_recipient_email is empty
     * 
     */
    public Optional<Output<List<CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs>>> collaborators() {
        return Optional.ofNullable(this.collaborators);
    }

    /**
     * (ComplianceSecurityProfile)
     * 
     */
    @Import(name="complianceSecurityProfile")
    private @Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfileArgs> complianceSecurityProfile;

    /**
     * @return (ComplianceSecurityProfile)
     * 
     */
    public Optional<Output<CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfileArgs>> complianceSecurityProfile() {
        return Optional.ofNullable(this.complianceSecurityProfile);
    }

    /**
     * (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    @Import(name="creator")
    private @Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoCreatorArgs> creator;

    /**
     * @return (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    public Optional<Output<CleanRoomsCleanRoomRemoteDetailedInfoCreatorArgs>> creator() {
        return Optional.ofNullable(this.creator);
    }

    /**
     * Egress network policy to apply to the central clean room workspace
     * 
     */
    @Import(name="egressNetworkPolicy")
    private @Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyArgs> egressNetworkPolicy;

    /**
     * @return Egress network policy to apply to the central clean room workspace
     * 
     */
    public Optional<Output<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyArgs>> egressNetworkPolicy() {
        return Optional.ofNullable(this.egressNetworkPolicy);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private CleanRoomsCleanRoomRemoteDetailedInfoArgs() {}

    private CleanRoomsCleanRoomRemoteDetailedInfoArgs(CleanRoomsCleanRoomRemoteDetailedInfoArgs $) {
        this.centralCleanRoomId = $.centralCleanRoomId;
        this.cloudVendor = $.cloudVendor;
        this.collaborators = $.collaborators;
        this.complianceSecurityProfile = $.complianceSecurityProfile;
        this.creator = $.creator;
        this.egressNetworkPolicy = $.egressNetworkPolicy;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CleanRoomsCleanRoomRemoteDetailedInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CleanRoomsCleanRoomRemoteDetailedInfoArgs $;

        public Builder() {
            $ = new CleanRoomsCleanRoomRemoteDetailedInfoArgs();
        }

        public Builder(CleanRoomsCleanRoomRemoteDetailedInfoArgs defaults) {
            $ = new CleanRoomsCleanRoomRemoteDetailedInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param centralCleanRoomId (string) - Central clean room ID
         * 
         * @return builder
         * 
         */
        public Builder centralCleanRoomId(@Nullable Output<String> centralCleanRoomId) {
            $.centralCleanRoomId = centralCleanRoomId;
            return this;
        }

        /**
         * @param centralCleanRoomId (string) - Central clean room ID
         * 
         * @return builder
         * 
         */
        public Builder centralCleanRoomId(String centralCleanRoomId) {
            return centralCleanRoomId(Output.of(centralCleanRoomId));
        }

        /**
         * @param cloudVendor Cloud vendor (aws,azure,gcp) of the central clean room
         * 
         * @return builder
         * 
         */
        public Builder cloudVendor(@Nullable Output<String> cloudVendor) {
            $.cloudVendor = cloudVendor;
            return this;
        }

        /**
         * @param cloudVendor Cloud vendor (aws,azure,gcp) of the central clean room
         * 
         * @return builder
         * 
         */
        public Builder cloudVendor(String cloudVendor) {
            return cloudVendor(Output.of(cloudVendor));
        }

        /**
         * @param collaborators Collaborators in the central clean room. There should one and only one collaborator
         * in the list that satisfies the owner condition:
         * 
         * 1. It has the creator&#39;s global_metastore_id (determined by caller of CreateCleanRoom).
         * 
         * 2. Its invite_recipient_email is empty
         * 
         * @return builder
         * 
         */
        public Builder collaborators(@Nullable Output<List<CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs>> collaborators) {
            $.collaborators = collaborators;
            return this;
        }

        /**
         * @param collaborators Collaborators in the central clean room. There should one and only one collaborator
         * in the list that satisfies the owner condition:
         * 
         * 1. It has the creator&#39;s global_metastore_id (determined by caller of CreateCleanRoom).
         * 
         * 2. Its invite_recipient_email is empty
         * 
         * @return builder
         * 
         */
        public Builder collaborators(List<CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs> collaborators) {
            return collaborators(Output.of(collaborators));
        }

        /**
         * @param collaborators Collaborators in the central clean room. There should one and only one collaborator
         * in the list that satisfies the owner condition:
         * 
         * 1. It has the creator&#39;s global_metastore_id (determined by caller of CreateCleanRoom).
         * 
         * 2. Its invite_recipient_email is empty
         * 
         * @return builder
         * 
         */
        public Builder collaborators(CleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs... collaborators) {
            return collaborators(List.of(collaborators));
        }

        /**
         * @param complianceSecurityProfile (ComplianceSecurityProfile)
         * 
         * @return builder
         * 
         */
        public Builder complianceSecurityProfile(@Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfileArgs> complianceSecurityProfile) {
            $.complianceSecurityProfile = complianceSecurityProfile;
            return this;
        }

        /**
         * @param complianceSecurityProfile (ComplianceSecurityProfile)
         * 
         * @return builder
         * 
         */
        public Builder complianceSecurityProfile(CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfileArgs complianceSecurityProfile) {
            return complianceSecurityProfile(Output.of(complianceSecurityProfile));
        }

        /**
         * @param creator (CleanRoomCollaborator) - Collaborator who creates the clean room
         * 
         * @return builder
         * 
         */
        public Builder creator(@Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoCreatorArgs> creator) {
            $.creator = creator;
            return this;
        }

        /**
         * @param creator (CleanRoomCollaborator) - Collaborator who creates the clean room
         * 
         * @return builder
         * 
         */
        public Builder creator(CleanRoomsCleanRoomRemoteDetailedInfoCreatorArgs creator) {
            return creator(Output.of(creator));
        }

        /**
         * @param egressNetworkPolicy Egress network policy to apply to the central clean room workspace
         * 
         * @return builder
         * 
         */
        public Builder egressNetworkPolicy(@Nullable Output<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyArgs> egressNetworkPolicy) {
            $.egressNetworkPolicy = egressNetworkPolicy;
            return this;
        }

        /**
         * @param egressNetworkPolicy Egress network policy to apply to the central clean room workspace
         * 
         * @return builder
         * 
         */
        public Builder egressNetworkPolicy(CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyArgs egressNetworkPolicy) {
            return egressNetworkPolicy(Output.of(egressNetworkPolicy));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public CleanRoomsCleanRoomRemoteDetailedInfoArgs build() {
            return $;
        }
    }

}
