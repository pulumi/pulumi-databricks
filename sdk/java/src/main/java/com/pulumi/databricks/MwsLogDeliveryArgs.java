// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MwsLogDeliveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final MwsLogDeliveryArgs Empty = new MwsLogDeliveryArgs();

    /**
     * Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/).
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/).
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Databricks log delivery configuration ID.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<String> configId;

    /**
     * @return Databricks log delivery configuration ID.
     * 
     */
    public Optional<Output<String>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * The optional human-readable name of the log delivery configuration. Defaults to empty.
     * 
     */
    @Import(name="configName")
    private @Nullable Output<String> configName;

    /**
     * @return The optional human-readable name of the log delivery configuration. Defaults to empty.
     * 
     */
    public Optional<Output<String>> configName() {
        return Optional.ofNullable(this.configName);
    }

    /**
     * The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
     * 
     */
    @Import(name="credentialsId", required=true)
    private Output<String> credentialsId;

    /**
     * @return The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
     * 
     */
    public Output<String> credentialsId() {
        return this.credentialsId;
    }

    /**
     * Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
     * 
     */
    @Import(name="deliveryPathPrefix")
    private @Nullable Output<String> deliveryPathPrefix;

    /**
     * @return Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
     * 
     */
    public Optional<Output<String>> deliveryPathPrefix() {
        return Optional.ofNullable(this.deliveryPathPrefix);
    }

    /**
     * The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
     * 
     */
    @Import(name="deliveryStartTime")
    private @Nullable Output<String> deliveryStartTime;

    /**
     * @return The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
     * 
     */
    public Optional<Output<String>> deliveryStartTime() {
        return Optional.ofNullable(this.deliveryStartTime);
    }

    /**
     * The type of log delivery. `BILLABLE_USAGE` and `AUDIT_LOGS` are supported.
     * 
     */
    @Import(name="logType", required=true)
    private Output<String> logType;

    /**
     * @return The type of log delivery. `BILLABLE_USAGE` and `AUDIT_LOGS` are supported.
     * 
     */
    public Output<String> logType() {
        return this.logType;
    }

    /**
     * The file type of log delivery. Currently `CSV` (for `BILLABLE_USAGE`) and `JSON` (for `AUDIT_LOGS`) are supported.
     * 
     */
    @Import(name="outputFormat", required=true)
    private Output<String> outputFormat;

    /**
     * @return The file type of log delivery. Currently `CSV` (for `BILLABLE_USAGE`) and `JSON` (for `AUDIT_LOGS`) are supported.
     * 
     */
    public Output<String> outputFormat() {
        return this.outputFormat;
    }

    /**
     * Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
     * 
     */
    @Import(name="storageConfigurationId", required=true)
    private Output<String> storageConfigurationId;

    /**
     * @return The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
     * 
     */
    public Output<String> storageConfigurationId() {
        return this.storageConfigurationId;
    }

    /**
     * By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
     * 
     */
    @Import(name="workspaceIdsFilters")
    private @Nullable Output<List<Integer>> workspaceIdsFilters;

    /**
     * @return By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
     * 
     */
    public Optional<Output<List<Integer>>> workspaceIdsFilters() {
        return Optional.ofNullable(this.workspaceIdsFilters);
    }

    private MwsLogDeliveryArgs() {}

    private MwsLogDeliveryArgs(MwsLogDeliveryArgs $) {
        this.accountId = $.accountId;
        this.configId = $.configId;
        this.configName = $.configName;
        this.credentialsId = $.credentialsId;
        this.deliveryPathPrefix = $.deliveryPathPrefix;
        this.deliveryStartTime = $.deliveryStartTime;
        this.logType = $.logType;
        this.outputFormat = $.outputFormat;
        this.status = $.status;
        this.storageConfigurationId = $.storageConfigurationId;
        this.workspaceIdsFilters = $.workspaceIdsFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MwsLogDeliveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MwsLogDeliveryArgs $;

        public Builder() {
            $ = new MwsLogDeliveryArgs();
        }

        public Builder(MwsLogDeliveryArgs defaults) {
            $ = new MwsLogDeliveryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/).
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/).
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param configId Databricks log delivery configuration ID.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Databricks log delivery configuration ID.
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param configName The optional human-readable name of the log delivery configuration. Defaults to empty.
         * 
         * @return builder
         * 
         */
        public Builder configName(@Nullable Output<String> configName) {
            $.configName = configName;
            return this;
        }

        /**
         * @param configName The optional human-readable name of the log delivery configuration. Defaults to empty.
         * 
         * @return builder
         * 
         */
        public Builder configName(String configName) {
            return configName(Output.of(configName));
        }

        /**
         * @param credentialsId The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
         * 
         * @return builder
         * 
         */
        public Builder credentialsId(Output<String> credentialsId) {
            $.credentialsId = credentialsId;
            return this;
        }

        /**
         * @param credentialsId The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
         * 
         * @return builder
         * 
         */
        public Builder credentialsId(String credentialsId) {
            return credentialsId(Output.of(credentialsId));
        }

        /**
         * @param deliveryPathPrefix Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
         * 
         * @return builder
         * 
         */
        public Builder deliveryPathPrefix(@Nullable Output<String> deliveryPathPrefix) {
            $.deliveryPathPrefix = deliveryPathPrefix;
            return this;
        }

        /**
         * @param deliveryPathPrefix Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
         * 
         * @return builder
         * 
         */
        public Builder deliveryPathPrefix(String deliveryPathPrefix) {
            return deliveryPathPrefix(Output.of(deliveryPathPrefix));
        }

        /**
         * @param deliveryStartTime The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
         * 
         * @return builder
         * 
         */
        public Builder deliveryStartTime(@Nullable Output<String> deliveryStartTime) {
            $.deliveryStartTime = deliveryStartTime;
            return this;
        }

        /**
         * @param deliveryStartTime The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
         * 
         * @return builder
         * 
         */
        public Builder deliveryStartTime(String deliveryStartTime) {
            return deliveryStartTime(Output.of(deliveryStartTime));
        }

        /**
         * @param logType The type of log delivery. `BILLABLE_USAGE` and `AUDIT_LOGS` are supported.
         * 
         * @return builder
         * 
         */
        public Builder logType(Output<String> logType) {
            $.logType = logType;
            return this;
        }

        /**
         * @param logType The type of log delivery. `BILLABLE_USAGE` and `AUDIT_LOGS` are supported.
         * 
         * @return builder
         * 
         */
        public Builder logType(String logType) {
            return logType(Output.of(logType));
        }

        /**
         * @param outputFormat The file type of log delivery. Currently `CSV` (for `BILLABLE_USAGE`) and `JSON` (for `AUDIT_LOGS`) are supported.
         * 
         * @return builder
         * 
         */
        public Builder outputFormat(Output<String> outputFormat) {
            $.outputFormat = outputFormat;
            return this;
        }

        /**
         * @param outputFormat The file type of log delivery. Currently `CSV` (for `BILLABLE_USAGE`) and `JSON` (for `AUDIT_LOGS`) are supported.
         * 
         * @return builder
         * 
         */
        public Builder outputFormat(String outputFormat) {
            return outputFormat(Output.of(outputFormat));
        }

        /**
         * @param status Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param storageConfigurationId The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
         * 
         * @return builder
         * 
         */
        public Builder storageConfigurationId(Output<String> storageConfigurationId) {
            $.storageConfigurationId = storageConfigurationId;
            return this;
        }

        /**
         * @param storageConfigurationId The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
         * 
         * @return builder
         * 
         */
        public Builder storageConfigurationId(String storageConfigurationId) {
            return storageConfigurationId(Output.of(storageConfigurationId));
        }

        /**
         * @param workspaceIdsFilters By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
         * 
         * @return builder
         * 
         */
        public Builder workspaceIdsFilters(@Nullable Output<List<Integer>> workspaceIdsFilters) {
            $.workspaceIdsFilters = workspaceIdsFilters;
            return this;
        }

        /**
         * @param workspaceIdsFilters By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
         * 
         * @return builder
         * 
         */
        public Builder workspaceIdsFilters(List<Integer> workspaceIdsFilters) {
            return workspaceIdsFilters(Output.of(workspaceIdsFilters));
        }

        /**
         * @param workspaceIdsFilters By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
         * 
         * @return builder
         * 
         */
        public Builder workspaceIdsFilters(Integer... workspaceIdsFilters) {
            return workspaceIdsFilters(List.of(workspaceIdsFilters));
        }

        public MwsLogDeliveryArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.credentialsId = Objects.requireNonNull($.credentialsId, "expected parameter 'credentialsId' to be non-null");
            $.logType = Objects.requireNonNull($.logType, "expected parameter 'logType' to be non-null");
            $.outputFormat = Objects.requireNonNull($.outputFormat, "expected parameter 'outputFormat' to be non-null");
            $.storageConfigurationId = Objects.requireNonNull($.storageConfigurationId, "expected parameter 'storageConfigurationId' to be non-null");
            return $;
        }
    }

}
