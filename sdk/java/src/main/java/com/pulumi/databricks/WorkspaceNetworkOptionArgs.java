// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceNetworkOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceNetworkOptionArgs Empty = new WorkspaceNetworkOptionArgs();

    /**
     * The network policy ID to apply to the workspace. This controls the network access rules
     * for all serverless compute resources in the workspace. Each workspace can only be
     * linked to one policy at a time. If no policy is explicitly assigned,
     * the workspace will use &#39;default-policy&#39;
     * 
     */
    @Import(name="networkPolicyId")
    private @Nullable Output<String> networkPolicyId;

    /**
     * @return The network policy ID to apply to the workspace. This controls the network access rules
     * for all serverless compute resources in the workspace. Each workspace can only be
     * linked to one policy at a time. If no policy is explicitly assigned,
     * the workspace will use &#39;default-policy&#39;
     * 
     */
    public Optional<Output<String>> networkPolicyId() {
        return Optional.ofNullable(this.networkPolicyId);
    }

    /**
     * The workspace ID
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The workspace ID
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private WorkspaceNetworkOptionArgs() {}

    private WorkspaceNetworkOptionArgs(WorkspaceNetworkOptionArgs $) {
        this.networkPolicyId = $.networkPolicyId;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceNetworkOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceNetworkOptionArgs $;

        public Builder() {
            $ = new WorkspaceNetworkOptionArgs();
        }

        public Builder(WorkspaceNetworkOptionArgs defaults) {
            $ = new WorkspaceNetworkOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkPolicyId The network policy ID to apply to the workspace. This controls the network access rules
         * for all serverless compute resources in the workspace. Each workspace can only be
         * linked to one policy at a time. If no policy is explicitly assigned,
         * the workspace will use &#39;default-policy&#39;
         * 
         * @return builder
         * 
         */
        public Builder networkPolicyId(@Nullable Output<String> networkPolicyId) {
            $.networkPolicyId = networkPolicyId;
            return this;
        }

        /**
         * @param networkPolicyId The network policy ID to apply to the workspace. This controls the network access rules
         * for all serverless compute resources in the workspace. Each workspace can only be
         * linked to one policy at a time. If no policy is explicitly assigned,
         * the workspace will use &#39;default-policy&#39;
         * 
         * @return builder
         * 
         */
        public Builder networkPolicyId(String networkPolicyId) {
            return networkPolicyId(Output.of(networkPolicyId));
        }

        /**
         * @param workspaceId The workspace ID
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The workspace ID
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public WorkspaceNetworkOptionArgs build() {
            return $;
        }
    }

}
