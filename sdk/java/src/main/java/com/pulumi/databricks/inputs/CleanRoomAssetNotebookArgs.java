// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.CleanRoomAssetNotebookReviewArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CleanRoomAssetNotebookArgs extends com.pulumi.resources.ResourceArgs {

    public static final CleanRoomAssetNotebookArgs Empty = new CleanRoomAssetNotebookArgs();

    /**
     * (string) - Server generated etag that represents the notebook version
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return (string) - Server generated etag that represents the notebook version
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Base 64 representation of the notebook contents.
     * This is the same format as returned by :method:workspace/export with the format of **HTML**
     * 
     */
    @Import(name="notebookContent", required=true)
    private Output<String> notebookContent;

    /**
     * @return Base 64 representation of the notebook contents.
     * This is the same format as returned by :method:workspace/export with the format of **HTML**
     * 
     */
    public Output<String> notebookContent() {
        return this.notebookContent;
    }

    /**
     * (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
     * 
     */
    @Import(name="reviewState")
    private @Nullable Output<String> reviewState;

    /**
     * @return (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
     * 
     */
    public Optional<Output<String>> reviewState() {
        return Optional.ofNullable(this.reviewState);
    }

    /**
     * (list of CleanRoomNotebookReview) - All existing approvals or rejections
     * 
     */
    @Import(name="reviews")
    private @Nullable Output<List<CleanRoomAssetNotebookReviewArgs>> reviews;

    /**
     * @return (list of CleanRoomNotebookReview) - All existing approvals or rejections
     * 
     */
    public Optional<Output<List<CleanRoomAssetNotebookReviewArgs>>> reviews() {
        return Optional.ofNullable(this.reviews);
    }

    /**
     * Aliases of collaborators that can run the notebook
     * 
     */
    @Import(name="runnerCollaboratorAliases")
    private @Nullable Output<List<String>> runnerCollaboratorAliases;

    /**
     * @return Aliases of collaborators that can run the notebook
     * 
     */
    public Optional<Output<List<String>>> runnerCollaboratorAliases() {
        return Optional.ofNullable(this.runnerCollaboratorAliases);
    }

    private CleanRoomAssetNotebookArgs() {}

    private CleanRoomAssetNotebookArgs(CleanRoomAssetNotebookArgs $) {
        this.etag = $.etag;
        this.notebookContent = $.notebookContent;
        this.reviewState = $.reviewState;
        this.reviews = $.reviews;
        this.runnerCollaboratorAliases = $.runnerCollaboratorAliases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CleanRoomAssetNotebookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CleanRoomAssetNotebookArgs $;

        public Builder() {
            $ = new CleanRoomAssetNotebookArgs();
        }

        public Builder(CleanRoomAssetNotebookArgs defaults) {
            $ = new CleanRoomAssetNotebookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param etag (string) - Server generated etag that represents the notebook version
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag (string) - Server generated etag that represents the notebook version
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param notebookContent Base 64 representation of the notebook contents.
         * This is the same format as returned by :method:workspace/export with the format of **HTML**
         * 
         * @return builder
         * 
         */
        public Builder notebookContent(Output<String> notebookContent) {
            $.notebookContent = notebookContent;
            return this;
        }

        /**
         * @param notebookContent Base 64 representation of the notebook contents.
         * This is the same format as returned by :method:workspace/export with the format of **HTML**
         * 
         * @return builder
         * 
         */
        public Builder notebookContent(String notebookContent) {
            return notebookContent(Output.of(notebookContent));
        }

        /**
         * @param reviewState (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
         * 
         * @return builder
         * 
         */
        public Builder reviewState(@Nullable Output<String> reviewState) {
            $.reviewState = reviewState;
            return this;
        }

        /**
         * @param reviewState (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
         * 
         * @return builder
         * 
         */
        public Builder reviewState(String reviewState) {
            return reviewState(Output.of(reviewState));
        }

        /**
         * @param reviews (list of CleanRoomNotebookReview) - All existing approvals or rejections
         * 
         * @return builder
         * 
         */
        public Builder reviews(@Nullable Output<List<CleanRoomAssetNotebookReviewArgs>> reviews) {
            $.reviews = reviews;
            return this;
        }

        /**
         * @param reviews (list of CleanRoomNotebookReview) - All existing approvals or rejections
         * 
         * @return builder
         * 
         */
        public Builder reviews(List<CleanRoomAssetNotebookReviewArgs> reviews) {
            return reviews(Output.of(reviews));
        }

        /**
         * @param reviews (list of CleanRoomNotebookReview) - All existing approvals or rejections
         * 
         * @return builder
         * 
         */
        public Builder reviews(CleanRoomAssetNotebookReviewArgs... reviews) {
            return reviews(List.of(reviews));
        }

        /**
         * @param runnerCollaboratorAliases Aliases of collaborators that can run the notebook
         * 
         * @return builder
         * 
         */
        public Builder runnerCollaboratorAliases(@Nullable Output<List<String>> runnerCollaboratorAliases) {
            $.runnerCollaboratorAliases = runnerCollaboratorAliases;
            return this;
        }

        /**
         * @param runnerCollaboratorAliases Aliases of collaborators that can run the notebook
         * 
         * @return builder
         * 
         */
        public Builder runnerCollaboratorAliases(List<String> runnerCollaboratorAliases) {
            return runnerCollaboratorAliases(Output.of(runnerCollaboratorAliases));
        }

        /**
         * @param runnerCollaboratorAliases Aliases of collaborators that can run the notebook
         * 
         * @return builder
         * 
         */
        public Builder runnerCollaboratorAliases(String... runnerCollaboratorAliases) {
            return runnerCollaboratorAliases(List.of(runnerCollaboratorAliases));
        }

        public CleanRoomAssetNotebookArgs build() {
            if ($.notebookContent == null) {
                throw new MissingRequiredPropertyException("CleanRoomAssetNotebookArgs", "notebookContent");
            }
            return $;
        }
    }

}
