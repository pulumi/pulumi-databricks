// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.PipelineLibraryFileArgs;
import com.pulumi.databricks.inputs.PipelineLibraryGlobArgs;
import com.pulumi.databricks.inputs.PipelineLibraryMavenArgs;
import com.pulumi.databricks.inputs.PipelineLibraryNotebookArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineLibraryArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineLibraryArgs Empty = new PipelineLibraryArgs();

    /**
     * specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    @Import(name="file")
    private @Nullable Output<PipelineLibraryFileArgs> file;

    /**
     * @return specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    public Optional<Output<PipelineLibraryFileArgs>> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
     * 
     */
    @Import(name="glob")
    private @Nullable Output<PipelineLibraryGlobArgs> glob;

    /**
     * @return The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
     * 
     */
    public Optional<Output<PipelineLibraryGlobArgs>> glob() {
        return Optional.ofNullable(this.glob);
    }

    @Import(name="jar")
    private @Nullable Output<String> jar;

    public Optional<Output<String>> jar() {
        return Optional.ofNullable(this.jar);
    }

    @Import(name="maven")
    private @Nullable Output<PipelineLibraryMavenArgs> maven;

    public Optional<Output<PipelineLibraryMavenArgs>> maven() {
        return Optional.ofNullable(this.maven);
    }

    /**
     * specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    @Import(name="notebook")
    private @Nullable Output<PipelineLibraryNotebookArgs> notebook;

    /**
     * @return specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    public Optional<Output<PipelineLibraryNotebookArgs>> notebook() {
        return Optional.ofNullable(this.notebook);
    }

    /**
     * @deprecated
     * The &#39;whl&#39; field is deprecated
     * 
     */
    @Deprecated /* The 'whl' field is deprecated */
    @Import(name="whl")
    private @Nullable Output<String> whl;

    /**
     * @deprecated
     * The &#39;whl&#39; field is deprecated
     * 
     */
    @Deprecated /* The 'whl' field is deprecated */
    public Optional<Output<String>> whl() {
        return Optional.ofNullable(this.whl);
    }

    private PipelineLibraryArgs() {}

    private PipelineLibraryArgs(PipelineLibraryArgs $) {
        this.file = $.file;
        this.glob = $.glob;
        this.jar = $.jar;
        this.maven = $.maven;
        this.notebook = $.notebook;
        this.whl = $.whl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineLibraryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineLibraryArgs $;

        public Builder() {
            $ = new PipelineLibraryArgs();
        }

        public Builder(PipelineLibraryArgs defaults) {
            $ = new PipelineLibraryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param file specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<PipelineLibraryFileArgs> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
         * 
         * @return builder
         * 
         */
        public Builder file(PipelineLibraryFileArgs file) {
            return file(Output.of(file));
        }

        /**
         * @param glob The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
         * 
         * @return builder
         * 
         */
        public Builder glob(@Nullable Output<PipelineLibraryGlobArgs> glob) {
            $.glob = glob;
            return this;
        }

        /**
         * @param glob The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
         * 
         * @return builder
         * 
         */
        public Builder glob(PipelineLibraryGlobArgs glob) {
            return glob(Output.of(glob));
        }

        public Builder jar(@Nullable Output<String> jar) {
            $.jar = jar;
            return this;
        }

        public Builder jar(String jar) {
            return jar(Output.of(jar));
        }

        public Builder maven(@Nullable Output<PipelineLibraryMavenArgs> maven) {
            $.maven = maven;
            return this;
        }

        public Builder maven(PipelineLibraryMavenArgs maven) {
            return maven(Output.of(maven));
        }

        /**
         * @param notebook specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
         * 
         * @return builder
         * 
         */
        public Builder notebook(@Nullable Output<PipelineLibraryNotebookArgs> notebook) {
            $.notebook = notebook;
            return this;
        }

        /**
         * @param notebook specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
         * 
         * @return builder
         * 
         */
        public Builder notebook(PipelineLibraryNotebookArgs notebook) {
            return notebook(Output.of(notebook));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;whl&#39; field is deprecated
         * 
         */
        @Deprecated /* The 'whl' field is deprecated */
        public Builder whl(@Nullable Output<String> whl) {
            $.whl = whl;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;whl&#39; field is deprecated
         * 
         */
        @Deprecated /* The 'whl' field is deprecated */
        public Builder whl(String whl) {
            return whl(Output.of(whl));
        }

        public PipelineLibraryArgs build() {
            return $;
        }
    }

}
