// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineGatewayDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineGatewayDefinitionArgs Empty = new PipelineGatewayDefinitionArgs();

    @Import(name="connectionId")
    private @Nullable Output<String> connectionId;

    public Optional<Output<String>> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }

    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    @Import(name="gatewayStorageCatalog")
    private @Nullable Output<String> gatewayStorageCatalog;

    public Optional<Output<String>> gatewayStorageCatalog() {
        return Optional.ofNullable(this.gatewayStorageCatalog);
    }

    @Import(name="gatewayStorageName")
    private @Nullable Output<String> gatewayStorageName;

    public Optional<Output<String>> gatewayStorageName() {
        return Optional.ofNullable(this.gatewayStorageName);
    }

    @Import(name="gatewayStorageSchema")
    private @Nullable Output<String> gatewayStorageSchema;

    public Optional<Output<String>> gatewayStorageSchema() {
        return Optional.ofNullable(this.gatewayStorageSchema);
    }

    private PipelineGatewayDefinitionArgs() {}

    private PipelineGatewayDefinitionArgs(PipelineGatewayDefinitionArgs $) {
        this.connectionId = $.connectionId;
        this.connectionName = $.connectionName;
        this.gatewayStorageCatalog = $.gatewayStorageCatalog;
        this.gatewayStorageName = $.gatewayStorageName;
        this.gatewayStorageSchema = $.gatewayStorageSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineGatewayDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineGatewayDefinitionArgs $;

        public Builder() {
            $ = new PipelineGatewayDefinitionArgs();
        }

        public Builder(PipelineGatewayDefinitionArgs defaults) {
            $ = new PipelineGatewayDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionId(@Nullable Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        public Builder gatewayStorageCatalog(@Nullable Output<String> gatewayStorageCatalog) {
            $.gatewayStorageCatalog = gatewayStorageCatalog;
            return this;
        }

        public Builder gatewayStorageCatalog(String gatewayStorageCatalog) {
            return gatewayStorageCatalog(Output.of(gatewayStorageCatalog));
        }

        public Builder gatewayStorageName(@Nullable Output<String> gatewayStorageName) {
            $.gatewayStorageName = gatewayStorageName;
            return this;
        }

        public Builder gatewayStorageName(String gatewayStorageName) {
            return gatewayStorageName(Output.of(gatewayStorageName));
        }

        public Builder gatewayStorageSchema(@Nullable Output<String> gatewayStorageSchema) {
            $.gatewayStorageSchema = gatewayStorageSchema;
            return this;
        }

        public Builder gatewayStorageSchema(String gatewayStorageSchema) {
            return gatewayStorageSchema(Output.of(gatewayStorageSchema));
        }

        public PipelineGatewayDefinitionArgs build() {
            return $;
        }
    }

}
