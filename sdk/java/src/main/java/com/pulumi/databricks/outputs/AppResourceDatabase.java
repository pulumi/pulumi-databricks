// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AppResourceDatabase {
    /**
     * @return The name of database.
     * 
     */
    private String databaseName;
    /**
     * @return The name of database instance.
     * 
     */
    private String instanceName;
    /**
     * @return Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
     * 
     */
    private String permission;

    private AppResourceDatabase() {}
    /**
     * @return The name of database.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The name of database instance.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
     * 
     */
    public String permission() {
        return this.permission;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppResourceDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseName;
        private String instanceName;
        private String permission;
        public Builder() {}
        public Builder(AppResourceDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.instanceName = defaults.instanceName;
    	      this.permission = defaults.permission;
        }

        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            if (databaseName == null) {
              throw new MissingRequiredPropertyException("AppResourceDatabase", "databaseName");
            }
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("AppResourceDatabase", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            if (permission == null) {
              throw new MissingRequiredPropertyException("AppResourceDatabase", "permission");
            }
            this.permission = permission;
            return this;
        }
        public AppResourceDatabase build() {
            final var _resultValue = new AppResourceDatabase();
            _resultValue.databaseName = databaseName;
            _resultValue.instanceName = instanceName;
            _resultValue.permission = permission;
            return _resultValue;
        }
    }
}
