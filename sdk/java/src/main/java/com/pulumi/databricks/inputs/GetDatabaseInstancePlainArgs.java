// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseInstancePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseInstancePlainArgs Empty = new GetDatabaseInstancePlainArgs();

    /**
     * (string) - Password for admin user to create. If not provided, no user will be created
     * 
     */
    @Import(name="adminPassword")
    private @Nullable String adminPassword;

    /**
     * @return (string) - Password for admin user to create. If not provided, no user will be created
     * 
     */
    public Optional<String> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    /**
     * (string) - Name of the admin role for the instance. If not provided, defaults to &#39;databricks_admin&#39;
     * 
     */
    @Import(name="adminRolename")
    private @Nullable String adminRolename;

    /**
     * @return (string) - Name of the admin role for the instance. If not provided, defaults to &#39;databricks_admin&#39;
     * 
     */
    public Optional<String> adminRolename() {
        return Optional.ofNullable(this.adminRolename);
    }

    /**
     * (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;
     * 
     */
    @Import(name="capacity")
    private @Nullable String capacity;

    /**
     * @return (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;
     * 
     */
    public Optional<String> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The name of the instance. This is the unique identifier for the instance
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the instance. This is the unique identifier for the instance
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * (boolean) - Whether the instance is stopped
     * 
     */
    @Import(name="stopped")
    private @Nullable Boolean stopped;

    /**
     * @return (boolean) - Whether the instance is stopped
     * 
     */
    public Optional<Boolean> stopped() {
        return Optional.ofNullable(this.stopped);
    }

    private GetDatabaseInstancePlainArgs() {}

    private GetDatabaseInstancePlainArgs(GetDatabaseInstancePlainArgs $) {
        this.adminPassword = $.adminPassword;
        this.adminRolename = $.adminRolename;
        this.capacity = $.capacity;
        this.name = $.name;
        this.stopped = $.stopped;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseInstancePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseInstancePlainArgs $;

        public Builder() {
            $ = new GetDatabaseInstancePlainArgs();
        }

        public Builder(GetDatabaseInstancePlainArgs defaults) {
            $ = new GetDatabaseInstancePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminPassword (string) - Password for admin user to create. If not provided, no user will be created
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(@Nullable String adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminRolename (string) - Name of the admin role for the instance. If not provided, defaults to &#39;databricks_admin&#39;
         * 
         * @return builder
         * 
         */
        public Builder adminRolename(@Nullable String adminRolename) {
            $.adminRolename = adminRolename;
            return this;
        }

        /**
         * @param capacity (string) - The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable String capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param name The name of the instance. This is the unique identifier for the instance
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param stopped (boolean) - Whether the instance is stopped
         * 
         * @return builder
         * 
         */
        public Builder stopped(@Nullable Boolean stopped) {
            $.stopped = stopped;
            return this;
        }

        public GetDatabaseInstancePlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDatabaseInstancePlainArgs", "name");
            }
            return $;
        }
    }

}
