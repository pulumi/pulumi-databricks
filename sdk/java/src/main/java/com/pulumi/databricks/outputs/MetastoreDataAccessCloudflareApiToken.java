// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MetastoreDataAccessCloudflareApiToken {
    private String accessKeyId;
    private String accountId;
    private String secretAccessKey;

    private MetastoreDataAccessCloudflareApiToken() {}
    public String accessKeyId() {
        return this.accessKeyId;
    }
    public String accountId() {
        return this.accountId;
    }
    public String secretAccessKey() {
        return this.secretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetastoreDataAccessCloudflareApiToken defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKeyId;
        private String accountId;
        private String secretAccessKey;
        public Builder() {}
        public Builder(MetastoreDataAccessCloudflareApiToken defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.accountId = defaults.accountId;
    	      this.secretAccessKey = defaults.secretAccessKey;
        }

        @CustomType.Setter
        public Builder accessKeyId(String accessKeyId) {
            if (accessKeyId == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessCloudflareApiToken", "accessKeyId");
            }
            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessCloudflareApiToken", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessCloudflareApiToken", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        public MetastoreDataAccessCloudflareApiToken build() {
            final var _resultValue = new MetastoreDataAccessCloudflareApiToken();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.accountId = accountId;
            _resultValue.secretAccessKey = secretAccessKey;
            return _resultValue;
        }
    }
}
