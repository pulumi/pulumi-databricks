// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs;
import com.pulumi.databricks.inputs.JobTaskWebhookNotificationsOnFailureArgs;
import com.pulumi.databricks.inputs.JobTaskWebhookNotificationsOnStartArgs;
import com.pulumi.databricks.inputs.JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs;
import com.pulumi.databricks.inputs.JobTaskWebhookNotificationsOnSuccessArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskWebhookNotificationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskWebhookNotificationsArgs Empty = new JobTaskWebhookNotificationsArgs();

    @Import(name="onDurationWarningThresholdExceededs")
    private @Nullable Output<List<JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs>> onDurationWarningThresholdExceededs;

    public Optional<Output<List<JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs>>> onDurationWarningThresholdExceededs() {
        return Optional.ofNullable(this.onDurationWarningThresholdExceededs);
    }

    @Import(name="onFailures")
    private @Nullable Output<List<JobTaskWebhookNotificationsOnFailureArgs>> onFailures;

    public Optional<Output<List<JobTaskWebhookNotificationsOnFailureArgs>>> onFailures() {
        return Optional.ofNullable(this.onFailures);
    }

    @Import(name="onStarts")
    private @Nullable Output<List<JobTaskWebhookNotificationsOnStartArgs>> onStarts;

    public Optional<Output<List<JobTaskWebhookNotificationsOnStartArgs>>> onStarts() {
        return Optional.ofNullable(this.onStarts);
    }

    @Import(name="onStreamingBacklogExceededs")
    private @Nullable Output<List<JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs>> onStreamingBacklogExceededs;

    public Optional<Output<List<JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs>>> onStreamingBacklogExceededs() {
        return Optional.ofNullable(this.onStreamingBacklogExceededs);
    }

    @Import(name="onSuccesses")
    private @Nullable Output<List<JobTaskWebhookNotificationsOnSuccessArgs>> onSuccesses;

    public Optional<Output<List<JobTaskWebhookNotificationsOnSuccessArgs>>> onSuccesses() {
        return Optional.ofNullable(this.onSuccesses);
    }

    private JobTaskWebhookNotificationsArgs() {}

    private JobTaskWebhookNotificationsArgs(JobTaskWebhookNotificationsArgs $) {
        this.onDurationWarningThresholdExceededs = $.onDurationWarningThresholdExceededs;
        this.onFailures = $.onFailures;
        this.onStarts = $.onStarts;
        this.onStreamingBacklogExceededs = $.onStreamingBacklogExceededs;
        this.onSuccesses = $.onSuccesses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskWebhookNotificationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskWebhookNotificationsArgs $;

        public Builder() {
            $ = new JobTaskWebhookNotificationsArgs();
        }

        public Builder(JobTaskWebhookNotificationsArgs defaults) {
            $ = new JobTaskWebhookNotificationsArgs(Objects.requireNonNull(defaults));
        }

        public Builder onDurationWarningThresholdExceededs(@Nullable Output<List<JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs>> onDurationWarningThresholdExceededs) {
            $.onDurationWarningThresholdExceededs = onDurationWarningThresholdExceededs;
            return this;
        }

        public Builder onDurationWarningThresholdExceededs(List<JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs> onDurationWarningThresholdExceededs) {
            return onDurationWarningThresholdExceededs(Output.of(onDurationWarningThresholdExceededs));
        }

        public Builder onDurationWarningThresholdExceededs(JobTaskWebhookNotificationsOnDurationWarningThresholdExceededArgs... onDurationWarningThresholdExceededs) {
            return onDurationWarningThresholdExceededs(List.of(onDurationWarningThresholdExceededs));
        }

        public Builder onFailures(@Nullable Output<List<JobTaskWebhookNotificationsOnFailureArgs>> onFailures) {
            $.onFailures = onFailures;
            return this;
        }

        public Builder onFailures(List<JobTaskWebhookNotificationsOnFailureArgs> onFailures) {
            return onFailures(Output.of(onFailures));
        }

        public Builder onFailures(JobTaskWebhookNotificationsOnFailureArgs... onFailures) {
            return onFailures(List.of(onFailures));
        }

        public Builder onStarts(@Nullable Output<List<JobTaskWebhookNotificationsOnStartArgs>> onStarts) {
            $.onStarts = onStarts;
            return this;
        }

        public Builder onStarts(List<JobTaskWebhookNotificationsOnStartArgs> onStarts) {
            return onStarts(Output.of(onStarts));
        }

        public Builder onStarts(JobTaskWebhookNotificationsOnStartArgs... onStarts) {
            return onStarts(List.of(onStarts));
        }

        public Builder onStreamingBacklogExceededs(@Nullable Output<List<JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs>> onStreamingBacklogExceededs) {
            $.onStreamingBacklogExceededs = onStreamingBacklogExceededs;
            return this;
        }

        public Builder onStreamingBacklogExceededs(List<JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs> onStreamingBacklogExceededs) {
            return onStreamingBacklogExceededs(Output.of(onStreamingBacklogExceededs));
        }

        public Builder onStreamingBacklogExceededs(JobTaskWebhookNotificationsOnStreamingBacklogExceededArgs... onStreamingBacklogExceededs) {
            return onStreamingBacklogExceededs(List.of(onStreamingBacklogExceededs));
        }

        public Builder onSuccesses(@Nullable Output<List<JobTaskWebhookNotificationsOnSuccessArgs>> onSuccesses) {
            $.onSuccesses = onSuccesses;
            return this;
        }

        public Builder onSuccesses(List<JobTaskWebhookNotificationsOnSuccessArgs> onSuccesses) {
            return onSuccesses(Output.of(onSuccesses));
        }

        public Builder onSuccesses(JobTaskWebhookNotificationsOnSuccessArgs... onSuccesses) {
            return onSuccesses(List.of(onSuccesses));
        }

        public JobTaskWebhookNotificationsArgs build() {
            return $;
        }
    }

}
