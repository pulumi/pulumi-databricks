// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CatalogEffectivePredictiveOptimizationFlag {
    private @Nullable String inheritedFromName;
    private @Nullable String inheritedFromType;
    private String value;

    private CatalogEffectivePredictiveOptimizationFlag() {}
    public Optional<String> inheritedFromName() {
        return Optional.ofNullable(this.inheritedFromName);
    }
    public Optional<String> inheritedFromType() {
        return Optional.ofNullable(this.inheritedFromType);
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogEffectivePredictiveOptimizationFlag defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String inheritedFromName;
        private @Nullable String inheritedFromType;
        private String value;
        public Builder() {}
        public Builder(CatalogEffectivePredictiveOptimizationFlag defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inheritedFromName = defaults.inheritedFromName;
    	      this.inheritedFromType = defaults.inheritedFromType;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder inheritedFromName(@Nullable String inheritedFromName) {

            this.inheritedFromName = inheritedFromName;
            return this;
        }
        @CustomType.Setter
        public Builder inheritedFromType(@Nullable String inheritedFromType) {

            this.inheritedFromType = inheritedFromType;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("CatalogEffectivePredictiveOptimizationFlag", "value");
            }
            this.value = value;
            return this;
        }
        public CatalogEffectivePredictiveOptimizationFlag build() {
            final var _resultValue = new CatalogEffectivePredictiveOptimizationFlag();
            _resultValue.inheritedFromName = inheritedFromName;
            _resultValue.inheritedFromType = inheritedFromType;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
