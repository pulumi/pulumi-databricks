// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingProvisionedThroughputConfigTrafficConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingProvisionedThroughputConfigTrafficConfigArgs Empty = new ModelServingProvisionedThroughputConfigTrafficConfigArgs();

    /**
     * Each block represents a route that defines traffic to each served entity. Each `served_entity` block needs to have a corresponding `routes` block.
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs>> routes;

    /**
     * @return Each block represents a route that defines traffic to each served entity. Each `served_entity` block needs to have a corresponding `routes` block.
     * 
     */
    public Optional<Output<List<ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private ModelServingProvisionedThroughputConfigTrafficConfigArgs() {}

    private ModelServingProvisionedThroughputConfigTrafficConfigArgs(ModelServingProvisionedThroughputConfigTrafficConfigArgs $) {
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingProvisionedThroughputConfigTrafficConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingProvisionedThroughputConfigTrafficConfigArgs $;

        public Builder() {
            $ = new ModelServingProvisionedThroughputConfigTrafficConfigArgs();
        }

        public Builder(ModelServingProvisionedThroughputConfigTrafficConfigArgs defaults) {
            $ = new ModelServingProvisionedThroughputConfigTrafficConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param routes Each block represents a route that defines traffic to each served entity. Each `served_entity` block needs to have a corresponding `routes` block.
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes Each block represents a route that defines traffic to each served entity. Each `served_entity` block needs to have a corresponding `routes` block.
         * 
         * @return builder
         * 
         */
        public Builder routes(List<ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes Each block represents a route that defines traffic to each served entity. Each `served_entity` block needs to have a corresponding `routes` block.
         * 
         * @return builder
         * 
         */
        public Builder routes(ModelServingProvisionedThroughputConfigTrafficConfigRouteArgs... routes) {
            return routes(List.of(routes));
        }

        public ModelServingProvisionedThroughputConfigTrafficConfigArgs build() {
            return $;
        }
    }

}
