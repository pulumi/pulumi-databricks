// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDbfsFileResult {
    /**
     * @return base64-encoded file contents
     * 
     */
    private String content;
    /**
     * @return size of the file in bytes
     * 
     */
    private Integer fileSize;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean limitFileSize;
    private String path;

    private GetDbfsFileResult() {}
    /**
     * @return base64-encoded file contents
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return size of the file in bytes
     * 
     */
    public Integer fileSize() {
        return this.fileSize;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean limitFileSize() {
        return this.limitFileSize;
    }
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbfsFileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private Integer fileSize;
        private String id;
        private Boolean limitFileSize;
        private String path;
        public Builder() {}
        public Builder(GetDbfsFileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.fileSize = defaults.fileSize;
    	      this.id = defaults.id;
    	      this.limitFileSize = defaults.limitFileSize;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetDbfsFileResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder fileSize(Integer fileSize) {
            if (fileSize == null) {
              throw new MissingRequiredPropertyException("GetDbfsFileResult", "fileSize");
            }
            this.fileSize = fileSize;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbfsFileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limitFileSize(Boolean limitFileSize) {
            if (limitFileSize == null) {
              throw new MissingRequiredPropertyException("GetDbfsFileResult", "limitFileSize");
            }
            this.limitFileSize = limitFileSize;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetDbfsFileResult", "path");
            }
            this.path = path;
            return this;
        }
        public GetDbfsFileResult build() {
            final var _resultValue = new GetDbfsFileResult();
            _resultValue.content = content;
            _resultValue.fileSize = fileSize;
            _resultValue.id = id;
            _resultValue.limitFileSize = limitFileSize;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
