// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MwsNetworksGcpNetworkInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final MwsNetworksGcpNetworkInfoArgs Empty = new MwsNetworksGcpNetworkInfoArgs();

    @Import(name="networkProjectId", required=true)
    private Output<String> networkProjectId;

    public Output<String> networkProjectId() {
        return this.networkProjectId;
    }

    @Import(name="podIpRangeName", required=true)
    private Output<String> podIpRangeName;

    public Output<String> podIpRangeName() {
        return this.podIpRangeName;
    }

    @Import(name="serviceIpRangeName", required=true)
    private Output<String> serviceIpRangeName;

    public Output<String> serviceIpRangeName() {
        return this.serviceIpRangeName;
    }

    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId;
    }

    @Import(name="subnetRegion", required=true)
    private Output<String> subnetRegion;

    public Output<String> subnetRegion() {
        return this.subnetRegion;
    }

    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId;
    }

    private MwsNetworksGcpNetworkInfoArgs() {}

    private MwsNetworksGcpNetworkInfoArgs(MwsNetworksGcpNetworkInfoArgs $) {
        this.networkProjectId = $.networkProjectId;
        this.podIpRangeName = $.podIpRangeName;
        this.serviceIpRangeName = $.serviceIpRangeName;
        this.subnetId = $.subnetId;
        this.subnetRegion = $.subnetRegion;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MwsNetworksGcpNetworkInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MwsNetworksGcpNetworkInfoArgs $;

        public Builder() {
            $ = new MwsNetworksGcpNetworkInfoArgs();
        }

        public Builder(MwsNetworksGcpNetworkInfoArgs defaults) {
            $ = new MwsNetworksGcpNetworkInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder networkProjectId(Output<String> networkProjectId) {
            $.networkProjectId = networkProjectId;
            return this;
        }

        public Builder networkProjectId(String networkProjectId) {
            return networkProjectId(Output.of(networkProjectId));
        }

        public Builder podIpRangeName(Output<String> podIpRangeName) {
            $.podIpRangeName = podIpRangeName;
            return this;
        }

        public Builder podIpRangeName(String podIpRangeName) {
            return podIpRangeName(Output.of(podIpRangeName));
        }

        public Builder serviceIpRangeName(Output<String> serviceIpRangeName) {
            $.serviceIpRangeName = serviceIpRangeName;
            return this;
        }

        public Builder serviceIpRangeName(String serviceIpRangeName) {
            return serviceIpRangeName(Output.of(serviceIpRangeName));
        }

        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder subnetRegion(Output<String> subnetRegion) {
            $.subnetRegion = subnetRegion;
            return this;
        }

        public Builder subnetRegion(String subnetRegion) {
            return subnetRegion(Output.of(subnetRegion));
        }

        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public MwsNetworksGcpNetworkInfoArgs build() {
            if ($.networkProjectId == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "networkProjectId");
            }
            if ($.podIpRangeName == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "podIpRangeName");
            }
            if ($.serviceIpRangeName == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "serviceIpRangeName");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "subnetId");
            }
            if ($.subnetRegion == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "subnetRegion");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("MwsNetworksGcpNetworkInfoArgs", "vpcId");
            }
            return $;
        }
    }

}
