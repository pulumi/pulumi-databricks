// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetJobJobSettingsSettingsTaskForEachTaskTask;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJobJobSettingsSettingsTaskForEachTask {
    private @Nullable Integer concurrency;
    private String inputs;
    private GetJobJobSettingsSettingsTaskForEachTaskTask task;

    private GetJobJobSettingsSettingsTaskForEachTask() {}
    public Optional<Integer> concurrency() {
        return Optional.ofNullable(this.concurrency);
    }
    public String inputs() {
        return this.inputs;
    }
    public GetJobJobSettingsSettingsTaskForEachTaskTask task() {
        return this.task;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobJobSettingsSettingsTaskForEachTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer concurrency;
        private String inputs;
        private GetJobJobSettingsSettingsTaskForEachTaskTask task;
        public Builder() {}
        public Builder(GetJobJobSettingsSettingsTaskForEachTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concurrency = defaults.concurrency;
    	      this.inputs = defaults.inputs;
    	      this.task = defaults.task;
        }

        @CustomType.Setter
        public Builder concurrency(@Nullable Integer concurrency) {

            this.concurrency = concurrency;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(String inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("GetJobJobSettingsSettingsTaskForEachTask", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        @CustomType.Setter
        public Builder task(GetJobJobSettingsSettingsTaskForEachTaskTask task) {
            if (task == null) {
              throw new MissingRequiredPropertyException("GetJobJobSettingsSettingsTaskForEachTask", "task");
            }
            this.task = task;
            return this;
        }
        public GetJobJobSettingsSettingsTaskForEachTask build() {
            final var _resultValue = new GetJobJobSettingsSettingsTaskForEachTask();
            _resultValue.concurrency = concurrency;
            _resultValue.inputs = inputs;
            _resultValue.task = task;
            return _resultValue;
        }
    }
}
