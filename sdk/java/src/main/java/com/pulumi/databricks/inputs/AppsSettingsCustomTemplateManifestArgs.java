// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.AppsSettingsCustomTemplateManifestResourceSpecArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppsSettingsCustomTemplateManifestArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppsSettingsCustomTemplateManifestArgs Empty = new AppsSettingsCustomTemplateManifestArgs();

    /**
     * The description of the template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="resourceSpecs")
    private @Nullable Output<List<AppsSettingsCustomTemplateManifestResourceSpecArgs>> resourceSpecs;

    public Optional<Output<List<AppsSettingsCustomTemplateManifestResourceSpecArgs>>> resourceSpecs() {
        return Optional.ofNullable(this.resourceSpecs);
    }

    /**
     * The manifest schema version, for now only 1 is allowed
     * 
     */
    @Import(name="version", required=true)
    private Output<Integer> version;

    /**
     * @return The manifest schema version, for now only 1 is allowed
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    private AppsSettingsCustomTemplateManifestArgs() {}

    private AppsSettingsCustomTemplateManifestArgs(AppsSettingsCustomTemplateManifestArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.resourceSpecs = $.resourceSpecs;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppsSettingsCustomTemplateManifestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppsSettingsCustomTemplateManifestArgs $;

        public Builder() {
            $ = new AppsSettingsCustomTemplateManifestArgs();
        }

        public Builder(AppsSettingsCustomTemplateManifestArgs defaults) {
            $ = new AppsSettingsCustomTemplateManifestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
         * It must be unique within the workspace
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
         * It must be unique within the workspace
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceSpecs(@Nullable Output<List<AppsSettingsCustomTemplateManifestResourceSpecArgs>> resourceSpecs) {
            $.resourceSpecs = resourceSpecs;
            return this;
        }

        public Builder resourceSpecs(List<AppsSettingsCustomTemplateManifestResourceSpecArgs> resourceSpecs) {
            return resourceSpecs(Output.of(resourceSpecs));
        }

        public Builder resourceSpecs(AppsSettingsCustomTemplateManifestResourceSpecArgs... resourceSpecs) {
            return resourceSpecs(List.of(resourceSpecs));
        }

        /**
         * @param version The manifest schema version, for now only 1 is allowed
         * 
         * @return builder
         * 
         */
        public Builder version(Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The manifest schema version, for now only 1 is allowed
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public AppsSettingsCustomTemplateManifestArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AppsSettingsCustomTemplateManifestArgs", "name");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("AppsSettingsCustomTemplateManifestArgs", "version");
            }
            return $;
        }
    }

}
