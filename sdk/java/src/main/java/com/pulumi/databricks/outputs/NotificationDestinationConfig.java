// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.NotificationDestinationConfigEmail;
import com.pulumi.databricks.outputs.NotificationDestinationConfigGenericWebhook;
import com.pulumi.databricks.outputs.NotificationDestinationConfigMicrosoftTeams;
import com.pulumi.databricks.outputs.NotificationDestinationConfigPagerduty;
import com.pulumi.databricks.outputs.NotificationDestinationConfigSlack;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotificationDestinationConfig {
    /**
     * @return The email configuration of the Notification Destination. It must contain the following:
     * 
     */
    private @Nullable NotificationDestinationConfigEmail email;
    /**
     * @return The Generic Webhook configuration of the Notification Destination. It must contain the following:
     * 
     */
    private @Nullable NotificationDestinationConfigGenericWebhook genericWebhook;
    /**
     * @return The Microsoft Teams configuration of the Notification Destination. It must contain the following:
     * 
     */
    private @Nullable NotificationDestinationConfigMicrosoftTeams microsoftTeams;
    /**
     * @return The PagerDuty configuration of the Notification Destination. It must contain the following:
     * 
     */
    private @Nullable NotificationDestinationConfigPagerduty pagerduty;
    /**
     * @return The Slack configuration of the Notification Destination. It must contain the following:
     * 
     */
    private @Nullable NotificationDestinationConfigSlack slack;

    private NotificationDestinationConfig() {}
    /**
     * @return The email configuration of the Notification Destination. It must contain the following:
     * 
     */
    public Optional<NotificationDestinationConfigEmail> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return The Generic Webhook configuration of the Notification Destination. It must contain the following:
     * 
     */
    public Optional<NotificationDestinationConfigGenericWebhook> genericWebhook() {
        return Optional.ofNullable(this.genericWebhook);
    }
    /**
     * @return The Microsoft Teams configuration of the Notification Destination. It must contain the following:
     * 
     */
    public Optional<NotificationDestinationConfigMicrosoftTeams> microsoftTeams() {
        return Optional.ofNullable(this.microsoftTeams);
    }
    /**
     * @return The PagerDuty configuration of the Notification Destination. It must contain the following:
     * 
     */
    public Optional<NotificationDestinationConfigPagerduty> pagerduty() {
        return Optional.ofNullable(this.pagerduty);
    }
    /**
     * @return The Slack configuration of the Notification Destination. It must contain the following:
     * 
     */
    public Optional<NotificationDestinationConfigSlack> slack() {
        return Optional.ofNullable(this.slack);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationDestinationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable NotificationDestinationConfigEmail email;
        private @Nullable NotificationDestinationConfigGenericWebhook genericWebhook;
        private @Nullable NotificationDestinationConfigMicrosoftTeams microsoftTeams;
        private @Nullable NotificationDestinationConfigPagerduty pagerduty;
        private @Nullable NotificationDestinationConfigSlack slack;
        public Builder() {}
        public Builder(NotificationDestinationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.genericWebhook = defaults.genericWebhook;
    	      this.microsoftTeams = defaults.microsoftTeams;
    	      this.pagerduty = defaults.pagerduty;
    	      this.slack = defaults.slack;
        }

        @CustomType.Setter
        public Builder email(@Nullable NotificationDestinationConfigEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder genericWebhook(@Nullable NotificationDestinationConfigGenericWebhook genericWebhook) {

            this.genericWebhook = genericWebhook;
            return this;
        }
        @CustomType.Setter
        public Builder microsoftTeams(@Nullable NotificationDestinationConfigMicrosoftTeams microsoftTeams) {

            this.microsoftTeams = microsoftTeams;
            return this;
        }
        @CustomType.Setter
        public Builder pagerduty(@Nullable NotificationDestinationConfigPagerduty pagerduty) {

            this.pagerduty = pagerduty;
            return this;
        }
        @CustomType.Setter
        public Builder slack(@Nullable NotificationDestinationConfigSlack slack) {

            this.slack = slack;
            return this;
        }
        public NotificationDestinationConfig build() {
            final var _resultValue = new NotificationDestinationConfig();
            _resultValue.email = email;
            _resultValue.genericWebhook = genericWebhook;
            _resultValue.microsoftTeams = microsoftTeams;
            _resultValue.pagerduty = pagerduty;
            _resultValue.slack = slack;
            return _resultValue;
        }
    }
}
