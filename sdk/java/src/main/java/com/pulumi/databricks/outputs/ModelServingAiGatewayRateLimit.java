// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelServingAiGatewayRateLimit {
    /**
     * @return Used to specify how many calls are allowed for a key within the renewal_period.
     * 
     */
    private @Nullable Integer calls;
    /**
     * @return Key field for a serving endpoint rate limit. Currently, `user`, `user_group`, `service_principal`, and `endpoint` are supported, with `endpoint` being the default if not specified.
     * 
     */
    private @Nullable String key;
    /**
     * @return Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID.
     * 
     */
    private @Nullable String principal;
    /**
     * @return Renewal period field for a serving endpoint rate limit. Currently, only `minute` is supported.
     * 
     */
    private String renewalPeriod;
    /**
     * @return Specifies how many tokens are allowed for a key within the renewal_period.
     * 
     */
    private @Nullable Integer tokens;

    private ModelServingAiGatewayRateLimit() {}
    /**
     * @return Used to specify how many calls are allowed for a key within the renewal_period.
     * 
     */
    public Optional<Integer> calls() {
        return Optional.ofNullable(this.calls);
    }
    /**
     * @return Key field for a serving endpoint rate limit. Currently, `user`, `user_group`, `service_principal`, and `endpoint` are supported, with `endpoint` being the default if not specified.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID.
     * 
     */
    public Optional<String> principal() {
        return Optional.ofNullable(this.principal);
    }
    /**
     * @return Renewal period field for a serving endpoint rate limit. Currently, only `minute` is supported.
     * 
     */
    public String renewalPeriod() {
        return this.renewalPeriod;
    }
    /**
     * @return Specifies how many tokens are allowed for a key within the renewal_period.
     * 
     */
    public Optional<Integer> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelServingAiGatewayRateLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer calls;
        private @Nullable String key;
        private @Nullable String principal;
        private String renewalPeriod;
        private @Nullable Integer tokens;
        public Builder() {}
        public Builder(ModelServingAiGatewayRateLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calls = defaults.calls;
    	      this.key = defaults.key;
    	      this.principal = defaults.principal;
    	      this.renewalPeriod = defaults.renewalPeriod;
    	      this.tokens = defaults.tokens;
        }

        @CustomType.Setter
        public Builder calls(@Nullable Integer calls) {

            this.calls = calls;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder principal(@Nullable String principal) {

            this.principal = principal;
            return this;
        }
        @CustomType.Setter
        public Builder renewalPeriod(String renewalPeriod) {
            if (renewalPeriod == null) {
              throw new MissingRequiredPropertyException("ModelServingAiGatewayRateLimit", "renewalPeriod");
            }
            this.renewalPeriod = renewalPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder tokens(@Nullable Integer tokens) {

            this.tokens = tokens;
            return this;
        }
        public ModelServingAiGatewayRateLimit build() {
            final var _resultValue = new ModelServingAiGatewayRateLimit();
            _resultValue.calls = calls;
            _resultValue.key = key;
            _resultValue.principal = principal;
            _resultValue.renewalPeriod = renewalPeriod;
            _resultValue.tokens = tokens;
            return _resultValue;
        }
    }
}
