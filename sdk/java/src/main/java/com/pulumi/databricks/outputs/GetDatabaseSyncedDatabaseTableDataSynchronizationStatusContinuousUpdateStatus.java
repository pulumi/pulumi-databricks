// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatusInitialPipelineSyncProgress;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus {
    /**
     * @return (SyncedTablePipelineProgress) - Details about initial data synchronization. Only populated when in the
     * PROVISIONING_INITIAL_SNAPSHOT state
     * 
     */
    private GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatusInitialPipelineSyncProgress initialPipelineSyncProgress;
    /**
     * @return (integer) - The last source table Delta version that was successfully synced to the synced table
     * 
     */
    private Integer lastProcessedCommitVersion;
    /**
     * @return (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
     * table. This is when the data is available in the synced table
     * 
     */
    private String timestamp;

    private GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus() {}
    /**
     * @return (SyncedTablePipelineProgress) - Details about initial data synchronization. Only populated when in the
     * PROVISIONING_INITIAL_SNAPSHOT state
     * 
     */
    public GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatusInitialPipelineSyncProgress initialPipelineSyncProgress() {
        return this.initialPipelineSyncProgress;
    }
    /**
     * @return (integer) - The last source table Delta version that was successfully synced to the synced table
     * 
     */
    public Integer lastProcessedCommitVersion() {
        return this.lastProcessedCommitVersion;
    }
    /**
     * @return (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
     * table. This is when the data is available in the synced table
     * 
     */
    public String timestamp() {
        return this.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatusInitialPipelineSyncProgress initialPipelineSyncProgress;
        private Integer lastProcessedCommitVersion;
        private String timestamp;
        public Builder() {}
        public Builder(GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.initialPipelineSyncProgress = defaults.initialPipelineSyncProgress;
    	      this.lastProcessedCommitVersion = defaults.lastProcessedCommitVersion;
    	      this.timestamp = defaults.timestamp;
        }

        @CustomType.Setter
        public Builder initialPipelineSyncProgress(GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatusInitialPipelineSyncProgress initialPipelineSyncProgress) {
            if (initialPipelineSyncProgress == null) {
              throw new MissingRequiredPropertyException("GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus", "initialPipelineSyncProgress");
            }
            this.initialPipelineSyncProgress = initialPipelineSyncProgress;
            return this;
        }
        @CustomType.Setter
        public Builder lastProcessedCommitVersion(Integer lastProcessedCommitVersion) {
            if (lastProcessedCommitVersion == null) {
              throw new MissingRequiredPropertyException("GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus", "lastProcessedCommitVersion");
            }
            this.lastProcessedCommitVersion = lastProcessedCommitVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timestamp(String timestamp) {
            if (timestamp == null) {
              throw new MissingRequiredPropertyException("GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus", "timestamp");
            }
            this.timestamp = timestamp;
            return this;
        }
        public GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus build() {
            final var _resultValue = new GetDatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus();
            _resultValue.initialPipelineSyncProgress = initialPipelineSyncProgress;
            _resultValue.lastProcessedCommitVersion = lastProcessedCommitVersion;
            _resultValue.timestamp = timestamp;
            return _resultValue;
        }
    }
}
