// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelServingAiGatewayInferenceTableConfig {
    private @Nullable String catalogName;
    private @Nullable Boolean enabled;
    private @Nullable String schemaName;
    private @Nullable String tableNamePrefix;

    private ModelServingAiGatewayInferenceTableConfig() {}
    public Optional<String> catalogName() {
        return Optional.ofNullable(this.catalogName);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    public Optional<String> tableNamePrefix() {
        return Optional.ofNullable(this.tableNamePrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelServingAiGatewayInferenceTableConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String catalogName;
        private @Nullable Boolean enabled;
        private @Nullable String schemaName;
        private @Nullable String tableNamePrefix;
        public Builder() {}
        public Builder(ModelServingAiGatewayInferenceTableConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogName = defaults.catalogName;
    	      this.enabled = defaults.enabled;
    	      this.schemaName = defaults.schemaName;
    	      this.tableNamePrefix = defaults.tableNamePrefix;
        }

        @CustomType.Setter
        public Builder catalogName(@Nullable String catalogName) {

            this.catalogName = catalogName;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {

            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder tableNamePrefix(@Nullable String tableNamePrefix) {

            this.tableNamePrefix = tableNamePrefix;
            return this;
        }
        public ModelServingAiGatewayInferenceTableConfig build() {
            final var _resultValue = new ModelServingAiGatewayInferenceTableConfig();
            _resultValue.catalogName = catalogName;
            _resultValue.enabled = enabled;
            _resultValue.schemaName = schemaName;
            _resultValue.tableNamePrefix = tableNamePrefix;
            return _resultValue;
        }
    }
}
