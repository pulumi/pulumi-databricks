// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterAutoscale;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterAwsAttributes;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterAzureAttributes;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterClusterLogConf;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterDockerImage;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterGcpAttributes;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterInitScript;
import com.pulumi.databricks.outputs.JobJobClusterNewClusterWorkloadType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobJobClusterNewCluster {
    private final @Nullable Boolean applyPolicyDefaultValues;
    private final @Nullable JobJobClusterNewClusterAutoscale autoscale;
    private final @Nullable Integer autoterminationMinutes;
    private final @Nullable JobJobClusterNewClusterAwsAttributes awsAttributes;
    private final @Nullable JobJobClusterNewClusterAzureAttributes azureAttributes;
    private final @Nullable String clusterId;
    private final @Nullable JobJobClusterNewClusterClusterLogConf clusterLogConf;
    private final @Nullable String clusterName;
    private final @Nullable Map<String,Object> customTags;
    private final @Nullable String dataSecurityMode;
    private final @Nullable JobJobClusterNewClusterDockerImage dockerImage;
    private final @Nullable String driverInstancePoolId;
    private final @Nullable String driverNodeTypeId;
    private final @Nullable Boolean enableElasticDisk;
    private final @Nullable Boolean enableLocalDiskEncryption;
    private final @Nullable JobJobClusterNewClusterGcpAttributes gcpAttributes;
    private final @Nullable String idempotencyToken;
    private final @Nullable List<JobJobClusterNewClusterInitScript> initScripts;
    private final @Nullable String instancePoolId;
    private final @Nullable String nodeTypeId;
    private final @Nullable Integer numWorkers;
    private final @Nullable String policyId;
    private final @Nullable String singleUserName;
    private final @Nullable Map<String,Object> sparkConf;
    private final @Nullable Map<String,Object> sparkEnvVars;
    private final String sparkVersion;
    private final @Nullable List<String> sshPublicKeys;
    private final @Nullable JobJobClusterNewClusterWorkloadType workloadType;

    @CustomType.Constructor
    private JobJobClusterNewCluster(
        @CustomType.Parameter("applyPolicyDefaultValues") @Nullable Boolean applyPolicyDefaultValues,
        @CustomType.Parameter("autoscale") @Nullable JobJobClusterNewClusterAutoscale autoscale,
        @CustomType.Parameter("autoterminationMinutes") @Nullable Integer autoterminationMinutes,
        @CustomType.Parameter("awsAttributes") @Nullable JobJobClusterNewClusterAwsAttributes awsAttributes,
        @CustomType.Parameter("azureAttributes") @Nullable JobJobClusterNewClusterAzureAttributes azureAttributes,
        @CustomType.Parameter("clusterId") @Nullable String clusterId,
        @CustomType.Parameter("clusterLogConf") @Nullable JobJobClusterNewClusterClusterLogConf clusterLogConf,
        @CustomType.Parameter("clusterName") @Nullable String clusterName,
        @CustomType.Parameter("customTags") @Nullable Map<String,Object> customTags,
        @CustomType.Parameter("dataSecurityMode") @Nullable String dataSecurityMode,
        @CustomType.Parameter("dockerImage") @Nullable JobJobClusterNewClusterDockerImage dockerImage,
        @CustomType.Parameter("driverInstancePoolId") @Nullable String driverInstancePoolId,
        @CustomType.Parameter("driverNodeTypeId") @Nullable String driverNodeTypeId,
        @CustomType.Parameter("enableElasticDisk") @Nullable Boolean enableElasticDisk,
        @CustomType.Parameter("enableLocalDiskEncryption") @Nullable Boolean enableLocalDiskEncryption,
        @CustomType.Parameter("gcpAttributes") @Nullable JobJobClusterNewClusterGcpAttributes gcpAttributes,
        @CustomType.Parameter("idempotencyToken") @Nullable String idempotencyToken,
        @CustomType.Parameter("initScripts") @Nullable List<JobJobClusterNewClusterInitScript> initScripts,
        @CustomType.Parameter("instancePoolId") @Nullable String instancePoolId,
        @CustomType.Parameter("nodeTypeId") @Nullable String nodeTypeId,
        @CustomType.Parameter("numWorkers") @Nullable Integer numWorkers,
        @CustomType.Parameter("policyId") @Nullable String policyId,
        @CustomType.Parameter("singleUserName") @Nullable String singleUserName,
        @CustomType.Parameter("sparkConf") @Nullable Map<String,Object> sparkConf,
        @CustomType.Parameter("sparkEnvVars") @Nullable Map<String,Object> sparkEnvVars,
        @CustomType.Parameter("sparkVersion") String sparkVersion,
        @CustomType.Parameter("sshPublicKeys") @Nullable List<String> sshPublicKeys,
        @CustomType.Parameter("workloadType") @Nullable JobJobClusterNewClusterWorkloadType workloadType) {
        this.applyPolicyDefaultValues = applyPolicyDefaultValues;
        this.autoscale = autoscale;
        this.autoterminationMinutes = autoterminationMinutes;
        this.awsAttributes = awsAttributes;
        this.azureAttributes = azureAttributes;
        this.clusterId = clusterId;
        this.clusterLogConf = clusterLogConf;
        this.clusterName = clusterName;
        this.customTags = customTags;
        this.dataSecurityMode = dataSecurityMode;
        this.dockerImage = dockerImage;
        this.driverInstancePoolId = driverInstancePoolId;
        this.driverNodeTypeId = driverNodeTypeId;
        this.enableElasticDisk = enableElasticDisk;
        this.enableLocalDiskEncryption = enableLocalDiskEncryption;
        this.gcpAttributes = gcpAttributes;
        this.idempotencyToken = idempotencyToken;
        this.initScripts = initScripts;
        this.instancePoolId = instancePoolId;
        this.nodeTypeId = nodeTypeId;
        this.numWorkers = numWorkers;
        this.policyId = policyId;
        this.singleUserName = singleUserName;
        this.sparkConf = sparkConf;
        this.sparkEnvVars = sparkEnvVars;
        this.sparkVersion = sparkVersion;
        this.sshPublicKeys = sshPublicKeys;
        this.workloadType = workloadType;
    }

    public Optional<Boolean> applyPolicyDefaultValues() {
        return Optional.ofNullable(this.applyPolicyDefaultValues);
    }
    public Optional<JobJobClusterNewClusterAutoscale> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }
    public Optional<Integer> autoterminationMinutes() {
        return Optional.ofNullable(this.autoterminationMinutes);
    }
    public Optional<JobJobClusterNewClusterAwsAttributes> awsAttributes() {
        return Optional.ofNullable(this.awsAttributes);
    }
    public Optional<JobJobClusterNewClusterAzureAttributes> azureAttributes() {
        return Optional.ofNullable(this.azureAttributes);
    }
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    public Optional<JobJobClusterNewClusterClusterLogConf> clusterLogConf() {
        return Optional.ofNullable(this.clusterLogConf);
    }
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }
    public Map<String,Object> customTags() {
        return this.customTags == null ? Map.of() : this.customTags;
    }
    public Optional<String> dataSecurityMode() {
        return Optional.ofNullable(this.dataSecurityMode);
    }
    public Optional<JobJobClusterNewClusterDockerImage> dockerImage() {
        return Optional.ofNullable(this.dockerImage);
    }
    public Optional<String> driverInstancePoolId() {
        return Optional.ofNullable(this.driverInstancePoolId);
    }
    public Optional<String> driverNodeTypeId() {
        return Optional.ofNullable(this.driverNodeTypeId);
    }
    public Optional<Boolean> enableElasticDisk() {
        return Optional.ofNullable(this.enableElasticDisk);
    }
    public Optional<Boolean> enableLocalDiskEncryption() {
        return Optional.ofNullable(this.enableLocalDiskEncryption);
    }
    public Optional<JobJobClusterNewClusterGcpAttributes> gcpAttributes() {
        return Optional.ofNullable(this.gcpAttributes);
    }
    public Optional<String> idempotencyToken() {
        return Optional.ofNullable(this.idempotencyToken);
    }
    public List<JobJobClusterNewClusterInitScript> initScripts() {
        return this.initScripts == null ? List.of() : this.initScripts;
    }
    public Optional<String> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }
    public Optional<String> nodeTypeId() {
        return Optional.ofNullable(this.nodeTypeId);
    }
    public Optional<Integer> numWorkers() {
        return Optional.ofNullable(this.numWorkers);
    }
    public Optional<String> policyId() {
        return Optional.ofNullable(this.policyId);
    }
    public Optional<String> singleUserName() {
        return Optional.ofNullable(this.singleUserName);
    }
    public Map<String,Object> sparkConf() {
        return this.sparkConf == null ? Map.of() : this.sparkConf;
    }
    public Map<String,Object> sparkEnvVars() {
        return this.sparkEnvVars == null ? Map.of() : this.sparkEnvVars;
    }
    public String sparkVersion() {
        return this.sparkVersion;
    }
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys == null ? List.of() : this.sshPublicKeys;
    }
    public Optional<JobJobClusterNewClusterWorkloadType> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobJobClusterNewCluster defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean applyPolicyDefaultValues;
        private @Nullable JobJobClusterNewClusterAutoscale autoscale;
        private @Nullable Integer autoterminationMinutes;
        private @Nullable JobJobClusterNewClusterAwsAttributes awsAttributes;
        private @Nullable JobJobClusterNewClusterAzureAttributes azureAttributes;
        private @Nullable String clusterId;
        private @Nullable JobJobClusterNewClusterClusterLogConf clusterLogConf;
        private @Nullable String clusterName;
        private @Nullable Map<String,Object> customTags;
        private @Nullable String dataSecurityMode;
        private @Nullable JobJobClusterNewClusterDockerImage dockerImage;
        private @Nullable String driverInstancePoolId;
        private @Nullable String driverNodeTypeId;
        private @Nullable Boolean enableElasticDisk;
        private @Nullable Boolean enableLocalDiskEncryption;
        private @Nullable JobJobClusterNewClusterGcpAttributes gcpAttributes;
        private @Nullable String idempotencyToken;
        private @Nullable List<JobJobClusterNewClusterInitScript> initScripts;
        private @Nullable String instancePoolId;
        private @Nullable String nodeTypeId;
        private @Nullable Integer numWorkers;
        private @Nullable String policyId;
        private @Nullable String singleUserName;
        private @Nullable Map<String,Object> sparkConf;
        private @Nullable Map<String,Object> sparkEnvVars;
        private String sparkVersion;
        private @Nullable List<String> sshPublicKeys;
        private @Nullable JobJobClusterNewClusterWorkloadType workloadType;

        public Builder() {
    	      // Empty
        }

        public Builder(JobJobClusterNewCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyPolicyDefaultValues = defaults.applyPolicyDefaultValues;
    	      this.autoscale = defaults.autoscale;
    	      this.autoterminationMinutes = defaults.autoterminationMinutes;
    	      this.awsAttributes = defaults.awsAttributes;
    	      this.azureAttributes = defaults.azureAttributes;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterLogConf = defaults.clusterLogConf;
    	      this.clusterName = defaults.clusterName;
    	      this.customTags = defaults.customTags;
    	      this.dataSecurityMode = defaults.dataSecurityMode;
    	      this.dockerImage = defaults.dockerImage;
    	      this.driverInstancePoolId = defaults.driverInstancePoolId;
    	      this.driverNodeTypeId = defaults.driverNodeTypeId;
    	      this.enableElasticDisk = defaults.enableElasticDisk;
    	      this.enableLocalDiskEncryption = defaults.enableLocalDiskEncryption;
    	      this.gcpAttributes = defaults.gcpAttributes;
    	      this.idempotencyToken = defaults.idempotencyToken;
    	      this.initScripts = defaults.initScripts;
    	      this.instancePoolId = defaults.instancePoolId;
    	      this.nodeTypeId = defaults.nodeTypeId;
    	      this.numWorkers = defaults.numWorkers;
    	      this.policyId = defaults.policyId;
    	      this.singleUserName = defaults.singleUserName;
    	      this.sparkConf = defaults.sparkConf;
    	      this.sparkEnvVars = defaults.sparkEnvVars;
    	      this.sparkVersion = defaults.sparkVersion;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.workloadType = defaults.workloadType;
        }

        public Builder applyPolicyDefaultValues(@Nullable Boolean applyPolicyDefaultValues) {
            this.applyPolicyDefaultValues = applyPolicyDefaultValues;
            return this;
        }
        public Builder autoscale(@Nullable JobJobClusterNewClusterAutoscale autoscale) {
            this.autoscale = autoscale;
            return this;
        }
        public Builder autoterminationMinutes(@Nullable Integer autoterminationMinutes) {
            this.autoterminationMinutes = autoterminationMinutes;
            return this;
        }
        public Builder awsAttributes(@Nullable JobJobClusterNewClusterAwsAttributes awsAttributes) {
            this.awsAttributes = awsAttributes;
            return this;
        }
        public Builder azureAttributes(@Nullable JobJobClusterNewClusterAzureAttributes azureAttributes) {
            this.azureAttributes = azureAttributes;
            return this;
        }
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        public Builder clusterLogConf(@Nullable JobJobClusterNewClusterClusterLogConf clusterLogConf) {
            this.clusterLogConf = clusterLogConf;
            return this;
        }
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        public Builder customTags(@Nullable Map<String,Object> customTags) {
            this.customTags = customTags;
            return this;
        }
        public Builder dataSecurityMode(@Nullable String dataSecurityMode) {
            this.dataSecurityMode = dataSecurityMode;
            return this;
        }
        public Builder dockerImage(@Nullable JobJobClusterNewClusterDockerImage dockerImage) {
            this.dockerImage = dockerImage;
            return this;
        }
        public Builder driverInstancePoolId(@Nullable String driverInstancePoolId) {
            this.driverInstancePoolId = driverInstancePoolId;
            return this;
        }
        public Builder driverNodeTypeId(@Nullable String driverNodeTypeId) {
            this.driverNodeTypeId = driverNodeTypeId;
            return this;
        }
        public Builder enableElasticDisk(@Nullable Boolean enableElasticDisk) {
            this.enableElasticDisk = enableElasticDisk;
            return this;
        }
        public Builder enableLocalDiskEncryption(@Nullable Boolean enableLocalDiskEncryption) {
            this.enableLocalDiskEncryption = enableLocalDiskEncryption;
            return this;
        }
        public Builder gcpAttributes(@Nullable JobJobClusterNewClusterGcpAttributes gcpAttributes) {
            this.gcpAttributes = gcpAttributes;
            return this;
        }
        public Builder idempotencyToken(@Nullable String idempotencyToken) {
            this.idempotencyToken = idempotencyToken;
            return this;
        }
        public Builder initScripts(@Nullable List<JobJobClusterNewClusterInitScript> initScripts) {
            this.initScripts = initScripts;
            return this;
        }
        public Builder initScripts(JobJobClusterNewClusterInitScript... initScripts) {
            return initScripts(List.of(initScripts));
        }
        public Builder instancePoolId(@Nullable String instancePoolId) {
            this.instancePoolId = instancePoolId;
            return this;
        }
        public Builder nodeTypeId(@Nullable String nodeTypeId) {
            this.nodeTypeId = nodeTypeId;
            return this;
        }
        public Builder numWorkers(@Nullable Integer numWorkers) {
            this.numWorkers = numWorkers;
            return this;
        }
        public Builder policyId(@Nullable String policyId) {
            this.policyId = policyId;
            return this;
        }
        public Builder singleUserName(@Nullable String singleUserName) {
            this.singleUserName = singleUserName;
            return this;
        }
        public Builder sparkConf(@Nullable Map<String,Object> sparkConf) {
            this.sparkConf = sparkConf;
            return this;
        }
        public Builder sparkEnvVars(@Nullable Map<String,Object> sparkEnvVars) {
            this.sparkEnvVars = sparkEnvVars;
            return this;
        }
        public Builder sparkVersion(String sparkVersion) {
            this.sparkVersion = Objects.requireNonNull(sparkVersion);
            return this;
        }
        public Builder sshPublicKeys(@Nullable List<String> sshPublicKeys) {
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        public Builder workloadType(@Nullable JobJobClusterNewClusterWorkloadType workloadType) {
            this.workloadType = workloadType;
            return this;
        }        public JobJobClusterNewCluster build() {
            return new JobJobClusterNewCluster(applyPolicyDefaultValues, autoscale, autoterminationMinutes, awsAttributes, azureAttributes, clusterId, clusterLogConf, clusterName, customTags, dataSecurityMode, dockerImage, driverInstancePoolId, driverNodeTypeId, enableElasticDisk, enableLocalDiskEncryption, gcpAttributes, idempotencyToken, initScripts, instancePoolId, nodeTypeId, numWorkers, policyId, singleUserName, sparkConf, sparkEnvVars, sparkVersion, sshPublicKeys, workloadType);
        }
    }
}
