// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.ShareObjectPartition;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ShareObject {
    private @Nullable Integer addedAt;
    private @Nullable String addedBy;
    private @Nullable Boolean cdfEnabled;
    private @Nullable String comment;
    private @Nullable String content;
    private String dataObjectType;
    private @Nullable String historyDataSharingStatus;
    private String name;
    private @Nullable List<ShareObjectPartition> partitions;
    private @Nullable String sharedAs;
    private @Nullable Integer startVersion;
    private @Nullable String status;
    private @Nullable String stringSharedAs;

    private ShareObject() {}
    public Optional<Integer> addedAt() {
        return Optional.ofNullable(this.addedAt);
    }
    public Optional<String> addedBy() {
        return Optional.ofNullable(this.addedBy);
    }
    public Optional<Boolean> cdfEnabled() {
        return Optional.ofNullable(this.cdfEnabled);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> content() {
        return Optional.ofNullable(this.content);
    }
    public String dataObjectType() {
        return this.dataObjectType;
    }
    public Optional<String> historyDataSharingStatus() {
        return Optional.ofNullable(this.historyDataSharingStatus);
    }
    public String name() {
        return this.name;
    }
    public List<ShareObjectPartition> partitions() {
        return this.partitions == null ? List.of() : this.partitions;
    }
    public Optional<String> sharedAs() {
        return Optional.ofNullable(this.sharedAs);
    }
    public Optional<Integer> startVersion() {
        return Optional.ofNullable(this.startVersion);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> stringSharedAs() {
        return Optional.ofNullable(this.stringSharedAs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShareObject defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer addedAt;
        private @Nullable String addedBy;
        private @Nullable Boolean cdfEnabled;
        private @Nullable String comment;
        private @Nullable String content;
        private String dataObjectType;
        private @Nullable String historyDataSharingStatus;
        private String name;
        private @Nullable List<ShareObjectPartition> partitions;
        private @Nullable String sharedAs;
        private @Nullable Integer startVersion;
        private @Nullable String status;
        private @Nullable String stringSharedAs;
        public Builder() {}
        public Builder(ShareObject defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addedAt = defaults.addedAt;
    	      this.addedBy = defaults.addedBy;
    	      this.cdfEnabled = defaults.cdfEnabled;
    	      this.comment = defaults.comment;
    	      this.content = defaults.content;
    	      this.dataObjectType = defaults.dataObjectType;
    	      this.historyDataSharingStatus = defaults.historyDataSharingStatus;
    	      this.name = defaults.name;
    	      this.partitions = defaults.partitions;
    	      this.sharedAs = defaults.sharedAs;
    	      this.startVersion = defaults.startVersion;
    	      this.status = defaults.status;
    	      this.stringSharedAs = defaults.stringSharedAs;
        }

        @CustomType.Setter
        public Builder addedAt(@Nullable Integer addedAt) {

            this.addedAt = addedAt;
            return this;
        }
        @CustomType.Setter
        public Builder addedBy(@Nullable String addedBy) {

            this.addedBy = addedBy;
            return this;
        }
        @CustomType.Setter
        public Builder cdfEnabled(@Nullable Boolean cdfEnabled) {

            this.cdfEnabled = cdfEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable String content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder dataObjectType(String dataObjectType) {
            if (dataObjectType == null) {
              throw new MissingRequiredPropertyException("ShareObject", "dataObjectType");
            }
            this.dataObjectType = dataObjectType;
            return this;
        }
        @CustomType.Setter
        public Builder historyDataSharingStatus(@Nullable String historyDataSharingStatus) {

            this.historyDataSharingStatus = historyDataSharingStatus;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ShareObject", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partitions(@Nullable List<ShareObjectPartition> partitions) {

            this.partitions = partitions;
            return this;
        }
        public Builder partitions(ShareObjectPartition... partitions) {
            return partitions(List.of(partitions));
        }
        @CustomType.Setter
        public Builder sharedAs(@Nullable String sharedAs) {

            this.sharedAs = sharedAs;
            return this;
        }
        @CustomType.Setter
        public Builder startVersion(@Nullable Integer startVersion) {

            this.startVersion = startVersion;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder stringSharedAs(@Nullable String stringSharedAs) {

            this.stringSharedAs = stringSharedAs;
            return this;
        }
        public ShareObject build() {
            final var _resultValue = new ShareObject();
            _resultValue.addedAt = addedAt;
            _resultValue.addedBy = addedBy;
            _resultValue.cdfEnabled = cdfEnabled;
            _resultValue.comment = comment;
            _resultValue.content = content;
            _resultValue.dataObjectType = dataObjectType;
            _resultValue.historyDataSharingStatus = historyDataSharingStatus;
            _resultValue.name = name;
            _resultValue.partitions = partitions;
            _resultValue.sharedAs = sharedAs;
            _resultValue.startVersion = startVersion;
            _resultValue.status = status;
            _resultValue.stringSharedAs = stringSharedAs;
            return _resultValue;
        }
    }
}
