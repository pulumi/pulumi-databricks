// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJobsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJobsPlainArgs Empty = new GetJobsPlainArgs();

    /**
     * map of databricks.Job names to ids
     * 
     */
    @Import(name="ids")
    private @Nullable Map<String,String> ids;

    /**
     * @return map of databricks.Job names to ids
     * 
     */
    public Optional<Map<String,String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Only return databricks.Job ids that match the given name string (case-insensitive).
     * 
     */
    @Import(name="jobNameContains")
    private @Nullable String jobNameContains;

    /**
     * @return Only return databricks.Job ids that match the given name string (case-insensitive).
     * 
     */
    public Optional<String> jobNameContains() {
        return Optional.ofNullable(this.jobNameContains);
    }

    /**
     * Attribute to use for keys in the returned map of databricks.Job ids by. Possible values are `name` (default) or `id`. Setting to `id` uses the job ID as the map key, allowing duplicate job names.
     * 
     */
    @Import(name="key")
    private @Nullable String key;

    /**
     * @return Attribute to use for keys in the returned map of databricks.Job ids by. Possible values are `name` (default) or `id`. Setting to `id` uses the job ID as the map key, allowing duplicate job names.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    private GetJobsPlainArgs() {}

    private GetJobsPlainArgs(GetJobsPlainArgs $) {
        this.ids = $.ids;
        this.jobNameContains = $.jobNameContains;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobsPlainArgs $;

        public Builder() {
            $ = new GetJobsPlainArgs();
        }

        public Builder(GetJobsPlainArgs defaults) {
            $ = new GetJobsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids map of databricks.Job names to ids
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Map<String,String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param jobNameContains Only return databricks.Job ids that match the given name string (case-insensitive).
         * 
         * @return builder
         * 
         */
        public Builder jobNameContains(@Nullable String jobNameContains) {
            $.jobNameContains = jobNameContains;
            return this;
        }

        /**
         * @param key Attribute to use for keys in the returned map of databricks.Job ids by. Possible values are `name` (default) or `id`. Setting to `id` uses the job ID as the map key, allowing duplicate job names.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable String key) {
            $.key = key;
            return this;
        }

        public GetJobsPlainArgs build() {
            return $;
        }
    }

}
