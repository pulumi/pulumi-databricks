// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoAwsAttributes;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoAzureAttributes;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoDiskSpec;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoGcpAttributes;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoInstancePoolFleetAttribute;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoPreloadedDockerImage;
import com.pulumi.databricks.inputs.GetInstancePoolPoolInfoStats;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePoolPoolInfo extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePoolPoolInfo Empty = new GetInstancePoolPoolInfo();

    @Import(name="awsAttributes")
    private @Nullable GetInstancePoolPoolInfoAwsAttributes awsAttributes;

    public Optional<GetInstancePoolPoolInfoAwsAttributes> awsAttributes() {
        return Optional.ofNullable(this.awsAttributes);
    }

    @Import(name="azureAttributes")
    private @Nullable GetInstancePoolPoolInfoAzureAttributes azureAttributes;

    public Optional<GetInstancePoolPoolInfoAzureAttributes> azureAttributes() {
        return Optional.ofNullable(this.azureAttributes);
    }

    @Import(name="customTags")
    private @Nullable Map<String,Object> customTags;

    public Optional<Map<String,Object>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    @Import(name="defaultTags", required=true)
    private Map<String,Object> defaultTags;

    public Map<String,Object> defaultTags() {
        return this.defaultTags;
    }

    @Import(name="diskSpec")
    private @Nullable GetInstancePoolPoolInfoDiskSpec diskSpec;

    public Optional<GetInstancePoolPoolInfoDiskSpec> diskSpec() {
        return Optional.ofNullable(this.diskSpec);
    }

    @Import(name="enableElasticDisk")
    private @Nullable Boolean enableElasticDisk;

    public Optional<Boolean> enableElasticDisk() {
        return Optional.ofNullable(this.enableElasticDisk);
    }

    @Import(name="gcpAttributes")
    private @Nullable GetInstancePoolPoolInfoGcpAttributes gcpAttributes;

    public Optional<GetInstancePoolPoolInfoGcpAttributes> gcpAttributes() {
        return Optional.ofNullable(this.gcpAttributes);
    }

    @Import(name="idleInstanceAutoterminationMinutes", required=true)
    private Integer idleInstanceAutoterminationMinutes;

    public Integer idleInstanceAutoterminationMinutes() {
        return this.idleInstanceAutoterminationMinutes;
    }

    @Import(name="instancePoolFleetAttributes")
    private @Nullable List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes;

    public Optional<List<GetInstancePoolPoolInfoInstancePoolFleetAttribute>> instancePoolFleetAttributes() {
        return Optional.ofNullable(this.instancePoolFleetAttributes);
    }

    @Import(name="instancePoolId", required=true)
    private String instancePoolId;

    public String instancePoolId() {
        return this.instancePoolId;
    }

    @Import(name="instancePoolName", required=true)
    private String instancePoolName;

    public String instancePoolName() {
        return this.instancePoolName;
    }

    @Import(name="maxCapacity")
    private @Nullable Integer maxCapacity;

    public Optional<Integer> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }

    @Import(name="minIdleInstances")
    private @Nullable Integer minIdleInstances;

    public Optional<Integer> minIdleInstances() {
        return Optional.ofNullable(this.minIdleInstances);
    }

    @Import(name="nodeTypeId")
    private @Nullable String nodeTypeId;

    public Optional<String> nodeTypeId() {
        return Optional.ofNullable(this.nodeTypeId);
    }

    @Import(name="preloadedDockerImages")
    private @Nullable List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages;

    public Optional<List<GetInstancePoolPoolInfoPreloadedDockerImage>> preloadedDockerImages() {
        return Optional.ofNullable(this.preloadedDockerImages);
    }

    @Import(name="preloadedSparkVersions")
    private @Nullable List<String> preloadedSparkVersions;

    public Optional<List<String>> preloadedSparkVersions() {
        return Optional.ofNullable(this.preloadedSparkVersions);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="stats")
    private @Nullable GetInstancePoolPoolInfoStats stats;

    public Optional<GetInstancePoolPoolInfoStats> stats() {
        return Optional.ofNullable(this.stats);
    }

    private GetInstancePoolPoolInfo() {}

    private GetInstancePoolPoolInfo(GetInstancePoolPoolInfo $) {
        this.awsAttributes = $.awsAttributes;
        this.azureAttributes = $.azureAttributes;
        this.customTags = $.customTags;
        this.defaultTags = $.defaultTags;
        this.diskSpec = $.diskSpec;
        this.enableElasticDisk = $.enableElasticDisk;
        this.gcpAttributes = $.gcpAttributes;
        this.idleInstanceAutoterminationMinutes = $.idleInstanceAutoterminationMinutes;
        this.instancePoolFleetAttributes = $.instancePoolFleetAttributes;
        this.instancePoolId = $.instancePoolId;
        this.instancePoolName = $.instancePoolName;
        this.maxCapacity = $.maxCapacity;
        this.minIdleInstances = $.minIdleInstances;
        this.nodeTypeId = $.nodeTypeId;
        this.preloadedDockerImages = $.preloadedDockerImages;
        this.preloadedSparkVersions = $.preloadedSparkVersions;
        this.state = $.state;
        this.stats = $.stats;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePoolPoolInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePoolPoolInfo $;

        public Builder() {
            $ = new GetInstancePoolPoolInfo();
        }

        public Builder(GetInstancePoolPoolInfo defaults) {
            $ = new GetInstancePoolPoolInfo(Objects.requireNonNull(defaults));
        }

        public Builder awsAttributes(@Nullable GetInstancePoolPoolInfoAwsAttributes awsAttributes) {
            $.awsAttributes = awsAttributes;
            return this;
        }

        public Builder azureAttributes(@Nullable GetInstancePoolPoolInfoAzureAttributes azureAttributes) {
            $.azureAttributes = azureAttributes;
            return this;
        }

        public Builder customTags(@Nullable Map<String,Object> customTags) {
            $.customTags = customTags;
            return this;
        }

        public Builder defaultTags(Map<String,Object> defaultTags) {
            $.defaultTags = defaultTags;
            return this;
        }

        public Builder diskSpec(@Nullable GetInstancePoolPoolInfoDiskSpec diskSpec) {
            $.diskSpec = diskSpec;
            return this;
        }

        public Builder enableElasticDisk(@Nullable Boolean enableElasticDisk) {
            $.enableElasticDisk = enableElasticDisk;
            return this;
        }

        public Builder gcpAttributes(@Nullable GetInstancePoolPoolInfoGcpAttributes gcpAttributes) {
            $.gcpAttributes = gcpAttributes;
            return this;
        }

        public Builder idleInstanceAutoterminationMinutes(Integer idleInstanceAutoterminationMinutes) {
            $.idleInstanceAutoterminationMinutes = idleInstanceAutoterminationMinutes;
            return this;
        }

        public Builder instancePoolFleetAttributes(@Nullable List<GetInstancePoolPoolInfoInstancePoolFleetAttribute> instancePoolFleetAttributes) {
            $.instancePoolFleetAttributes = instancePoolFleetAttributes;
            return this;
        }

        public Builder instancePoolFleetAttributes(GetInstancePoolPoolInfoInstancePoolFleetAttribute... instancePoolFleetAttributes) {
            return instancePoolFleetAttributes(List.of(instancePoolFleetAttributes));
        }

        public Builder instancePoolId(String instancePoolId) {
            $.instancePoolId = instancePoolId;
            return this;
        }

        public Builder instancePoolName(String instancePoolName) {
            $.instancePoolName = instancePoolName;
            return this;
        }

        public Builder maxCapacity(@Nullable Integer maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        public Builder minIdleInstances(@Nullable Integer minIdleInstances) {
            $.minIdleInstances = minIdleInstances;
            return this;
        }

        public Builder nodeTypeId(@Nullable String nodeTypeId) {
            $.nodeTypeId = nodeTypeId;
            return this;
        }

        public Builder preloadedDockerImages(@Nullable List<GetInstancePoolPoolInfoPreloadedDockerImage> preloadedDockerImages) {
            $.preloadedDockerImages = preloadedDockerImages;
            return this;
        }

        public Builder preloadedDockerImages(GetInstancePoolPoolInfoPreloadedDockerImage... preloadedDockerImages) {
            return preloadedDockerImages(List.of(preloadedDockerImages));
        }

        public Builder preloadedSparkVersions(@Nullable List<String> preloadedSparkVersions) {
            $.preloadedSparkVersions = preloadedSparkVersions;
            return this;
        }

        public Builder preloadedSparkVersions(String... preloadedSparkVersions) {
            return preloadedSparkVersions(List.of(preloadedSparkVersions));
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder stats(@Nullable GetInstancePoolPoolInfoStats stats) {
            $.stats = stats;
            return this;
        }

        public GetInstancePoolPoolInfo build() {
            if ($.defaultTags == null) {
                throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "defaultTags");
            }
            if ($.idleInstanceAutoterminationMinutes == null) {
                throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "idleInstanceAutoterminationMinutes");
            }
            if ($.instancePoolId == null) {
                throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "instancePoolId");
            }
            if ($.instancePoolName == null) {
                throw new MissingRequiredPropertyException("GetInstancePoolPoolInfo", "instancePoolName");
            }
            return $;
        }
    }

}
