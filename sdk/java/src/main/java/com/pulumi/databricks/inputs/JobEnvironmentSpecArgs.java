// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobEnvironmentSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobEnvironmentSpecArgs Empty = new JobEnvironmentSpecArgs();

    @Import(name="client", required=true)
    private Output<String> client;

    public Output<String> client() {
        return this.client;
    }

    @Import(name="dependencies")
    private @Nullable Output<List<String>> dependencies;

    public Optional<Output<List<String>>> dependencies() {
        return Optional.ofNullable(this.dependencies);
    }

    private JobEnvironmentSpecArgs() {}

    private JobEnvironmentSpecArgs(JobEnvironmentSpecArgs $) {
        this.client = $.client;
        this.dependencies = $.dependencies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobEnvironmentSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobEnvironmentSpecArgs $;

        public Builder() {
            $ = new JobEnvironmentSpecArgs();
        }

        public Builder(JobEnvironmentSpecArgs defaults) {
            $ = new JobEnvironmentSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder client(Output<String> client) {
            $.client = client;
            return this;
        }

        public Builder client(String client) {
            return client(Output.of(client));
        }

        public Builder dependencies(@Nullable Output<List<String>> dependencies) {
            $.dependencies = dependencies;
            return this;
        }

        public Builder dependencies(List<String> dependencies) {
            return dependencies(Output.of(dependencies));
        }

        public Builder dependencies(String... dependencies) {
            return dependencies(List.of(dependencies));
        }

        public JobEnvironmentSpecArgs build() {
            if ($.client == null) {
                throw new MissingRequiredPropertyException("JobEnvironmentSpecArgs", "client");
            }
            return $;
        }
    }

}
