// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails extends com.pulumi.resources.InvokeArgs {

    public static final GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails Empty = new GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails();

    /**
     * Encryption algorithm value. Sets the value of the `x-amz-server-side-encryption` header in S3 request.
     * 
     */
    @Import(name="algorithm")
    private @Nullable String algorithm;

    /**
     * @return Encryption algorithm value. Sets the value of the `x-amz-server-side-encryption` header in S3 request.
     * 
     */
    public Optional<String> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }

    /**
     * ARN of the SSE-KMS key used with the S3 location, when `algorithm = &#34;SSE-KMS&#34;`.
     * 
     */
    @Import(name="awsKmsKeyArn")
    private @Nullable String awsKmsKeyArn;

    /**
     * @return ARN of the SSE-KMS key used with the S3 location, when `algorithm = &#34;SSE-KMS&#34;`.
     * 
     */
    public Optional<String> awsKmsKeyArn() {
        return Optional.ofNullable(this.awsKmsKeyArn);
    }

    private GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails() {}

    private GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails(GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails $) {
        this.algorithm = $.algorithm;
        this.awsKmsKeyArn = $.awsKmsKeyArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails $;

        public Builder() {
            $ = new GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails();
        }

        public Builder(GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails defaults) {
            $ = new GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm Encryption algorithm value. Sets the value of the `x-amz-server-side-encryption` header in S3 request.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(@Nullable String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param awsKmsKeyArn ARN of the SSE-KMS key used with the S3 location, when `algorithm = &#34;SSE-KMS&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder awsKmsKeyArn(@Nullable String awsKmsKeyArn) {
            $.awsKmsKeyArn = awsKmsKeyArn;
            return this;
        }

        public GetExternalLocationExternalLocationInfoEncryptionDetailsSseEncryptionDetails build() {
            return $;
        }
    }

}
