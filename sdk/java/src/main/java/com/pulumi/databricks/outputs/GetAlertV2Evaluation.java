// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetAlertV2EvaluationNotification;
import com.pulumi.databricks.outputs.GetAlertV2EvaluationSource;
import com.pulumi.databricks.outputs.GetAlertV2EvaluationThreshold;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertV2Evaluation {
    /**
     * @return (string) - Operator used for comparison in alert evaluation. Possible values are: `EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `NOT_EQUAL`
     * 
     */
    private @Nullable String comparisonOperator;
    /**
     * @return (string) - Alert state if result is empty. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
     * 
     */
    private @Nullable String emptyResultState;
    /**
     * @return (string) - Timestamp of the last evaluation
     * 
     */
    private String lastEvaluatedAt;
    /**
     * @return (AlertV2Notification) - User or Notification Destination to notify when alert is triggered
     * 
     */
    private @Nullable GetAlertV2EvaluationNotification notification;
    /**
     * @return (AlertV2OperandColumn) - Source column from result to use to evaluate alert
     * 
     */
    private @Nullable GetAlertV2EvaluationSource source;
    /**
     * @return (string) - Latest state of alert evaluation. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
     * 
     */
    private String state;
    /**
     * @return (AlertV2Operand) - Threshold to user for alert evaluation, can be a column or a value
     * 
     */
    private @Nullable GetAlertV2EvaluationThreshold threshold;

    private GetAlertV2Evaluation() {}
    /**
     * @return (string) - Operator used for comparison in alert evaluation. Possible values are: `EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `NOT_EQUAL`
     * 
     */
    public Optional<String> comparisonOperator() {
        return Optional.ofNullable(this.comparisonOperator);
    }
    /**
     * @return (string) - Alert state if result is empty. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
     * 
     */
    public Optional<String> emptyResultState() {
        return Optional.ofNullable(this.emptyResultState);
    }
    /**
     * @return (string) - Timestamp of the last evaluation
     * 
     */
    public String lastEvaluatedAt() {
        return this.lastEvaluatedAt;
    }
    /**
     * @return (AlertV2Notification) - User or Notification Destination to notify when alert is triggered
     * 
     */
    public Optional<GetAlertV2EvaluationNotification> notification() {
        return Optional.ofNullable(this.notification);
    }
    /**
     * @return (AlertV2OperandColumn) - Source column from result to use to evaluate alert
     * 
     */
    public Optional<GetAlertV2EvaluationSource> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return (string) - Latest state of alert evaluation. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return (AlertV2Operand) - Threshold to user for alert evaluation, can be a column or a value
     * 
     */
    public Optional<GetAlertV2EvaluationThreshold> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertV2Evaluation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comparisonOperator;
        private @Nullable String emptyResultState;
        private String lastEvaluatedAt;
        private @Nullable GetAlertV2EvaluationNotification notification;
        private @Nullable GetAlertV2EvaluationSource source;
        private String state;
        private @Nullable GetAlertV2EvaluationThreshold threshold;
        public Builder() {}
        public Builder(GetAlertV2Evaluation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparisonOperator = defaults.comparisonOperator;
    	      this.emptyResultState = defaults.emptyResultState;
    	      this.lastEvaluatedAt = defaults.lastEvaluatedAt;
    	      this.notification = defaults.notification;
    	      this.source = defaults.source;
    	      this.state = defaults.state;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder comparisonOperator(@Nullable String comparisonOperator) {

            this.comparisonOperator = comparisonOperator;
            return this;
        }
        @CustomType.Setter
        public Builder emptyResultState(@Nullable String emptyResultState) {

            this.emptyResultState = emptyResultState;
            return this;
        }
        @CustomType.Setter
        public Builder lastEvaluatedAt(String lastEvaluatedAt) {
            if (lastEvaluatedAt == null) {
              throw new MissingRequiredPropertyException("GetAlertV2Evaluation", "lastEvaluatedAt");
            }
            this.lastEvaluatedAt = lastEvaluatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder notification(@Nullable GetAlertV2EvaluationNotification notification) {

            this.notification = notification;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable GetAlertV2EvaluationSource source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAlertV2Evaluation", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable GetAlertV2EvaluationThreshold threshold) {

            this.threshold = threshold;
            return this;
        }
        public GetAlertV2Evaluation build() {
            final var _resultValue = new GetAlertV2Evaluation();
            _resultValue.comparisonOperator = comparisonOperator;
            _resultValue.emptyResultState = emptyResultState;
            _resultValue.lastEvaluatedAt = lastEvaluatedAt;
            _resultValue.notification = notification;
            _resultValue.source = source;
            _resultValue.state = state;
            _resultValue.threshold = threshold;
            return _resultValue;
        }
    }
}
