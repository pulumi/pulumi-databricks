// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.ModelServingConfigServedEntityExternalModelCustomProviderConfigApiKeyAuthArgs;
import com.pulumi.databricks.inputs.ModelServingConfigServedEntityExternalModelCustomProviderConfigBearerTokenAuthArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs Empty = new ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs();

    /**
     * API key authentication for the custom provider API. Conflicts with `bearerTokenAuth`.
     * 
     */
    @Import(name="apiKeyAuth")
    private @Nullable Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigApiKeyAuthArgs> apiKeyAuth;

    /**
     * @return API key authentication for the custom provider API. Conflicts with `bearerTokenAuth`.
     * 
     */
    public Optional<Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigApiKeyAuthArgs>> apiKeyAuth() {
        return Optional.ofNullable(this.apiKeyAuth);
    }

    /**
     * bearer token authentication for the custom provider API.  Conflicts with `apiKeyAuth`.
     * 
     */
    @Import(name="bearerTokenAuth")
    private @Nullable Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigBearerTokenAuthArgs> bearerTokenAuth;

    /**
     * @return bearer token authentication for the custom provider API.  Conflicts with `apiKeyAuth`.
     * 
     */
    public Optional<Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigBearerTokenAuthArgs>> bearerTokenAuth() {
        return Optional.ofNullable(this.bearerTokenAuth);
    }

    /**
     * URL of the custom provider API.
     * 
     */
    @Import(name="customProviderUrl", required=true)
    private Output<String> customProviderUrl;

    /**
     * @return URL of the custom provider API.
     * 
     */
    public Output<String> customProviderUrl() {
        return this.customProviderUrl;
    }

    private ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs() {}

    private ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs(ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs $) {
        this.apiKeyAuth = $.apiKeyAuth;
        this.bearerTokenAuth = $.bearerTokenAuth;
        this.customProviderUrl = $.customProviderUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs $;

        public Builder() {
            $ = new ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs();
        }

        public Builder(ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs defaults) {
            $ = new ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKeyAuth API key authentication for the custom provider API. Conflicts with `bearerTokenAuth`.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyAuth(@Nullable Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigApiKeyAuthArgs> apiKeyAuth) {
            $.apiKeyAuth = apiKeyAuth;
            return this;
        }

        /**
         * @param apiKeyAuth API key authentication for the custom provider API. Conflicts with `bearerTokenAuth`.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyAuth(ModelServingConfigServedEntityExternalModelCustomProviderConfigApiKeyAuthArgs apiKeyAuth) {
            return apiKeyAuth(Output.of(apiKeyAuth));
        }

        /**
         * @param bearerTokenAuth bearer token authentication for the custom provider API.  Conflicts with `apiKeyAuth`.
         * 
         * @return builder
         * 
         */
        public Builder bearerTokenAuth(@Nullable Output<ModelServingConfigServedEntityExternalModelCustomProviderConfigBearerTokenAuthArgs> bearerTokenAuth) {
            $.bearerTokenAuth = bearerTokenAuth;
            return this;
        }

        /**
         * @param bearerTokenAuth bearer token authentication for the custom provider API.  Conflicts with `apiKeyAuth`.
         * 
         * @return builder
         * 
         */
        public Builder bearerTokenAuth(ModelServingConfigServedEntityExternalModelCustomProviderConfigBearerTokenAuthArgs bearerTokenAuth) {
            return bearerTokenAuth(Output.of(bearerTokenAuth));
        }

        /**
         * @param customProviderUrl URL of the custom provider API.
         * 
         * @return builder
         * 
         */
        public Builder customProviderUrl(Output<String> customProviderUrl) {
            $.customProviderUrl = customProviderUrl;
            return this;
        }

        /**
         * @param customProviderUrl URL of the custom provider API.
         * 
         * @return builder
         * 
         */
        public Builder customProviderUrl(String customProviderUrl) {
            return customProviderUrl(Output.of(customProviderUrl));
        }

        public ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs build() {
            if ($.customProviderUrl == null) {
                throw new MissingRequiredPropertyException("ModelServingConfigServedEntityExternalModelCustomProviderConfigArgs", "customProviderUrl");
            }
            return $;
        }
    }

}
