// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.PipelineTriggerCronArgs;
import com.pulumi.databricks.inputs.PipelineTriggerManualArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineTriggerArgs Empty = new PipelineTriggerArgs();

    @Import(name="cron")
    private @Nullable Output<PipelineTriggerCronArgs> cron;

    public Optional<Output<PipelineTriggerCronArgs>> cron() {
        return Optional.ofNullable(this.cron);
    }

    @Import(name="manual")
    private @Nullable Output<PipelineTriggerManualArgs> manual;

    public Optional<Output<PipelineTriggerManualArgs>> manual() {
        return Optional.ofNullable(this.manual);
    }

    private PipelineTriggerArgs() {}

    private PipelineTriggerArgs(PipelineTriggerArgs $) {
        this.cron = $.cron;
        this.manual = $.manual;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineTriggerArgs $;

        public Builder() {
            $ = new PipelineTriggerArgs();
        }

        public Builder(PipelineTriggerArgs defaults) {
            $ = new PipelineTriggerArgs(Objects.requireNonNull(defaults));
        }

        public Builder cron(@Nullable Output<PipelineTriggerCronArgs> cron) {
            $.cron = cron;
            return this;
        }

        public Builder cron(PipelineTriggerCronArgs cron) {
            return cron(Output.of(cron));
        }

        public Builder manual(@Nullable Output<PipelineTriggerManualArgs> manual) {
            $.manual = manual;
            return this;
        }

        public Builder manual(PipelineTriggerManualArgs manual) {
            return manual(Output.of(manual));
        }

        public PipelineTriggerArgs build() {
            return $;
        }
    }

}
