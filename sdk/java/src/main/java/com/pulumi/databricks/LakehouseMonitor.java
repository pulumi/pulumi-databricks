// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.LakehouseMonitorArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.LakehouseMonitorState;
import com.pulumi.databricks.outputs.LakehouseMonitorCustomMetric;
import com.pulumi.databricks.outputs.LakehouseMonitorDataClassificationConfig;
import com.pulumi.databricks.outputs.LakehouseMonitorInferenceLog;
import com.pulumi.databricks.outputs.LakehouseMonitorNotifications;
import com.pulumi.databricks.outputs.LakehouseMonitorSchedule;
import com.pulumi.databricks.outputs.LakehouseMonitorSnapshot;
import com.pulumi.databricks.outputs.LakehouseMonitorTimeSeries;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="databricks:index/lakehouseMonitor:LakehouseMonitor")
public class LakehouseMonitor extends com.pulumi.resources.CustomResource {
    @Export(name="assetsDir", refs={String.class}, tree="[0]")
    private Output<String> assetsDir;

    public Output<String> assetsDir() {
        return this.assetsDir;
    }
    @Export(name="baselineTableName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> baselineTableName;

    public Output<Optional<String>> baselineTableName() {
        return Codegen.optional(this.baselineTableName);
    }
    @Export(name="customMetrics", refs={List.class,LakehouseMonitorCustomMetric.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LakehouseMonitorCustomMetric>> customMetrics;

    public Output<Optional<List<LakehouseMonitorCustomMetric>>> customMetrics() {
        return Codegen.optional(this.customMetrics);
    }
    @Export(name="dashboardId", refs={String.class}, tree="[0]")
    private Output<String> dashboardId;

    public Output<String> dashboardId() {
        return this.dashboardId;
    }
    @Export(name="dataClassificationConfig", refs={LakehouseMonitorDataClassificationConfig.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorDataClassificationConfig> dataClassificationConfig;

    public Output<Optional<LakehouseMonitorDataClassificationConfig>> dataClassificationConfig() {
        return Codegen.optional(this.dataClassificationConfig);
    }
    @Export(name="driftMetricsTableName", refs={String.class}, tree="[0]")
    private Output<String> driftMetricsTableName;

    public Output<String> driftMetricsTableName() {
        return this.driftMetricsTableName;
    }
    @Export(name="inferenceLog", refs={LakehouseMonitorInferenceLog.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorInferenceLog> inferenceLog;

    public Output<Optional<LakehouseMonitorInferenceLog>> inferenceLog() {
        return Codegen.optional(this.inferenceLog);
    }
    @Export(name="latestMonitorFailureMsg", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> latestMonitorFailureMsg;

    public Output<Optional<String>> latestMonitorFailureMsg() {
        return Codegen.optional(this.latestMonitorFailureMsg);
    }
    @Export(name="monitorVersion", refs={String.class}, tree="[0]")
    private Output<String> monitorVersion;

    public Output<String> monitorVersion() {
        return this.monitorVersion;
    }
    @Export(name="notifications", refs={LakehouseMonitorNotifications.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorNotifications> notifications;

    public Output<Optional<LakehouseMonitorNotifications>> notifications() {
        return Codegen.optional(this.notifications);
    }
    @Export(name="outputSchemaName", refs={String.class}, tree="[0]")
    private Output<String> outputSchemaName;

    public Output<String> outputSchemaName() {
        return this.outputSchemaName;
    }
    @Export(name="profileMetricsTableName", refs={String.class}, tree="[0]")
    private Output<String> profileMetricsTableName;

    public Output<String> profileMetricsTableName() {
        return this.profileMetricsTableName;
    }
    @Export(name="schedule", refs={LakehouseMonitorSchedule.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorSchedule> schedule;

    public Output<Optional<LakehouseMonitorSchedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    @Export(name="skipBuiltinDashboard", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> skipBuiltinDashboard;

    public Output<Optional<Boolean>> skipBuiltinDashboard() {
        return Codegen.optional(this.skipBuiltinDashboard);
    }
    @Export(name="slicingExprs", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> slicingExprs;

    public Output<Optional<List<String>>> slicingExprs() {
        return Codegen.optional(this.slicingExprs);
    }
    @Export(name="snapshot", refs={LakehouseMonitorSnapshot.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorSnapshot> snapshot;

    public Output<Optional<LakehouseMonitorSnapshot>> snapshot() {
        return Codegen.optional(this.snapshot);
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="tableName", refs={String.class}, tree="[0]")
    private Output<String> tableName;

    public Output<String> tableName() {
        return this.tableName;
    }
    @Export(name="timeSeries", refs={LakehouseMonitorTimeSeries.class}, tree="[0]")
    private Output</* @Nullable */ LakehouseMonitorTimeSeries> timeSeries;

    public Output<Optional<LakehouseMonitorTimeSeries>> timeSeries() {
        return Codegen.optional(this.timeSeries);
    }
    @Export(name="warehouseId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> warehouseId;

    public Output<Optional<String>> warehouseId() {
        return Codegen.optional(this.warehouseId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LakehouseMonitor(java.lang.String name) {
        this(name, LakehouseMonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LakehouseMonitor(java.lang.String name, LakehouseMonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LakehouseMonitor(java.lang.String name, LakehouseMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/lakehouseMonitor:LakehouseMonitor", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LakehouseMonitor(java.lang.String name, Output<java.lang.String> id, @Nullable LakehouseMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/lakehouseMonitor:LakehouseMonitor", name, state, makeResourceOptions(options, id), false);
    }

    private static LakehouseMonitorArgs makeArgs(LakehouseMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LakehouseMonitorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LakehouseMonitor get(java.lang.String name, Output<java.lang.String> id, @Nullable LakehouseMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LakehouseMonitor(name, id, state, options);
    }
}
