// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseSyncedDatabaseTableSpecNewPipelineSpec {
    /**
     * @return This field needs to be specified if the destination catalog is a managed postgres catalog.
     * 
     * UC catalog for the pipeline to store intermediate files (checkpoints, event logs etc).
     * This needs to be a standard catalog where the user has permissions to create Delta tables
     * 
     */
    private @Nullable String storageCatalog;
    /**
     * @return This field needs to be specified if the destination catalog is a managed postgres catalog.
     * 
     * UC schema for the pipeline to store intermediate files (checkpoints, event logs etc).
     * This needs to be in the standard catalog where the user has permissions to create Delta tables
     * 
     */
    private @Nullable String storageSchema;

    private DatabaseSyncedDatabaseTableSpecNewPipelineSpec() {}
    /**
     * @return This field needs to be specified if the destination catalog is a managed postgres catalog.
     * 
     * UC catalog for the pipeline to store intermediate files (checkpoints, event logs etc).
     * This needs to be a standard catalog where the user has permissions to create Delta tables
     * 
     */
    public Optional<String> storageCatalog() {
        return Optional.ofNullable(this.storageCatalog);
    }
    /**
     * @return This field needs to be specified if the destination catalog is a managed postgres catalog.
     * 
     * UC schema for the pipeline to store intermediate files (checkpoints, event logs etc).
     * This needs to be in the standard catalog where the user has permissions to create Delta tables
     * 
     */
    public Optional<String> storageSchema() {
        return Optional.ofNullable(this.storageSchema);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseSyncedDatabaseTableSpecNewPipelineSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String storageCatalog;
        private @Nullable String storageSchema;
        public Builder() {}
        public Builder(DatabaseSyncedDatabaseTableSpecNewPipelineSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.storageCatalog = defaults.storageCatalog;
    	      this.storageSchema = defaults.storageSchema;
        }

        @CustomType.Setter
        public Builder storageCatalog(@Nullable String storageCatalog) {

            this.storageCatalog = storageCatalog;
            return this;
        }
        @CustomType.Setter
        public Builder storageSchema(@Nullable String storageSchema) {

            this.storageSchema = storageSchema;
            return this;
        }
        public DatabaseSyncedDatabaseTableSpecNewPipelineSpec build() {
            final var _resultValue = new DatabaseSyncedDatabaseTableSpecNewPipelineSpec();
            _resultValue.storageCatalog = storageCatalog;
            _resultValue.storageSchema = storageSchema;
            return _resultValue;
        }
    }
}
