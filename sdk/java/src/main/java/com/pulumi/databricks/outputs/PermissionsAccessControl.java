// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PermissionsAccessControl {
    private @Nullable String groupName;
    private String permissionLevel;
    private @Nullable String servicePrincipalName;
    private @Nullable String userName;

    private PermissionsAccessControl() {}
    public Optional<String> groupName() {
        return Optional.ofNullable(this.groupName);
    }
    public String permissionLevel() {
        return this.permissionLevel;
    }
    public Optional<String> servicePrincipalName() {
        return Optional.ofNullable(this.servicePrincipalName);
    }
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PermissionsAccessControl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String groupName;
        private String permissionLevel;
        private @Nullable String servicePrincipalName;
        private @Nullable String userName;
        public Builder() {}
        public Builder(PermissionsAccessControl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupName = defaults.groupName;
    	      this.permissionLevel = defaults.permissionLevel;
    	      this.servicePrincipalName = defaults.servicePrincipalName;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder groupName(@Nullable String groupName) {

            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder permissionLevel(String permissionLevel) {
            if (permissionLevel == null) {
              throw new MissingRequiredPropertyException("PermissionsAccessControl", "permissionLevel");
            }
            this.permissionLevel = permissionLevel;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalName(@Nullable String servicePrincipalName) {

            this.servicePrincipalName = servicePrincipalName;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {

            this.userName = userName;
            return this;
        }
        public PermissionsAccessControl build() {
            final var _resultValue = new PermissionsAccessControl();
            _resultValue.groupName = groupName;
            _resultValue.permissionLevel = permissionLevel;
            _resultValue.servicePrincipalName = servicePrincipalName;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
