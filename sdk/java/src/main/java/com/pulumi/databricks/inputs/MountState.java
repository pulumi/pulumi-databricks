// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.MountAbfsArgs;
import com.pulumi.databricks.inputs.MountAdlArgs;
import com.pulumi.databricks.inputs.MountGsArgs;
import com.pulumi.databricks.inputs.MountS3Args;
import com.pulumi.databricks.inputs.MountWasbArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MountState extends com.pulumi.resources.ResourceArgs {

    public static final MountState Empty = new MountState();

    @Import(name="abfs")
    private @Nullable Output<MountAbfsArgs> abfs;

    public Optional<Output<MountAbfsArgs>> abfs() {
        return Optional.ofNullable(this.abfs);
    }

    @Import(name="adl")
    private @Nullable Output<MountAdlArgs> adl;

    public Optional<Output<MountAdlArgs>> adl() {
        return Optional.ofNullable(this.adl);
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="encryptionType")
    private @Nullable Output<String> encryptionType;

    public Optional<Output<String>> encryptionType() {
        return Optional.ofNullable(this.encryptionType);
    }

    @Import(name="extraConfigs")
    private @Nullable Output<Map<String,String>> extraConfigs;

    public Optional<Output<Map<String,String>>> extraConfigs() {
        return Optional.ofNullable(this.extraConfigs);
    }

    @Import(name="gs")
    private @Nullable Output<MountGsArgs> gs;

    public Optional<Output<MountGsArgs>> gs() {
        return Optional.ofNullable(this.gs);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    @Import(name="s3")
    private @Nullable Output<MountS3Args> s3;

    public Optional<Output<MountS3Args>> s3() {
        return Optional.ofNullable(this.s3);
    }

    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="uri")
    private @Nullable Output<String> uri;

    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    @Import(name="wasb")
    private @Nullable Output<MountWasbArgs> wasb;

    public Optional<Output<MountWasbArgs>> wasb() {
        return Optional.ofNullable(this.wasb);
    }

    private MountState() {}

    private MountState(MountState $) {
        this.abfs = $.abfs;
        this.adl = $.adl;
        this.clusterId = $.clusterId;
        this.encryptionType = $.encryptionType;
        this.extraConfigs = $.extraConfigs;
        this.gs = $.gs;
        this.name = $.name;
        this.resourceId = $.resourceId;
        this.s3 = $.s3;
        this.source = $.source;
        this.uri = $.uri;
        this.wasb = $.wasb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MountState $;

        public Builder() {
            $ = new MountState();
        }

        public Builder(MountState defaults) {
            $ = new MountState(Objects.requireNonNull(defaults));
        }

        public Builder abfs(@Nullable Output<MountAbfsArgs> abfs) {
            $.abfs = abfs;
            return this;
        }

        public Builder abfs(MountAbfsArgs abfs) {
            return abfs(Output.of(abfs));
        }

        public Builder adl(@Nullable Output<MountAdlArgs> adl) {
            $.adl = adl;
            return this;
        }

        public Builder adl(MountAdlArgs adl) {
            return adl(Output.of(adl));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder encryptionType(@Nullable Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        public Builder extraConfigs(@Nullable Output<Map<String,String>> extraConfigs) {
            $.extraConfigs = extraConfigs;
            return this;
        }

        public Builder extraConfigs(Map<String,String> extraConfigs) {
            return extraConfigs(Output.of(extraConfigs));
        }

        public Builder gs(@Nullable Output<MountGsArgs> gs) {
            $.gs = gs;
            return this;
        }

        public Builder gs(MountGsArgs gs) {
            return gs(Output.of(gs));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public Builder s3(@Nullable Output<MountS3Args> s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3(MountS3Args s3) {
            return s3(Output.of(s3));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public Builder wasb(@Nullable Output<MountWasbArgs> wasb) {
            $.wasb = wasb;
            return this;
        }

        public Builder wasb(MountWasbArgs wasb) {
            return wasb(Output.of(wasb));
        }

        public MountState build() {
            return $;
        }
    }

}
