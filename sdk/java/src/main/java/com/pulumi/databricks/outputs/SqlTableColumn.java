// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlTableColumn {
    /**
     * @return User-supplied free-form text.
     * 
     */
    private @Nullable String comment;
    /**
     * @return User-visible name of column
     * 
     */
    private String name;
    /**
     * @return Whether field is nullable (Default: `true`)
     * 
     */
    private @Nullable Boolean nullable;
    /**
     * @return Column type spec (with metadata) as SQL text. Not supported for `VIEW` table_type.
     * 
     */
    private @Nullable String type;

    private SqlTableColumn() {}
    /**
     * @return User-supplied free-form text.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return User-visible name of column
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Whether field is nullable (Default: `true`)
     * 
     */
    public Optional<Boolean> nullable() {
        return Optional.ofNullable(this.nullable);
    }
    /**
     * @return Column type spec (with metadata) as SQL text. Not supported for `VIEW` table_type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlTableColumn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private String name;
        private @Nullable Boolean nullable;
        private @Nullable String type;
        public Builder() {}
        public Builder(SqlTableColumn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.name = defaults.name;
    	      this.nullable = defaults.nullable;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nullable(@Nullable Boolean nullable) {
            this.nullable = nullable;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public SqlTableColumn build() {
            final var _resultValue = new SqlTableColumn();
            _resultValue.comment = comment;
            _resultValue.name = name;
            _resultValue.nullable = nullable;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
