// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterWorkloadTypeClients {
    /**
     * @return boolean flag defining if it&#39;s possible to run Databricks Jobs on this cluster. Default: `true`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.databricks.Cluster;
     * import com.pulumi.databricks.ClusterArgs;
     * import com.pulumi.databricks.inputs.ClusterWorkloadTypeArgs;
     * import com.pulumi.databricks.inputs.ClusterWorkloadTypeClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var withNfs = new Cluster(&#34;withNfs&#34;, ClusterArgs.builder()        
     *             .workloadType(ClusterWorkloadTypeArgs.builder()
     *                 .clients(ClusterWorkloadTypeClientsArgs.builder()
     *                     .jobs(false)
     *                     .notebooks(true)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    private @Nullable Boolean jobs;
    /**
     * @return boolean flag defining if it&#39;s possible to run notebooks on this cluster. Default: `true`.
     * 
     */
    private @Nullable Boolean notebooks;

    private ClusterWorkloadTypeClients() {}
    /**
     * @return boolean flag defining if it&#39;s possible to run Databricks Jobs on this cluster. Default: `true`.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.databricks.Cluster;
     * import com.pulumi.databricks.ClusterArgs;
     * import com.pulumi.databricks.inputs.ClusterWorkloadTypeArgs;
     * import com.pulumi.databricks.inputs.ClusterWorkloadTypeClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var withNfs = new Cluster(&#34;withNfs&#34;, ClusterArgs.builder()        
     *             .workloadType(ClusterWorkloadTypeArgs.builder()
     *                 .clients(ClusterWorkloadTypeClientsArgs.builder()
     *                     .jobs(false)
     *                     .notebooks(true)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public Optional<Boolean> jobs() {
        return Optional.ofNullable(this.jobs);
    }
    /**
     * @return boolean flag defining if it&#39;s possible to run notebooks on this cluster. Default: `true`.
     * 
     */
    public Optional<Boolean> notebooks() {
        return Optional.ofNullable(this.notebooks);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterWorkloadTypeClients defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean jobs;
        private @Nullable Boolean notebooks;
        public Builder() {}
        public Builder(ClusterWorkloadTypeClients defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobs = defaults.jobs;
    	      this.notebooks = defaults.notebooks;
        }

        @CustomType.Setter
        public Builder jobs(@Nullable Boolean jobs) {

            this.jobs = jobs;
            return this;
        }
        @CustomType.Setter
        public Builder notebooks(@Nullable Boolean notebooks) {

            this.notebooks = notebooks;
            return this;
        }
        public ClusterWorkloadTypeClients build() {
            final var _resultValue = new ClusterWorkloadTypeClients();
            _resultValue.jobs = jobs;
            _resultValue.notebooks = notebooks;
            return _resultValue;
        }
    }
}
