// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetVolumeVolumeInfoArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVolumeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVolumeArgs Empty = new GetVolumeArgs();

    /**
     * ID of this Unity Catalog Volume in form of `&lt;catalog&gt;.&lt;schema&gt;.&lt;name&gt;`.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return ID of this Unity Catalog Volume in form of `&lt;catalog&gt;.&lt;schema&gt;.&lt;name&gt;`.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * a fully qualified name of databricks_volume: *`catalog`.`schema`.`volume`*
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return a fully qualified name of databricks_volume: *`catalog`.`schema`.`volume`*
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * `VolumeInfo` object for a Unity Catalog volume. This contains the following attributes:
     * 
     */
    @Import(name="volumeInfo")
    private @Nullable Output<GetVolumeVolumeInfoArgs> volumeInfo;

    /**
     * @return `VolumeInfo` object for a Unity Catalog volume. This contains the following attributes:
     * 
     */
    public Optional<Output<GetVolumeVolumeInfoArgs>> volumeInfo() {
        return Optional.ofNullable(this.volumeInfo);
    }

    private GetVolumeArgs() {}

    private GetVolumeArgs(GetVolumeArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.volumeInfo = $.volumeInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVolumeArgs $;

        public Builder() {
            $ = new GetVolumeArgs();
        }

        public Builder(GetVolumeArgs defaults) {
            $ = new GetVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of this Unity Catalog Volume in form of `&lt;catalog&gt;.&lt;schema&gt;.&lt;name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of this Unity Catalog Volume in form of `&lt;catalog&gt;.&lt;schema&gt;.&lt;name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name a fully qualified name of databricks_volume: *`catalog`.`schema`.`volume`*
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name a fully qualified name of databricks_volume: *`catalog`.`schema`.`volume`*
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param volumeInfo `VolumeInfo` object for a Unity Catalog volume. This contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder volumeInfo(@Nullable Output<GetVolumeVolumeInfoArgs> volumeInfo) {
            $.volumeInfo = volumeInfo;
            return this;
        }

        /**
         * @param volumeInfo `VolumeInfo` object for a Unity Catalog volume. This contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder volumeInfo(GetVolumeVolumeInfoArgs volumeInfo) {
            return volumeInfo(Output.of(volumeInfo));
        }

        public GetVolumeArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetVolumeArgs", "name");
            }
            return $;
        }
    }

}
