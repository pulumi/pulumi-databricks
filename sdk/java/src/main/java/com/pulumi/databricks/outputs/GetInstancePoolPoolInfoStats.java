// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancePoolPoolInfoStats {
    private @Nullable Integer idleCount;
    private @Nullable Integer pendingIdleCount;
    private @Nullable Integer pendingUsedCount;
    private @Nullable Integer usedCount;

    private GetInstancePoolPoolInfoStats() {}
    public Optional<Integer> idleCount() {
        return Optional.ofNullable(this.idleCount);
    }
    public Optional<Integer> pendingIdleCount() {
        return Optional.ofNullable(this.pendingIdleCount);
    }
    public Optional<Integer> pendingUsedCount() {
        return Optional.ofNullable(this.pendingUsedCount);
    }
    public Optional<Integer> usedCount() {
        return Optional.ofNullable(this.usedCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePoolPoolInfoStats defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer idleCount;
        private @Nullable Integer pendingIdleCount;
        private @Nullable Integer pendingUsedCount;
        private @Nullable Integer usedCount;
        public Builder() {}
        public Builder(GetInstancePoolPoolInfoStats defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.idleCount = defaults.idleCount;
    	      this.pendingIdleCount = defaults.pendingIdleCount;
    	      this.pendingUsedCount = defaults.pendingUsedCount;
    	      this.usedCount = defaults.usedCount;
        }

        @CustomType.Setter
        public Builder idleCount(@Nullable Integer idleCount) {
            this.idleCount = idleCount;
            return this;
        }
        @CustomType.Setter
        public Builder pendingIdleCount(@Nullable Integer pendingIdleCount) {
            this.pendingIdleCount = pendingIdleCount;
            return this;
        }
        @CustomType.Setter
        public Builder pendingUsedCount(@Nullable Integer pendingUsedCount) {
            this.pendingUsedCount = pendingUsedCount;
            return this;
        }
        @CustomType.Setter
        public Builder usedCount(@Nullable Integer usedCount) {
            this.usedCount = usedCount;
            return this;
        }
        public GetInstancePoolPoolInfoStats build() {
            final var _resultValue = new GetInstancePoolPoolInfoStats();
            _resultValue.idleCount = idleCount;
            _resultValue.pendingIdleCount = pendingIdleCount;
            _resultValue.pendingUsedCount = pendingUsedCount;
            _resultValue.usedCount = usedCount;
            return _resultValue;
        }
    }
}
