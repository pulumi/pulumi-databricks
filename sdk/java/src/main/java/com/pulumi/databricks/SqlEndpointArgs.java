// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.SqlEndpointChannelArgs;
import com.pulumi.databricks.inputs.SqlEndpointTagsArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlEndpointArgs Empty = new SqlEndpointArgs();

    @Import(name="autoStopMins")
    private @Nullable Output<Integer> autoStopMins;

    public Optional<Output<Integer>> autoStopMins() {
        return Optional.ofNullable(this.autoStopMins);
    }

    @Import(name="channel")
    private @Nullable Output<SqlEndpointChannelArgs> channel;

    public Optional<Output<SqlEndpointChannelArgs>> channel() {
        return Optional.ofNullable(this.channel);
    }

    @Import(name="clusterSize", required=true)
    private Output<String> clusterSize;

    public Output<String> clusterSize() {
        return this.clusterSize;
    }

    @Import(name="dataSourceId")
    private @Nullable Output<String> dataSourceId;

    public Optional<Output<String>> dataSourceId() {
        return Optional.ofNullable(this.dataSourceId);
    }

    @Import(name="enablePhoton")
    private @Nullable Output<Boolean> enablePhoton;

    public Optional<Output<Boolean>> enablePhoton() {
        return Optional.ofNullable(this.enablePhoton);
    }

    @Import(name="enableServerlessCompute")
    private @Nullable Output<Boolean> enableServerlessCompute;

    public Optional<Output<Boolean>> enableServerlessCompute() {
        return Optional.ofNullable(this.enableServerlessCompute);
    }

    @Import(name="instanceProfileArn")
    private @Nullable Output<String> instanceProfileArn;

    public Optional<Output<String>> instanceProfileArn() {
        return Optional.ofNullable(this.instanceProfileArn);
    }

    @Import(name="maxNumClusters")
    private @Nullable Output<Integer> maxNumClusters;

    public Optional<Output<Integer>> maxNumClusters() {
        return Optional.ofNullable(this.maxNumClusters);
    }

    @Import(name="minNumClusters")
    private @Nullable Output<Integer> minNumClusters;

    public Optional<Output<Integer>> minNumClusters() {
        return Optional.ofNullable(this.minNumClusters);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="spotInstancePolicy")
    private @Nullable Output<String> spotInstancePolicy;

    public Optional<Output<String>> spotInstancePolicy() {
        return Optional.ofNullable(this.spotInstancePolicy);
    }

    @Import(name="tags")
    private @Nullable Output<SqlEndpointTagsArgs> tags;

    public Optional<Output<SqlEndpointTagsArgs>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="warehouseType")
    private @Nullable Output<String> warehouseType;

    public Optional<Output<String>> warehouseType() {
        return Optional.ofNullable(this.warehouseType);
    }

    private SqlEndpointArgs() {}

    private SqlEndpointArgs(SqlEndpointArgs $) {
        this.autoStopMins = $.autoStopMins;
        this.channel = $.channel;
        this.clusterSize = $.clusterSize;
        this.dataSourceId = $.dataSourceId;
        this.enablePhoton = $.enablePhoton;
        this.enableServerlessCompute = $.enableServerlessCompute;
        this.instanceProfileArn = $.instanceProfileArn;
        this.maxNumClusters = $.maxNumClusters;
        this.minNumClusters = $.minNumClusters;
        this.name = $.name;
        this.spotInstancePolicy = $.spotInstancePolicy;
        this.tags = $.tags;
        this.warehouseType = $.warehouseType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlEndpointArgs $;

        public Builder() {
            $ = new SqlEndpointArgs();
        }

        public Builder(SqlEndpointArgs defaults) {
            $ = new SqlEndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoStopMins(@Nullable Output<Integer> autoStopMins) {
            $.autoStopMins = autoStopMins;
            return this;
        }

        public Builder autoStopMins(Integer autoStopMins) {
            return autoStopMins(Output.of(autoStopMins));
        }

        public Builder channel(@Nullable Output<SqlEndpointChannelArgs> channel) {
            $.channel = channel;
            return this;
        }

        public Builder channel(SqlEndpointChannelArgs channel) {
            return channel(Output.of(channel));
        }

        public Builder clusterSize(Output<String> clusterSize) {
            $.clusterSize = clusterSize;
            return this;
        }

        public Builder clusterSize(String clusterSize) {
            return clusterSize(Output.of(clusterSize));
        }

        public Builder dataSourceId(@Nullable Output<String> dataSourceId) {
            $.dataSourceId = dataSourceId;
            return this;
        }

        public Builder dataSourceId(String dataSourceId) {
            return dataSourceId(Output.of(dataSourceId));
        }

        public Builder enablePhoton(@Nullable Output<Boolean> enablePhoton) {
            $.enablePhoton = enablePhoton;
            return this;
        }

        public Builder enablePhoton(Boolean enablePhoton) {
            return enablePhoton(Output.of(enablePhoton));
        }

        public Builder enableServerlessCompute(@Nullable Output<Boolean> enableServerlessCompute) {
            $.enableServerlessCompute = enableServerlessCompute;
            return this;
        }

        public Builder enableServerlessCompute(Boolean enableServerlessCompute) {
            return enableServerlessCompute(Output.of(enableServerlessCompute));
        }

        public Builder instanceProfileArn(@Nullable Output<String> instanceProfileArn) {
            $.instanceProfileArn = instanceProfileArn;
            return this;
        }

        public Builder instanceProfileArn(String instanceProfileArn) {
            return instanceProfileArn(Output.of(instanceProfileArn));
        }

        public Builder maxNumClusters(@Nullable Output<Integer> maxNumClusters) {
            $.maxNumClusters = maxNumClusters;
            return this;
        }

        public Builder maxNumClusters(Integer maxNumClusters) {
            return maxNumClusters(Output.of(maxNumClusters));
        }

        public Builder minNumClusters(@Nullable Output<Integer> minNumClusters) {
            $.minNumClusters = minNumClusters;
            return this;
        }

        public Builder minNumClusters(Integer minNumClusters) {
            return minNumClusters(Output.of(minNumClusters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder spotInstancePolicy(@Nullable Output<String> spotInstancePolicy) {
            $.spotInstancePolicy = spotInstancePolicy;
            return this;
        }

        public Builder spotInstancePolicy(String spotInstancePolicy) {
            return spotInstancePolicy(Output.of(spotInstancePolicy));
        }

        public Builder tags(@Nullable Output<SqlEndpointTagsArgs> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(SqlEndpointTagsArgs tags) {
            return tags(Output.of(tags));
        }

        public Builder warehouseType(@Nullable Output<String> warehouseType) {
            $.warehouseType = warehouseType;
            return this;
        }

        public Builder warehouseType(String warehouseType) {
            return warehouseType(Output.of(warehouseType));
        }

        public SqlEndpointArgs build() {
            if ($.clusterSize == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "clusterSize");
            }
            return $;
        }
    }

}
