// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryState extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryState Empty = new DirectoryState();

    @Import(name="deleteRecursive")
    private @Nullable Output<Boolean> deleteRecursive;

    public Optional<Output<Boolean>> deleteRecursive() {
        return Optional.ofNullable(this.deleteRecursive);
    }

    @Import(name="objectId")
    private @Nullable Output<Integer> objectId;

    public Optional<Output<Integer>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="workspacePath")
    private @Nullable Output<String> workspacePath;

    public Optional<Output<String>> workspacePath() {
        return Optional.ofNullable(this.workspacePath);
    }

    private DirectoryState() {}

    private DirectoryState(DirectoryState $) {
        this.deleteRecursive = $.deleteRecursive;
        this.objectId = $.objectId;
        this.path = $.path;
        this.workspacePath = $.workspacePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryState $;

        public Builder() {
            $ = new DirectoryState();
        }

        public Builder(DirectoryState defaults) {
            $ = new DirectoryState(Objects.requireNonNull(defaults));
        }

        public Builder deleteRecursive(@Nullable Output<Boolean> deleteRecursive) {
            $.deleteRecursive = deleteRecursive;
            return this;
        }

        public Builder deleteRecursive(Boolean deleteRecursive) {
            return deleteRecursive(Output.of(deleteRecursive));
        }

        public Builder objectId(@Nullable Output<Integer> objectId) {
            $.objectId = objectId;
            return this;
        }

        public Builder objectId(Integer objectId) {
            return objectId(Output.of(objectId));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder workspacePath(@Nullable Output<String> workspacePath) {
            $.workspacePath = workspacePath;
            return this;
        }

        public Builder workspacePath(String workspacePath) {
            return workspacePath(Output.of(workspacePath));
        }

        public DirectoryState build() {
            return $;
        }
    }

}
