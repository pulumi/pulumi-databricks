// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.CleanRoomAssetTableLocalDetailsPartitionArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CleanRoomAssetTableLocalDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CleanRoomAssetTableLocalDetailsArgs Empty = new CleanRoomAssetTableLocalDetailsArgs();

    @Import(name="localName", required=true)
    private Output<String> localName;

    public Output<String> localName() {
        return this.localName;
    }

    /**
     * Partition filtering specification for a shared table
     * 
     */
    @Import(name="partitions")
    private @Nullable Output<List<CleanRoomAssetTableLocalDetailsPartitionArgs>> partitions;

    /**
     * @return Partition filtering specification for a shared table
     * 
     */
    public Optional<Output<List<CleanRoomAssetTableLocalDetailsPartitionArgs>>> partitions() {
        return Optional.ofNullable(this.partitions);
    }

    private CleanRoomAssetTableLocalDetailsArgs() {}

    private CleanRoomAssetTableLocalDetailsArgs(CleanRoomAssetTableLocalDetailsArgs $) {
        this.localName = $.localName;
        this.partitions = $.partitions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CleanRoomAssetTableLocalDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CleanRoomAssetTableLocalDetailsArgs $;

        public Builder() {
            $ = new CleanRoomAssetTableLocalDetailsArgs();
        }

        public Builder(CleanRoomAssetTableLocalDetailsArgs defaults) {
            $ = new CleanRoomAssetTableLocalDetailsArgs(Objects.requireNonNull(defaults));
        }

        public Builder localName(Output<String> localName) {
            $.localName = localName;
            return this;
        }

        public Builder localName(String localName) {
            return localName(Output.of(localName));
        }

        /**
         * @param partitions Partition filtering specification for a shared table
         * 
         * @return builder
         * 
         */
        public Builder partitions(@Nullable Output<List<CleanRoomAssetTableLocalDetailsPartitionArgs>> partitions) {
            $.partitions = partitions;
            return this;
        }

        /**
         * @param partitions Partition filtering specification for a shared table
         * 
         * @return builder
         * 
         */
        public Builder partitions(List<CleanRoomAssetTableLocalDetailsPartitionArgs> partitions) {
            return partitions(Output.of(partitions));
        }

        /**
         * @param partitions Partition filtering specification for a shared table
         * 
         * @return builder
         * 
         */
        public Builder partitions(CleanRoomAssetTableLocalDetailsPartitionArgs... partitions) {
            return partitions(List.of(partitions));
        }

        public CleanRoomAssetTableLocalDetailsArgs build() {
            if ($.localName == null) {
                throw new MissingRequiredPropertyException("CleanRoomAssetTableLocalDetailsArgs", "localName");
            }
            return $;
        }
    }

}
