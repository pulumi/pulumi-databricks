// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.VectorSearchIndexArgs;
import com.pulumi.databricks.inputs.VectorSearchIndexState;
import com.pulumi.databricks.outputs.VectorSearchIndexDeltaSyncIndexSpec;
import com.pulumi.databricks.outputs.VectorSearchIndexDirectAccessIndexSpec;
import com.pulumi.databricks.outputs.VectorSearchIndexStatus;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **Note** This resource could be only used on Unity Catalog-enabled workspace!
 * 
 * This resource allows you to create [Vector Search Index](https://docs.databricks.com/en/generative-ai/create-query-vector-search.html) in Databricks.  Vector Search is a serverless similarity search engine that allows you to store a vector representation of your data, including metadata, in a vector database.  The Vector Search Index provides the ability to search data in the linked Delta Table.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.VectorSearchIndex;
 * import com.pulumi.databricks.VectorSearchIndexArgs;
 * import com.pulumi.databricks.inputs.VectorSearchIndexDeltaSyncIndexSpecArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sync = new VectorSearchIndex(&#34;sync&#34;, VectorSearchIndexArgs.builder()        
 *             .endpointName(databricks_vector_search_endpoint.this().name())
 *             .primaryKey(&#34;id&#34;)
 *             .indexType(&#34;DELTA_SYNC&#34;)
 *             .deltaSyncIndexSpec(VectorSearchIndexDeltaSyncIndexSpecArgs.builder()
 *                 .sourceTable(&#34;main.default.source_table&#34;)
 *                 .pipelineType(&#34;TRIGGERED&#34;)
 *                 .embeddingSourceColumns(VectorSearchIndexDeltaSyncIndexSpecEmbeddingSourceColumnArgs.builder()
 *                     .name(&#34;text&#34;)
 *                     .embeddingModelEndpointName(databricks_model_serving.this().name())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The resource can be imported using the name of the Vector Search Index
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/vectorSearchIndex:VectorSearchIndex this &lt;index-name&gt;
 * ```
 * 
 */
@ResourceType(type="databricks:index/vectorSearchIndex:VectorSearchIndex")
public class VectorSearchIndex extends com.pulumi.resources.CustomResource {
    /**
     * Creator of the endpoint.
     * 
     */
    @Export(name="creator", refs={String.class}, tree="[0]")
    private Output<String> creator;

    /**
     * @return Creator of the endpoint.
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * Specification for Delta Sync Index. Required if `index_type` is `DELTA_SYNC`.
     * 
     */
    @Export(name="deltaSyncIndexSpec", refs={VectorSearchIndexDeltaSyncIndexSpec.class}, tree="[0]")
    private Output</* @Nullable */ VectorSearchIndexDeltaSyncIndexSpec> deltaSyncIndexSpec;

    /**
     * @return Specification for Delta Sync Index. Required if `index_type` is `DELTA_SYNC`.
     * 
     */
    public Output<Optional<VectorSearchIndexDeltaSyncIndexSpec>> deltaSyncIndexSpec() {
        return Codegen.optional(this.deltaSyncIndexSpec);
    }
    /**
     * Specification for Direct Vector Access Index. Required if `index_type` is `DIRECT_ACCESS`.
     * 
     */
    @Export(name="directAccessIndexSpec", refs={VectorSearchIndexDirectAccessIndexSpec.class}, tree="[0]")
    private Output</* @Nullable */ VectorSearchIndexDirectAccessIndexSpec> directAccessIndexSpec;

    /**
     * @return Specification for Direct Vector Access Index. Required if `index_type` is `DIRECT_ACCESS`.
     * 
     */
    public Output<Optional<VectorSearchIndexDirectAccessIndexSpec>> directAccessIndexSpec() {
        return Codegen.optional(this.directAccessIndexSpec);
    }
    /**
     * The name of the Vector Search Endpoint that will be used for indexing the data.
     * 
     */
    @Export(name="endpointName", refs={String.class}, tree="[0]")
    private Output<String> endpointName;

    /**
     * @return The name of the Vector Search Endpoint that will be used for indexing the data.
     * 
     */
    public Output<String> endpointName() {
        return this.endpointName;
    }
    /**
     * Vector Search index type. Currently supported values are:
     * 
     */
    @Export(name="indexType", refs={String.class}, tree="[0]")
    private Output<String> indexType;

    /**
     * @return Vector Search index type. Currently supported values are:
     * 
     */
    public Output<String> indexType() {
        return this.indexType;
    }
    /**
     * The name of the column.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the column.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The column name that will be used as a primary key.
     * 
     */
    @Export(name="primaryKey", refs={String.class}, tree="[0]")
    private Output<String> primaryKey;

    /**
     * @return The column name that will be used as a primary key.
     * 
     */
    public Output<String> primaryKey() {
        return this.primaryKey;
    }
    /**
     * Object describing the current status of the index consisting of the following fields:
     * 
     */
    @Export(name="statuses", refs={List.class,VectorSearchIndexStatus.class}, tree="[0,1]")
    private Output<List<VectorSearchIndexStatus>> statuses;

    /**
     * @return Object describing the current status of the index consisting of the following fields:
     * 
     */
    public Output<List<VectorSearchIndexStatus>> statuses() {
        return this.statuses;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VectorSearchIndex(String name) {
        this(name, VectorSearchIndexArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VectorSearchIndex(String name, VectorSearchIndexArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VectorSearchIndex(String name, VectorSearchIndexArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/vectorSearchIndex:VectorSearchIndex", name, args == null ? VectorSearchIndexArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VectorSearchIndex(String name, Output<String> id, @Nullable VectorSearchIndexState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/vectorSearchIndex:VectorSearchIndex", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VectorSearchIndex get(String name, Output<String> id, @Nullable VectorSearchIndexState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VectorSearchIndex(name, id, state, options);
    }
}
