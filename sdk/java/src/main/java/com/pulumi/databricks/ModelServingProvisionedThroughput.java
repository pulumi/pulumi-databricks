// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.ModelServingProvisionedThroughputArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.ModelServingProvisionedThroughputState;
import com.pulumi.databricks.outputs.ModelServingProvisionedThroughputAiGateway;
import com.pulumi.databricks.outputs.ModelServingProvisionedThroughputConfig;
import com.pulumi.databricks.outputs.ModelServingProvisionedThroughputTag;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to manage [Foundation Model provisioned throughput](https://docs.databricks.com/aws/en/machine-learning/foundation-model-apis/deploy-prov-throughput-foundation-model-apis) endpoints in Databricks.
 * 
 * &gt; This resource is currently in private preview, and only available for enrolled customers.
 * 
 * &gt; This resource can only be used with a workspace-level provider!
 * 
 * ## Example Usage
 * 
 * Creating a Foundation Model provisioned throughput endpoint
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.ModelServingProvisionedThroughput;
 * import com.pulumi.databricks.ModelServingProvisionedThroughputArgs;
 * import com.pulumi.databricks.inputs.ModelServingProvisionedThroughputAiGatewayArgs;
 * import com.pulumi.databricks.inputs.ModelServingProvisionedThroughputAiGatewayUsageTrackingConfigArgs;
 * import com.pulumi.databricks.inputs.ModelServingProvisionedThroughputConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var llama = new ModelServingProvisionedThroughput("llama", ModelServingProvisionedThroughputArgs.builder()
 *             .aiGateway(ModelServingProvisionedThroughputAiGatewayArgs.builder()
 *                 .usageTrackingConfig(ModelServingProvisionedThroughputAiGatewayUsageTrackingConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .config(ModelServingProvisionedThroughputConfigArgs.builder()
 *                 .servedEntities(ModelServingProvisionedThroughputConfigServedEntityArgs.builder()
 *                     .entityName("system.ai.llama-4-maverick")
 *                     .entityVersion("1")
 *                     .provisionedModelUnits(100)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Access Control
 * 
 * * databricks.Permissions can control which groups or individual users can *Manage*, *Query* or *View* individual serving endpoints.
 * 
 * ## Related Resources
 * 
 * The following resources are often used in the same context:
 * 
 * * databricks.ModelServing to create custom and external serving endpoints in Databricks.
 * * databricks.RegisteredModel to create [Models in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html) in Databricks.
 * * End to end workspace management guide.
 * * databricks.Directory to manage directories in [Databricks Workspace](https://docs.databricks.com/workspace/workspace-objects.html).
 * * databricks.MlflowModel to create models in the [workspace model registry](https://docs.databricks.com/en/mlflow/model-registry.html) in Databricks.
 * * databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
 * * databricks.Notebook data to export a notebook from Databricks Workspace.
 * * databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
 * 
 * ## Import
 * 
 * The model serving provisioned throughput resource can be imported using the name of the endpoint:
 * 
 * hcl
 * 
 * import {
 * 
 *   to = databricks_model_serving_provisioned_throughput.this
 * 
 *   id = &#34;&lt;model-serving-endpoint-name&gt;&#34;
 * 
 * }
 * 
 * ```sh
 * $ pulumi import databricks:index/modelServingProvisionedThroughput:ModelServingProvisionedThroughput Alternatively, when using Pulumi version 1.4 or earlier, import using the command:
 * ```
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/modelServingProvisionedThroughput:ModelServingProvisionedThroughput this &lt;model-serving-endpoint-name&gt;
 * ```
 * 
 */
@ResourceType(type="databricks:index/modelServingProvisionedThroughput:ModelServingProvisionedThroughput")
public class ModelServingProvisionedThroughput extends com.pulumi.resources.CustomResource {
    /**
     * A block with AI Gateway configuration for the serving endpoint. *Note: only external model endpoints are supported as of now.*
     * 
     */
    @Export(name="aiGateway", refs={ModelServingProvisionedThroughputAiGateway.class}, tree="[0]")
    private Output</* @Nullable */ ModelServingProvisionedThroughputAiGateway> aiGateway;

    /**
     * @return A block with AI Gateway configuration for the serving endpoint. *Note: only external model endpoints are supported as of now.*
     * 
     */
    public Output<Optional<ModelServingProvisionedThroughputAiGateway>> aiGateway() {
        return Codegen.optional(this.aiGateway);
    }
    /**
     * The Budget Policy ID set for this serving endpoint.
     * 
     */
    @Export(name="budgetPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> budgetPolicyId;

    /**
     * @return The Budget Policy ID set for this serving endpoint.
     * 
     */
    public Output<Optional<String>> budgetPolicyId() {
        return Codegen.optional(this.budgetPolicyId);
    }
    /**
     * The model serving endpoint configuration.
     * 
     */
    @Export(name="config", refs={ModelServingProvisionedThroughputConfig.class}, tree="[0]")
    private Output<ModelServingProvisionedThroughputConfig> config;

    /**
     * @return The model serving endpoint configuration.
     * 
     */
    public Output<ModelServingProvisionedThroughputConfig> config() {
        return this.config;
    }
    /**
     * The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the serving endpoint primarily used to set permissions and refer to this instance for other operations.
     * 
     */
    @Export(name="servingEndpointId", refs={String.class}, tree="[0]")
    private Output<String> servingEndpointId;

    /**
     * @return Unique identifier of the serving endpoint primarily used to set permissions and refer to this instance for other operations.
     * 
     */
    public Output<String> servingEndpointId() {
        return this.servingEndpointId;
    }
    /**
     * Tags to be attached to the serving endpoint and automatically propagated to billing logs.
     * 
     */
    @Export(name="tags", refs={List.class,ModelServingProvisionedThroughputTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ModelServingProvisionedThroughputTag>> tags;

    /**
     * @return Tags to be attached to the serving endpoint and automatically propagated to billing logs.
     * 
     */
    public Output<Optional<List<ModelServingProvisionedThroughputTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ModelServingProvisionedThroughput(java.lang.String name) {
        this(name, ModelServingProvisionedThroughputArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ModelServingProvisionedThroughput(java.lang.String name, ModelServingProvisionedThroughputArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ModelServingProvisionedThroughput(java.lang.String name, ModelServingProvisionedThroughputArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/modelServingProvisionedThroughput:ModelServingProvisionedThroughput", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ModelServingProvisionedThroughput(java.lang.String name, Output<java.lang.String> id, @Nullable ModelServingProvisionedThroughputState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/modelServingProvisionedThroughput:ModelServingProvisionedThroughput", name, state, makeResourceOptions(options, id), false);
    }

    private static ModelServingProvisionedThroughputArgs makeArgs(ModelServingProvisionedThroughputArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ModelServingProvisionedThroughputArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ModelServingProvisionedThroughput get(java.lang.String name, Output<java.lang.String> id, @Nullable ModelServingProvisionedThroughputState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ModelServingProvisionedThroughput(name, id, state, options);
    }
}
