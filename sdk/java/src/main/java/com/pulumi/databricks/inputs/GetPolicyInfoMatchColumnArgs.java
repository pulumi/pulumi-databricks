// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyInfoMatchColumnArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPolicyInfoMatchColumnArgs Empty = new GetPolicyInfoMatchColumnArgs();

    /**
     * (string) - Optional alias of the matched column
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return (string) - Optional alias of the matched column
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * (string) - The condition expression used to match a table column
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return (string) - The condition expression used to match a table column
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    private GetPolicyInfoMatchColumnArgs() {}

    private GetPolicyInfoMatchColumnArgs(GetPolicyInfoMatchColumnArgs $) {
        this.alias = $.alias;
        this.condition = $.condition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyInfoMatchColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyInfoMatchColumnArgs $;

        public Builder() {
            $ = new GetPolicyInfoMatchColumnArgs();
        }

        public Builder(GetPolicyInfoMatchColumnArgs defaults) {
            $ = new GetPolicyInfoMatchColumnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias (string) - Optional alias of the matched column
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias (string) - Optional alias of the matched column
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param condition (string) - The condition expression used to match a table column
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (string) - The condition expression used to match a table column
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        public GetPolicyInfoMatchColumnArgs build() {
            return $;
        }
    }

}
