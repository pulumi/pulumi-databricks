// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTaskPowerBiTaskPowerBiModel {
    /**
     * @return How the published Power BI model authenticates to Databricks
     * 
     */
    private @Nullable String authenticationMethod;
    /**
     * @return The name of the Power BI model
     * 
     */
    private @Nullable String modelName;
    /**
     * @return Whether to overwrite existing Power BI models. Default is false
     * 
     */
    private @Nullable Boolean overwriteExisting;
    /**
     * @return The default storage mode of the Power BI model
     * 
     */
    private @Nullable String storageMode;
    /**
     * @return The name of the Power BI workspace of the model
     * 
     */
    private @Nullable String workspaceName;

    private JobTaskPowerBiTaskPowerBiModel() {}
    /**
     * @return How the published Power BI model authenticates to Databricks
     * 
     */
    public Optional<String> authenticationMethod() {
        return Optional.ofNullable(this.authenticationMethod);
    }
    /**
     * @return The name of the Power BI model
     * 
     */
    public Optional<String> modelName() {
        return Optional.ofNullable(this.modelName);
    }
    /**
     * @return Whether to overwrite existing Power BI models. Default is false
     * 
     */
    public Optional<Boolean> overwriteExisting() {
        return Optional.ofNullable(this.overwriteExisting);
    }
    /**
     * @return The default storage mode of the Power BI model
     * 
     */
    public Optional<String> storageMode() {
        return Optional.ofNullable(this.storageMode);
    }
    /**
     * @return The name of the Power BI workspace of the model
     * 
     */
    public Optional<String> workspaceName() {
        return Optional.ofNullable(this.workspaceName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTaskPowerBiTaskPowerBiModel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authenticationMethod;
        private @Nullable String modelName;
        private @Nullable Boolean overwriteExisting;
        private @Nullable String storageMode;
        private @Nullable String workspaceName;
        public Builder() {}
        public Builder(JobTaskPowerBiTaskPowerBiModel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationMethod = defaults.authenticationMethod;
    	      this.modelName = defaults.modelName;
    	      this.overwriteExisting = defaults.overwriteExisting;
    	      this.storageMode = defaults.storageMode;
    	      this.workspaceName = defaults.workspaceName;
        }

        @CustomType.Setter
        public Builder authenticationMethod(@Nullable String authenticationMethod) {

            this.authenticationMethod = authenticationMethod;
            return this;
        }
        @CustomType.Setter
        public Builder modelName(@Nullable String modelName) {

            this.modelName = modelName;
            return this;
        }
        @CustomType.Setter
        public Builder overwriteExisting(@Nullable Boolean overwriteExisting) {

            this.overwriteExisting = overwriteExisting;
            return this;
        }
        @CustomType.Setter
        public Builder storageMode(@Nullable String storageMode) {

            this.storageMode = storageMode;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceName(@Nullable String workspaceName) {

            this.workspaceName = workspaceName;
            return this;
        }
        public JobTaskPowerBiTaskPowerBiModel build() {
            final var _resultValue = new JobTaskPowerBiTaskPowerBiModel();
            _resultValue.authenticationMethod = authenticationMethod;
            _resultValue.modelName = modelName;
            _resultValue.overwriteExisting = overwriteExisting;
            _resultValue.storageMode = storageMode;
            _resultValue.workspaceName = workspaceName;
            return _resultValue;
        }
    }
}
