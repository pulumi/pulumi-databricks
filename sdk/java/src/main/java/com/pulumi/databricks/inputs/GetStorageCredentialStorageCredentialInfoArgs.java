// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetStorageCredentialStorageCredentialInfoAwsIamRoleArgs;
import com.pulumi.databricks.inputs.GetStorageCredentialStorageCredentialInfoAzureManagedIdentityArgs;
import com.pulumi.databricks.inputs.GetStorageCredentialStorageCredentialInfoAzureServicePrincipalArgs;
import com.pulumi.databricks.inputs.GetStorageCredentialStorageCredentialInfoCloudflareApiTokenArgs;
import com.pulumi.databricks.inputs.GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStorageCredentialStorageCredentialInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetStorageCredentialStorageCredentialInfoArgs Empty = new GetStorageCredentialStorageCredentialInfoArgs();

    @Import(name="awsIamRole")
    private @Nullable Output<GetStorageCredentialStorageCredentialInfoAwsIamRoleArgs> awsIamRole;

    public Optional<Output<GetStorageCredentialStorageCredentialInfoAwsIamRoleArgs>> awsIamRole() {
        return Optional.ofNullable(this.awsIamRole);
    }

    @Import(name="azureManagedIdentity")
    private @Nullable Output<GetStorageCredentialStorageCredentialInfoAzureManagedIdentityArgs> azureManagedIdentity;

    public Optional<Output<GetStorageCredentialStorageCredentialInfoAzureManagedIdentityArgs>> azureManagedIdentity() {
        return Optional.ofNullable(this.azureManagedIdentity);
    }

    @Import(name="azureServicePrincipal")
    private @Nullable Output<GetStorageCredentialStorageCredentialInfoAzureServicePrincipalArgs> azureServicePrincipal;

    public Optional<Output<GetStorageCredentialStorageCredentialInfoAzureServicePrincipalArgs>> azureServicePrincipal() {
        return Optional.ofNullable(this.azureServicePrincipal);
    }

    @Import(name="cloudflareApiToken")
    private @Nullable Output<GetStorageCredentialStorageCredentialInfoCloudflareApiTokenArgs> cloudflareApiToken;

    public Optional<Output<GetStorageCredentialStorageCredentialInfoCloudflareApiTokenArgs>> cloudflareApiToken() {
        return Optional.ofNullable(this.cloudflareApiToken);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdAt")
    private @Nullable Output<Integer> createdAt;

    public Optional<Output<Integer>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    @Import(name="databricksGcpServiceAccount")
    private @Nullable Output<GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountArgs> databricksGcpServiceAccount;

    public Optional<Output<GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountArgs>> databricksGcpServiceAccount() {
        return Optional.ofNullable(this.databricksGcpServiceAccount);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Unique identifier of the parent Metastore.
     * 
     */
    @Import(name="metastoreId")
    private @Nullable Output<String> metastoreId;

    /**
     * @return Unique identifier of the parent Metastore.
     * 
     */
    public Optional<Output<String>> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }

    /**
     * The name of the storage credential
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the storage credential
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Username/groupname/sp application_id of the storage credential owner.
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    /**
     * @return Username/groupname/sp application_id of the storage credential owner.
     * 
     */
    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * Indicates whether the storage credential is only usable for read operations.
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    /**
     * @return Indicates whether the storage credential is only usable for read operations.
     * 
     */
    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    @Import(name="updatedAt")
    private @Nullable Output<Integer> updatedAt;

    public Optional<Output<Integer>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="updatedBy")
    private @Nullable Output<String> updatedBy;

    public Optional<Output<String>> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    @Import(name="usedForManagedStorage")
    private @Nullable Output<Boolean> usedForManagedStorage;

    public Optional<Output<Boolean>> usedForManagedStorage() {
        return Optional.ofNullable(this.usedForManagedStorage);
    }

    private GetStorageCredentialStorageCredentialInfoArgs() {}

    private GetStorageCredentialStorageCredentialInfoArgs(GetStorageCredentialStorageCredentialInfoArgs $) {
        this.awsIamRole = $.awsIamRole;
        this.azureManagedIdentity = $.azureManagedIdentity;
        this.azureServicePrincipal = $.azureServicePrincipal;
        this.cloudflareApiToken = $.cloudflareApiToken;
        this.comment = $.comment;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.databricksGcpServiceAccount = $.databricksGcpServiceAccount;
        this.id = $.id;
        this.metastoreId = $.metastoreId;
        this.name = $.name;
        this.owner = $.owner;
        this.readOnly = $.readOnly;
        this.updatedAt = $.updatedAt;
        this.updatedBy = $.updatedBy;
        this.usedForManagedStorage = $.usedForManagedStorage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageCredentialStorageCredentialInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageCredentialStorageCredentialInfoArgs $;

        public Builder() {
            $ = new GetStorageCredentialStorageCredentialInfoArgs();
        }

        public Builder(GetStorageCredentialStorageCredentialInfoArgs defaults) {
            $ = new GetStorageCredentialStorageCredentialInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsIamRole(@Nullable Output<GetStorageCredentialStorageCredentialInfoAwsIamRoleArgs> awsIamRole) {
            $.awsIamRole = awsIamRole;
            return this;
        }

        public Builder awsIamRole(GetStorageCredentialStorageCredentialInfoAwsIamRoleArgs awsIamRole) {
            return awsIamRole(Output.of(awsIamRole));
        }

        public Builder azureManagedIdentity(@Nullable Output<GetStorageCredentialStorageCredentialInfoAzureManagedIdentityArgs> azureManagedIdentity) {
            $.azureManagedIdentity = azureManagedIdentity;
            return this;
        }

        public Builder azureManagedIdentity(GetStorageCredentialStorageCredentialInfoAzureManagedIdentityArgs azureManagedIdentity) {
            return azureManagedIdentity(Output.of(azureManagedIdentity));
        }

        public Builder azureServicePrincipal(@Nullable Output<GetStorageCredentialStorageCredentialInfoAzureServicePrincipalArgs> azureServicePrincipal) {
            $.azureServicePrincipal = azureServicePrincipal;
            return this;
        }

        public Builder azureServicePrincipal(GetStorageCredentialStorageCredentialInfoAzureServicePrincipalArgs azureServicePrincipal) {
            return azureServicePrincipal(Output.of(azureServicePrincipal));
        }

        public Builder cloudflareApiToken(@Nullable Output<GetStorageCredentialStorageCredentialInfoCloudflareApiTokenArgs> cloudflareApiToken) {
            $.cloudflareApiToken = cloudflareApiToken;
            return this;
        }

        public Builder cloudflareApiToken(GetStorageCredentialStorageCredentialInfoCloudflareApiTokenArgs cloudflareApiToken) {
            return cloudflareApiToken(Output.of(cloudflareApiToken));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder createdAt(@Nullable Output<Integer> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(Integer createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        public Builder databricksGcpServiceAccount(@Nullable Output<GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountArgs> databricksGcpServiceAccount) {
            $.databricksGcpServiceAccount = databricksGcpServiceAccount;
            return this;
        }

        public Builder databricksGcpServiceAccount(GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountArgs databricksGcpServiceAccount) {
            return databricksGcpServiceAccount(Output.of(databricksGcpServiceAccount));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param metastoreId Unique identifier of the parent Metastore.
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(@Nullable Output<String> metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        /**
         * @param metastoreId Unique identifier of the parent Metastore.
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(String metastoreId) {
            return metastoreId(Output.of(metastoreId));
        }

        /**
         * @param name The name of the storage credential
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the storage credential
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param owner Username/groupname/sp application_id of the storage credential owner.
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner Username/groupname/sp application_id of the storage credential owner.
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param readOnly Indicates whether the storage credential is only usable for read operations.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        /**
         * @param readOnly Indicates whether the storage credential is only usable for read operations.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder updatedAt(@Nullable Output<Integer> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(Integer updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public Builder updatedBy(@Nullable Output<String> updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        public Builder updatedBy(String updatedBy) {
            return updatedBy(Output.of(updatedBy));
        }

        public Builder usedForManagedStorage(@Nullable Output<Boolean> usedForManagedStorage) {
            $.usedForManagedStorage = usedForManagedStorage;
            return this;
        }

        public Builder usedForManagedStorage(Boolean usedForManagedStorage) {
            return usedForManagedStorage(Output.of(usedForManagedStorage));
        }

        public GetStorageCredentialStorageCredentialInfoArgs build() {
            return $;
        }
    }

}
