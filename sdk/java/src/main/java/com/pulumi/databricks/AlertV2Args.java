// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.AlertV2EvaluationArgs;
import com.pulumi.databricks.inputs.AlertV2RunAsArgs;
import com.pulumi.databricks.inputs.AlertV2ScheduleArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertV2Args extends com.pulumi.resources.ResourceArgs {

    public static final AlertV2Args Empty = new AlertV2Args();

    /**
     * Custom description for the alert. support mustache template
     * 
     */
    @Import(name="customDescription")
    private @Nullable Output<String> customDescription;

    /**
     * @return Custom description for the alert. support mustache template
     * 
     */
    public Optional<Output<String>> customDescription() {
        return Optional.ofNullable(this.customDescription);
    }

    /**
     * Custom summary for the alert. support mustache template
     * 
     */
    @Import(name="customSummary")
    private @Nullable Output<String> customSummary;

    /**
     * @return Custom summary for the alert. support mustache template
     * 
     */
    public Optional<Output<String>> customSummary() {
        return Optional.ofNullable(this.customSummary);
    }

    /**
     * The display name of the alert
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the alert
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="evaluation")
    private @Nullable Output<AlertV2EvaluationArgs> evaluation;

    public Optional<Output<AlertV2EvaluationArgs>> evaluation() {
        return Optional.ofNullable(this.evaluation);
    }

    /**
     * The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
     * 
     */
    @Import(name="parentPath")
    private @Nullable Output<String> parentPath;

    /**
     * @return The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
     * 
     */
    public Optional<Output<String>> parentPath() {
        return Optional.ofNullable(this.parentPath);
    }

    /**
     * Text of the query to be run
     * 
     */
    @Import(name="queryText")
    private @Nullable Output<String> queryText;

    /**
     * @return Text of the query to be run
     * 
     */
    public Optional<Output<String>> queryText() {
        return Optional.ofNullable(this.queryText);
    }

    /**
     * Specifies the identity that will be used to run the alert.
     * This field allows you to configure alerts to run as a specific user or service principal.
     * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
     * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
     *   If not specified, the alert will run as the request user
     * 
     */
    @Import(name="runAs")
    private @Nullable Output<AlertV2RunAsArgs> runAs;

    /**
     * @return Specifies the identity that will be used to run the alert.
     * This field allows you to configure alerts to run as a specific user or service principal.
     * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
     * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
     *   If not specified, the alert will run as the request user
     * 
     */
    public Optional<Output<AlertV2RunAsArgs>> runAs() {
        return Optional.ofNullable(this.runAs);
    }

    /**
     * The run as username or application ID of service principal.
     * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
     * Deprecated: Use `runAs` field instead. This field will be removed in a future release
     * 
     */
    @Import(name="runAsUserName")
    private @Nullable Output<String> runAsUserName;

    /**
     * @return The run as username or application ID of service principal.
     * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
     * Deprecated: Use `runAs` field instead. This field will be removed in a future release
     * 
     */
    public Optional<Output<String>> runAsUserName() {
        return Optional.ofNullable(this.runAsUserName);
    }

    @Import(name="schedule")
    private @Nullable Output<AlertV2ScheduleArgs> schedule;

    public Optional<Output<AlertV2ScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * ID of the SQL warehouse attached to the alert
     * 
     */
    @Import(name="warehouseId")
    private @Nullable Output<String> warehouseId;

    /**
     * @return ID of the SQL warehouse attached to the alert
     * 
     */
    public Optional<Output<String>> warehouseId() {
        return Optional.ofNullable(this.warehouseId);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private AlertV2Args() {}

    private AlertV2Args(AlertV2Args $) {
        this.customDescription = $.customDescription;
        this.customSummary = $.customSummary;
        this.displayName = $.displayName;
        this.evaluation = $.evaluation;
        this.parentPath = $.parentPath;
        this.queryText = $.queryText;
        this.runAs = $.runAs;
        this.runAsUserName = $.runAsUserName;
        this.schedule = $.schedule;
        this.warehouseId = $.warehouseId;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertV2Args $;

        public Builder() {
            $ = new AlertV2Args();
        }

        public Builder(AlertV2Args defaults) {
            $ = new AlertV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDescription Custom description for the alert. support mustache template
         * 
         * @return builder
         * 
         */
        public Builder customDescription(@Nullable Output<String> customDescription) {
            $.customDescription = customDescription;
            return this;
        }

        /**
         * @param customDescription Custom description for the alert. support mustache template
         * 
         * @return builder
         * 
         */
        public Builder customDescription(String customDescription) {
            return customDescription(Output.of(customDescription));
        }

        /**
         * @param customSummary Custom summary for the alert. support mustache template
         * 
         * @return builder
         * 
         */
        public Builder customSummary(@Nullable Output<String> customSummary) {
            $.customSummary = customSummary;
            return this;
        }

        /**
         * @param customSummary Custom summary for the alert. support mustache template
         * 
         * @return builder
         * 
         */
        public Builder customSummary(String customSummary) {
            return customSummary(Output.of(customSummary));
        }

        /**
         * @param displayName The display name of the alert
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the alert
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder evaluation(@Nullable Output<AlertV2EvaluationArgs> evaluation) {
            $.evaluation = evaluation;
            return this;
        }

        public Builder evaluation(AlertV2EvaluationArgs evaluation) {
            return evaluation(Output.of(evaluation));
        }

        /**
         * @param parentPath The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
         * 
         * @return builder
         * 
         */
        public Builder parentPath(@Nullable Output<String> parentPath) {
            $.parentPath = parentPath;
            return this;
        }

        /**
         * @param parentPath The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
         * 
         * @return builder
         * 
         */
        public Builder parentPath(String parentPath) {
            return parentPath(Output.of(parentPath));
        }

        /**
         * @param queryText Text of the query to be run
         * 
         * @return builder
         * 
         */
        public Builder queryText(@Nullable Output<String> queryText) {
            $.queryText = queryText;
            return this;
        }

        /**
         * @param queryText Text of the query to be run
         * 
         * @return builder
         * 
         */
        public Builder queryText(String queryText) {
            return queryText(Output.of(queryText));
        }

        /**
         * @param runAs Specifies the identity that will be used to run the alert.
         * This field allows you to configure alerts to run as a specific user or service principal.
         * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
         * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
         *   If not specified, the alert will run as the request user
         * 
         * @return builder
         * 
         */
        public Builder runAs(@Nullable Output<AlertV2RunAsArgs> runAs) {
            $.runAs = runAs;
            return this;
        }

        /**
         * @param runAs Specifies the identity that will be used to run the alert.
         * This field allows you to configure alerts to run as a specific user or service principal.
         * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
         * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
         *   If not specified, the alert will run as the request user
         * 
         * @return builder
         * 
         */
        public Builder runAs(AlertV2RunAsArgs runAs) {
            return runAs(Output.of(runAs));
        }

        /**
         * @param runAsUserName The run as username or application ID of service principal.
         * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
         * Deprecated: Use `runAs` field instead. This field will be removed in a future release
         * 
         * @return builder
         * 
         */
        public Builder runAsUserName(@Nullable Output<String> runAsUserName) {
            $.runAsUserName = runAsUserName;
            return this;
        }

        /**
         * @param runAsUserName The run as username or application ID of service principal.
         * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
         * Deprecated: Use `runAs` field instead. This field will be removed in a future release
         * 
         * @return builder
         * 
         */
        public Builder runAsUserName(String runAsUserName) {
            return runAsUserName(Output.of(runAsUserName));
        }

        public Builder schedule(@Nullable Output<AlertV2ScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(AlertV2ScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param warehouseId ID of the SQL warehouse attached to the alert
         * 
         * @return builder
         * 
         */
        public Builder warehouseId(@Nullable Output<String> warehouseId) {
            $.warehouseId = warehouseId;
            return this;
        }

        /**
         * @param warehouseId ID of the SQL warehouse attached to the alert
         * 
         * @return builder
         * 
         */
        public Builder warehouseId(String warehouseId) {
            return warehouseId(Output.of(warehouseId));
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public AlertV2Args build() {
            return $;
        }
    }

}
