// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus;
import com.pulumi.databricks.outputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatus;
import com.pulumi.databricks.outputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSync;
import com.pulumi.databricks.outputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusProvisioningStatus;
import com.pulumi.databricks.outputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusTriggeredUpdateStatus;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseSyncedDatabaseTableDataSynchronizationStatus {
    private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus continuousUpdateStatus;
    /**
     * @return (string) - The state of the synced table. Possible values are: `SYNCED_TABLED_OFFLINE`, `SYNCED_TABLE_OFFLINE_FAILED`, `SYNCED_TABLE_ONLINE`, `SYNCED_TABLE_ONLINE_CONTINUOUS_UPDATE`, `SYNCED_TABLE_ONLINE_NO_PENDING_UPDATE`, `SYNCED_TABLE_ONLINE_PIPELINE_FAILED`, `SYNCED_TABLE_ONLINE_TRIGGERED_UPDATE`, `SYNCED_TABLE_ONLINE_UPDATING_PIPELINE_RESOURCES`, `SYNCED_TABLE_PROVISIONING`, `SYNCED_TABLE_PROVISIONING_INITIAL_SNAPSHOT`, `SYNCED_TABLE_PROVISIONING_PIPELINE_RESOURCES`
     * 
     */
    private @Nullable String detailedState;
    private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatus failedStatus;
    /**
     * @return (SyncedTablePosition) - Summary of the last successful synchronization from source to destination.
     * 
     */
    private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSync lastSync;
    /**
     * @return (string) - A text description of the current state of the synced table
     * 
     */
    private @Nullable String message;
    /**
     * @return (string) - ID of the associated pipeline. The pipeline ID may have been provided by the client
     * (in the case of bin packing), or generated by the server (when creating a new pipeline)
     * 
     */
    private @Nullable String pipelineId;
    private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusProvisioningStatus provisioningStatus;
    private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusTriggeredUpdateStatus triggeredUpdateStatus;

    private DatabaseSyncedDatabaseTableDataSynchronizationStatus() {}
    public Optional<DatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus> continuousUpdateStatus() {
        return Optional.ofNullable(this.continuousUpdateStatus);
    }
    /**
     * @return (string) - The state of the synced table. Possible values are: `SYNCED_TABLED_OFFLINE`, `SYNCED_TABLE_OFFLINE_FAILED`, `SYNCED_TABLE_ONLINE`, `SYNCED_TABLE_ONLINE_CONTINUOUS_UPDATE`, `SYNCED_TABLE_ONLINE_NO_PENDING_UPDATE`, `SYNCED_TABLE_ONLINE_PIPELINE_FAILED`, `SYNCED_TABLE_ONLINE_TRIGGERED_UPDATE`, `SYNCED_TABLE_ONLINE_UPDATING_PIPELINE_RESOURCES`, `SYNCED_TABLE_PROVISIONING`, `SYNCED_TABLE_PROVISIONING_INITIAL_SNAPSHOT`, `SYNCED_TABLE_PROVISIONING_PIPELINE_RESOURCES`
     * 
     */
    public Optional<String> detailedState() {
        return Optional.ofNullable(this.detailedState);
    }
    public Optional<DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatus> failedStatus() {
        return Optional.ofNullable(this.failedStatus);
    }
    /**
     * @return (SyncedTablePosition) - Summary of the last successful synchronization from source to destination.
     * 
     */
    public Optional<DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSync> lastSync() {
        return Optional.ofNullable(this.lastSync);
    }
    /**
     * @return (string) - A text description of the current state of the synced table
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    /**
     * @return (string) - ID of the associated pipeline. The pipeline ID may have been provided by the client
     * (in the case of bin packing), or generated by the server (when creating a new pipeline)
     * 
     */
    public Optional<String> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }
    public Optional<DatabaseSyncedDatabaseTableDataSynchronizationStatusProvisioningStatus> provisioningStatus() {
        return Optional.ofNullable(this.provisioningStatus);
    }
    public Optional<DatabaseSyncedDatabaseTableDataSynchronizationStatusTriggeredUpdateStatus> triggeredUpdateStatus() {
        return Optional.ofNullable(this.triggeredUpdateStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseSyncedDatabaseTableDataSynchronizationStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus continuousUpdateStatus;
        private @Nullable String detailedState;
        private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatus failedStatus;
        private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSync lastSync;
        private @Nullable String message;
        private @Nullable String pipelineId;
        private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusProvisioningStatus provisioningStatus;
        private @Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusTriggeredUpdateStatus triggeredUpdateStatus;
        public Builder() {}
        public Builder(DatabaseSyncedDatabaseTableDataSynchronizationStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.continuousUpdateStatus = defaults.continuousUpdateStatus;
    	      this.detailedState = defaults.detailedState;
    	      this.failedStatus = defaults.failedStatus;
    	      this.lastSync = defaults.lastSync;
    	      this.message = defaults.message;
    	      this.pipelineId = defaults.pipelineId;
    	      this.provisioningStatus = defaults.provisioningStatus;
    	      this.triggeredUpdateStatus = defaults.triggeredUpdateStatus;
        }

        @CustomType.Setter
        public Builder continuousUpdateStatus(@Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusContinuousUpdateStatus continuousUpdateStatus) {

            this.continuousUpdateStatus = continuousUpdateStatus;
            return this;
        }
        @CustomType.Setter
        public Builder detailedState(@Nullable String detailedState) {

            this.detailedState = detailedState;
            return this;
        }
        @CustomType.Setter
        public Builder failedStatus(@Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatus failedStatus) {

            this.failedStatus = failedStatus;
            return this;
        }
        @CustomType.Setter
        public Builder lastSync(@Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSync lastSync) {

            this.lastSync = lastSync;
            return this;
        }
        @CustomType.Setter
        public Builder message(@Nullable String message) {

            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(@Nullable String pipelineId) {

            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningStatus(@Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusProvisioningStatus provisioningStatus) {

            this.provisioningStatus = provisioningStatus;
            return this;
        }
        @CustomType.Setter
        public Builder triggeredUpdateStatus(@Nullable DatabaseSyncedDatabaseTableDataSynchronizationStatusTriggeredUpdateStatus triggeredUpdateStatus) {

            this.triggeredUpdateStatus = triggeredUpdateStatus;
            return this;
        }
        public DatabaseSyncedDatabaseTableDataSynchronizationStatus build() {
            final var _resultValue = new DatabaseSyncedDatabaseTableDataSynchronizationStatus();
            _resultValue.continuousUpdateStatus = continuousUpdateStatus;
            _resultValue.detailedState = detailedState;
            _resultValue.failedStatus = failedStatus;
            _resultValue.lastSync = lastSync;
            _resultValue.message = message;
            _resultValue.pipelineId = pipelineId;
            _resultValue.provisioningStatus = provisioningStatus;
            _resultValue.triggeredUpdateStatus = triggeredUpdateStatus;
            return _resultValue;
        }
    }
}
