// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecretAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretAclArgs Empty = new SecretAclArgs();

    /**
     * `READ`, `WRITE` or `MANAGE`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return `READ`, `WRITE` or `MANAGE`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    /**
     * principal&#39;s identifier. It can be:
     * 
     */
    @Import(name="principal", required=true)
    private Output<String> principal;

    /**
     * @return principal&#39;s identifier. It can be:
     * 
     */
    public Output<String> principal() {
        return this.principal;
    }

    /**
     * name of the scope
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return name of the scope
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private SecretAclArgs() {}

    private SecretAclArgs(SecretAclArgs $) {
        this.permission = $.permission;
        this.principal = $.principal;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretAclArgs $;

        public Builder() {
            $ = new SecretAclArgs();
        }

        public Builder(SecretAclArgs defaults) {
            $ = new SecretAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permission `READ`, `WRITE` or `MANAGE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission `READ`, `WRITE` or `MANAGE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param principal principal&#39;s identifier. It can be:
         * 
         * @return builder
         * 
         */
        public Builder principal(Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal principal&#39;s identifier. It can be:
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param scope name of the scope
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope name of the scope
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public SecretAclArgs build() {
            $.permission = Objects.requireNonNull($.permission, "expected parameter 'permission' to be non-null");
            $.principal = Objects.requireNonNull($.principal, "expected parameter 'principal' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            return $;
        }
    }

}
