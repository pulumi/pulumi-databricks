// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AppResourceDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppResourceDatabaseArgs Empty = new AppResourceDatabaseArgs();

    /**
     * The name of database.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of database.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The name of database instance.
     * 
     */
    @Import(name="instanceName", required=true)
    private Output<String> instanceName;

    /**
     * @return The name of database instance.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }

    /**
     * Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private AppResourceDatabaseArgs() {}

    private AppResourceDatabaseArgs(AppResourceDatabaseArgs $) {
        this.databaseName = $.databaseName;
        this.instanceName = $.instanceName;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppResourceDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppResourceDatabaseArgs $;

        public Builder() {
            $ = new AppResourceDatabaseArgs();
        }

        public Builder(AppResourceDatabaseArgs defaults) {
            $ = new AppResourceDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name of database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param instanceName The name of database instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of database instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param permission Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Permission to grant on database. Supported permissions are: `CAN_CONNECT_AND_CREATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public AppResourceDatabaseArgs build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("AppResourceDatabaseArgs", "databaseName");
            }
            if ($.instanceName == null) {
                throw new MissingRequiredPropertyException("AppResourceDatabaseArgs", "instanceName");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("AppResourceDatabaseArgs", "permission");
            }
            return $;
        }
    }

}
