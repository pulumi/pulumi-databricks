// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.InstancePoolAwsAttributesArgs;
import com.pulumi.databricks.inputs.InstancePoolAzureAttributesArgs;
import com.pulumi.databricks.inputs.InstancePoolDiskSpecArgs;
import com.pulumi.databricks.inputs.InstancePoolGcpAttributesArgs;
import com.pulumi.databricks.inputs.InstancePoolInstancePoolFleetAttributesArgs;
import com.pulumi.databricks.inputs.InstancePoolPreloadedDockerImageArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePoolState extends com.pulumi.resources.ResourceArgs {

    public static final InstancePoolState Empty = new InstancePoolState();

    @Import(name="awsAttributes")
    private @Nullable Output<InstancePoolAwsAttributesArgs> awsAttributes;

    public Optional<Output<InstancePoolAwsAttributesArgs>> awsAttributes() {
        return Optional.ofNullable(this.awsAttributes);
    }

    @Import(name="azureAttributes")
    private @Nullable Output<InstancePoolAzureAttributesArgs> azureAttributes;

    public Optional<Output<InstancePoolAzureAttributesArgs>> azureAttributes() {
        return Optional.ofNullable(this.azureAttributes);
    }

    @Import(name="customTags")
    private @Nullable Output<Map<String,String>> customTags;

    public Optional<Output<Map<String,String>>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    @Import(name="diskSpec")
    private @Nullable Output<InstancePoolDiskSpecArgs> diskSpec;

    public Optional<Output<InstancePoolDiskSpecArgs>> diskSpec() {
        return Optional.ofNullable(this.diskSpec);
    }

    @Import(name="enableElasticDisk")
    private @Nullable Output<Boolean> enableElasticDisk;

    public Optional<Output<Boolean>> enableElasticDisk() {
        return Optional.ofNullable(this.enableElasticDisk);
    }

    @Import(name="gcpAttributes")
    private @Nullable Output<InstancePoolGcpAttributesArgs> gcpAttributes;

    public Optional<Output<InstancePoolGcpAttributesArgs>> gcpAttributes() {
        return Optional.ofNullable(this.gcpAttributes);
    }

    @Import(name="idleInstanceAutoterminationMinutes")
    private @Nullable Output<Integer> idleInstanceAutoterminationMinutes;

    public Optional<Output<Integer>> idleInstanceAutoterminationMinutes() {
        return Optional.ofNullable(this.idleInstanceAutoterminationMinutes);
    }

    @Import(name="instancePoolFleetAttributes")
    private @Nullable Output<InstancePoolInstancePoolFleetAttributesArgs> instancePoolFleetAttributes;

    public Optional<Output<InstancePoolInstancePoolFleetAttributesArgs>> instancePoolFleetAttributes() {
        return Optional.ofNullable(this.instancePoolFleetAttributes);
    }

    @Import(name="instancePoolId")
    private @Nullable Output<String> instancePoolId;

    public Optional<Output<String>> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }

    @Import(name="instancePoolName")
    private @Nullable Output<String> instancePoolName;

    public Optional<Output<String>> instancePoolName() {
        return Optional.ofNullable(this.instancePoolName);
    }

    @Import(name="maxCapacity")
    private @Nullable Output<Integer> maxCapacity;

    public Optional<Output<Integer>> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }

    @Import(name="minIdleInstances")
    private @Nullable Output<Integer> minIdleInstances;

    public Optional<Output<Integer>> minIdleInstances() {
        return Optional.ofNullable(this.minIdleInstances);
    }

    @Import(name="nodeTypeId")
    private @Nullable Output<String> nodeTypeId;

    public Optional<Output<String>> nodeTypeId() {
        return Optional.ofNullable(this.nodeTypeId);
    }

    @Import(name="preloadedDockerImages")
    private @Nullable Output<List<InstancePoolPreloadedDockerImageArgs>> preloadedDockerImages;

    public Optional<Output<List<InstancePoolPreloadedDockerImageArgs>>> preloadedDockerImages() {
        return Optional.ofNullable(this.preloadedDockerImages);
    }

    @Import(name="preloadedSparkVersions")
    private @Nullable Output<List<String>> preloadedSparkVersions;

    public Optional<Output<List<String>>> preloadedSparkVersions() {
        return Optional.ofNullable(this.preloadedSparkVersions);
    }

    private InstancePoolState() {}

    private InstancePoolState(InstancePoolState $) {
        this.awsAttributes = $.awsAttributes;
        this.azureAttributes = $.azureAttributes;
        this.customTags = $.customTags;
        this.diskSpec = $.diskSpec;
        this.enableElasticDisk = $.enableElasticDisk;
        this.gcpAttributes = $.gcpAttributes;
        this.idleInstanceAutoterminationMinutes = $.idleInstanceAutoterminationMinutes;
        this.instancePoolFleetAttributes = $.instancePoolFleetAttributes;
        this.instancePoolId = $.instancePoolId;
        this.instancePoolName = $.instancePoolName;
        this.maxCapacity = $.maxCapacity;
        this.minIdleInstances = $.minIdleInstances;
        this.nodeTypeId = $.nodeTypeId;
        this.preloadedDockerImages = $.preloadedDockerImages;
        this.preloadedSparkVersions = $.preloadedSparkVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePoolState $;

        public Builder() {
            $ = new InstancePoolState();
        }

        public Builder(InstancePoolState defaults) {
            $ = new InstancePoolState(Objects.requireNonNull(defaults));
        }

        public Builder awsAttributes(@Nullable Output<InstancePoolAwsAttributesArgs> awsAttributes) {
            $.awsAttributes = awsAttributes;
            return this;
        }

        public Builder awsAttributes(InstancePoolAwsAttributesArgs awsAttributes) {
            return awsAttributes(Output.of(awsAttributes));
        }

        public Builder azureAttributes(@Nullable Output<InstancePoolAzureAttributesArgs> azureAttributes) {
            $.azureAttributes = azureAttributes;
            return this;
        }

        public Builder azureAttributes(InstancePoolAzureAttributesArgs azureAttributes) {
            return azureAttributes(Output.of(azureAttributes));
        }

        public Builder customTags(@Nullable Output<Map<String,String>> customTags) {
            $.customTags = customTags;
            return this;
        }

        public Builder customTags(Map<String,String> customTags) {
            return customTags(Output.of(customTags));
        }

        public Builder diskSpec(@Nullable Output<InstancePoolDiskSpecArgs> diskSpec) {
            $.diskSpec = diskSpec;
            return this;
        }

        public Builder diskSpec(InstancePoolDiskSpecArgs diskSpec) {
            return diskSpec(Output.of(diskSpec));
        }

        public Builder enableElasticDisk(@Nullable Output<Boolean> enableElasticDisk) {
            $.enableElasticDisk = enableElasticDisk;
            return this;
        }

        public Builder enableElasticDisk(Boolean enableElasticDisk) {
            return enableElasticDisk(Output.of(enableElasticDisk));
        }

        public Builder gcpAttributes(@Nullable Output<InstancePoolGcpAttributesArgs> gcpAttributes) {
            $.gcpAttributes = gcpAttributes;
            return this;
        }

        public Builder gcpAttributes(InstancePoolGcpAttributesArgs gcpAttributes) {
            return gcpAttributes(Output.of(gcpAttributes));
        }

        public Builder idleInstanceAutoterminationMinutes(@Nullable Output<Integer> idleInstanceAutoterminationMinutes) {
            $.idleInstanceAutoterminationMinutes = idleInstanceAutoterminationMinutes;
            return this;
        }

        public Builder idleInstanceAutoterminationMinutes(Integer idleInstanceAutoterminationMinutes) {
            return idleInstanceAutoterminationMinutes(Output.of(idleInstanceAutoterminationMinutes));
        }

        public Builder instancePoolFleetAttributes(@Nullable Output<InstancePoolInstancePoolFleetAttributesArgs> instancePoolFleetAttributes) {
            $.instancePoolFleetAttributes = instancePoolFleetAttributes;
            return this;
        }

        public Builder instancePoolFleetAttributes(InstancePoolInstancePoolFleetAttributesArgs instancePoolFleetAttributes) {
            return instancePoolFleetAttributes(Output.of(instancePoolFleetAttributes));
        }

        public Builder instancePoolId(@Nullable Output<String> instancePoolId) {
            $.instancePoolId = instancePoolId;
            return this;
        }

        public Builder instancePoolId(String instancePoolId) {
            return instancePoolId(Output.of(instancePoolId));
        }

        public Builder instancePoolName(@Nullable Output<String> instancePoolName) {
            $.instancePoolName = instancePoolName;
            return this;
        }

        public Builder instancePoolName(String instancePoolName) {
            return instancePoolName(Output.of(instancePoolName));
        }

        public Builder maxCapacity(@Nullable Output<Integer> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        public Builder maxCapacity(Integer maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        public Builder minIdleInstances(@Nullable Output<Integer> minIdleInstances) {
            $.minIdleInstances = minIdleInstances;
            return this;
        }

        public Builder minIdleInstances(Integer minIdleInstances) {
            return minIdleInstances(Output.of(minIdleInstances));
        }

        public Builder nodeTypeId(@Nullable Output<String> nodeTypeId) {
            $.nodeTypeId = nodeTypeId;
            return this;
        }

        public Builder nodeTypeId(String nodeTypeId) {
            return nodeTypeId(Output.of(nodeTypeId));
        }

        public Builder preloadedDockerImages(@Nullable Output<List<InstancePoolPreloadedDockerImageArgs>> preloadedDockerImages) {
            $.preloadedDockerImages = preloadedDockerImages;
            return this;
        }

        public Builder preloadedDockerImages(List<InstancePoolPreloadedDockerImageArgs> preloadedDockerImages) {
            return preloadedDockerImages(Output.of(preloadedDockerImages));
        }

        public Builder preloadedDockerImages(InstancePoolPreloadedDockerImageArgs... preloadedDockerImages) {
            return preloadedDockerImages(List.of(preloadedDockerImages));
        }

        public Builder preloadedSparkVersions(@Nullable Output<List<String>> preloadedSparkVersions) {
            $.preloadedSparkVersions = preloadedSparkVersions;
            return this;
        }

        public Builder preloadedSparkVersions(List<String> preloadedSparkVersions) {
            return preloadedSparkVersions(Output.of(preloadedSparkVersions));
        }

        public Builder preloadedSparkVersions(String... preloadedSparkVersions) {
            return preloadedSparkVersions(List.of(preloadedSparkVersions));
        }

        public InstancePoolState build() {
            return $;
        }
    }

}
