// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyMode;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess {
    private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination> allowedInternetDestinations;
    private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination> allowedStorageDestinations;
    /**
     * @return Optional. If not specified, assume the policy is enforced for all workloads
     * 
     */
    private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyMode logOnlyMode;
    /**
     * @return . Possible values are: `FULL_ACCESS`, `PRIVATE_ACCESS_ONLY`, `RESTRICTED_ACCESS`
     * 
     */
    private @Nullable String restrictionMode;

    private CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess() {}
    public List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination> allowedInternetDestinations() {
        return this.allowedInternetDestinations == null ? List.of() : this.allowedInternetDestinations;
    }
    public List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination> allowedStorageDestinations() {
        return this.allowedStorageDestinations == null ? List.of() : this.allowedStorageDestinations;
    }
    /**
     * @return Optional. If not specified, assume the policy is enforced for all workloads
     * 
     */
    public Optional<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyMode> logOnlyMode() {
        return Optional.ofNullable(this.logOnlyMode);
    }
    /**
     * @return . Possible values are: `FULL_ACCESS`, `PRIVATE_ACCESS_ONLY`, `RESTRICTED_ACCESS`
     * 
     */
    public Optional<String> restrictionMode() {
        return Optional.ofNullable(this.restrictionMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination> allowedInternetDestinations;
        private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination> allowedStorageDestinations;
        private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyMode logOnlyMode;
        private @Nullable String restrictionMode;
        public Builder() {}
        public Builder(CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedInternetDestinations = defaults.allowedInternetDestinations;
    	      this.allowedStorageDestinations = defaults.allowedStorageDestinations;
    	      this.logOnlyMode = defaults.logOnlyMode;
    	      this.restrictionMode = defaults.restrictionMode;
        }

        @CustomType.Setter
        public Builder allowedInternetDestinations(@Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination> allowedInternetDestinations) {

            this.allowedInternetDestinations = allowedInternetDestinations;
            return this;
        }
        public Builder allowedInternetDestinations(CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestination... allowedInternetDestinations) {
            return allowedInternetDestinations(List.of(allowedInternetDestinations));
        }
        @CustomType.Setter
        public Builder allowedStorageDestinations(@Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination> allowedStorageDestinations) {

            this.allowedStorageDestinations = allowedStorageDestinations;
            return this;
        }
        public Builder allowedStorageDestinations(CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestination... allowedStorageDestinations) {
            return allowedStorageDestinations(List.of(allowedStorageDestinations));
        }
        @CustomType.Setter
        public Builder logOnlyMode(@Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyMode logOnlyMode) {

            this.logOnlyMode = logOnlyMode;
            return this;
        }
        @CustomType.Setter
        public Builder restrictionMode(@Nullable String restrictionMode) {

            this.restrictionMode = restrictionMode;
            return this;
        }
        public CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess build() {
            final var _resultValue = new CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccess();
            _resultValue.allowedInternetDestinations = allowedInternetDestinations;
            _resultValue.allowedStorageDestinations = allowedStorageDestinations;
            _resultValue.logOnlyMode = logOnlyMode;
            _resultValue.restrictionMode = restrictionMode;
            return _resultValue;
        }
    }
}
