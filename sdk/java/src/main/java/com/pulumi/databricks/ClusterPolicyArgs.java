// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.ClusterPolicyLibraryArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterPolicyArgs Empty = new ClusterPolicyArgs();

    /**
     * Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition). Cannot be used with `policy_family_id`
     * 
     */
    @Import(name="definition")
    private @Nullable Output<String> definition;

    /**
     * @return Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition). Cannot be used with `policy_family_id`
     * 
     */
    public Optional<Output<String>> definition() {
        return Optional.ofNullable(this.definition);
    }

    /**
     * Additional human-readable description of the cluster policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Additional human-readable description of the cluster policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks.Cluster for more details about supported library types.
     * 
     */
    @Import(name="libraries")
    private @Nullable Output<List<ClusterPolicyLibraryArgs>> libraries;

    /**
     * @return blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks.Cluster for more details about supported library types.
     * 
     */
    public Optional<Output<List<ClusterPolicyLibraryArgs>>> libraries() {
        return Optional.ofNullable(this.libraries);
    }

    /**
     * Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
     * 
     */
    @Import(name="maxClustersPerUser")
    private @Nullable Output<Integer> maxClustersPerUser;

    /**
     * @return Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
     * 
     */
    public Optional<Output<Integer>> maxClustersPerUser() {
        return Optional.ofNullable(this.maxClustersPerUser);
    }

    /**
     * Cluster policy name. This must be unique. Length must be between 1 and 100 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Cluster policy name. This must be unique. Length must be between 1 and 100 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Policy definition JSON document expressed in Databricks Policy Definition Language. The JSON document must be passed as a string and cannot be embedded in the requests. You can use this to customize the policy definition inherited from the policy family. Policy rules specified here are merged into the inherited policy definition.
     * 
     */
    @Import(name="policyFamilyDefinitionOverrides")
    private @Nullable Output<String> policyFamilyDefinitionOverrides;

    /**
     * @return Policy definition JSON document expressed in Databricks Policy Definition Language. The JSON document must be passed as a string and cannot be embedded in the requests. You can use this to customize the policy definition inherited from the policy family. Policy rules specified here are merged into the inherited policy definition.
     * 
     */
    public Optional<Output<String>> policyFamilyDefinitionOverrides() {
        return Optional.ofNullable(this.policyFamilyDefinitionOverrides);
    }

    /**
     * ID of the policy family. The cluster policy&#39;s policy definition inherits the policy family&#39;s policy definition. Cannot be used with `definition`. Use `policy_family_definition_overrides` instead to customize the policy definition.
     * 
     */
    @Import(name="policyFamilyId")
    private @Nullable Output<String> policyFamilyId;

    /**
     * @return ID of the policy family. The cluster policy&#39;s policy definition inherits the policy family&#39;s policy definition. Cannot be used with `definition`. Use `policy_family_definition_overrides` instead to customize the policy definition.
     * 
     */
    public Optional<Output<String>> policyFamilyId() {
        return Optional.ofNullable(this.policyFamilyId);
    }

    private ClusterPolicyArgs() {}

    private ClusterPolicyArgs(ClusterPolicyArgs $) {
        this.definition = $.definition;
        this.description = $.description;
        this.libraries = $.libraries;
        this.maxClustersPerUser = $.maxClustersPerUser;
        this.name = $.name;
        this.policyFamilyDefinitionOverrides = $.policyFamilyDefinitionOverrides;
        this.policyFamilyId = $.policyFamilyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterPolicyArgs $;

        public Builder() {
            $ = new ClusterPolicyArgs();
        }

        public Builder(ClusterPolicyArgs defaults) {
            $ = new ClusterPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definition Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition). Cannot be used with `policy_family_id`
         * 
         * @return builder
         * 
         */
        public Builder definition(@Nullable Output<String> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition Policy definition: JSON document expressed in [Databricks Policy Definition Language](https://docs.databricks.com/administration-guide/clusters/policies.html#cluster-policy-definition). Cannot be used with `policy_family_id`
         * 
         * @return builder
         * 
         */
        public Builder definition(String definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param description Additional human-readable description of the cluster policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Additional human-readable description of the cluster policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param libraries blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks.Cluster for more details about supported library types.
         * 
         * @return builder
         * 
         */
        public Builder libraries(@Nullable Output<List<ClusterPolicyLibraryArgs>> libraries) {
            $.libraries = libraries;
            return this;
        }

        /**
         * @param libraries blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks.Cluster for more details about supported library types.
         * 
         * @return builder
         * 
         */
        public Builder libraries(List<ClusterPolicyLibraryArgs> libraries) {
            return libraries(Output.of(libraries));
        }

        /**
         * @param libraries blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks.Cluster for more details about supported library types.
         * 
         * @return builder
         * 
         */
        public Builder libraries(ClusterPolicyLibraryArgs... libraries) {
            return libraries(List.of(libraries));
        }

        /**
         * @param maxClustersPerUser Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
         * 
         * @return builder
         * 
         */
        public Builder maxClustersPerUser(@Nullable Output<Integer> maxClustersPerUser) {
            $.maxClustersPerUser = maxClustersPerUser;
            return this;
        }

        /**
         * @param maxClustersPerUser Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
         * 
         * @return builder
         * 
         */
        public Builder maxClustersPerUser(Integer maxClustersPerUser) {
            return maxClustersPerUser(Output.of(maxClustersPerUser));
        }

        /**
         * @param name Cluster policy name. This must be unique. Length must be between 1 and 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Cluster policy name. This must be unique. Length must be between 1 and 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyFamilyDefinitionOverrides Policy definition JSON document expressed in Databricks Policy Definition Language. The JSON document must be passed as a string and cannot be embedded in the requests. You can use this to customize the policy definition inherited from the policy family. Policy rules specified here are merged into the inherited policy definition.
         * 
         * @return builder
         * 
         */
        public Builder policyFamilyDefinitionOverrides(@Nullable Output<String> policyFamilyDefinitionOverrides) {
            $.policyFamilyDefinitionOverrides = policyFamilyDefinitionOverrides;
            return this;
        }

        /**
         * @param policyFamilyDefinitionOverrides Policy definition JSON document expressed in Databricks Policy Definition Language. The JSON document must be passed as a string and cannot be embedded in the requests. You can use this to customize the policy definition inherited from the policy family. Policy rules specified here are merged into the inherited policy definition.
         * 
         * @return builder
         * 
         */
        public Builder policyFamilyDefinitionOverrides(String policyFamilyDefinitionOverrides) {
            return policyFamilyDefinitionOverrides(Output.of(policyFamilyDefinitionOverrides));
        }

        /**
         * @param policyFamilyId ID of the policy family. The cluster policy&#39;s policy definition inherits the policy family&#39;s policy definition. Cannot be used with `definition`. Use `policy_family_definition_overrides` instead to customize the policy definition.
         * 
         * @return builder
         * 
         */
        public Builder policyFamilyId(@Nullable Output<String> policyFamilyId) {
            $.policyFamilyId = policyFamilyId;
            return this;
        }

        /**
         * @param policyFamilyId ID of the policy family. The cluster policy&#39;s policy definition inherits the policy family&#39;s policy definition. Cannot be used with `definition`. Use `policy_family_definition_overrides` instead to customize the policy definition.
         * 
         * @return builder
         * 
         */
        public Builder policyFamilyId(String policyFamilyId) {
            return policyFamilyId(Output.of(policyFamilyId));
        }

        public ClusterPolicyArgs build() {
            return $;
        }
    }

}
