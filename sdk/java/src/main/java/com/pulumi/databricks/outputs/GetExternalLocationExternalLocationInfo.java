// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetExternalLocationExternalLocationInfoEncryptionDetails;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalLocationExternalLocationInfo {
    private @Nullable String accessPoint;
    private @Nullable Boolean browseOnly;
    private @Nullable String comment;
    private @Nullable Integer createdAt;
    private @Nullable String createdBy;
    private @Nullable String credentialId;
    private @Nullable String credentialName;
    private @Nullable GetExternalLocationExternalLocationInfoEncryptionDetails encryptionDetails;
    private @Nullable Boolean fallback;
    private @Nullable String isolationMode;
    private @Nullable String metastoreId;
    private @Nullable String name;
    private @Nullable String owner;
    private @Nullable Boolean readOnly;
    private @Nullable Integer updatedAt;
    private @Nullable String updatedBy;
    private @Nullable String url;

    private GetExternalLocationExternalLocationInfo() {}
    public Optional<String> accessPoint() {
        return Optional.ofNullable(this.accessPoint);
    }
    public Optional<Boolean> browseOnly() {
        return Optional.ofNullable(this.browseOnly);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    public Optional<String> credentialId() {
        return Optional.ofNullable(this.credentialId);
    }
    public Optional<String> credentialName() {
        return Optional.ofNullable(this.credentialName);
    }
    public Optional<GetExternalLocationExternalLocationInfoEncryptionDetails> encryptionDetails() {
        return Optional.ofNullable(this.encryptionDetails);
    }
    public Optional<Boolean> fallback() {
        return Optional.ofNullable(this.fallback);
    }
    public Optional<String> isolationMode() {
        return Optional.ofNullable(this.isolationMode);
    }
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    public Optional<Integer> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }
    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalLocationExternalLocationInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessPoint;
        private @Nullable Boolean browseOnly;
        private @Nullable String comment;
        private @Nullable Integer createdAt;
        private @Nullable String createdBy;
        private @Nullable String credentialId;
        private @Nullable String credentialName;
        private @Nullable GetExternalLocationExternalLocationInfoEncryptionDetails encryptionDetails;
        private @Nullable Boolean fallback;
        private @Nullable String isolationMode;
        private @Nullable String metastoreId;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable Boolean readOnly;
        private @Nullable Integer updatedAt;
        private @Nullable String updatedBy;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetExternalLocationExternalLocationInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPoint = defaults.accessPoint;
    	      this.browseOnly = defaults.browseOnly;
    	      this.comment = defaults.comment;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.credentialId = defaults.credentialId;
    	      this.credentialName = defaults.credentialName;
    	      this.encryptionDetails = defaults.encryptionDetails;
    	      this.fallback = defaults.fallback;
    	      this.isolationMode = defaults.isolationMode;
    	      this.metastoreId = defaults.metastoreId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.readOnly = defaults.readOnly;
    	      this.updatedAt = defaults.updatedAt;
    	      this.updatedBy = defaults.updatedBy;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder accessPoint(@Nullable String accessPoint) {

            this.accessPoint = accessPoint;
            return this;
        }
        @CustomType.Setter
        public Builder browseOnly(@Nullable Boolean browseOnly) {

            this.browseOnly = browseOnly;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable Integer createdAt) {

            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {

            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder credentialId(@Nullable String credentialId) {

            this.credentialId = credentialId;
            return this;
        }
        @CustomType.Setter
        public Builder credentialName(@Nullable String credentialName) {

            this.credentialName = credentialName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionDetails(@Nullable GetExternalLocationExternalLocationInfoEncryptionDetails encryptionDetails) {

            this.encryptionDetails = encryptionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder fallback(@Nullable Boolean fallback) {

            this.fallback = fallback;
            return this;
        }
        @CustomType.Setter
        public Builder isolationMode(@Nullable String isolationMode) {

            this.isolationMode = isolationMode;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {

            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable Integer updatedAt) {

            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable String updatedBy) {

            this.updatedBy = updatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public GetExternalLocationExternalLocationInfo build() {
            final var _resultValue = new GetExternalLocationExternalLocationInfo();
            _resultValue.accessPoint = accessPoint;
            _resultValue.browseOnly = browseOnly;
            _resultValue.comment = comment;
            _resultValue.createdAt = createdAt;
            _resultValue.createdBy = createdBy;
            _resultValue.credentialId = credentialId;
            _resultValue.credentialName = credentialName;
            _resultValue.encryptionDetails = encryptionDetails;
            _resultValue.fallback = fallback;
            _resultValue.isolationMode = isolationMode;
            _resultValue.metastoreId = metastoreId;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.readOnly = readOnly;
            _resultValue.updatedAt = updatedAt;
            _resultValue.updatedBy = updatedBy;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
