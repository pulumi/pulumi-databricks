// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.PolicyInfoRowFilterUsingArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyInfoRowFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyInfoRowFilterArgs Empty = new PolicyInfoRowFilterArgs();

    @Import(name="functionName", required=true)
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    @Import(name="usings")
    private @Nullable Output<List<PolicyInfoRowFilterUsingArgs>> usings;

    public Optional<Output<List<PolicyInfoRowFilterUsingArgs>>> usings() {
        return Optional.ofNullable(this.usings);
    }

    private PolicyInfoRowFilterArgs() {}

    private PolicyInfoRowFilterArgs(PolicyInfoRowFilterArgs $) {
        this.functionName = $.functionName;
        this.usings = $.usings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyInfoRowFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyInfoRowFilterArgs $;

        public Builder() {
            $ = new PolicyInfoRowFilterArgs();
        }

        public Builder(PolicyInfoRowFilterArgs defaults) {
            $ = new PolicyInfoRowFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder usings(@Nullable Output<List<PolicyInfoRowFilterUsingArgs>> usings) {
            $.usings = usings;
            return this;
        }

        public Builder usings(List<PolicyInfoRowFilterUsingArgs> usings) {
            return usings(Output.of(usings));
        }

        public Builder usings(PolicyInfoRowFilterUsingArgs... usings) {
            return usings(List.of(usings));
        }

        public PolicyInfoRowFilterArgs build() {
            if ($.functionName == null) {
                throw new MissingRequiredPropertyException("PolicyInfoRowFilterArgs", "functionName");
            }
            return $;
        }
    }

}
