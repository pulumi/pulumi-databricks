// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AppResourceSqlWarehouseArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppResourceSqlWarehouseArgs Empty = new AppResourceSqlWarehouseArgs();

    /**
     * Id of the SQL warehouse to grant permission on.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Id of the SQL warehouse to grant permission on.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Permission to grant on the SQL warehouse. Supported permissions are: `CAN_MANAGE`, `CAN_USE`, `IS_OWNER`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Permission to grant on the SQL warehouse. Supported permissions are: `CAN_MANAGE`, `CAN_USE`, `IS_OWNER`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private AppResourceSqlWarehouseArgs() {}

    private AppResourceSqlWarehouseArgs(AppResourceSqlWarehouseArgs $) {
        this.id = $.id;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppResourceSqlWarehouseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppResourceSqlWarehouseArgs $;

        public Builder() {
            $ = new AppResourceSqlWarehouseArgs();
        }

        public Builder(AppResourceSqlWarehouseArgs defaults) {
            $ = new AppResourceSqlWarehouseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Id of the SQL warehouse to grant permission on.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Id of the SQL warehouse to grant permission on.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param permission Permission to grant on the SQL warehouse. Supported permissions are: `CAN_MANAGE`, `CAN_USE`, `IS_OWNER`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Permission to grant on the SQL warehouse. Supported permissions are: `CAN_MANAGE`, `CAN_USE`, `IS_OWNER`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public AppResourceSqlWarehouseArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AppResourceSqlWarehouseArgs", "id");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("AppResourceSqlWarehouseArgs", "permission");
            }
            return $;
        }
    }

}
