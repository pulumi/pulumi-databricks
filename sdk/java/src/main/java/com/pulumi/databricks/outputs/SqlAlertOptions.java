// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlAlertOptions {
    private String column;
    private @Nullable String customBody;
    private @Nullable String customSubject;
    private @Nullable String emptyResultState;
    private @Nullable Boolean muted;
    private String op;
    private String value;

    private SqlAlertOptions() {}
    public String column() {
        return this.column;
    }
    public Optional<String> customBody() {
        return Optional.ofNullable(this.customBody);
    }
    public Optional<String> customSubject() {
        return Optional.ofNullable(this.customSubject);
    }
    public Optional<String> emptyResultState() {
        return Optional.ofNullable(this.emptyResultState);
    }
    public Optional<Boolean> muted() {
        return Optional.ofNullable(this.muted);
    }
    public String op() {
        return this.op;
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlAlertOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String column;
        private @Nullable String customBody;
        private @Nullable String customSubject;
        private @Nullable String emptyResultState;
        private @Nullable Boolean muted;
        private String op;
        private String value;
        public Builder() {}
        public Builder(SqlAlertOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.customBody = defaults.customBody;
    	      this.customSubject = defaults.customSubject;
    	      this.emptyResultState = defaults.emptyResultState;
    	      this.muted = defaults.muted;
    	      this.op = defaults.op;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder column(String column) {
            if (column == null) {
              throw new MissingRequiredPropertyException("SqlAlertOptions", "column");
            }
            this.column = column;
            return this;
        }
        @CustomType.Setter
        public Builder customBody(@Nullable String customBody) {

            this.customBody = customBody;
            return this;
        }
        @CustomType.Setter
        public Builder customSubject(@Nullable String customSubject) {

            this.customSubject = customSubject;
            return this;
        }
        @CustomType.Setter
        public Builder emptyResultState(@Nullable String emptyResultState) {

            this.emptyResultState = emptyResultState;
            return this;
        }
        @CustomType.Setter
        public Builder muted(@Nullable Boolean muted) {

            this.muted = muted;
            return this;
        }
        @CustomType.Setter
        public Builder op(String op) {
            if (op == null) {
              throw new MissingRequiredPropertyException("SqlAlertOptions", "op");
            }
            this.op = op;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("SqlAlertOptions", "value");
            }
            this.value = value;
            return this;
        }
        public SqlAlertOptions build() {
            final var _resultValue = new SqlAlertOptions();
            _resultValue.column = column;
            _resultValue.customBody = customBody;
            _resultValue.customSubject = customSubject;
            _resultValue.emptyResultState = emptyResultState;
            _resultValue.muted = muted;
            _resultValue.op = op;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
