// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetPolicyInfosPolicy;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyInfosResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (string) - Full name of the securable on which the policy is defined.
     * Required on create and ignored on update
     * 
     */
    private String onSecurableFullname;
    /**
     * @return (string) - Type of the securable on which the policy is defined.
     * Only `CATALOG`, `SCHEMA` and `TABLE` are supported at this moment.
     * Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
     * 
     */
    private String onSecurableType;
    private List<GetPolicyInfosPolicy> policies;
    private @Nullable String workspaceId;

    private GetPolicyInfosResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (string) - Full name of the securable on which the policy is defined.
     * Required on create and ignored on update
     * 
     */
    public String onSecurableFullname() {
        return this.onSecurableFullname;
    }
    /**
     * @return (string) - Type of the securable on which the policy is defined.
     * Only `CATALOG`, `SCHEMA` and `TABLE` are supported at this moment.
     * Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
     * 
     */
    public String onSecurableType() {
        return this.onSecurableType;
    }
    public List<GetPolicyInfosPolicy> policies() {
        return this.policies;
    }
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyInfosResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String onSecurableFullname;
        private String onSecurableType;
        private List<GetPolicyInfosPolicy> policies;
        private @Nullable String workspaceId;
        public Builder() {}
        public Builder(GetPolicyInfosResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.onSecurableFullname = defaults.onSecurableFullname;
    	      this.onSecurableType = defaults.onSecurableType;
    	      this.policies = defaults.policies;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPolicyInfosResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder onSecurableFullname(String onSecurableFullname) {
            if (onSecurableFullname == null) {
              throw new MissingRequiredPropertyException("GetPolicyInfosResult", "onSecurableFullname");
            }
            this.onSecurableFullname = onSecurableFullname;
            return this;
        }
        @CustomType.Setter
        public Builder onSecurableType(String onSecurableType) {
            if (onSecurableType == null) {
              throw new MissingRequiredPropertyException("GetPolicyInfosResult", "onSecurableType");
            }
            this.onSecurableType = onSecurableType;
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<GetPolicyInfosPolicy> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetPolicyInfosResult", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(GetPolicyInfosPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder workspaceId(@Nullable String workspaceId) {

            this.workspaceId = workspaceId;
            return this;
        }
        public GetPolicyInfosResult build() {
            final var _resultValue = new GetPolicyInfosResult();
            _resultValue.id = id;
            _resultValue.onSecurableFullname = onSecurableFullname;
            _resultValue.onSecurableType = onSecurableType;
            _resultValue.policies = policies;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
