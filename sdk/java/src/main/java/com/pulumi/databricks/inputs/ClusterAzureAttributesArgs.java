// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAzureAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAzureAttributesArgs Empty = new ClusterAzureAttributesArgs();

    /**
     * Availability type used for all subsequent nodes past the `first_on_demand` ones. Valid values are `SPOT_AZURE`, `SPOT_WITH_FALLBACK_AZURE`, and `ON_DEMAND_AZURE`. Note: If `first_on_demand` is zero, this availability type will be used for the entire cluster.
     * 
     */
    @Import(name="availability")
    private @Nullable Output<String> availability;

    /**
     * @return Availability type used for all subsequent nodes past the `first_on_demand` ones. Valid values are `SPOT_AZURE`, `SPOT_WITH_FALLBACK_AZURE`, and `ON_DEMAND_AZURE`. Note: If `first_on_demand` is zero, this availability type will be used for the entire cluster.
     * 
     */
    public Optional<Output<String>> availability() {
        return Optional.ofNullable(this.availability);
    }

    /**
     * The first `first_on_demand` nodes of the cluster will be placed on on-demand instances. If this value is greater than 0, the cluster driver node will be placed on an on-demand instance. If this value is greater than or equal to the current cluster size, all nodes will be placed on on-demand instances. If this value is less than the current cluster size, `first_on_demand` nodes will be placed on on-demand instances, and the remainder will be placed on availability instances. This value does not affect cluster size and cannot be mutated over the lifetime of a cluster.
     * 
     */
    @Import(name="firstOnDemand")
    private @Nullable Output<Integer> firstOnDemand;

    /**
     * @return The first `first_on_demand` nodes of the cluster will be placed on on-demand instances. If this value is greater than 0, the cluster driver node will be placed on an on-demand instance. If this value is greater than or equal to the current cluster size, all nodes will be placed on on-demand instances. If this value is less than the current cluster size, `first_on_demand` nodes will be placed on on-demand instances, and the remainder will be placed on availability instances. This value does not affect cluster size and cannot be mutated over the lifetime of a cluster.
     * 
     */
    public Optional<Output<Integer>> firstOnDemand() {
        return Optional.ofNullable(this.firstOnDemand);
    }

    /**
     * The max price for Azure spot instances.  Use `-1` to specify the lowest price.
     * 
     */
    @Import(name="spotBidMaxPrice")
    private @Nullable Output<Double> spotBidMaxPrice;

    /**
     * @return The max price for Azure spot instances.  Use `-1` to specify the lowest price.
     * 
     */
    public Optional<Output<Double>> spotBidMaxPrice() {
        return Optional.ofNullable(this.spotBidMaxPrice);
    }

    private ClusterAzureAttributesArgs() {}

    private ClusterAzureAttributesArgs(ClusterAzureAttributesArgs $) {
        this.availability = $.availability;
        this.firstOnDemand = $.firstOnDemand;
        this.spotBidMaxPrice = $.spotBidMaxPrice;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAzureAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAzureAttributesArgs $;

        public Builder() {
            $ = new ClusterAzureAttributesArgs();
        }

        public Builder(ClusterAzureAttributesArgs defaults) {
            $ = new ClusterAzureAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availability Availability type used for all subsequent nodes past the `first_on_demand` ones. Valid values are `SPOT_AZURE`, `SPOT_WITH_FALLBACK_AZURE`, and `ON_DEMAND_AZURE`. Note: If `first_on_demand` is zero, this availability type will be used for the entire cluster.
         * 
         * @return builder
         * 
         */
        public Builder availability(@Nullable Output<String> availability) {
            $.availability = availability;
            return this;
        }

        /**
         * @param availability Availability type used for all subsequent nodes past the `first_on_demand` ones. Valid values are `SPOT_AZURE`, `SPOT_WITH_FALLBACK_AZURE`, and `ON_DEMAND_AZURE`. Note: If `first_on_demand` is zero, this availability type will be used for the entire cluster.
         * 
         * @return builder
         * 
         */
        public Builder availability(String availability) {
            return availability(Output.of(availability));
        }

        /**
         * @param firstOnDemand The first `first_on_demand` nodes of the cluster will be placed on on-demand instances. If this value is greater than 0, the cluster driver node will be placed on an on-demand instance. If this value is greater than or equal to the current cluster size, all nodes will be placed on on-demand instances. If this value is less than the current cluster size, `first_on_demand` nodes will be placed on on-demand instances, and the remainder will be placed on availability instances. This value does not affect cluster size and cannot be mutated over the lifetime of a cluster.
         * 
         * @return builder
         * 
         */
        public Builder firstOnDemand(@Nullable Output<Integer> firstOnDemand) {
            $.firstOnDemand = firstOnDemand;
            return this;
        }

        /**
         * @param firstOnDemand The first `first_on_demand` nodes of the cluster will be placed on on-demand instances. If this value is greater than 0, the cluster driver node will be placed on an on-demand instance. If this value is greater than or equal to the current cluster size, all nodes will be placed on on-demand instances. If this value is less than the current cluster size, `first_on_demand` nodes will be placed on on-demand instances, and the remainder will be placed on availability instances. This value does not affect cluster size and cannot be mutated over the lifetime of a cluster.
         * 
         * @return builder
         * 
         */
        public Builder firstOnDemand(Integer firstOnDemand) {
            return firstOnDemand(Output.of(firstOnDemand));
        }

        /**
         * @param spotBidMaxPrice The max price for Azure spot instances.  Use `-1` to specify the lowest price.
         * 
         * @return builder
         * 
         */
        public Builder spotBidMaxPrice(@Nullable Output<Double> spotBidMaxPrice) {
            $.spotBidMaxPrice = spotBidMaxPrice;
            return this;
        }

        /**
         * @param spotBidMaxPrice The max price for Azure spot instances.  Use `-1` to specify the lowest price.
         * 
         * @return builder
         * 
         */
        public Builder spotBidMaxPrice(Double spotBidMaxPrice) {
            return spotBidMaxPrice(Output.of(spotBidMaxPrice));
        }

        public ClusterAzureAttributesArgs build() {
            return $;
        }
    }

}
