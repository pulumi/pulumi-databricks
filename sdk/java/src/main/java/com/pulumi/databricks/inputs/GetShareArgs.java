// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetShareObjectArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetShareArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetShareArgs Empty = new GetShareArgs();

    /**
     * Time when the share was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<Integer> createdAt;

    /**
     * @return Time when the share was created.
     * 
     */
    public Optional<Output<Integer>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The principal that created the share.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The principal that created the share.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The name of the share
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the share
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * arrays containing details of each object in the share.
     * 
     */
    @Import(name="objects")
    private @Nullable Output<List<GetShareObjectArgs>> objects;

    /**
     * @return arrays containing details of each object in the share.
     * 
     */
    public Optional<Output<List<GetShareObjectArgs>>> objects() {
        return Optional.ofNullable(this.objects);
    }

    private GetShareArgs() {}

    private GetShareArgs(GetShareArgs $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.name = $.name;
        this.objects = $.objects;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetShareArgs $;

        public Builder() {
            $ = new GetShareArgs();
        }

        public Builder(GetShareArgs defaults) {
            $ = new GetShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Time when the share was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<Integer> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Time when the share was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(Integer createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy The principal that created the share.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The principal that created the share.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param name The name of the share
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the share
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objects arrays containing details of each object in the share.
         * 
         * @return builder
         * 
         */
        public Builder objects(@Nullable Output<List<GetShareObjectArgs>> objects) {
            $.objects = objects;
            return this;
        }

        /**
         * @param objects arrays containing details of each object in the share.
         * 
         * @return builder
         * 
         */
        public Builder objects(List<GetShareObjectArgs> objects) {
            return objects(Output.of(objects));
        }

        /**
         * @param objects arrays containing details of each object in the share.
         * 
         * @return builder
         * 
         */
        public Builder objects(GetShareObjectArgs... objects) {
            return objects(List.of(objects));
        }

        public GetShareArgs build() {
            return $;
        }
    }

}
