// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.ExternalMetadataArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.ExternalMetadataState;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * To enrich lineage with workloads that are run outside of Databricks (for example, first mile ETL or last mile BI),
 * Unity Catalog is introducing the external metadata object. UC lets you add external metadata objects to augment the data lineage it captures automatically, giving you an end-to-end lineage view in UC.
 * This is useful when you want to capture where data came from (for example, Salesforce or MySQL) before it was ingested into UC or where data is being consumed outside UC (for example, Tableau or PowerBI).
 * 
 * &gt; **Note** This resource can only be used with an workspace-level provider!
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.ExternalMetadata;
 * import com.pulumi.databricks.ExternalMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new ExternalMetadata("this", ExternalMetadataArgs.builder()
 *             .name("security_events_stream")
 *             .systemType("KAFKA")
 *             .entityType("Topic")
 *             .url("https://kafka.com/12345")
 *             .description("A stream of security related events in the critical services.")
 *             .columns(            
 *                 "type",
 *                 "message",
 *                 "details",
 *                 "date",
 *                 "time")
 *             .properties(Map.ofEntries(
 *                 Map.entry("topic", "prod.security.events.raw"),
 *                 Map.entry("enabled", "true"),
 *                 Map.entry("format", "zstd")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * As of Pulumi v1.5, resources can be imported through configuration.
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;name&#34;
 * 
 *   to = databricks_external_metadata.this
 * 
 * }
 * 
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 * 
 * ```sh
 * $ pulumi import databricks:index/externalMetadata:ExternalMetadata databricks_external_metadata &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/externalMetadata:ExternalMetadata")
public class ExternalMetadata extends com.pulumi.resources.CustomResource {
    /**
     * List of columns associated with the external metadata object
     * 
     */
    @Export(name="columns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> columns;

    /**
     * @return List of columns associated with the external metadata object
     * 
     */
    public Output<Optional<List<String>>> columns() {
        return Codegen.optional(this.columns);
    }
    /**
     * (string) - Time at which this external metadata object was created
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (string) - Time at which this external metadata object was created
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * (string) - Username of external metadata object creator
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return (string) - Username of external metadata object creator
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * User-provided free-form text description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return User-provided free-form text description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Type of entity within the external system
     * 
     */
    @Export(name="entityType", refs={String.class}, tree="[0]")
    private Output<String> entityType;

    /**
     * @return Type of entity within the external system
     * 
     */
    public Output<String> entityType() {
        return this.entityType;
    }
    /**
     * (string) - Unique identifier of parent metastore
     * 
     */
    @Export(name="metastoreId", refs={String.class}, tree="[0]")
    private Output<String> metastoreId;

    /**
     * @return (string) - Unique identifier of parent metastore
     * 
     */
    public Output<String> metastoreId() {
        return this.metastoreId;
    }
    /**
     * Name of the external metadata object
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the external metadata object
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Owner of the external metadata object
     * 
     */
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> owner;

    /**
     * @return Owner of the external metadata object
     * 
     */
    public Output<Optional<String>> owner() {
        return Codegen.optional(this.owner);
    }
    /**
     * A map of key-value properties attached to the external metadata object
     * 
     */
    @Export(name="properties", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> properties;

    /**
     * @return A map of key-value properties attached to the external metadata object
     * 
     */
    public Output<Optional<Map<String,String>>> properties() {
        return Codegen.optional(this.properties);
    }
    /**
     * Type of external system. Possible values are: `AMAZON_REDSHIFT`, `AZURE_SYNAPSE`, `CONFLUENT`, `DATABRICKS`, `GOOGLE_BIGQUERY`, `KAFKA`, `LOOKER`, `MICROSOFT_FABRIC`, `MICROSOFT_SQL_SERVER`, `MONGODB`, `MYSQL`, `ORACLE`, `OTHER`, `POSTGRESQL`, `POWER_BI`, `SALESFORCE`, `SAP`, `SERVICENOW`, `SNOWFLAKE`, `TABLEAU`, `TERADATA`, `WORKDAY`
     * 
     */
    @Export(name="systemType", refs={String.class}, tree="[0]")
    private Output<String> systemType;

    /**
     * @return Type of external system. Possible values are: `AMAZON_REDSHIFT`, `AZURE_SYNAPSE`, `CONFLUENT`, `DATABRICKS`, `GOOGLE_BIGQUERY`, `KAFKA`, `LOOKER`, `MICROSOFT_FABRIC`, `MICROSOFT_SQL_SERVER`, `MONGODB`, `MYSQL`, `ORACLE`, `OTHER`, `POSTGRESQL`, `POWER_BI`, `SALESFORCE`, `SAP`, `SERVICENOW`, `SNOWFLAKE`, `TABLEAU`, `TERADATA`, `WORKDAY`
     * 
     */
    public Output<String> systemType() {
        return this.systemType;
    }
    /**
     * (string) - Time at which this external metadata object was last modified
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return (string) - Time at which this external metadata object was last modified
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * (string) - Username of user who last modified external metadata object
     * 
     */
    @Export(name="updatedBy", refs={String.class}, tree="[0]")
    private Output<String> updatedBy;

    /**
     * @return (string) - Username of user who last modified external metadata object
     * 
     */
    public Output<String> updatedBy() {
        return this.updatedBy;
    }
    /**
     * URL associated with the external metadata object
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> url;

    /**
     * @return URL associated with the external metadata object
     * 
     */
    public Output<Optional<String>> url() {
        return Codegen.optional(this.url);
    }
    /**
     * Workspace ID of the resource
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Output<Optional<String>> workspaceId() {
        return Codegen.optional(this.workspaceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalMetadata(java.lang.String name) {
        this(name, ExternalMetadataArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalMetadata(java.lang.String name, ExternalMetadataArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalMetadata(java.lang.String name, ExternalMetadataArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/externalMetadata:ExternalMetadata", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExternalMetadata(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalMetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/externalMetadata:ExternalMetadata", name, state, makeResourceOptions(options, id), false);
    }

    private static ExternalMetadataArgs makeArgs(ExternalMetadataArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExternalMetadataArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalMetadata get(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalMetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalMetadata(name, id, state, options);
    }
}
