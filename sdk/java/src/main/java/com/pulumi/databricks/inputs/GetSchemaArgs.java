// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetSchemaSchemaInfoArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaArgs Empty = new GetSchemaArgs();

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="schemaInfo")
    private @Nullable Output<GetSchemaSchemaInfoArgs> schemaInfo;

    public Optional<Output<GetSchemaSchemaInfoArgs>> schemaInfo() {
        return Optional.ofNullable(this.schemaInfo);
    }

    private GetSchemaArgs() {}

    private GetSchemaArgs(GetSchemaArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.schemaInfo = $.schemaInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaArgs $;

        public Builder() {
            $ = new GetSchemaArgs();
        }

        public Builder(GetSchemaArgs defaults) {
            $ = new GetSchemaArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder schemaInfo(@Nullable Output<GetSchemaSchemaInfoArgs> schemaInfo) {
            $.schemaInfo = schemaInfo;
            return this;
        }

        public Builder schemaInfo(GetSchemaSchemaInfoArgs schemaInfo) {
            return schemaInfo(Output.of(schemaInfo));
        }

        public GetSchemaArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetSchemaArgs", "name");
            }
            return $;
        }
    }

}
