// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntityTagAssignmentsTagAssignment {
    /**
     * @return The fully qualified name of the entity to which the tag is assigned
     * 
     */
    private String entityName;
    /**
     * @return The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     * 
     */
    private String entityType;
    /**
     * @return (string) - The key of the tag
     * 
     */
    private String tagKey;
    /**
     * @return (string) - The value of the tag
     * 
     */
    private @Nullable String tagValue;

    private GetEntityTagAssignmentsTagAssignment() {}
    /**
     * @return The fully qualified name of the entity to which the tag is assigned
     * 
     */
    public String entityName() {
        return this.entityName;
    }
    /**
     * @return The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     * 
     */
    public String entityType() {
        return this.entityType;
    }
    /**
     * @return (string) - The key of the tag
     * 
     */
    public String tagKey() {
        return this.tagKey;
    }
    /**
     * @return (string) - The value of the tag
     * 
     */
    public Optional<String> tagValue() {
        return Optional.ofNullable(this.tagValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityTagAssignmentsTagAssignment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String entityName;
        private String entityType;
        private String tagKey;
        private @Nullable String tagValue;
        public Builder() {}
        public Builder(GetEntityTagAssignmentsTagAssignment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityName = defaults.entityName;
    	      this.entityType = defaults.entityType;
    	      this.tagKey = defaults.tagKey;
    	      this.tagValue = defaults.tagValue;
        }

        @CustomType.Setter
        public Builder entityName(String entityName) {
            if (entityName == null) {
              throw new MissingRequiredPropertyException("GetEntityTagAssignmentsTagAssignment", "entityName");
            }
            this.entityName = entityName;
            return this;
        }
        @CustomType.Setter
        public Builder entityType(String entityType) {
            if (entityType == null) {
              throw new MissingRequiredPropertyException("GetEntityTagAssignmentsTagAssignment", "entityType");
            }
            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder tagKey(String tagKey) {
            if (tagKey == null) {
              throw new MissingRequiredPropertyException("GetEntityTagAssignmentsTagAssignment", "tagKey");
            }
            this.tagKey = tagKey;
            return this;
        }
        @CustomType.Setter
        public Builder tagValue(@Nullable String tagValue) {

            this.tagValue = tagValue;
            return this;
        }
        public GetEntityTagAssignmentsTagAssignment build() {
            final var _resultValue = new GetEntityTagAssignmentsTagAssignment();
            _resultValue.entityName = entityName;
            _resultValue.entityType = entityType;
            _resultValue.tagKey = tagKey;
            _resultValue.tagValue = tagValue;
            return _resultValue;
        }
    }
}
