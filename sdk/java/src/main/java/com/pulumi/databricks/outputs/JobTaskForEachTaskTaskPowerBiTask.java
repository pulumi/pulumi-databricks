// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.JobTaskForEachTaskTaskPowerBiTaskPowerBiModel;
import com.pulumi.databricks.outputs.JobTaskForEachTaskTaskPowerBiTaskTable;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTaskForEachTaskTaskPowerBiTask {
    /**
     * @return The resource name of the UC connection to authenticate from Databricks to Power BI
     * 
     */
    private @Nullable String connectionResourceName;
    /**
     * @return The semantic model to update. Block consists of following fields:
     * 
     */
    private @Nullable JobTaskForEachTaskTaskPowerBiTaskPowerBiModel powerBiModel;
    /**
     * @return Whether the model should be refreshed after the update. Default is false
     * 
     */
    private @Nullable Boolean refreshAfterUpdate;
    /**
     * @return The tables to be exported to Power BI. Block consists of following fields:
     * 
     */
    private @Nullable List<JobTaskForEachTaskTaskPowerBiTaskTable> tables;
    /**
     * @return The SQL warehouse ID to use as the Power BI data source
     * 
     */
    private @Nullable String warehouseId;

    private JobTaskForEachTaskTaskPowerBiTask() {}
    /**
     * @return The resource name of the UC connection to authenticate from Databricks to Power BI
     * 
     */
    public Optional<String> connectionResourceName() {
        return Optional.ofNullable(this.connectionResourceName);
    }
    /**
     * @return The semantic model to update. Block consists of following fields:
     * 
     */
    public Optional<JobTaskForEachTaskTaskPowerBiTaskPowerBiModel> powerBiModel() {
        return Optional.ofNullable(this.powerBiModel);
    }
    /**
     * @return Whether the model should be refreshed after the update. Default is false
     * 
     */
    public Optional<Boolean> refreshAfterUpdate() {
        return Optional.ofNullable(this.refreshAfterUpdate);
    }
    /**
     * @return The tables to be exported to Power BI. Block consists of following fields:
     * 
     */
    public List<JobTaskForEachTaskTaskPowerBiTaskTable> tables() {
        return this.tables == null ? List.of() : this.tables;
    }
    /**
     * @return The SQL warehouse ID to use as the Power BI data source
     * 
     */
    public Optional<String> warehouseId() {
        return Optional.ofNullable(this.warehouseId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTaskForEachTaskTaskPowerBiTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connectionResourceName;
        private @Nullable JobTaskForEachTaskTaskPowerBiTaskPowerBiModel powerBiModel;
        private @Nullable Boolean refreshAfterUpdate;
        private @Nullable List<JobTaskForEachTaskTaskPowerBiTaskTable> tables;
        private @Nullable String warehouseId;
        public Builder() {}
        public Builder(JobTaskForEachTaskTaskPowerBiTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionResourceName = defaults.connectionResourceName;
    	      this.powerBiModel = defaults.powerBiModel;
    	      this.refreshAfterUpdate = defaults.refreshAfterUpdate;
    	      this.tables = defaults.tables;
    	      this.warehouseId = defaults.warehouseId;
        }

        @CustomType.Setter
        public Builder connectionResourceName(@Nullable String connectionResourceName) {

            this.connectionResourceName = connectionResourceName;
            return this;
        }
        @CustomType.Setter
        public Builder powerBiModel(@Nullable JobTaskForEachTaskTaskPowerBiTaskPowerBiModel powerBiModel) {

            this.powerBiModel = powerBiModel;
            return this;
        }
        @CustomType.Setter
        public Builder refreshAfterUpdate(@Nullable Boolean refreshAfterUpdate) {

            this.refreshAfterUpdate = refreshAfterUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder tables(@Nullable List<JobTaskForEachTaskTaskPowerBiTaskTable> tables) {

            this.tables = tables;
            return this;
        }
        public Builder tables(JobTaskForEachTaskTaskPowerBiTaskTable... tables) {
            return tables(List.of(tables));
        }
        @CustomType.Setter
        public Builder warehouseId(@Nullable String warehouseId) {

            this.warehouseId = warehouseId;
            return this;
        }
        public JobTaskForEachTaskTaskPowerBiTask build() {
            final var _resultValue = new JobTaskForEachTaskTaskPowerBiTask();
            _resultValue.connectionResourceName = connectionResourceName;
            _resultValue.powerBiModel = powerBiModel;
            _resultValue.refreshAfterUpdate = refreshAfterUpdate;
            _resultValue.tables = tables;
            _resultValue.warehouseId = warehouseId;
            return _resultValue;
        }
    }
}
