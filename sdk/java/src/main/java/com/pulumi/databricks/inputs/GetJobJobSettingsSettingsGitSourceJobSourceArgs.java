// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJobJobSettingsSettingsGitSourceJobSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetJobJobSettingsSettingsGitSourceJobSourceArgs Empty = new GetJobJobSettingsSettingsGitSourceJobSourceArgs();

    @Import(name="dirtyState")
    private @Nullable Output<String> dirtyState;

    public Optional<Output<String>> dirtyState() {
        return Optional.ofNullable(this.dirtyState);
    }

    @Import(name="importFromGitBranch", required=true)
    private Output<String> importFromGitBranch;

    public Output<String> importFromGitBranch() {
        return this.importFromGitBranch;
    }

    @Import(name="jobConfigPath", required=true)
    private Output<String> jobConfigPath;

    public Output<String> jobConfigPath() {
        return this.jobConfigPath;
    }

    private GetJobJobSettingsSettingsGitSourceJobSourceArgs() {}

    private GetJobJobSettingsSettingsGitSourceJobSourceArgs(GetJobJobSettingsSettingsGitSourceJobSourceArgs $) {
        this.dirtyState = $.dirtyState;
        this.importFromGitBranch = $.importFromGitBranch;
        this.jobConfigPath = $.jobConfigPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobJobSettingsSettingsGitSourceJobSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobJobSettingsSettingsGitSourceJobSourceArgs $;

        public Builder() {
            $ = new GetJobJobSettingsSettingsGitSourceJobSourceArgs();
        }

        public Builder(GetJobJobSettingsSettingsGitSourceJobSourceArgs defaults) {
            $ = new GetJobJobSettingsSettingsGitSourceJobSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder dirtyState(@Nullable Output<String> dirtyState) {
            $.dirtyState = dirtyState;
            return this;
        }

        public Builder dirtyState(String dirtyState) {
            return dirtyState(Output.of(dirtyState));
        }

        public Builder importFromGitBranch(Output<String> importFromGitBranch) {
            $.importFromGitBranch = importFromGitBranch;
            return this;
        }

        public Builder importFromGitBranch(String importFromGitBranch) {
            return importFromGitBranch(Output.of(importFromGitBranch));
        }

        public Builder jobConfigPath(Output<String> jobConfigPath) {
            $.jobConfigPath = jobConfigPath;
            return this;
        }

        public Builder jobConfigPath(String jobConfigPath) {
            return jobConfigPath(Output.of(jobConfigPath));
        }

        public GetJobJobSettingsSettingsGitSourceJobSourceArgs build() {
            $.importFromGitBranch = Objects.requireNonNull($.importFromGitBranch, "expected parameter 'importFromGitBranch' to be non-null");
            $.jobConfigPath = Objects.requireNonNull($.jobConfigPath, "expected parameter 'jobConfigPath' to be non-null");
            return $;
        }
    }

}
