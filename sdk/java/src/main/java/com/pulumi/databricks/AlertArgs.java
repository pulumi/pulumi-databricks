// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.AlertConditionArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertArgs Empty = new AlertArgs();

    @Import(name="condition", required=true)
    private Output<AlertConditionArgs> condition;

    public Output<AlertConditionArgs> condition() {
        return this.condition;
    }

    @Import(name="customBody")
    private @Nullable Output<String> customBody;

    public Optional<Output<String>> customBody() {
        return Optional.ofNullable(this.customBody);
    }

    @Import(name="customSubject")
    private @Nullable Output<String> customSubject;

    public Optional<Output<String>> customSubject() {
        return Optional.ofNullable(this.customSubject);
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="notifyOnOk")
    private @Nullable Output<Boolean> notifyOnOk;

    public Optional<Output<Boolean>> notifyOnOk() {
        return Optional.ofNullable(this.notifyOnOk);
    }

    @Import(name="ownerUserName")
    private @Nullable Output<String> ownerUserName;

    public Optional<Output<String>> ownerUserName() {
        return Optional.ofNullable(this.ownerUserName);
    }

    @Import(name="parentPath")
    private @Nullable Output<String> parentPath;

    public Optional<Output<String>> parentPath() {
        return Optional.ofNullable(this.parentPath);
    }

    @Import(name="queryId", required=true)
    private Output<String> queryId;

    public Output<String> queryId() {
        return this.queryId;
    }

    @Import(name="secondsToRetrigger")
    private @Nullable Output<Integer> secondsToRetrigger;

    public Optional<Output<Integer>> secondsToRetrigger() {
        return Optional.ofNullable(this.secondsToRetrigger);
    }

    private AlertArgs() {}

    private AlertArgs(AlertArgs $) {
        this.condition = $.condition;
        this.customBody = $.customBody;
        this.customSubject = $.customSubject;
        this.displayName = $.displayName;
        this.notifyOnOk = $.notifyOnOk;
        this.ownerUserName = $.ownerUserName;
        this.parentPath = $.parentPath;
        this.queryId = $.queryId;
        this.secondsToRetrigger = $.secondsToRetrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertArgs $;

        public Builder() {
            $ = new AlertArgs();
        }

        public Builder(AlertArgs defaults) {
            $ = new AlertArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(Output<AlertConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(AlertConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder customBody(@Nullable Output<String> customBody) {
            $.customBody = customBody;
            return this;
        }

        public Builder customBody(String customBody) {
            return customBody(Output.of(customBody));
        }

        public Builder customSubject(@Nullable Output<String> customSubject) {
            $.customSubject = customSubject;
            return this;
        }

        public Builder customSubject(String customSubject) {
            return customSubject(Output.of(customSubject));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder notifyOnOk(@Nullable Output<Boolean> notifyOnOk) {
            $.notifyOnOk = notifyOnOk;
            return this;
        }

        public Builder notifyOnOk(Boolean notifyOnOk) {
            return notifyOnOk(Output.of(notifyOnOk));
        }

        public Builder ownerUserName(@Nullable Output<String> ownerUserName) {
            $.ownerUserName = ownerUserName;
            return this;
        }

        public Builder ownerUserName(String ownerUserName) {
            return ownerUserName(Output.of(ownerUserName));
        }

        public Builder parentPath(@Nullable Output<String> parentPath) {
            $.parentPath = parentPath;
            return this;
        }

        public Builder parentPath(String parentPath) {
            return parentPath(Output.of(parentPath));
        }

        public Builder queryId(Output<String> queryId) {
            $.queryId = queryId;
            return this;
        }

        public Builder queryId(String queryId) {
            return queryId(Output.of(queryId));
        }

        public Builder secondsToRetrigger(@Nullable Output<Integer> secondsToRetrigger) {
            $.secondsToRetrigger = secondsToRetrigger;
            return this;
        }

        public Builder secondsToRetrigger(Integer secondsToRetrigger) {
            return secondsToRetrigger(Output.of(secondsToRetrigger));
        }

        public AlertArgs build() {
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("AlertArgs", "condition");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("AlertArgs", "displayName");
            }
            if ($.queryId == null) {
                throw new MissingRequiredPropertyException("AlertArgs", "queryId");
            }
            return $;
        }
    }

}
