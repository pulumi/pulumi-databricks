// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs Empty = new GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs();

    /**
     * (string) - . Possible values are: `ALL_SERVICES`, `SELECTED_SERVICES`
     * 
     */
    @Import(name="logOnlyModeType")
    private @Nullable Output<String> logOnlyModeType;

    /**
     * @return (string) - . Possible values are: `ALL_SERVICES`, `SELECTED_SERVICES`
     * 
     */
    public Optional<Output<String>> logOnlyModeType() {
        return Optional.ofNullable(this.logOnlyModeType);
    }

    /**
     * (list of string)
     * 
     */
    @Import(name="workloads")
    private @Nullable Output<List<String>> workloads;

    /**
     * @return (list of string)
     * 
     */
    public Optional<Output<List<String>>> workloads() {
        return Optional.ofNullable(this.workloads);
    }

    private GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs() {}

    private GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs(GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs $) {
        this.logOnlyModeType = $.logOnlyModeType;
        this.workloads = $.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs $;

        public Builder() {
            $ = new GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs();
        }

        public Builder(GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs defaults) {
            $ = new GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logOnlyModeType (string) - . Possible values are: `ALL_SERVICES`, `SELECTED_SERVICES`
         * 
         * @return builder
         * 
         */
        public Builder logOnlyModeType(@Nullable Output<String> logOnlyModeType) {
            $.logOnlyModeType = logOnlyModeType;
            return this;
        }

        /**
         * @param logOnlyModeType (string) - . Possible values are: `ALL_SERVICES`, `SELECTED_SERVICES`
         * 
         * @return builder
         * 
         */
        public Builder logOnlyModeType(String logOnlyModeType) {
            return logOnlyModeType(Output.of(logOnlyModeType));
        }

        /**
         * @param workloads (list of string)
         * 
         * @return builder
         * 
         */
        public Builder workloads(@Nullable Output<List<String>> workloads) {
            $.workloads = workloads;
            return this;
        }

        /**
         * @param workloads (list of string)
         * 
         * @return builder
         * 
         */
        public Builder workloads(List<String> workloads) {
            return workloads(Output.of(workloads));
        }

        /**
         * @param workloads (list of string)
         * 
         * @return builder
         * 
         */
        public Builder workloads(String... workloads) {
            return workloads(List.of(workloads));
        }

        public GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeArgs build() {
            return $;
        }
    }

}
