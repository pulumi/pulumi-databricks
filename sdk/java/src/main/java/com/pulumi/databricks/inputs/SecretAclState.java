// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretAclState extends com.pulumi.resources.ResourceArgs {

    public static final SecretAclState Empty = new SecretAclState();

    /**
     * `READ`, `WRITE` or `MANAGE`.
     * 
     */
    @Import(name="permission")
    private @Nullable Output<String> permission;

    /**
     * @return `READ`, `WRITE` or `MANAGE`.
     * 
     */
    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    /**
     * principal&#39;s identifier. It can be:
     * 
     */
    @Import(name="principal")
    private @Nullable Output<String> principal;

    /**
     * @return principal&#39;s identifier. It can be:
     * 
     */
    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    /**
     * name of the scope
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return name of the scope
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private SecretAclState() {}

    private SecretAclState(SecretAclState $) {
        this.permission = $.permission;
        this.principal = $.principal;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretAclState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretAclState $;

        public Builder() {
            $ = new SecretAclState();
        }

        public Builder(SecretAclState defaults) {
            $ = new SecretAclState(Objects.requireNonNull(defaults));
        }

        /**
         * @param permission `READ`, `WRITE` or `MANAGE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission `READ`, `WRITE` or `MANAGE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param principal principal&#39;s identifier. It can be:
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal principal&#39;s identifier. It can be:
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param scope name of the scope
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope name of the scope
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public SecretAclState build() {
            return $;
        }
    }

}
