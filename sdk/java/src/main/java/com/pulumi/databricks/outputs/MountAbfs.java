// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MountAbfs {
    private String clientId;
    private String clientSecretKey;
    private String clientSecretScope;
    private @Nullable String containerName;
    private @Nullable String directory;
    private Boolean initializeFileSystem;
    private @Nullable String storageAccountName;
    private @Nullable String tenantId;

    private MountAbfs() {}
    public String clientId() {
        return this.clientId;
    }
    public String clientSecretKey() {
        return this.clientSecretKey;
    }
    public String clientSecretScope() {
        return this.clientSecretScope;
    }
    public Optional<String> containerName() {
        return Optional.ofNullable(this.containerName);
    }
    public Optional<String> directory() {
        return Optional.ofNullable(this.directory);
    }
    public Boolean initializeFileSystem() {
        return this.initializeFileSystem;
    }
    public Optional<String> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MountAbfs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String clientSecretKey;
        private String clientSecretScope;
        private @Nullable String containerName;
        private @Nullable String directory;
        private Boolean initializeFileSystem;
        private @Nullable String storageAccountName;
        private @Nullable String tenantId;
        public Builder() {}
        public Builder(MountAbfs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecretKey = defaults.clientSecretKey;
    	      this.clientSecretScope = defaults.clientSecretScope;
    	      this.containerName = defaults.containerName;
    	      this.directory = defaults.directory;
    	      this.initializeFileSystem = defaults.initializeFileSystem;
    	      this.storageAccountName = defaults.storageAccountName;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("MountAbfs", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecretKey(String clientSecretKey) {
            if (clientSecretKey == null) {
              throw new MissingRequiredPropertyException("MountAbfs", "clientSecretKey");
            }
            this.clientSecretKey = clientSecretKey;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecretScope(String clientSecretScope) {
            if (clientSecretScope == null) {
              throw new MissingRequiredPropertyException("MountAbfs", "clientSecretScope");
            }
            this.clientSecretScope = clientSecretScope;
            return this;
        }
        @CustomType.Setter
        public Builder containerName(@Nullable String containerName) {

            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder directory(@Nullable String directory) {

            this.directory = directory;
            return this;
        }
        @CustomType.Setter
        public Builder initializeFileSystem(Boolean initializeFileSystem) {
            if (initializeFileSystem == null) {
              throw new MissingRequiredPropertyException("MountAbfs", "initializeFileSystem");
            }
            this.initializeFileSystem = initializeFileSystem;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountName(@Nullable String storageAccountName) {

            this.storageAccountName = storageAccountName;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {

            this.tenantId = tenantId;
            return this;
        }
        public MountAbfs build() {
            final var _resultValue = new MountAbfs();
            _resultValue.clientId = clientId;
            _resultValue.clientSecretKey = clientSecretKey;
            _resultValue.clientSecretScope = clientSecretScope;
            _resultValue.containerName = containerName;
            _resultValue.directory = directory;
            _resultValue.initializeFileSystem = initializeFileSystem;
            _resultValue.storageAccountName = storageAccountName;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
