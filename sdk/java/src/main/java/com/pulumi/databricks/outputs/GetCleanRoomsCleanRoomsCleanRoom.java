// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomOutputCatalog;
import com.pulumi.databricks.outputs.GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCleanRoomsCleanRoomsCleanRoom {
    /**
     * @return (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
     * 
     */
    private String accessRestricted;
    /**
     * @return (string)
     * 
     */
    private @Nullable String comment;
    /**
     * @return (integer) - When the clean room was created, in epoch milliseconds
     * 
     */
    private Integer createdAt;
    /**
     * @return (string) - The alias of the collaborator tied to the local clean room
     * 
     */
    private String localCollaboratorAlias;
    /**
     * @return (string) - The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    private @Nullable String name;
    /**
     * @return (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
     * using the separate CreateCleanRoomOutputCatalog API
     * 
     */
    private GetCleanRoomsCleanRoomsCleanRoomOutputCatalog outputCatalog;
    /**
     * @return (string) - This is Databricks username of the owner of the local clean room securable for permission management
     * 
     */
    private @Nullable String owner;
    /**
     * @return (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     * 
     */
    private @Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo remoteDetailedInfo;
    /**
     * @return (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     * 
     */
    private String status;
    /**
     * @return (integer) - When the clean room was last updated, in epoch milliseconds
     * 
     */
    private Integer updatedAt;

    private GetCleanRoomsCleanRoomsCleanRoom() {}
    /**
     * @return (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
     * 
     */
    public String accessRestricted() {
        return this.accessRestricted;
    }
    /**
     * @return (string)
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return (integer) - When the clean room was created, in epoch milliseconds
     * 
     */
    public Integer createdAt() {
        return this.createdAt;
    }
    /**
     * @return (string) - The alias of the collaborator tied to the local clean room
     * 
     */
    public String localCollaboratorAlias() {
        return this.localCollaboratorAlias;
    }
    /**
     * @return (string) - The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
     * using the separate CreateCleanRoomOutputCatalog API
     * 
     */
    public GetCleanRoomsCleanRoomsCleanRoomOutputCatalog outputCatalog() {
        return this.outputCatalog;
    }
    /**
     * @return (string) - This is Databricks username of the owner of the local clean room securable for permission management
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     * 
     */
    public Optional<GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo> remoteDetailedInfo() {
        return Optional.ofNullable(this.remoteDetailedInfo);
    }
    /**
     * @return (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return (integer) - When the clean room was last updated, in epoch milliseconds
     * 
     */
    public Integer updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCleanRoomsCleanRoomsCleanRoom defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessRestricted;
        private @Nullable String comment;
        private Integer createdAt;
        private String localCollaboratorAlias;
        private @Nullable String name;
        private GetCleanRoomsCleanRoomsCleanRoomOutputCatalog outputCatalog;
        private @Nullable String owner;
        private @Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo remoteDetailedInfo;
        private String status;
        private Integer updatedAt;
        public Builder() {}
        public Builder(GetCleanRoomsCleanRoomsCleanRoom defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRestricted = defaults.accessRestricted;
    	      this.comment = defaults.comment;
    	      this.createdAt = defaults.createdAt;
    	      this.localCollaboratorAlias = defaults.localCollaboratorAlias;
    	      this.name = defaults.name;
    	      this.outputCatalog = defaults.outputCatalog;
    	      this.owner = defaults.owner;
    	      this.remoteDetailedInfo = defaults.remoteDetailedInfo;
    	      this.status = defaults.status;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder accessRestricted(String accessRestricted) {
            if (accessRestricted == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "accessRestricted");
            }
            this.accessRestricted = accessRestricted;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(Integer createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder localCollaboratorAlias(String localCollaboratorAlias) {
            if (localCollaboratorAlias == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "localCollaboratorAlias");
            }
            this.localCollaboratorAlias = localCollaboratorAlias;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder outputCatalog(GetCleanRoomsCleanRoomsCleanRoomOutputCatalog outputCatalog) {
            if (outputCatalog == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "outputCatalog");
            }
            this.outputCatalog = outputCatalog;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder remoteDetailedInfo(@Nullable GetCleanRoomsCleanRoomsCleanRoomRemoteDetailedInfo remoteDetailedInfo) {

            this.remoteDetailedInfo = remoteDetailedInfo;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(Integer updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomsCleanRoom", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetCleanRoomsCleanRoomsCleanRoom build() {
            final var _resultValue = new GetCleanRoomsCleanRoomsCleanRoom();
            _resultValue.accessRestricted = accessRestricted;
            _resultValue.comment = comment;
            _resultValue.createdAt = createdAt;
            _resultValue.localCollaboratorAlias = localCollaboratorAlias;
            _resultValue.name = name;
            _resultValue.outputCatalog = outputCatalog;
            _resultValue.owner = owner;
            _resultValue.remoteDetailedInfo = remoteDetailedInfo;
            _resultValue.status = status;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
