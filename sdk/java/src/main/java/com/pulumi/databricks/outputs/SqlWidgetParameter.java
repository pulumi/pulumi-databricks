// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlWidgetParameter {
    private @Nullable String mapTo;
    private String name;
    private @Nullable String title;
    private String type;
    private @Nullable String value;
    private @Nullable List<String> values;

    private SqlWidgetParameter() {}
    public Optional<String> mapTo() {
        return Optional.ofNullable(this.mapTo);
    }
    public String name() {
        return this.name;
    }
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public String type() {
        return this.type;
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlWidgetParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String mapTo;
        private String name;
        private @Nullable String title;
        private String type;
        private @Nullable String value;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(SqlWidgetParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mapTo = defaults.mapTo;
    	      this.name = defaults.name;
    	      this.title = defaults.title;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder mapTo(@Nullable String mapTo) {

            this.mapTo = mapTo;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("SqlWidgetParameter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {

            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SqlWidgetParameter", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {

            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public SqlWidgetParameter build() {
            final var _resultValue = new SqlWidgetParameter();
            _resultValue.mapTo = mapTo;
            _resultValue.name = name;
            _resultValue.title = title;
            _resultValue.type = type;
            _resultValue.value = value;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
