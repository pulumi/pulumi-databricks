// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs Empty = new DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs();

    /**
     * (integer) - The last source table Delta version that was successfully synced to the synced table
     * 
     */
    @Import(name="lastProcessedCommitVersion")
    private @Nullable Output<Integer> lastProcessedCommitVersion;

    /**
     * @return (integer) - The last source table Delta version that was successfully synced to the synced table
     * 
     */
    public Optional<Output<Integer>> lastProcessedCommitVersion() {
        return Optional.ofNullable(this.lastProcessedCommitVersion);
    }

    /**
     * (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
     * table. This is when the data is available in the synced table
     * 
     */
    @Import(name="timestamp")
    private @Nullable Output<String> timestamp;

    /**
     * @return (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
     * table. This is when the data is available in the synced table
     * 
     */
    public Optional<Output<String>> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs() {}

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs(DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs $) {
        this.lastProcessedCommitVersion = $.lastProcessedCommitVersion;
        this.timestamp = $.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs $;

        public Builder() {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs();
        }

        public Builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs defaults) {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lastProcessedCommitVersion (integer) - The last source table Delta version that was successfully synced to the synced table
         * 
         * @return builder
         * 
         */
        public Builder lastProcessedCommitVersion(@Nullable Output<Integer> lastProcessedCommitVersion) {
            $.lastProcessedCommitVersion = lastProcessedCommitVersion;
            return this;
        }

        /**
         * @param lastProcessedCommitVersion (integer) - The last source table Delta version that was successfully synced to the synced table
         * 
         * @return builder
         * 
         */
        public Builder lastProcessedCommitVersion(Integer lastProcessedCommitVersion) {
            return lastProcessedCommitVersion(Output.of(lastProcessedCommitVersion));
        }

        /**
         * @param timestamp (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
         * table. This is when the data is available in the synced table
         * 
         * @return builder
         * 
         */
        public Builder timestamp(@Nullable Output<String> timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        /**
         * @param timestamp (string) - The end timestamp of the last time any data was synchronized from the source table to the synced
         * table. This is when the data is available in the synced table
         * 
         * @return builder
         * 
         */
        public Builder timestamp(String timestamp) {
            return timestamp(Output.of(timestamp));
        }

        public DatabaseSyncedDatabaseTableDataSynchronizationStatusFailedStatusArgs build() {
            return $;
        }
    }

}
