// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStorageCredentialStorageCredentialInfoCloudflareApiToken extends com.pulumi.resources.InvokeArgs {

    public static final GetStorageCredentialStorageCredentialInfoCloudflareApiToken Empty = new GetStorageCredentialStorageCredentialInfoCloudflareApiToken();

    @Import(name="accessKeyId", required=true)
    private String accessKeyId;

    public String accessKeyId() {
        return this.accessKeyId;
    }

    @Import(name="accountId", required=true)
    private String accountId;

    public String accountId() {
        return this.accountId;
    }

    @Import(name="secretAccessKey", required=true)
    private String secretAccessKey;

    public String secretAccessKey() {
        return this.secretAccessKey;
    }

    private GetStorageCredentialStorageCredentialInfoCloudflareApiToken() {}

    private GetStorageCredentialStorageCredentialInfoCloudflareApiToken(GetStorageCredentialStorageCredentialInfoCloudflareApiToken $) {
        this.accessKeyId = $.accessKeyId;
        this.accountId = $.accountId;
        this.secretAccessKey = $.secretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageCredentialStorageCredentialInfoCloudflareApiToken defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageCredentialStorageCredentialInfoCloudflareApiToken $;

        public Builder() {
            $ = new GetStorageCredentialStorageCredentialInfoCloudflareApiToken();
        }

        public Builder(GetStorageCredentialStorageCredentialInfoCloudflareApiToken defaults) {
            $ = new GetStorageCredentialStorageCredentialInfoCloudflareApiToken(Objects.requireNonNull(defaults));
        }

        public Builder accessKeyId(String accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder secretAccessKey(String secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        public GetStorageCredentialStorageCredentialInfoCloudflareApiToken build() {
            if ($.accessKeyId == null) {
                throw new MissingRequiredPropertyException("GetStorageCredentialStorageCredentialInfoCloudflareApiToken", "accessKeyId");
            }
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetStorageCredentialStorageCredentialInfoCloudflareApiToken", "accountId");
            }
            if ($.secretAccessKey == null) {
                throw new MissingRequiredPropertyException("GetStorageCredentialStorageCredentialInfoCloudflareApiToken", "secretAccessKey");
            }
            return $;
        }
    }

}
