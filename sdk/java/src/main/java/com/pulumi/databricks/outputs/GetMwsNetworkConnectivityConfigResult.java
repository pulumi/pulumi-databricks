// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetMwsNetworkConnectivityConfigEgressConfig;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMwsNetworkConnectivityConfigResult {
    private String accountId;
    private Integer creationTime;
    private GetMwsNetworkConnectivityConfigEgressConfig egressConfig;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String networkConnectivityConfigId;
    private String region;
    private Integer updatedTime;

    private GetMwsNetworkConnectivityConfigResult() {}
    public String accountId() {
        return this.accountId;
    }
    public Integer creationTime() {
        return this.creationTime;
    }
    public GetMwsNetworkConnectivityConfigEgressConfig egressConfig() {
        return this.egressConfig;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String networkConnectivityConfigId() {
        return this.networkConnectivityConfigId;
    }
    public String region() {
        return this.region;
    }
    public Integer updatedTime() {
        return this.updatedTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMwsNetworkConnectivityConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Integer creationTime;
        private GetMwsNetworkConnectivityConfigEgressConfig egressConfig;
        private String id;
        private String name;
        private String networkConnectivityConfigId;
        private String region;
        private Integer updatedTime;
        public Builder() {}
        public Builder(GetMwsNetworkConnectivityConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.creationTime = defaults.creationTime;
    	      this.egressConfig = defaults.egressConfig;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkConnectivityConfigId = defaults.networkConnectivityConfigId;
    	      this.region = defaults.region;
    	      this.updatedTime = defaults.updatedTime;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(Integer creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder egressConfig(GetMwsNetworkConnectivityConfigEgressConfig egressConfig) {
            if (egressConfig == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "egressConfig");
            }
            this.egressConfig = egressConfig;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkConnectivityConfigId(String networkConnectivityConfigId) {
            if (networkConnectivityConfigId == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "networkConnectivityConfigId");
            }
            this.networkConnectivityConfigId = networkConnectivityConfigId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder updatedTime(Integer updatedTime) {
            if (updatedTime == null) {
              throw new MissingRequiredPropertyException("GetMwsNetworkConnectivityConfigResult", "updatedTime");
            }
            this.updatedTime = updatedTime;
            return this;
        }
        public GetMwsNetworkConnectivityConfigResult build() {
            final var _resultValue = new GetMwsNetworkConnectivityConfigResult();
            _resultValue.accountId = accountId;
            _resultValue.creationTime = creationTime;
            _resultValue.egressConfig = egressConfig;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.networkConnectivityConfigId = networkConnectivityConfigId;
            _resultValue.region = region;
            _resultValue.updatedTime = updatedTime;
            return _resultValue;
        }
    }
}
