// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.SqlPermissionsArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.SqlPermissionsState;
import com.pulumi.databricks.outputs.SqlPermissionsPrivilegeAssignment;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * The following resource definition will enforce access control on a table by executing the following SQL queries on a special auto-terminating cluster it would create for this operation:
 * 
 * * ``` SHOW GRANT ON TABLE `default`.`foo`  ```
 * * ```REVOKE ALL PRIVILEGES ON TABLE `default`.`foo` FROM ... every group and user that has access to it ...```
 * * ``` GRANT MODIFY, SELECT ON TABLE `default`.`foo` TO `serge{@literal @}example.com`  ```
 * * ``` GRANT SELECT ON TABLE `default`.`foo` TO `special group`  ```
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.SqlPermissions;
 * import com.pulumi.databricks.SqlPermissionsArgs;
 * import com.pulumi.databricks.inputs.SqlPermissionsPrivilegeAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fooTable = new SqlPermissions("fooTable", SqlPermissionsArgs.builder()
 *             .table("foo")
 *             .privilegeAssignments(            
 *                 SqlPermissionsPrivilegeAssignmentArgs.builder()
 *                     .principal("serge{@literal @}example.com")
 *                     .privileges(                    
 *                         "SELECT",
 *                         "MODIFY")
 *                     .build(),
 *                 SqlPermissionsPrivilegeAssignmentArgs.builder()
 *                     .principal("special group")
 *                     .privileges("SELECT")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Related Resources
 * 
 * The following resources are often used in the same context:
 * 
 * * End to end workspace management guide.
 * * databricks.Group to manage [groups in Databricks Workspace](https://docs.databricks.com/administration-guide/users-groups/groups.html) or [Account Console](https://accounts.cloud.databricks.com/) (for AWS deployments).
 * * databricks.Grants to manage data access in Unity Catalog.
 * * databricks.Permissions to manage [access control](https://docs.databricks.com/security/access-control/index.html) in Databricks workspace.
 * * databricks.User to [manage users](https://docs.databricks.com/administration-guide/users-groups/users.html), that could be added to databricks.Group within the workspace.
 * 
 * ## Import
 * 
 * The resource can be imported using a synthetic identifier. Examples of valid synthetic identifiers are:
 * 
 * * `table/default.foo` - table `foo` in a `default` database. Database is always mandatory.
 * 
 * * `view/bar.foo` - view `foo` in `bar` database.
 * 
 * * `database/bar` - `bar` database.
 * 
 * * `catalog/` - entire catalog. `/` suffix is mandatory.
 * 
 * * `any file/` - direct access to any file. `/` suffix is mandatory.
 * 
 * * `anonymous function/` - anonymous function. `/` suffix is mandatory.
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/sqlPermissions:SqlPermissions foo /&lt;object-type&gt;/&lt;object-name&gt;
 * ```
 * 
 */
@ResourceType(type="databricks:index/sqlPermissions:SqlPermissions")
public class SqlPermissions extends com.pulumi.resources.CustomResource {
    /**
     * If this access control for using anonymous function. Defaults to `false`.
     * 
     */
    @Export(name="anonymousFunction", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> anonymousFunction;

    /**
     * @return If this access control for using anonymous function. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> anonymousFunction() {
        return Codegen.optional(this.anonymousFunction);
    }
    /**
     * If this access control for reading/writing any file. Defaults to `false`.
     * 
     */
    @Export(name="anyFile", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> anyFile;

    /**
     * @return If this access control for reading/writing any file. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> anyFile() {
        return Codegen.optional(this.anyFile);
    }
    /**
     * If this access control for the entire catalog. Defaults to `false`.
     * 
     */
    @Export(name="catalog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> catalog;

    /**
     * @return If this access control for the entire catalog. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> catalog() {
        return Codegen.optional(this.catalog);
    }
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Name of the database. Has default value of `default`.
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database;

    /**
     * @return Name of the database. Has default value of `default`.
     * 
     */
    public Output<Optional<String>> database() {
        return Codegen.optional(this.database);
    }
    @Export(name="privilegeAssignments", refs={List.class,SqlPermissionsPrivilegeAssignment.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SqlPermissionsPrivilegeAssignment>> privilegeAssignments;

    public Output<Optional<List<SqlPermissionsPrivilegeAssignment>>> privilegeAssignments() {
        return Codegen.optional(this.privilegeAssignments);
    }
    /**
     * Name of the table. Can be combined with `database`.
     * 
     */
    @Export(name="table", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> table;

    /**
     * @return Name of the table. Can be combined with `database`.
     * 
     */
    public Output<Optional<String>> table() {
        return Codegen.optional(this.table);
    }
    /**
     * Name of the view. Can be combined with `database`.
     * 
     */
    @Export(name="view", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> view;

    /**
     * @return Name of the view. Can be combined with `database`.
     * 
     */
    public Output<Optional<String>> view() {
        return Codegen.optional(this.view);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SqlPermissions(String name) {
        this(name, SqlPermissionsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SqlPermissions(String name, @Nullable SqlPermissionsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlPermissions(String name, @Nullable SqlPermissionsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/sqlPermissions:SqlPermissions", name, args == null ? SqlPermissionsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SqlPermissions(String name, Output<String> id, @Nullable SqlPermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/sqlPermissions:SqlPermissions", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlPermissions get(String name, Output<String> id, @Nullable SqlPermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SqlPermissions(name, id, state, options);
    }
}
