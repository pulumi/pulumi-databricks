// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingProvisionedThroughputAiGatewayRateLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingProvisionedThroughputAiGatewayRateLimitArgs Empty = new ModelServingProvisionedThroughputAiGatewayRateLimitArgs();

    @Import(name="calls")
    private @Nullable Output<Integer> calls;

    public Optional<Output<Integer>> calls() {
        return Optional.ofNullable(this.calls);
    }

    /**
     * The key field for a tag.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The key field for a tag.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="principal")
    private @Nullable Output<String> principal;

    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    @Import(name="renewalPeriod", required=true)
    private Output<String> renewalPeriod;

    public Output<String> renewalPeriod() {
        return this.renewalPeriod;
    }

    @Import(name="tokens")
    private @Nullable Output<Integer> tokens;

    public Optional<Output<Integer>> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    private ModelServingProvisionedThroughputAiGatewayRateLimitArgs() {}

    private ModelServingProvisionedThroughputAiGatewayRateLimitArgs(ModelServingProvisionedThroughputAiGatewayRateLimitArgs $) {
        this.calls = $.calls;
        this.key = $.key;
        this.principal = $.principal;
        this.renewalPeriod = $.renewalPeriod;
        this.tokens = $.tokens;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingProvisionedThroughputAiGatewayRateLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingProvisionedThroughputAiGatewayRateLimitArgs $;

        public Builder() {
            $ = new ModelServingProvisionedThroughputAiGatewayRateLimitArgs();
        }

        public Builder(ModelServingProvisionedThroughputAiGatewayRateLimitArgs defaults) {
            $ = new ModelServingProvisionedThroughputAiGatewayRateLimitArgs(Objects.requireNonNull(defaults));
        }

        public Builder calls(@Nullable Output<Integer> calls) {
            $.calls = calls;
            return this;
        }

        public Builder calls(Integer calls) {
            return calls(Output.of(calls));
        }

        /**
         * @param key The key field for a tag.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The key field for a tag.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        public Builder renewalPeriod(Output<String> renewalPeriod) {
            $.renewalPeriod = renewalPeriod;
            return this;
        }

        public Builder renewalPeriod(String renewalPeriod) {
            return renewalPeriod(Output.of(renewalPeriod));
        }

        public Builder tokens(@Nullable Output<Integer> tokens) {
            $.tokens = tokens;
            return this;
        }

        public Builder tokens(Integer tokens) {
            return tokens(Output.of(tokens));
        }

        public ModelServingProvisionedThroughputAiGatewayRateLimitArgs build() {
            if ($.renewalPeriod == null) {
                throw new MissingRequiredPropertyException("ModelServingProvisionedThroughputAiGatewayRateLimitArgs", "renewalPeriod");
            }
            return $;
        }
    }

}
