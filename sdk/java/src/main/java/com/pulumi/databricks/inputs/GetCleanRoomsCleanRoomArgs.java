// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCleanRoomsCleanRoomArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCleanRoomsCleanRoomArgs Empty = new GetCleanRoomsCleanRoomArgs();

    /**
     * (string)
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return (string)
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (string) - This is the Databricks username of the owner of the local clean room securable for permission management
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    /**
     * @return (string) - This is the Databricks username of the owner of the local clean room securable for permission management
     * 
     */
    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     * 
     */
    @Import(name="remoteDetailedInfo")
    private @Nullable Output<GetCleanRoomsCleanRoomRemoteDetailedInfoArgs> remoteDetailedInfo;

    /**
     * @return (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     * 
     */
    public Optional<Output<GetCleanRoomsCleanRoomRemoteDetailedInfoArgs>> remoteDetailedInfo() {
        return Optional.ofNullable(this.remoteDetailedInfo);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private GetCleanRoomsCleanRoomArgs() {}

    private GetCleanRoomsCleanRoomArgs(GetCleanRoomsCleanRoomArgs $) {
        this.comment = $.comment;
        this.name = $.name;
        this.owner = $.owner;
        this.remoteDetailedInfo = $.remoteDetailedInfo;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCleanRoomsCleanRoomArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCleanRoomsCleanRoomArgs $;

        public Builder() {
            $ = new GetCleanRoomsCleanRoomArgs();
        }

        public Builder(GetCleanRoomsCleanRoomArgs defaults) {
            $ = new GetCleanRoomsCleanRoomArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment (string)
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment (string)
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param name The name of the clean room.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the clean room.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param owner (string) - This is the Databricks username of the owner of the local clean room securable for permission management
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner (string) - This is the Databricks username of the owner of the local clean room securable for permission management
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param remoteDetailedInfo (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
         * cloud_vendor, region, and collaborators.global_metastore_id.
         * This field will not be filled in the ListCleanRooms call
         * 
         * @return builder
         * 
         */
        public Builder remoteDetailedInfo(@Nullable Output<GetCleanRoomsCleanRoomRemoteDetailedInfoArgs> remoteDetailedInfo) {
            $.remoteDetailedInfo = remoteDetailedInfo;
            return this;
        }

        /**
         * @param remoteDetailedInfo (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
         * cloud_vendor, region, and collaborators.global_metastore_id.
         * This field will not be filled in the ListCleanRooms call
         * 
         * @return builder
         * 
         */
        public Builder remoteDetailedInfo(GetCleanRoomsCleanRoomRemoteDetailedInfoArgs remoteDetailedInfo) {
            return remoteDetailedInfo(Output.of(remoteDetailedInfo));
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public GetCleanRoomsCleanRoomArgs build() {
            return $;
        }
    }

}
