// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDirectoryResult {
    private String id;
    /**
     * @return directory object ID
     * 
     */
    private Integer objectId;
    private String path;
    /**
     * @return path on Workspace File System (WSFS) in form of `/Workspace` + `path`
     * 
     */
    private String workspacePath;

    private GetDirectoryResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return directory object ID
     * 
     */
    public Integer objectId() {
        return this.objectId;
    }
    public String path() {
        return this.path;
    }
    /**
     * @return path on Workspace File System (WSFS) in form of `/Workspace` + `path`
     * 
     */
    public String workspacePath() {
        return this.workspacePath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer objectId;
        private String path;
        private String workspacePath;
        public Builder() {}
        public Builder(GetDirectoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.objectId = defaults.objectId;
    	      this.path = defaults.path;
    	      this.workspacePath = defaults.workspacePath;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDirectoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder objectId(Integer objectId) {
            if (objectId == null) {
              throw new MissingRequiredPropertyException("GetDirectoryResult", "objectId");
            }
            this.objectId = objectId;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetDirectoryResult", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder workspacePath(String workspacePath) {
            if (workspacePath == null) {
              throw new MissingRequiredPropertyException("GetDirectoryResult", "workspacePath");
            }
            this.workspacePath = workspacePath;
            return this;
        }
        public GetDirectoryResult build() {
            final var _resultValue = new GetDirectoryResult();
            _resultValue.id = id;
            _resultValue.objectId = objectId;
            _resultValue.path = path;
            _resultValue.workspacePath = workspacePath;
            return _resultValue;
        }
    }
}
