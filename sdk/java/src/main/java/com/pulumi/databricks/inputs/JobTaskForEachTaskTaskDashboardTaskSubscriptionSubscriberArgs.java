// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs Empty = new JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs();

    /**
     * A snapshot of the dashboard will be sent to the destination when the `destinationId` field is present.
     * 
     */
    @Import(name="destinationId")
    private @Nullable Output<String> destinationId;

    /**
     * @return A snapshot of the dashboard will be sent to the destination when the `destinationId` field is present.
     * 
     */
    public Optional<Output<String>> destinationId() {
        return Optional.ofNullable(this.destinationId);
    }

    /**
     * A snapshot of the dashboard will be sent to the user&#39;s email when the `userName` field is present.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return A snapshot of the dashboard will be sent to the user&#39;s email when the `userName` field is present.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs() {}

    private JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs(JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs $) {
        this.destinationId = $.destinationId;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs $;

        public Builder() {
            $ = new JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs();
        }

        public Builder(JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs defaults) {
            $ = new JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationId A snapshot of the dashboard will be sent to the destination when the `destinationId` field is present.
         * 
         * @return builder
         * 
         */
        public Builder destinationId(@Nullable Output<String> destinationId) {
            $.destinationId = destinationId;
            return this;
        }

        /**
         * @param destinationId A snapshot of the dashboard will be sent to the destination when the `destinationId` field is present.
         * 
         * @return builder
         * 
         */
        public Builder destinationId(String destinationId) {
            return destinationId(Output.of(destinationId));
        }

        /**
         * @param userName A snapshot of the dashboard will be sent to the user&#39;s email when the `userName` field is present.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName A snapshot of the dashboard will be sent to the user&#39;s email when the `userName` field is present.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public JobTaskForEachTaskTaskDashboardTaskSubscriptionSubscriberArgs build() {
            return $;
        }
    }

}
