// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelServingConfigServedEntityExternalModelOpenaiConfig {
    private @Nullable String openaiApiBase;
    private String openaiApiKey;
    private @Nullable String openaiApiType;
    private @Nullable String openaiApiVersion;
    private @Nullable String openaiDeploymentName;
    private @Nullable String openaiOrganization;

    private ModelServingConfigServedEntityExternalModelOpenaiConfig() {}
    public Optional<String> openaiApiBase() {
        return Optional.ofNullable(this.openaiApiBase);
    }
    public String openaiApiKey() {
        return this.openaiApiKey;
    }
    public Optional<String> openaiApiType() {
        return Optional.ofNullable(this.openaiApiType);
    }
    public Optional<String> openaiApiVersion() {
        return Optional.ofNullable(this.openaiApiVersion);
    }
    public Optional<String> openaiDeploymentName() {
        return Optional.ofNullable(this.openaiDeploymentName);
    }
    public Optional<String> openaiOrganization() {
        return Optional.ofNullable(this.openaiOrganization);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelServingConfigServedEntityExternalModelOpenaiConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String openaiApiBase;
        private String openaiApiKey;
        private @Nullable String openaiApiType;
        private @Nullable String openaiApiVersion;
        private @Nullable String openaiDeploymentName;
        private @Nullable String openaiOrganization;
        public Builder() {}
        public Builder(ModelServingConfigServedEntityExternalModelOpenaiConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.openaiApiBase = defaults.openaiApiBase;
    	      this.openaiApiKey = defaults.openaiApiKey;
    	      this.openaiApiType = defaults.openaiApiType;
    	      this.openaiApiVersion = defaults.openaiApiVersion;
    	      this.openaiDeploymentName = defaults.openaiDeploymentName;
    	      this.openaiOrganization = defaults.openaiOrganization;
        }

        @CustomType.Setter
        public Builder openaiApiBase(@Nullable String openaiApiBase) {

            this.openaiApiBase = openaiApiBase;
            return this;
        }
        @CustomType.Setter
        public Builder openaiApiKey(String openaiApiKey) {
            if (openaiApiKey == null) {
              throw new MissingRequiredPropertyException("ModelServingConfigServedEntityExternalModelOpenaiConfig", "openaiApiKey");
            }
            this.openaiApiKey = openaiApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder openaiApiType(@Nullable String openaiApiType) {

            this.openaiApiType = openaiApiType;
            return this;
        }
        @CustomType.Setter
        public Builder openaiApiVersion(@Nullable String openaiApiVersion) {

            this.openaiApiVersion = openaiApiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder openaiDeploymentName(@Nullable String openaiDeploymentName) {

            this.openaiDeploymentName = openaiDeploymentName;
            return this;
        }
        @CustomType.Setter
        public Builder openaiOrganization(@Nullable String openaiOrganization) {

            this.openaiOrganization = openaiOrganization;
            return this;
        }
        public ModelServingConfigServedEntityExternalModelOpenaiConfig build() {
            final var _resultValue = new ModelServingConfigServedEntityExternalModelOpenaiConfig();
            _resultValue.openaiApiBase = openaiApiBase;
            _resultValue.openaiApiKey = openaiApiKey;
            _resultValue.openaiApiType = openaiApiType;
            _resultValue.openaiApiVersion = openaiApiVersion;
            _resultValue.openaiDeploymentName = openaiDeploymentName;
            _resultValue.openaiOrganization = openaiOrganization;
            return _resultValue;
        }
    }
}
