// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.NotificationDestinationArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.NotificationDestinationState;
import com.pulumi.databricks.outputs.NotificationDestinationConfig;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to manage [Notification Destinations](https://docs.databricks.com/api/workspace/notificationdestinations). Notification destinations are used to send notifications for query alerts and jobs to destinations outside of Databricks. Only workspace admins can create, update, and delete notification destinations.
 * 
 * &gt; This resource can only be used with a workspace-level provider!
 * 
 * ## Example Usage
 * 
 * `Email` notification destination:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.NotificationDestination;
 * import com.pulumi.databricks.NotificationDestinationArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigEmailArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var ndresource = new NotificationDestination("ndresource", NotificationDestinationArgs.builder()
 *             .displayName("Notification Destination")
 *             .config(NotificationDestinationConfigArgs.builder()
 *                 .email(NotificationDestinationConfigEmailArgs.builder()
 *                     .addresses("abc}{@literal @}{@code gmail.com")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * `Slack` notification destination:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.NotificationDestination;
 * import com.pulumi.databricks.NotificationDestinationArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigSlackArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ndresource = new NotificationDestination("ndresource", NotificationDestinationArgs.builder()
 *             .displayName("Notification Destination")
 *             .config(NotificationDestinationConfigArgs.builder()
 *                 .slack(NotificationDestinationConfigSlackArgs.builder()
 *                     .url("https://hooks.slack.com/services/...")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * `PagerDuty` notification destination:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.NotificationDestination;
 * import com.pulumi.databricks.NotificationDestinationArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigPagerdutyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ndresource = new NotificationDestination("ndresource", NotificationDestinationArgs.builder()
 *             .displayName("Notification Destination")
 *             .config(NotificationDestinationConfigArgs.builder()
 *                 .pagerduty(NotificationDestinationConfigPagerdutyArgs.builder()
 *                     .integrationKey("xxxxxx")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * `Microsoft Teams` notification destination:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.NotificationDestination;
 * import com.pulumi.databricks.NotificationDestinationArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigMicrosoftTeamsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ndresource = new NotificationDestination("ndresource", NotificationDestinationArgs.builder()
 *             .displayName("Notification Destination")
 *             .config(NotificationDestinationConfigArgs.builder()
 *                 .microsoftTeams(NotificationDestinationConfigMicrosoftTeamsArgs.builder()
 *                     .url("https://outlook.office.com/webhook/...")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * `Generic Webhook` notification destination:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.NotificationDestination;
 * import com.pulumi.databricks.NotificationDestinationArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigArgs;
 * import com.pulumi.databricks.inputs.NotificationDestinationConfigGenericWebhookArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ndresource = new NotificationDestination("ndresource", NotificationDestinationArgs.builder()
 *             .displayName("Notification Destination")
 *             .config(NotificationDestinationConfigArgs.builder()
 *                 .genericWebhook(NotificationDestinationConfigGenericWebhookArgs.builder()
 *                     .url("https://example.com/webhook")
 *                     .username("username")
 *                     .password("password")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * This resource can be imported by notification ID:
 * 
 * hcl
 * 
 * import {
 * 
 *   to = databricks_notification_destination.this
 * 
 *   id = &#34;&lt;notification-id&gt;&#34;
 * 
 * }
 * 
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/notificationDestination:NotificationDestination this &lt;notification-id&gt;
 * ```
 * 
 */
@ResourceType(type="databricks:index/notificationDestination:NotificationDestination")
public class NotificationDestination extends com.pulumi.resources.CustomResource {
    /**
     * The configuration of the Notification Destination. It must contain exactly one of the following blocks:
     * 
     */
    @Export(name="config", refs={NotificationDestinationConfig.class}, tree="[0]")
    private Output</* @Nullable */ NotificationDestinationConfig> config;

    /**
     * @return The configuration of the Notification Destination. It must contain exactly one of the following blocks:
     * 
     */
    public Output<Optional<NotificationDestinationConfig>> config() {
        return Codegen.optional(this.config);
    }
    /**
     * the type of Notification Destination.
     * 
     */
    @Export(name="destinationType", refs={String.class}, tree="[0]")
    private Output<String> destinationType;

    /**
     * @return the type of Notification Destination.
     * 
     */
    public Output<String> destinationType() {
        return this.destinationType;
    }
    /**
     * The display name of the Notification Destination.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name of the Notification Destination.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NotificationDestination(java.lang.String name) {
        this(name, NotificationDestinationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NotificationDestination(java.lang.String name, NotificationDestinationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NotificationDestination(java.lang.String name, NotificationDestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/notificationDestination:NotificationDestination", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NotificationDestination(java.lang.String name, Output<java.lang.String> id, @Nullable NotificationDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/notificationDestination:NotificationDestination", name, state, makeResourceOptions(options, id), false);
    }

    private static NotificationDestinationArgs makeArgs(NotificationDestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NotificationDestinationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NotificationDestination get(java.lang.String name, Output<java.lang.String> id, @Nullable NotificationDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NotificationDestination(name, id, state, options);
    }
}
