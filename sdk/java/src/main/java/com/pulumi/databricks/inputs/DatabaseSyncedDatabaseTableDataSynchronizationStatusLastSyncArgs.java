// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs Empty = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs();

    /**
     * (DeltaTableSyncInfo)
     * 
     */
    @Import(name="deltaTableSyncInfo")
    private @Nullable Output<DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs> deltaTableSyncInfo;

    /**
     * @return (DeltaTableSyncInfo)
     * 
     */
    public Optional<Output<DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs>> deltaTableSyncInfo() {
        return Optional.ofNullable(this.deltaTableSyncInfo);
    }

    /**
     * (string) - The end timestamp of the most recent successful synchronization.
     * This is the time when the data is available in the synced table
     * 
     */
    @Import(name="syncEndTimestamp")
    private @Nullable Output<String> syncEndTimestamp;

    /**
     * @return (string) - The end timestamp of the most recent successful synchronization.
     * This is the time when the data is available in the synced table
     * 
     */
    public Optional<Output<String>> syncEndTimestamp() {
        return Optional.ofNullable(this.syncEndTimestamp);
    }

    /**
     * (string) - The starting timestamp of the most recent successful synchronization from the source table
     * to the destination (synced) table.
     * Note this is the starting timestamp of the sync operation, not the end time.
     * E.g., for a batch, this is the time when the sync operation started
     * 
     */
    @Import(name="syncStartTimestamp")
    private @Nullable Output<String> syncStartTimestamp;

    /**
     * @return (string) - The starting timestamp of the most recent successful synchronization from the source table
     * to the destination (synced) table.
     * Note this is the starting timestamp of the sync operation, not the end time.
     * E.g., for a batch, this is the time when the sync operation started
     * 
     */
    public Optional<Output<String>> syncStartTimestamp() {
        return Optional.ofNullable(this.syncStartTimestamp);
    }

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs() {}

    private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs $) {
        this.deltaTableSyncInfo = $.deltaTableSyncInfo;
        this.syncEndTimestamp = $.syncEndTimestamp;
        this.syncStartTimestamp = $.syncStartTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs $;

        public Builder() {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs();
        }

        public Builder(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs defaults) {
            $ = new DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deltaTableSyncInfo (DeltaTableSyncInfo)
         * 
         * @return builder
         * 
         */
        public Builder deltaTableSyncInfo(@Nullable Output<DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs> deltaTableSyncInfo) {
            $.deltaTableSyncInfo = deltaTableSyncInfo;
            return this;
        }

        /**
         * @param deltaTableSyncInfo (DeltaTableSyncInfo)
         * 
         * @return builder
         * 
         */
        public Builder deltaTableSyncInfo(DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncDeltaTableSyncInfoArgs deltaTableSyncInfo) {
            return deltaTableSyncInfo(Output.of(deltaTableSyncInfo));
        }

        /**
         * @param syncEndTimestamp (string) - The end timestamp of the most recent successful synchronization.
         * This is the time when the data is available in the synced table
         * 
         * @return builder
         * 
         */
        public Builder syncEndTimestamp(@Nullable Output<String> syncEndTimestamp) {
            $.syncEndTimestamp = syncEndTimestamp;
            return this;
        }

        /**
         * @param syncEndTimestamp (string) - The end timestamp of the most recent successful synchronization.
         * This is the time when the data is available in the synced table
         * 
         * @return builder
         * 
         */
        public Builder syncEndTimestamp(String syncEndTimestamp) {
            return syncEndTimestamp(Output.of(syncEndTimestamp));
        }

        /**
         * @param syncStartTimestamp (string) - The starting timestamp of the most recent successful synchronization from the source table
         * to the destination (synced) table.
         * Note this is the starting timestamp of the sync operation, not the end time.
         * E.g., for a batch, this is the time when the sync operation started
         * 
         * @return builder
         * 
         */
        public Builder syncStartTimestamp(@Nullable Output<String> syncStartTimestamp) {
            $.syncStartTimestamp = syncStartTimestamp;
            return this;
        }

        /**
         * @param syncStartTimestamp (string) - The starting timestamp of the most recent successful synchronization from the source table
         * to the destination (synced) table.
         * Note this is the starting timestamp of the sync operation, not the end time.
         * E.g., for a batch, this is the time when the sync operation started
         * 
         * @return builder
         * 
         */
        public Builder syncStartTimestamp(String syncStartTimestamp) {
            return syncStartTimestamp(Output.of(syncStartTimestamp));
        }

        public DatabaseSyncedDatabaseTableDataSynchronizationStatusLastSyncArgs build() {
            return $;
        }
    }

}
