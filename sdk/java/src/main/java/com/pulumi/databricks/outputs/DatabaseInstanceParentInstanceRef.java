// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInstanceParentInstanceRef {
    /**
     * @return Branch time of the ref database instance.
     * For a parent ref instance, this is the point in time on the parent instance from which the
     * instance was created.
     * For a child ref instance, this is the point in time on the instance from which the child
     * instance was created.
     * Input: For specifying the point in time to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    private @Nullable String branchTime;
    /**
     * @return (string) - xref AIP-129. `lsn` is owned by the client, while `effective_lsn` is owned by the server.
     * `lsn` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effective_lsn` on the other hand will always bet set in all response messages (Create/Update/Get/List).
     * For a parent ref instance, this is the LSN on the parent instance from which the
     * instance was created.
     * For a child ref instance, this is the LSN on the instance from which the child instance
     * was created
     * 
     */
    private @Nullable String effectiveLsn;
    /**
     * @return User-specified WAL LSN of the ref database instance.
     * 
     * Input: For specifying the WAL LSN to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    private @Nullable String lsn;
    /**
     * @return The name of the instance. This is the unique identifier for the instance
     * 
     */
    private @Nullable String name;
    /**
     * @return (string) - Id of the ref database instance
     * 
     */
    private @Nullable String uid;

    private DatabaseInstanceParentInstanceRef() {}
    /**
     * @return Branch time of the ref database instance.
     * For a parent ref instance, this is the point in time on the parent instance from which the
     * instance was created.
     * For a child ref instance, this is the point in time on the instance from which the child
     * instance was created.
     * Input: For specifying the point in time to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    public Optional<String> branchTime() {
        return Optional.ofNullable(this.branchTime);
    }
    /**
     * @return (string) - xref AIP-129. `lsn` is owned by the client, while `effective_lsn` is owned by the server.
     * `lsn` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effective_lsn` on the other hand will always bet set in all response messages (Create/Update/Get/List).
     * For a parent ref instance, this is the LSN on the parent instance from which the
     * instance was created.
     * For a child ref instance, this is the LSN on the instance from which the child instance
     * was created
     * 
     */
    public Optional<String> effectiveLsn() {
        return Optional.ofNullable(this.effectiveLsn);
    }
    /**
     * @return User-specified WAL LSN of the ref database instance.
     * 
     * Input: For specifying the WAL LSN to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    public Optional<String> lsn() {
        return Optional.ofNullable(this.lsn);
    }
    /**
     * @return The name of the instance. This is the unique identifier for the instance
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (string) - Id of the ref database instance
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceParentInstanceRef defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branchTime;
        private @Nullable String effectiveLsn;
        private @Nullable String lsn;
        private @Nullable String name;
        private @Nullable String uid;
        public Builder() {}
        public Builder(DatabaseInstanceParentInstanceRef defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchTime = defaults.branchTime;
    	      this.effectiveLsn = defaults.effectiveLsn;
    	      this.lsn = defaults.lsn;
    	      this.name = defaults.name;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder branchTime(@Nullable String branchTime) {

            this.branchTime = branchTime;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveLsn(@Nullable String effectiveLsn) {

            this.effectiveLsn = effectiveLsn;
            return this;
        }
        @CustomType.Setter
        public Builder lsn(@Nullable String lsn) {

            this.lsn = lsn;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {

            this.uid = uid;
            return this;
        }
        public DatabaseInstanceParentInstanceRef build() {
            final var _resultValue = new DatabaseInstanceParentInstanceRef();
            _resultValue.branchTime = branchTime;
            _resultValue.effectiveLsn = effectiveLsn;
            _resultValue.lsn = lsn;
            _resultValue.name = name;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
