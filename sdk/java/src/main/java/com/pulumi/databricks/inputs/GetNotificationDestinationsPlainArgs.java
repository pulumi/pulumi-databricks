// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNotificationDestinationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNotificationDestinationsPlainArgs Empty = new GetNotificationDestinationsPlainArgs();

    /**
     * A **case-insensitive** substring to filter Notification Destinations by their display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable String displayNameContains;

    /**
     * @return A **case-insensitive** substring to filter Notification Destinations by their display name.
     * 
     */
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    /**
     * The type of the Notification Destination to filter by. Valid values are:
     * * `EMAIL` - Filters Notification Destinations of type Email.
     * * `MICROSOFT_TEAMS` - Filters Notification Destinations of type Microsoft Teams.
     * * `PAGERDUTY` - Filters Notification Destinations of type PagerDuty.
     * * `SLACK` - Filters Notification Destinations of type Slack.
     * * `WEBHOOK` - Filters Notification Destinations of type Webhook.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return The type of the Notification Destination to filter by. Valid values are:
     * * `EMAIL` - Filters Notification Destinations of type Email.
     * * `MICROSOFT_TEAMS` - Filters Notification Destinations of type Microsoft Teams.
     * * `PAGERDUTY` - Filters Notification Destinations of type PagerDuty.
     * * `SLACK` - Filters Notification Destinations of type Slack.
     * * `WEBHOOK` - Filters Notification Destinations of type Webhook.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetNotificationDestinationsPlainArgs() {}

    private GetNotificationDestinationsPlainArgs(GetNotificationDestinationsPlainArgs $) {
        this.displayNameContains = $.displayNameContains;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNotificationDestinationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNotificationDestinationsPlainArgs $;

        public Builder() {
            $ = new GetNotificationDestinationsPlainArgs();
        }

        public Builder(GetNotificationDestinationsPlainArgs defaults) {
            $ = new GetNotificationDestinationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayNameContains A **case-insensitive** substring to filter Notification Destinations by their display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param type The type of the Notification Destination to filter by. Valid values are:
         * * `EMAIL` - Filters Notification Destinations of type Email.
         * * `MICROSOFT_TEAMS` - Filters Notification Destinations of type Microsoft Teams.
         * * `PAGERDUTY` - Filters Notification Destinations of type PagerDuty.
         * * `SLACK` - Filters Notification Destinations of type Slack.
         * * `WEBHOOK` - Filters Notification Destinations of type Webhook.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetNotificationDestinationsPlainArgs build() {
            return $;
        }
    }

}
