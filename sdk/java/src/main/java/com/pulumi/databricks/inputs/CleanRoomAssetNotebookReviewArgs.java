// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CleanRoomAssetNotebookReviewArgs extends com.pulumi.resources.ResourceArgs {

    public static final CleanRoomAssetNotebookReviewArgs Empty = new CleanRoomAssetNotebookReviewArgs();

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * When the review was submitted, in epoch milliseconds
     * 
     */
    @Import(name="createdAtMillis")
    private @Nullable Output<Integer> createdAtMillis;

    /**
     * @return When the review was submitted, in epoch milliseconds
     * 
     */
    public Optional<Output<Integer>> createdAtMillis() {
        return Optional.ofNullable(this.createdAtMillis);
    }

    /**
     * (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
     * 
     */
    @Import(name="reviewState")
    private @Nullable Output<String> reviewState;

    /**
     * @return (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
     * 
     */
    public Optional<Output<String>> reviewState() {
        return Optional.ofNullable(this.reviewState);
    }

    /**
     * Specified when the review was not explicitly made by a user. Possible values are: `AUTO_APPROVED`, `BACKFILLED`
     * 
     */
    @Import(name="reviewSubReason")
    private @Nullable Output<String> reviewSubReason;

    /**
     * @return Specified when the review was not explicitly made by a user. Possible values are: `AUTO_APPROVED`, `BACKFILLED`
     * 
     */
    public Optional<Output<String>> reviewSubReason() {
        return Optional.ofNullable(this.reviewSubReason);
    }

    /**
     * Collaborator alias of the reviewer
     * 
     */
    @Import(name="reviewerCollaboratorAlias")
    private @Nullable Output<String> reviewerCollaboratorAlias;

    /**
     * @return Collaborator alias of the reviewer
     * 
     */
    public Optional<Output<String>> reviewerCollaboratorAlias() {
        return Optional.ofNullable(this.reviewerCollaboratorAlias);
    }

    private CleanRoomAssetNotebookReviewArgs() {}

    private CleanRoomAssetNotebookReviewArgs(CleanRoomAssetNotebookReviewArgs $) {
        this.comment = $.comment;
        this.createdAtMillis = $.createdAtMillis;
        this.reviewState = $.reviewState;
        this.reviewSubReason = $.reviewSubReason;
        this.reviewerCollaboratorAlias = $.reviewerCollaboratorAlias;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CleanRoomAssetNotebookReviewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CleanRoomAssetNotebookReviewArgs $;

        public Builder() {
            $ = new CleanRoomAssetNotebookReviewArgs();
        }

        public Builder(CleanRoomAssetNotebookReviewArgs defaults) {
            $ = new CleanRoomAssetNotebookReviewArgs(Objects.requireNonNull(defaults));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param createdAtMillis When the review was submitted, in epoch milliseconds
         * 
         * @return builder
         * 
         */
        public Builder createdAtMillis(@Nullable Output<Integer> createdAtMillis) {
            $.createdAtMillis = createdAtMillis;
            return this;
        }

        /**
         * @param createdAtMillis When the review was submitted, in epoch milliseconds
         * 
         * @return builder
         * 
         */
        public Builder createdAtMillis(Integer createdAtMillis) {
            return createdAtMillis(Output.of(createdAtMillis));
        }

        /**
         * @param reviewState (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
         * 
         * @return builder
         * 
         */
        public Builder reviewState(@Nullable Output<String> reviewState) {
            $.reviewState = reviewState;
            return this;
        }

        /**
         * @param reviewState (string) - Top-level status derived from all reviews. Possible values are: `APPROVED`, `PENDING`, `REJECTED`
         * 
         * @return builder
         * 
         */
        public Builder reviewState(String reviewState) {
            return reviewState(Output.of(reviewState));
        }

        /**
         * @param reviewSubReason Specified when the review was not explicitly made by a user. Possible values are: `AUTO_APPROVED`, `BACKFILLED`
         * 
         * @return builder
         * 
         */
        public Builder reviewSubReason(@Nullable Output<String> reviewSubReason) {
            $.reviewSubReason = reviewSubReason;
            return this;
        }

        /**
         * @param reviewSubReason Specified when the review was not explicitly made by a user. Possible values are: `AUTO_APPROVED`, `BACKFILLED`
         * 
         * @return builder
         * 
         */
        public Builder reviewSubReason(String reviewSubReason) {
            return reviewSubReason(Output.of(reviewSubReason));
        }

        /**
         * @param reviewerCollaboratorAlias Collaborator alias of the reviewer
         * 
         * @return builder
         * 
         */
        public Builder reviewerCollaboratorAlias(@Nullable Output<String> reviewerCollaboratorAlias) {
            $.reviewerCollaboratorAlias = reviewerCollaboratorAlias;
            return this;
        }

        /**
         * @param reviewerCollaboratorAlias Collaborator alias of the reviewer
         * 
         * @return builder
         * 
         */
        public Builder reviewerCollaboratorAlias(String reviewerCollaboratorAlias) {
            return reviewerCollaboratorAlias(Output.of(reviewerCollaboratorAlias));
        }

        public CleanRoomAssetNotebookReviewArgs build() {
            return $;
        }
    }

}
