// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class JobSparkPythonTask {
    /**
     * @return (List) Command line parameters passed to the Python file.
     * 
     */
    private @Nullable List<String> parameters;
    /**
     * @return The URI of the Python file to be executed. databricks_dbfs_file, cloud file URIs (e.g. `s3:/`, `abfss:/`, `gs:/`) and workspace paths are supported. For python files stored in the Databricks workspace, the path must be absolute and begin with `/Repos`. This field is required.
     * 
     */
    private String pythonFile;

    private JobSparkPythonTask() {}
    /**
     * @return (List) Command line parameters passed to the Python file.
     * 
     */
    public List<String> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    /**
     * @return The URI of the Python file to be executed. databricks_dbfs_file, cloud file URIs (e.g. `s3:/`, `abfss:/`, `gs:/`) and workspace paths are supported. For python files stored in the Databricks workspace, the path must be absolute and begin with `/Repos`. This field is required.
     * 
     */
    public String pythonFile() {
        return this.pythonFile;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobSparkPythonTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> parameters;
        private String pythonFile;
        public Builder() {}
        public Builder(JobSparkPythonTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameters = defaults.parameters;
    	      this.pythonFile = defaults.pythonFile;
        }

        @CustomType.Setter
        public Builder parameters(@Nullable List<String> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(String... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder pythonFile(String pythonFile) {
            this.pythonFile = Objects.requireNonNull(pythonFile);
            return this;
        }
        public JobSparkPythonTask build() {
            final var o = new JobSparkPythonTask();
            o.parameters = parameters;
            o.pythonFile = pythonFile;
            return o;
        }
    }
}
