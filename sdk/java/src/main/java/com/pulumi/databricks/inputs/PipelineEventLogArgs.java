// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineEventLogArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineEventLogArgs Empty = new PipelineEventLogArgs();

    /**
     * The UC catalog the event log is published under.
     * 
     */
    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    /**
     * @return The UC catalog the event log is published under.
     * 
     */
    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    /**
     * The table name the event log is published to in UC.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The table name the event log is published to in UC.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The UC schema the event log is published under.
     * 
     */
    @Import(name="schema")
    private @Nullable Output<String> schema;

    /**
     * @return The UC schema the event log is published under.
     * 
     */
    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    private PipelineEventLogArgs() {}

    private PipelineEventLogArgs(PipelineEventLogArgs $) {
        this.catalog = $.catalog;
        this.name = $.name;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineEventLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineEventLogArgs $;

        public Builder() {
            $ = new PipelineEventLogArgs();
        }

        public Builder(PipelineEventLogArgs defaults) {
            $ = new PipelineEventLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalog The UC catalog the event log is published under.
         * 
         * @return builder
         * 
         */
        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        /**
         * @param catalog The UC catalog the event log is published under.
         * 
         * @return builder
         * 
         */
        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        /**
         * @param name The table name the event log is published to in UC.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The table name the event log is published to in UC.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema The UC schema the event log is published under.
         * 
         * @return builder
         * 
         */
        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema The UC schema the event log is published under.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public PipelineEventLogArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("PipelineEventLogArgs", "name");
            }
            return $;
        }
    }

}
