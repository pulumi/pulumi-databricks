// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskPowerBiTaskTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskPowerBiTaskTableArgs Empty = new JobTaskPowerBiTaskTableArgs();

    /**
     * The catalog name in Databricks
     * 
     */
    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    /**
     * @return The catalog name in Databricks
     * 
     */
    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    /**
     * The table name in Databricks. If empty, all tables under the schema are selected.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The table name in Databricks. If empty, all tables under the schema are selected.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The schema name in Databricks
     * 
     */
    @Import(name="schema")
    private @Nullable Output<String> schema;

    /**
     * @return The schema name in Databricks
     * 
     */
    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    /**
     * The Power BI storage mode of the table
     * 
     */
    @Import(name="storageMode")
    private @Nullable Output<String> storageMode;

    /**
     * @return The Power BI storage mode of the table
     * 
     */
    public Optional<Output<String>> storageMode() {
        return Optional.ofNullable(this.storageMode);
    }

    private JobTaskPowerBiTaskTableArgs() {}

    private JobTaskPowerBiTaskTableArgs(JobTaskPowerBiTaskTableArgs $) {
        this.catalog = $.catalog;
        this.name = $.name;
        this.schema = $.schema;
        this.storageMode = $.storageMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskPowerBiTaskTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskPowerBiTaskTableArgs $;

        public Builder() {
            $ = new JobTaskPowerBiTaskTableArgs();
        }

        public Builder(JobTaskPowerBiTaskTableArgs defaults) {
            $ = new JobTaskPowerBiTaskTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalog The catalog name in Databricks
         * 
         * @return builder
         * 
         */
        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        /**
         * @param catalog The catalog name in Databricks
         * 
         * @return builder
         * 
         */
        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        /**
         * @param name The table name in Databricks. If empty, all tables under the schema are selected.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The table name in Databricks. If empty, all tables under the schema are selected.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema The schema name in Databricks
         * 
         * @return builder
         * 
         */
        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema The schema name in Databricks
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        /**
         * @param storageMode The Power BI storage mode of the table
         * 
         * @return builder
         * 
         */
        public Builder storageMode(@Nullable Output<String> storageMode) {
            $.storageMode = storageMode;
            return this;
        }

        /**
         * @param storageMode The Power BI storage mode of the table
         * 
         * @return builder
         * 
         */
        public Builder storageMode(String storageMode) {
            return storageMode(Output.of(storageMode));
        }

        public JobTaskPowerBiTaskTableArgs build() {
            return $;
        }
    }

}
