// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MlflowWebhookHttpUrlSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final MlflowWebhookHttpUrlSpecArgs Empty = new MlflowWebhookHttpUrlSpecArgs();

    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    @Import(name="enableSslVerification")
    private @Nullable Output<Boolean> enableSslVerification;

    public Optional<Output<Boolean>> enableSslVerification() {
        return Optional.ofNullable(this.enableSslVerification);
    }

    @Import(name="secret")
    private @Nullable Output<String> secret;

    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    private MlflowWebhookHttpUrlSpecArgs() {}

    private MlflowWebhookHttpUrlSpecArgs(MlflowWebhookHttpUrlSpecArgs $) {
        this.authorization = $.authorization;
        this.enableSslVerification = $.enableSslVerification;
        this.secret = $.secret;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MlflowWebhookHttpUrlSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MlflowWebhookHttpUrlSpecArgs $;

        public Builder() {
            $ = new MlflowWebhookHttpUrlSpecArgs();
        }

        public Builder(MlflowWebhookHttpUrlSpecArgs defaults) {
            $ = new MlflowWebhookHttpUrlSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        public Builder enableSslVerification(@Nullable Output<Boolean> enableSslVerification) {
            $.enableSslVerification = enableSslVerification;
            return this;
        }

        public Builder enableSslVerification(Boolean enableSslVerification) {
            return enableSslVerification(Output.of(enableSslVerification));
        }

        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public MlflowWebhookHttpUrlSpecArgs build() {
            if ($.url == null) {
                throw new MissingRequiredPropertyException("MlflowWebhookHttpUrlSpecArgs", "url");
            }
            return $;
        }
    }

}
