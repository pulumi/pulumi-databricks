// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MetastoreDataAccessGcpServiceAccountKey {
    private String email;
    private String privateKey;
    private String privateKeyId;

    private MetastoreDataAccessGcpServiceAccountKey() {}
    public String email() {
        return this.email;
    }
    public String privateKey() {
        return this.privateKey;
    }
    public String privateKeyId() {
        return this.privateKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetastoreDataAccessGcpServiceAccountKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private String privateKey;
        private String privateKeyId;
        public Builder() {}
        public Builder(MetastoreDataAccessGcpServiceAccountKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.privateKey = defaults.privateKey;
    	      this.privateKeyId = defaults.privateKeyId;
        }

        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessGcpServiceAccountKey", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder privateKey(String privateKey) {
            if (privateKey == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessGcpServiceAccountKey", "privateKey");
            }
            this.privateKey = privateKey;
            return this;
        }
        @CustomType.Setter
        public Builder privateKeyId(String privateKeyId) {
            if (privateKeyId == null) {
              throw new MissingRequiredPropertyException("MetastoreDataAccessGcpServiceAccountKey", "privateKeyId");
            }
            this.privateKeyId = privateKeyId;
            return this;
        }
        public MetastoreDataAccessGcpServiceAccountKey build() {
            final var _resultValue = new MetastoreDataAccessGcpServiceAccountKey();
            _resultValue.email = email;
            _resultValue.privateKey = privateKey;
            _resultValue.privateKeyId = privateKeyId;
            return _resultValue;
        }
    }
}
