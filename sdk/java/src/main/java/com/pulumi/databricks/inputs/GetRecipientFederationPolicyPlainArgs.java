// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetRecipientFederationPolicyOidcPolicy;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecipientFederationPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecipientFederationPolicyPlainArgs Empty = new GetRecipientFederationPolicyPlainArgs();

    /**
     * (string) - Description of the policy. This is a user-provided description
     * 
     */
    @Import(name="comment")
    private @Nullable String comment;

    /**
     * @return (string) - Description of the policy. This is a user-provided description
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Name of the federation policy. A recipient can have multiple policies with different names.
     * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the federation policy. A recipient can have multiple policies with different names.
     * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
     * 
     */
    @Import(name="oidcPolicy")
    private @Nullable GetRecipientFederationPolicyOidcPolicy oidcPolicy;

    /**
     * @return (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
     * 
     */
    public Optional<GetRecipientFederationPolicyOidcPolicy> oidcPolicy() {
        return Optional.ofNullable(this.oidcPolicy);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable String workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private GetRecipientFederationPolicyPlainArgs() {}

    private GetRecipientFederationPolicyPlainArgs(GetRecipientFederationPolicyPlainArgs $) {
        this.comment = $.comment;
        this.name = $.name;
        this.oidcPolicy = $.oidcPolicy;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecipientFederationPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecipientFederationPolicyPlainArgs $;

        public Builder() {
            $ = new GetRecipientFederationPolicyPlainArgs();
        }

        public Builder(GetRecipientFederationPolicyPlainArgs defaults) {
            $ = new GetRecipientFederationPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment (string) - Description of the policy. This is a user-provided description
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param name Name of the federation policy. A recipient can have multiple policies with different names.
         * The name must contain only lowercase alphanumeric characters, numbers, and hyphens
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param oidcPolicy (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
         * 
         * @return builder
         * 
         */
        public Builder oidcPolicy(@Nullable GetRecipientFederationPolicyOidcPolicy oidcPolicy) {
            $.oidcPolicy = oidcPolicy;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public GetRecipientFederationPolicyPlainArgs build() {
            return $;
        }
    }

}
