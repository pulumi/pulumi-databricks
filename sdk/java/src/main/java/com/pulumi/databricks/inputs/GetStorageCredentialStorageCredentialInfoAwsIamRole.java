// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStorageCredentialStorageCredentialInfoAwsIamRole extends com.pulumi.resources.InvokeArgs {

    public static final GetStorageCredentialStorageCredentialInfoAwsIamRole Empty = new GetStorageCredentialStorageCredentialInfoAwsIamRole();

    /**
     * (output only) - The external ID used in role assumption to prevent confused deputy problem.
     * 
     */
    @Import(name="externalId")
    private @Nullable String externalId;

    /**
     * @return (output only) - The external ID used in role assumption to prevent confused deputy problem.
     * 
     */
    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form `arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF`
     * 
     */
    @Import(name="roleArn", required=true)
    private String roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form `arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF`
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * (output only) - The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks. This is the identity that is going to assume the AWS IAM role.
     * 
     */
    @Import(name="unityCatalogIamArn")
    private @Nullable String unityCatalogIamArn;

    /**
     * @return (output only) - The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks. This is the identity that is going to assume the AWS IAM role.
     * 
     */
    public Optional<String> unityCatalogIamArn() {
        return Optional.ofNullable(this.unityCatalogIamArn);
    }

    private GetStorageCredentialStorageCredentialInfoAwsIamRole() {}

    private GetStorageCredentialStorageCredentialInfoAwsIamRole(GetStorageCredentialStorageCredentialInfoAwsIamRole $) {
        this.externalId = $.externalId;
        this.roleArn = $.roleArn;
        this.unityCatalogIamArn = $.unityCatalogIamArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageCredentialStorageCredentialInfoAwsIamRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageCredentialStorageCredentialInfoAwsIamRole $;

        public Builder() {
            $ = new GetStorageCredentialStorageCredentialInfoAwsIamRole();
        }

        public Builder(GetStorageCredentialStorageCredentialInfoAwsIamRole defaults) {
            $ = new GetStorageCredentialStorageCredentialInfoAwsIamRole(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalId (output only) - The external ID used in role assumption to prevent confused deputy problem.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable String externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form `arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF`
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param unityCatalogIamArn (output only) - The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks. This is the identity that is going to assume the AWS IAM role.
         * 
         * @return builder
         * 
         */
        public Builder unityCatalogIamArn(@Nullable String unityCatalogIamArn) {
            $.unityCatalogIamArn = unityCatalogIamArn;
            return this;
        }

        public GetStorageCredentialStorageCredentialInfoAwsIamRole build() {
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("GetStorageCredentialStorageCredentialInfoAwsIamRole", "roleArn");
            }
            return $;
        }
    }

}
