// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CleanRoomsCleanRoomRemoteDetailedInfoCollaborator {
    /**
     * @return Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
     * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    private String collaboratorAlias;
    /**
     * @return (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
     * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
     * these values and could change in the future
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
     * 
     */
    private @Nullable String globalMetastoreId;
    /**
     * @return Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
     * for the creator of the clean room, and non-empty for the invitees of the clean room.
     * It is only returned in the output when clean room creator calls GET
     * 
     */
    private @Nullable String inviteRecipientEmail;
    /**
     * @return Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
     * invite_recipient_email is specified.
     * It should be empty when the collaborator is the creator of the clean room
     * 
     */
    private @Nullable Integer inviteRecipientWorkspaceId;
    /**
     * @return (string) - Organization name
     * configured in the metastore
     * 
     */
    private @Nullable String organizationName;

    private CleanRoomsCleanRoomRemoteDetailedInfoCollaborator() {}
    /**
     * @return Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
     * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    public String collaboratorAlias() {
        return this.collaboratorAlias;
    }
    /**
     * @return (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
     * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
     * these values and could change in the future
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
     * 
     */
    public Optional<String> globalMetastoreId() {
        return Optional.ofNullable(this.globalMetastoreId);
    }
    /**
     * @return Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
     * for the creator of the clean room, and non-empty for the invitees of the clean room.
     * It is only returned in the output when clean room creator calls GET
     * 
     */
    public Optional<String> inviteRecipientEmail() {
        return Optional.ofNullable(this.inviteRecipientEmail);
    }
    /**
     * @return Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
     * invite_recipient_email is specified.
     * It should be empty when the collaborator is the creator of the clean room
     * 
     */
    public Optional<Integer> inviteRecipientWorkspaceId() {
        return Optional.ofNullable(this.inviteRecipientWorkspaceId);
    }
    /**
     * @return (string) - Organization name
     * configured in the metastore
     * 
     */
    public Optional<String> organizationName() {
        return Optional.ofNullable(this.organizationName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CleanRoomsCleanRoomRemoteDetailedInfoCollaborator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String collaboratorAlias;
        private @Nullable String displayName;
        private @Nullable String globalMetastoreId;
        private @Nullable String inviteRecipientEmail;
        private @Nullable Integer inviteRecipientWorkspaceId;
        private @Nullable String organizationName;
        public Builder() {}
        public Builder(CleanRoomsCleanRoomRemoteDetailedInfoCollaborator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collaboratorAlias = defaults.collaboratorAlias;
    	      this.displayName = defaults.displayName;
    	      this.globalMetastoreId = defaults.globalMetastoreId;
    	      this.inviteRecipientEmail = defaults.inviteRecipientEmail;
    	      this.inviteRecipientWorkspaceId = defaults.inviteRecipientWorkspaceId;
    	      this.organizationName = defaults.organizationName;
        }

        @CustomType.Setter
        public Builder collaboratorAlias(String collaboratorAlias) {
            if (collaboratorAlias == null) {
              throw new MissingRequiredPropertyException("CleanRoomsCleanRoomRemoteDetailedInfoCollaborator", "collaboratorAlias");
            }
            this.collaboratorAlias = collaboratorAlias;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder globalMetastoreId(@Nullable String globalMetastoreId) {

            this.globalMetastoreId = globalMetastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder inviteRecipientEmail(@Nullable String inviteRecipientEmail) {

            this.inviteRecipientEmail = inviteRecipientEmail;
            return this;
        }
        @CustomType.Setter
        public Builder inviteRecipientWorkspaceId(@Nullable Integer inviteRecipientWorkspaceId) {

            this.inviteRecipientWorkspaceId = inviteRecipientWorkspaceId;
            return this;
        }
        @CustomType.Setter
        public Builder organizationName(@Nullable String organizationName) {

            this.organizationName = organizationName;
            return this;
        }
        public CleanRoomsCleanRoomRemoteDetailedInfoCollaborator build() {
            final var _resultValue = new CleanRoomsCleanRoomRemoteDetailedInfoCollaborator();
            _resultValue.collaboratorAlias = collaboratorAlias;
            _resultValue.displayName = displayName;
            _resultValue.globalMetastoreId = globalMetastoreId;
            _resultValue.inviteRecipientEmail = inviteRecipientEmail;
            _resultValue.inviteRecipientWorkspaceId = inviteRecipientWorkspaceId;
            _resultValue.organizationName = organizationName;
            return _resultValue;
        }
    }
}
