// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.TagPolicyValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TagPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final TagPolicyState Empty = new TagPolicyState();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="tagKey")
    private @Nullable Output<String> tagKey;

    public Optional<Output<String>> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    @Import(name="values")
    private @Nullable Output<List<TagPolicyValueArgs>> values;

    public Optional<Output<List<TagPolicyValueArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private TagPolicyState() {}

    private TagPolicyState(TagPolicyState $) {
        this.description = $.description;
        this.tagKey = $.tagKey;
        this.values = $.values;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagPolicyState $;

        public Builder() {
            $ = new TagPolicyState();
        }

        public Builder(TagPolicyState defaults) {
            $ = new TagPolicyState(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder tagKey(@Nullable Output<String> tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        public Builder tagKey(String tagKey) {
            return tagKey(Output.of(tagKey));
        }

        public Builder values(@Nullable Output<List<TagPolicyValueArgs>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<TagPolicyValueArgs> values) {
            return values(Output.of(values));
        }

        public Builder values(TagPolicyValueArgs... values) {
            return values(List.of(values));
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public TagPolicyState build() {
            return $;
        }
    }

}
