// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServicePrincipalsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServicePrincipalsArgs Empty = new GetServicePrincipalsArgs();

    /**
     * List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
     * 
     */
    @Import(name="applicationIds")
    private @Nullable Output<List<String>> applicationIds;

    /**
     * @return List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
     * 
     */
    public Optional<Output<List<String>>> applicationIds() {
        return Optional.ofNullable(this.applicationIds);
    }

    /**
     * Only return databricks.ServicePrincipal display name that match the given name string
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable Output<String> displayNameContains;

    /**
     * @return Only return databricks.ServicePrincipal display name that match the given name string
     * 
     */
    public Optional<Output<String>> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    private GetServicePrincipalsArgs() {}

    private GetServicePrincipalsArgs(GetServicePrincipalsArgs $) {
        this.applicationIds = $.applicationIds;
        this.displayNameContains = $.displayNameContains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServicePrincipalsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServicePrincipalsArgs $;

        public Builder() {
            $ = new GetServicePrincipalsArgs();
        }

        public Builder(GetServicePrincipalsArgs defaults) {
            $ = new GetServicePrincipalsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationIds List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
         * 
         * @return builder
         * 
         */
        public Builder applicationIds(@Nullable Output<List<String>> applicationIds) {
            $.applicationIds = applicationIds;
            return this;
        }

        /**
         * @param applicationIds List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
         * 
         * @return builder
         * 
         */
        public Builder applicationIds(List<String> applicationIds) {
            return applicationIds(Output.of(applicationIds));
        }

        /**
         * @param applicationIds List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
         * 
         * @return builder
         * 
         */
        public Builder applicationIds(String... applicationIds) {
            return applicationIds(List.of(applicationIds));
        }

        /**
         * @param displayNameContains Only return databricks.ServicePrincipal display name that match the given name string
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable Output<String> displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNameContains Only return databricks.ServicePrincipal display name that match the given name string
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(String displayNameContains) {
            return displayNameContains(Output.of(displayNameContains));
        }

        public GetServicePrincipalsArgs build() {
            return $;
        }
    }

}
