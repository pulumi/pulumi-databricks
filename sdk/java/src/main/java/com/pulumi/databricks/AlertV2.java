// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.AlertV2Args;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.AlertV2State;
import com.pulumi.databricks.outputs.AlertV2EffectiveRunAs;
import com.pulumi.databricks.outputs.AlertV2Evaluation;
import com.pulumi.databricks.outputs.AlertV2RunAs;
import com.pulumi.databricks.outputs.AlertV2Schedule;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Alert v2 resource allows you to manage SQL alerts in Databricks SQL. Alerts monitor query results and notify you when specific conditions are met.
 * 
 * Alerts run on a schedule and evaluate query results against defined thresholds. When an alert is triggered, notifications can be sent to specified users or destinations.
 * 
 * ## Example Usage
 * 
 * ### Basic Alert Example
 * This example creates a basic alert that monitors a query and sends notifications to a user when the value exceeds a threshold:
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.AlertV2;
 * import com.pulumi.databricks.AlertV2Args;
 * import com.pulumi.databricks.inputs.AlertV2EvaluationArgs;
 * import com.pulumi.databricks.inputs.AlertV2EvaluationSourceArgs;
 * import com.pulumi.databricks.inputs.AlertV2EvaluationThresholdArgs;
 * import com.pulumi.databricks.inputs.AlertV2EvaluationThresholdValueArgs;
 * import com.pulumi.databricks.inputs.AlertV2EvaluationNotificationArgs;
 * import com.pulumi.databricks.inputs.AlertV2ScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var basicAlert = new AlertV2("basicAlert", AlertV2Args.builder()
 *             .displayName("High Error Rate Alert")
 *             .queryText("SELECT count(*) as error_count FROM logs WHERE level = 'ERROR' AND timestamp > now() - interval 1 hour")
 *             .warehouseId("a7066a8ef796be84")
 *             .parentPath("/Users/user}{@literal @}{@code example.com")
 *             .evaluation(AlertV2EvaluationArgs.builder()
 *                 .source(AlertV2EvaluationSourceArgs.builder()
 *                     .name("error_count")
 *                     .display("Error Count")
 *                     .aggregation("COUNT")
 *                     .build())
 *                 .comparison_operator("GREATER_THAN")
 *                 .threshold(AlertV2EvaluationThresholdArgs.builder()
 *                     .value(AlertV2EvaluationThresholdValueArgs.builder()
 *                         .doubleValue(100.0)
 *                         .build())
 *                     .build())
 *                 .empty_result_state("OK")
 *                 .notification(AlertV2EvaluationNotificationArgs.builder()
 *                     .subscriptions(AlertV2EvaluationNotificationSubscriptionArgs.builder()
 *                         .userEmail("user}{@literal @}{@code example.com")
 *                         .build())
 *                     .notifyOnOk(true)
 *                     .build())
 *                 .build())
 *             .schedule(AlertV2ScheduleArgs.builder()
 *                 .quartz_cron_schedule("0 0/15 * * * ?")
 *                 .timezone_id("America/Los_Angeles")
 *                 .pause_status("UNPAUSED")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * As of Pulumi v1.5, resources can be imported through configuration.
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;id&#34;
 * 
 *   to = databricks_alert_v2.this
 * 
 * }
 * 
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 * 
 * ```sh
 * $ pulumi import databricks:index/alertV2:AlertV2 databricks_alert_v2 &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/alertV2:AlertV2")
public class AlertV2 extends com.pulumi.resources.CustomResource {
    /**
     * (string) - The timestamp indicating when the alert was created
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (string) - The timestamp indicating when the alert was created
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Custom description for the alert. support mustache template
     * 
     */
    @Export(name="customDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customDescription;

    /**
     * @return Custom description for the alert. support mustache template
     * 
     */
    public Output<Optional<String>> customDescription() {
        return Codegen.optional(this.customDescription);
    }
    /**
     * Custom summary for the alert. support mustache template
     * 
     */
    @Export(name="customSummary", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customSummary;

    /**
     * @return Custom summary for the alert. support mustache template
     * 
     */
    public Output<Optional<String>> customSummary() {
        return Codegen.optional(this.customSummary);
    }
    /**
     * The display name of the alert
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name of the alert
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * (AlertV2RunAs) - The actual identity that will be used to execute the alert.
     * This is an output-only field that shows the resolved run-as identity after applying
     * permissions and defaults
     * 
     */
    @Export(name="effectiveRunAs", refs={AlertV2EffectiveRunAs.class}, tree="[0]")
    private Output<AlertV2EffectiveRunAs> effectiveRunAs;

    /**
     * @return (AlertV2RunAs) - The actual identity that will be used to execute the alert.
     * This is an output-only field that shows the resolved run-as identity after applying
     * permissions and defaults
     * 
     */
    public Output<AlertV2EffectiveRunAs> effectiveRunAs() {
        return this.effectiveRunAs;
    }
    @Export(name="evaluation", refs={AlertV2Evaluation.class}, tree="[0]")
    private Output</* @Nullable */ AlertV2Evaluation> evaluation;

    public Output<Optional<AlertV2Evaluation>> evaluation() {
        return Codegen.optional(this.evaluation);
    }
    /**
     * (string) - Indicates whether the query is trashed. Possible values are: `ACTIVE`, `TRASHED`
     * 
     */
    @Export(name="lifecycleState", refs={String.class}, tree="[0]")
    private Output<String> lifecycleState;

    /**
     * @return (string) - Indicates whether the query is trashed. Possible values are: `ACTIVE`, `TRASHED`
     * 
     */
    public Output<String> lifecycleState() {
        return this.lifecycleState;
    }
    /**
     * (string) - The owner&#39;s username. This field is set to &#34;Unavailable&#34; if the user has been deleted
     * 
     */
    @Export(name="ownerUserName", refs={String.class}, tree="[0]")
    private Output<String> ownerUserName;

    /**
     * @return (string) - The owner&#39;s username. This field is set to &#34;Unavailable&#34; if the user has been deleted
     * 
     */
    public Output<String> ownerUserName() {
        return this.ownerUserName;
    }
    /**
     * The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
     * 
     */
    @Export(name="parentPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentPath;

    /**
     * @return The workspace path of the folder containing the alert. Can only be set on create, and cannot be updated
     * 
     */
    public Output<Optional<String>> parentPath() {
        return Codegen.optional(this.parentPath);
    }
    /**
     * Text of the query to be run
     * 
     */
    @Export(name="queryText", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> queryText;

    /**
     * @return Text of the query to be run
     * 
     */
    public Output<Optional<String>> queryText() {
        return Codegen.optional(this.queryText);
    }
    /**
     * Specifies the identity that will be used to run the alert.
     * This field allows you to configure alerts to run as a specific user or service principal.
     * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
     * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
     *   If not specified, the alert will run as the request user
     * 
     */
    @Export(name="runAs", refs={AlertV2RunAs.class}, tree="[0]")
    private Output</* @Nullable */ AlertV2RunAs> runAs;

    /**
     * @return Specifies the identity that will be used to run the alert.
     * This field allows you to configure alerts to run as a specific user or service principal.
     * - For user identity: Set `userName` to the email of an active workspace user. Users can only set this to their own email.
     * - For service principal: Set `servicePrincipalName` to the application ID. Requires the `servicePrincipal/user` role.
     *   If not specified, the alert will run as the request user
     * 
     */
    public Output<Optional<AlertV2RunAs>> runAs() {
        return Codegen.optional(this.runAs);
    }
    /**
     * The run as username or application ID of service principal.
     * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
     * Deprecated: Use `runAs` field instead. This field will be removed in a future release
     * 
     */
    @Export(name="runAsUserName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runAsUserName;

    /**
     * @return The run as username or application ID of service principal.
     * On Create and Update, this field can be set to application ID of an active service principal. Setting this field requires the servicePrincipal/user role.
     * Deprecated: Use `runAs` field instead. This field will be removed in a future release
     * 
     */
    public Output<Optional<String>> runAsUserName() {
        return Codegen.optional(this.runAsUserName);
    }
    @Export(name="schedule", refs={AlertV2Schedule.class}, tree="[0]")
    private Output</* @Nullable */ AlertV2Schedule> schedule;

    public Output<Optional<AlertV2Schedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    /**
     * (string) - The timestamp indicating when the alert was updated
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return (string) - The timestamp indicating when the alert was updated
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * ID of the SQL warehouse attached to the alert
     * 
     */
    @Export(name="warehouseId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> warehouseId;

    /**
     * @return ID of the SQL warehouse attached to the alert
     * 
     */
    public Output<Optional<String>> warehouseId() {
        return Codegen.optional(this.warehouseId);
    }
    /**
     * Workspace ID of the resource
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Output<Optional<String>> workspaceId() {
        return Codegen.optional(this.workspaceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AlertV2(java.lang.String name) {
        this(name, AlertV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AlertV2(java.lang.String name, @Nullable AlertV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AlertV2(java.lang.String name, @Nullable AlertV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/alertV2:AlertV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AlertV2(java.lang.String name, Output<java.lang.String> id, @Nullable AlertV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/alertV2:AlertV2", name, state, makeResourceOptions(options, id), false);
    }

    private static AlertV2Args makeArgs(@Nullable AlertV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AlertV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AlertV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable AlertV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AlertV2(name, id, state, options);
    }
}
