// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingConfigServedModelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingConfigServedModelArgs Empty = new ModelServingConfigServedModelArgs();

    @Import(name="environmentVars")
    private @Nullable Output<Map<String,String>> environmentVars;

    public Optional<Output<Map<String,String>>> environmentVars() {
        return Optional.ofNullable(this.environmentVars);
    }

    @Import(name="instanceProfileArn")
    private @Nullable Output<String> instanceProfileArn;

    public Optional<Output<String>> instanceProfileArn() {
        return Optional.ofNullable(this.instanceProfileArn);
    }

    @Import(name="maxProvisionedThroughput")
    private @Nullable Output<Integer> maxProvisionedThroughput;

    public Optional<Output<Integer>> maxProvisionedThroughput() {
        return Optional.ofNullable(this.maxProvisionedThroughput);
    }

    @Import(name="minProvisionedThroughput")
    private @Nullable Output<Integer> minProvisionedThroughput;

    public Optional<Output<Integer>> minProvisionedThroughput() {
        return Optional.ofNullable(this.minProvisionedThroughput);
    }

    @Import(name="modelName", required=true)
    private Output<String> modelName;

    public Output<String> modelName() {
        return this.modelName;
    }

    @Import(name="modelVersion", required=true)
    private Output<String> modelVersion;

    public Output<String> modelVersion() {
        return this.modelVersion;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="scaleToZeroEnabled")
    private @Nullable Output<Boolean> scaleToZeroEnabled;

    public Optional<Output<Boolean>> scaleToZeroEnabled() {
        return Optional.ofNullable(this.scaleToZeroEnabled);
    }

    @Import(name="workloadSize")
    private @Nullable Output<String> workloadSize;

    public Optional<Output<String>> workloadSize() {
        return Optional.ofNullable(this.workloadSize);
    }

    @Import(name="workloadType")
    private @Nullable Output<String> workloadType;

    public Optional<Output<String>> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    private ModelServingConfigServedModelArgs() {}

    private ModelServingConfigServedModelArgs(ModelServingConfigServedModelArgs $) {
        this.environmentVars = $.environmentVars;
        this.instanceProfileArn = $.instanceProfileArn;
        this.maxProvisionedThroughput = $.maxProvisionedThroughput;
        this.minProvisionedThroughput = $.minProvisionedThroughput;
        this.modelName = $.modelName;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.scaleToZeroEnabled = $.scaleToZeroEnabled;
        this.workloadSize = $.workloadSize;
        this.workloadType = $.workloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingConfigServedModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingConfigServedModelArgs $;

        public Builder() {
            $ = new ModelServingConfigServedModelArgs();
        }

        public Builder(ModelServingConfigServedModelArgs defaults) {
            $ = new ModelServingConfigServedModelArgs(Objects.requireNonNull(defaults));
        }

        public Builder environmentVars(@Nullable Output<Map<String,String>> environmentVars) {
            $.environmentVars = environmentVars;
            return this;
        }

        public Builder environmentVars(Map<String,String> environmentVars) {
            return environmentVars(Output.of(environmentVars));
        }

        public Builder instanceProfileArn(@Nullable Output<String> instanceProfileArn) {
            $.instanceProfileArn = instanceProfileArn;
            return this;
        }

        public Builder instanceProfileArn(String instanceProfileArn) {
            return instanceProfileArn(Output.of(instanceProfileArn));
        }

        public Builder maxProvisionedThroughput(@Nullable Output<Integer> maxProvisionedThroughput) {
            $.maxProvisionedThroughput = maxProvisionedThroughput;
            return this;
        }

        public Builder maxProvisionedThroughput(Integer maxProvisionedThroughput) {
            return maxProvisionedThroughput(Output.of(maxProvisionedThroughput));
        }

        public Builder minProvisionedThroughput(@Nullable Output<Integer> minProvisionedThroughput) {
            $.minProvisionedThroughput = minProvisionedThroughput;
            return this;
        }

        public Builder minProvisionedThroughput(Integer minProvisionedThroughput) {
            return minProvisionedThroughput(Output.of(minProvisionedThroughput));
        }

        public Builder modelName(Output<String> modelName) {
            $.modelName = modelName;
            return this;
        }

        public Builder modelName(String modelName) {
            return modelName(Output.of(modelName));
        }

        public Builder modelVersion(Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder scaleToZeroEnabled(@Nullable Output<Boolean> scaleToZeroEnabled) {
            $.scaleToZeroEnabled = scaleToZeroEnabled;
            return this;
        }

        public Builder scaleToZeroEnabled(Boolean scaleToZeroEnabled) {
            return scaleToZeroEnabled(Output.of(scaleToZeroEnabled));
        }

        public Builder workloadSize(@Nullable Output<String> workloadSize) {
            $.workloadSize = workloadSize;
            return this;
        }

        public Builder workloadSize(String workloadSize) {
            return workloadSize(Output.of(workloadSize));
        }

        public Builder workloadType(@Nullable Output<String> workloadType) {
            $.workloadType = workloadType;
            return this;
        }

        public Builder workloadType(String workloadType) {
            return workloadType(Output.of(workloadType));
        }

        public ModelServingConfigServedModelArgs build() {
            if ($.modelName == null) {
                throw new MissingRequiredPropertyException("ModelServingConfigServedModelArgs", "modelName");
            }
            if ($.modelVersion == null) {
                throw new MissingRequiredPropertyException("ModelServingConfigServedModelArgs", "modelVersion");
            }
            return $;
        }
    }

}
