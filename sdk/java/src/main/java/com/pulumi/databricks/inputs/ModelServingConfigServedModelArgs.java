// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelServingConfigServedModelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelServingConfigServedModelArgs Empty = new ModelServingConfigServedModelArgs();

    @Import(name="environmentVars")
    private @Nullable Output<Map<String,Object>> environmentVars;

    public Optional<Output<Map<String,Object>>> environmentVars() {
        return Optional.ofNullable(this.environmentVars);
    }

    /**
     * The name of the model in Databricks Model Registry to be served.
     * 
     */
    @Import(name="modelName", required=true)
    private Output<String> modelName;

    /**
     * @return The name of the model in Databricks Model Registry to be served.
     * 
     */
    public Output<String> modelName() {
        return this.modelName;
    }

    /**
     * The version of the model in Databricks Model Registry to be served.
     * 
     */
    @Import(name="modelVersion", required=true)
    private Output<String> modelVersion;

    /**
     * @return The version of the model in Databricks Model Registry to be served.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }

    /**
     * The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
     * 
     */
    @Import(name="scaleToZeroEnabled")
    private @Nullable Output<Boolean> scaleToZeroEnabled;

    /**
     * @return Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
     * 
     */
    public Optional<Output<Boolean>> scaleToZeroEnabled() {
        return Optional.ofNullable(this.scaleToZeroEnabled);
    }

    /**
     * The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
     * 
     */
    @Import(name="workloadSize", required=true)
    private Output<String> workloadSize;

    /**
     * @return The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
     * 
     */
    public Output<String> workloadSize() {
        return this.workloadSize;
    }

    private ModelServingConfigServedModelArgs() {}

    private ModelServingConfigServedModelArgs(ModelServingConfigServedModelArgs $) {
        this.environmentVars = $.environmentVars;
        this.modelName = $.modelName;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.scaleToZeroEnabled = $.scaleToZeroEnabled;
        this.workloadSize = $.workloadSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelServingConfigServedModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelServingConfigServedModelArgs $;

        public Builder() {
            $ = new ModelServingConfigServedModelArgs();
        }

        public Builder(ModelServingConfigServedModelArgs defaults) {
            $ = new ModelServingConfigServedModelArgs(Objects.requireNonNull(defaults));
        }

        public Builder environmentVars(@Nullable Output<Map<String,Object>> environmentVars) {
            $.environmentVars = environmentVars;
            return this;
        }

        public Builder environmentVars(Map<String,Object> environmentVars) {
            return environmentVars(Output.of(environmentVars));
        }

        /**
         * @param modelName The name of the model in Databricks Model Registry to be served.
         * 
         * @return builder
         * 
         */
        public Builder modelName(Output<String> modelName) {
            $.modelName = modelName;
            return this;
        }

        /**
         * @param modelName The name of the model in Databricks Model Registry to be served.
         * 
         * @return builder
         * 
         */
        public Builder modelName(String modelName) {
            return modelName(Output.of(modelName));
        }

        /**
         * @param modelVersion The version of the model in Databricks Model Registry to be served.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion The version of the model in Databricks Model Registry to be served.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param name The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of a served model. It must be unique across an endpoint. If not specified, this field will default to `modelname-modelversion`. A served model name can consist of alphanumeric characters, dashes, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scaleToZeroEnabled Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
         * 
         * @return builder
         * 
         */
        public Builder scaleToZeroEnabled(@Nullable Output<Boolean> scaleToZeroEnabled) {
            $.scaleToZeroEnabled = scaleToZeroEnabled;
            return this;
        }

        /**
         * @param scaleToZeroEnabled Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is `true`.
         * 
         * @return builder
         * 
         */
        public Builder scaleToZeroEnabled(Boolean scaleToZeroEnabled) {
            return scaleToZeroEnabled(Output.of(scaleToZeroEnabled));
        }

        /**
         * @param workloadSize The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
         * 
         * @return builder
         * 
         */
        public Builder workloadSize(Output<String> workloadSize) {
            $.workloadSize = workloadSize;
            return this;
        }

        /**
         * @param workloadSize The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are &#34;Small&#34; (4 - 4 provisioned concurrency), &#34;Medium&#34; (8 - 16 provisioned concurrency), and &#34;Large&#34; (16 - 64 provisioned concurrency).
         * 
         * @return builder
         * 
         */
        public Builder workloadSize(String workloadSize) {
            return workloadSize(Output.of(workloadSize));
        }

        public ModelServingConfigServedModelArgs build() {
            $.modelName = Objects.requireNonNull($.modelName, "expected parameter 'modelName' to be non-null");
            $.modelVersion = Objects.requireNonNull($.modelVersion, "expected parameter 'modelVersion' to be non-null");
            $.workloadSize = Objects.requireNonNull($.workloadSize, "expected parameter 'workloadSize' to be non-null");
            return $;
        }
    }

}
