// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetExternalLocationExternalLocationInfoEncryptionDetails;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExternalLocationExternalLocationInfo extends com.pulumi.resources.InvokeArgs {

    public static final GetExternalLocationExternalLocationInfo Empty = new GetExternalLocationExternalLocationInfo();

    @Import(name="accessPoint")
    private @Nullable String accessPoint;

    public Optional<String> accessPoint() {
        return Optional.ofNullable(this.accessPoint);
    }

    @Import(name="browseOnly")
    private @Nullable Boolean browseOnly;

    public Optional<Boolean> browseOnly() {
        return Optional.ofNullable(this.browseOnly);
    }

    @Import(name="comment")
    private @Nullable String comment;

    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdAt")
    private @Nullable Integer createdAt;

    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="createdBy")
    private @Nullable String createdBy;

    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    @Import(name="credentialId")
    private @Nullable String credentialId;

    public Optional<String> credentialId() {
        return Optional.ofNullable(this.credentialId);
    }

    @Import(name="credentialName")
    private @Nullable String credentialName;

    public Optional<String> credentialName() {
        return Optional.ofNullable(this.credentialName);
    }

    @Import(name="encryptionDetails")
    private @Nullable GetExternalLocationExternalLocationInfoEncryptionDetails encryptionDetails;

    public Optional<GetExternalLocationExternalLocationInfoEncryptionDetails> encryptionDetails() {
        return Optional.ofNullable(this.encryptionDetails);
    }

    @Import(name="fallback")
    private @Nullable Boolean fallback;

    public Optional<Boolean> fallback() {
        return Optional.ofNullable(this.fallback);
    }

    @Import(name="isolationMode")
    private @Nullable String isolationMode;

    public Optional<String> isolationMode() {
        return Optional.ofNullable(this.isolationMode);
    }

    @Import(name="metastoreId")
    private @Nullable String metastoreId;

    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="owner")
    private @Nullable String owner;

    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="readOnly")
    private @Nullable Boolean readOnly;

    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    @Import(name="updatedAt")
    private @Nullable Integer updatedAt;

    public Optional<Integer> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="updatedBy")
    private @Nullable String updatedBy;

    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    @Import(name="url")
    private @Nullable String url;

    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    private GetExternalLocationExternalLocationInfo() {}

    private GetExternalLocationExternalLocationInfo(GetExternalLocationExternalLocationInfo $) {
        this.accessPoint = $.accessPoint;
        this.browseOnly = $.browseOnly;
        this.comment = $.comment;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.credentialId = $.credentialId;
        this.credentialName = $.credentialName;
        this.encryptionDetails = $.encryptionDetails;
        this.fallback = $.fallback;
        this.isolationMode = $.isolationMode;
        this.metastoreId = $.metastoreId;
        this.name = $.name;
        this.owner = $.owner;
        this.readOnly = $.readOnly;
        this.updatedAt = $.updatedAt;
        this.updatedBy = $.updatedBy;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExternalLocationExternalLocationInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExternalLocationExternalLocationInfo $;

        public Builder() {
            $ = new GetExternalLocationExternalLocationInfo();
        }

        public Builder(GetExternalLocationExternalLocationInfo defaults) {
            $ = new GetExternalLocationExternalLocationInfo(Objects.requireNonNull(defaults));
        }

        public Builder accessPoint(@Nullable String accessPoint) {
            $.accessPoint = accessPoint;
            return this;
        }

        public Builder browseOnly(@Nullable Boolean browseOnly) {
            $.browseOnly = browseOnly;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        public Builder createdAt(@Nullable Integer createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder credentialId(@Nullable String credentialId) {
            $.credentialId = credentialId;
            return this;
        }

        public Builder credentialName(@Nullable String credentialName) {
            $.credentialName = credentialName;
            return this;
        }

        public Builder encryptionDetails(@Nullable GetExternalLocationExternalLocationInfoEncryptionDetails encryptionDetails) {
            $.encryptionDetails = encryptionDetails;
            return this;
        }

        public Builder fallback(@Nullable Boolean fallback) {
            $.fallback = fallback;
            return this;
        }

        public Builder isolationMode(@Nullable String isolationMode) {
            $.isolationMode = isolationMode;
            return this;
        }

        public Builder metastoreId(@Nullable String metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            $.owner = owner;
            return this;
        }

        public Builder readOnly(@Nullable Boolean readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder updatedAt(@Nullable Integer updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedBy(@Nullable String updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        public Builder url(@Nullable String url) {
            $.url = url;
            return this;
        }

        public GetExternalLocationExternalLocationInfo build() {
            return $;
        }
    }

}
