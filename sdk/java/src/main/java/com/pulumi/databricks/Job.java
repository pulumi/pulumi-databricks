// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.JobArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.JobState;
import com.pulumi.databricks.outputs.JobContinuous;
import com.pulumi.databricks.outputs.JobDbtTask;
import com.pulumi.databricks.outputs.JobDeployment;
import com.pulumi.databricks.outputs.JobEmailNotifications;
import com.pulumi.databricks.outputs.JobEnvironment;
import com.pulumi.databricks.outputs.JobGitSource;
import com.pulumi.databricks.outputs.JobHealth;
import com.pulumi.databricks.outputs.JobJobCluster;
import com.pulumi.databricks.outputs.JobLibrary;
import com.pulumi.databricks.outputs.JobNewCluster;
import com.pulumi.databricks.outputs.JobNotebookTask;
import com.pulumi.databricks.outputs.JobNotificationSettings;
import com.pulumi.databricks.outputs.JobParameter;
import com.pulumi.databricks.outputs.JobPipelineTask;
import com.pulumi.databricks.outputs.JobPythonWheelTask;
import com.pulumi.databricks.outputs.JobQueue;
import com.pulumi.databricks.outputs.JobRunAs;
import com.pulumi.databricks.outputs.JobRunJobTask;
import com.pulumi.databricks.outputs.JobSchedule;
import com.pulumi.databricks.outputs.JobSparkJarTask;
import com.pulumi.databricks.outputs.JobSparkPythonTask;
import com.pulumi.databricks.outputs.JobSparkSubmitTask;
import com.pulumi.databricks.outputs.JobTask;
import com.pulumi.databricks.outputs.JobTrigger;
import com.pulumi.databricks.outputs.JobWebhookNotifications;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="databricks:index/job:Job")
public class Job extends com.pulumi.resources.CustomResource {
    /**
     * @deprecated
     * always_running will be replaced by control_run_state in the next major release.
     * 
     */
    @Deprecated /* always_running will be replaced by control_run_state in the next major release. */
    @Export(name="alwaysRunning", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alwaysRunning;

    public Output<Optional<Boolean>> alwaysRunning() {
        return Codegen.optional(this.alwaysRunning);
    }
    @Export(name="budgetPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> budgetPolicyId;

    public Output<Optional<String>> budgetPolicyId() {
        return Codegen.optional(this.budgetPolicyId);
    }
    @Export(name="continuous", refs={JobContinuous.class}, tree="[0]")
    private Output</* @Nullable */ JobContinuous> continuous;

    public Output<Optional<JobContinuous>> continuous() {
        return Codegen.optional(this.continuous);
    }
    @Export(name="controlRunState", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> controlRunState;

    public Output<Optional<Boolean>> controlRunState() {
        return Codegen.optional(this.controlRunState);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="dbtTask", refs={JobDbtTask.class}, tree="[0]")
    private Output</* @Nullable */ JobDbtTask> dbtTask;

    public Output<Optional<JobDbtTask>> dbtTask() {
        return Codegen.optional(this.dbtTask);
    }
    @Export(name="deployment", refs={JobDeployment.class}, tree="[0]")
    private Output</* @Nullable */ JobDeployment> deployment;

    public Output<Optional<JobDeployment>> deployment() {
        return Codegen.optional(this.deployment);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="editMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> editMode;

    public Output<Optional<String>> editMode() {
        return Codegen.optional(this.editMode);
    }
    @Export(name="emailNotifications", refs={JobEmailNotifications.class}, tree="[0]")
    private Output</* @Nullable */ JobEmailNotifications> emailNotifications;

    public Output<Optional<JobEmailNotifications>> emailNotifications() {
        return Codegen.optional(this.emailNotifications);
    }
    @Export(name="environments", refs={List.class,JobEnvironment.class}, tree="[0,1]")
    private Output</* @Nullable */ List<JobEnvironment>> environments;

    public Output<Optional<List<JobEnvironment>>> environments() {
        return Codegen.optional(this.environments);
    }
    @Export(name="existingClusterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> existingClusterId;

    public Output<Optional<String>> existingClusterId() {
        return Codegen.optional(this.existingClusterId);
    }
    @Export(name="format", refs={String.class}, tree="[0]")
    private Output<String> format;

    public Output<String> format() {
        return this.format;
    }
    @Export(name="gitSource", refs={JobGitSource.class}, tree="[0]")
    private Output</* @Nullable */ JobGitSource> gitSource;

    public Output<Optional<JobGitSource>> gitSource() {
        return Codegen.optional(this.gitSource);
    }
    @Export(name="health", refs={JobHealth.class}, tree="[0]")
    private Output</* @Nullable */ JobHealth> health;

    public Output<Optional<JobHealth>> health() {
        return Codegen.optional(this.health);
    }
    @Export(name="jobClusters", refs={List.class,JobJobCluster.class}, tree="[0,1]")
    private Output</* @Nullable */ List<JobJobCluster>> jobClusters;

    public Output<Optional<List<JobJobCluster>>> jobClusters() {
        return Codegen.optional(this.jobClusters);
    }
    @Export(name="libraries", refs={List.class,JobLibrary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<JobLibrary>> libraries;

    public Output<Optional<List<JobLibrary>>> libraries() {
        return Codegen.optional(this.libraries);
    }
    @Export(name="maxConcurrentRuns", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxConcurrentRuns;

    public Output<Optional<Integer>> maxConcurrentRuns() {
        return Codegen.optional(this.maxConcurrentRuns);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="maxRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxRetries;

    public Output<Optional<Integer>> maxRetries() {
        return Codegen.optional(this.maxRetries);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="minRetryIntervalMillis", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> minRetryIntervalMillis;

    public Output<Optional<Integer>> minRetryIntervalMillis() {
        return Codegen.optional(this.minRetryIntervalMillis);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="newCluster", refs={JobNewCluster.class}, tree="[0]")
    private Output</* @Nullable */ JobNewCluster> newCluster;

    public Output<Optional<JobNewCluster>> newCluster() {
        return Codegen.optional(this.newCluster);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="notebookTask", refs={JobNotebookTask.class}, tree="[0]")
    private Output</* @Nullable */ JobNotebookTask> notebookTask;

    public Output<Optional<JobNotebookTask>> notebookTask() {
        return Codegen.optional(this.notebookTask);
    }
    @Export(name="notificationSettings", refs={JobNotificationSettings.class}, tree="[0]")
    private Output</* @Nullable */ JobNotificationSettings> notificationSettings;

    public Output<Optional<JobNotificationSettings>> notificationSettings() {
        return Codegen.optional(this.notificationSettings);
    }
    @Export(name="parameters", refs={List.class,JobParameter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<JobParameter>> parameters;

    public Output<Optional<List<JobParameter>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="pipelineTask", refs={JobPipelineTask.class}, tree="[0]")
    private Output</* @Nullable */ JobPipelineTask> pipelineTask;

    public Output<Optional<JobPipelineTask>> pipelineTask() {
        return Codegen.optional(this.pipelineTask);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="pythonWheelTask", refs={JobPythonWheelTask.class}, tree="[0]")
    private Output</* @Nullable */ JobPythonWheelTask> pythonWheelTask;

    public Output<Optional<JobPythonWheelTask>> pythonWheelTask() {
        return Codegen.optional(this.pythonWheelTask);
    }
    @Export(name="queue", refs={JobQueue.class}, tree="[0]")
    private Output</* @Nullable */ JobQueue> queue;

    public Output<Optional<JobQueue>> queue() {
        return Codegen.optional(this.queue);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="retryOnTimeout", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> retryOnTimeout;

    public Output<Optional<Boolean>> retryOnTimeout() {
        return Codegen.optional(this.retryOnTimeout);
    }
    @Export(name="runAs", refs={JobRunAs.class}, tree="[0]")
    private Output<JobRunAs> runAs;

    public Output<JobRunAs> runAs() {
        return this.runAs;
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="runJobTask", refs={JobRunJobTask.class}, tree="[0]")
    private Output</* @Nullable */ JobRunJobTask> runJobTask;

    public Output<Optional<JobRunJobTask>> runJobTask() {
        return Codegen.optional(this.runJobTask);
    }
    @Export(name="schedule", refs={JobSchedule.class}, tree="[0]")
    private Output</* @Nullable */ JobSchedule> schedule;

    public Output<Optional<JobSchedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="sparkJarTask", refs={JobSparkJarTask.class}, tree="[0]")
    private Output</* @Nullable */ JobSparkJarTask> sparkJarTask;

    public Output<Optional<JobSparkJarTask>> sparkJarTask() {
        return Codegen.optional(this.sparkJarTask);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="sparkPythonTask", refs={JobSparkPythonTask.class}, tree="[0]")
    private Output</* @Nullable */ JobSparkPythonTask> sparkPythonTask;

    public Output<Optional<JobSparkPythonTask>> sparkPythonTask() {
        return Codegen.optional(this.sparkPythonTask);
    }
    /**
     * @deprecated
     * should be used inside a task block and not inside a job block
     * 
     */
    @Deprecated /* should be used inside a task block and not inside a job block */
    @Export(name="sparkSubmitTask", refs={JobSparkSubmitTask.class}, tree="[0]")
    private Output</* @Nullable */ JobSparkSubmitTask> sparkSubmitTask;

    public Output<Optional<JobSparkSubmitTask>> sparkSubmitTask() {
        return Codegen.optional(this.sparkSubmitTask);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tasks", refs={List.class,JobTask.class}, tree="[0,1]")
    private Output</* @Nullable */ List<JobTask>> tasks;

    public Output<Optional<List<JobTask>>> tasks() {
        return Codegen.optional(this.tasks);
    }
    @Export(name="timeoutSeconds", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeoutSeconds;

    public Output<Optional<Integer>> timeoutSeconds() {
        return Codegen.optional(this.timeoutSeconds);
    }
    @Export(name="trigger", refs={JobTrigger.class}, tree="[0]")
    private Output</* @Nullable */ JobTrigger> trigger;

    public Output<Optional<JobTrigger>> trigger() {
        return Codegen.optional(this.trigger);
    }
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }
    @Export(name="webhookNotifications", refs={JobWebhookNotifications.class}, tree="[0]")
    private Output</* @Nullable */ JobWebhookNotifications> webhookNotifications;

    public Output<Optional<JobWebhookNotifications>> webhookNotifications() {
        return Codegen.optional(this.webhookNotifications);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Job(java.lang.String name) {
        this(name, JobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Job(java.lang.String name, @Nullable JobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Job(java.lang.String name, @Nullable JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/job:Job", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Job(java.lang.String name, Output<java.lang.String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/job:Job", name, state, makeResourceOptions(options, id), false);
    }

    private static JobArgs makeArgs(@Nullable JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? JobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Job get(java.lang.String name, Output<java.lang.String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Job(name, id, state, options);
    }
}
