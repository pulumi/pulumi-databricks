// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.DirectoryArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.DirectoryState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
 * 
 * &gt; This resource can only be used with a workspace-level provider!
 * 
 * ## Example Usage
 * 
 * You can declare a Pulumi-managed directory by specifying the `path` attribute of the corresponding directory.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.Directory;
 * import com.pulumi.databricks.DirectoryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myCustomDirectory = new Directory("myCustomDirectory", DirectoryArgs.builder()
 *             .path("/my_custom_directory")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Access Control
 * 
 * - databricks.Permissions can control which groups or individual users can access folders.
 * 
 * ## Related Resources
 * 
 * The following resources are often used in the same context:
 * 
 * - End to end workspace management guide.
 * - databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
 * - databricks.Notebook data to export a notebook from Databricks Workspace.
 * - databricks.getNotebookPaths data to list notebooks in Databricks Workspace.
 * - databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
 * - databricks.getSparkVersion data to get [Databricks Runtime (DBR)](https://docs.databricks.com/runtime/dbr.html) version that could be used for `spark_version` parameter in databricks.Cluster and other resources.
 * - databricks.WorkspaceConf to manage workspace configuration for expert usage.
 * 
 * ## Import
 * 
 * The resource directory can be imported using directory path:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/directory:Directory this /path/to/directory
 * ```
 * 
 */
@ResourceType(type="databricks:index/directory:Directory")
public class Directory extends com.pulumi.resources.CustomResource {
    /**
     * Whether or not to trigger a recursive delete of this directory and its resources when deleting this on Pulumi. Defaults to `false`
     * 
     */
    @Export(name="deleteRecursive", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteRecursive;

    /**
     * @return Whether or not to trigger a recursive delete of this directory and its resources when deleting this on Pulumi. Defaults to `false`
     * 
     */
    public Output<Optional<Boolean>> deleteRecursive() {
        return Codegen.optional(this.deleteRecursive);
    }
    /**
     * Unique identifier for a DIRECTORY
     * 
     */
    @Export(name="objectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectId;

    /**
     * @return Unique identifier for a DIRECTORY
     * 
     */
    public Output<Integer> objectId() {
        return this.objectId;
    }
    /**
     * The absolute path of the directory, beginning with &#34;/&#34;, e.g. &#34;/Demo&#34;.
     * 
     */
    @Export(name="path", refs={String.class}, tree="[0]")
    private Output<String> path;

    /**
     * @return The absolute path of the directory, beginning with &#34;/&#34;, e.g. &#34;/Demo&#34;.
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * path on Workspace File System (WSFS) in form of `/Workspace` + `path`
     * 
     */
    @Export(name="workspacePath", refs={String.class}, tree="[0]")
    private Output<String> workspacePath;

    /**
     * @return path on Workspace File System (WSFS) in form of `/Workspace` + `path`
     * 
     */
    public Output<String> workspacePath() {
        return this.workspacePath;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Directory(java.lang.String name) {
        this(name, DirectoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Directory(java.lang.String name, DirectoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Directory(java.lang.String name, DirectoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/directory:Directory", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Directory(java.lang.String name, Output<java.lang.String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/directory:Directory", name, state, makeResourceOptions(options, id), false);
    }

    private static DirectoryArgs makeArgs(DirectoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DirectoryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Directory get(java.lang.String name, Output<java.lang.String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Directory(name, id, state, options);
    }
}
