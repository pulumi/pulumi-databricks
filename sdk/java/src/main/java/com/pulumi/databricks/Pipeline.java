// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.PipelineArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.PipelineState;
import com.pulumi.databricks.outputs.PipelineCluster;
import com.pulumi.databricks.outputs.PipelineDeployment;
import com.pulumi.databricks.outputs.PipelineFilters;
import com.pulumi.databricks.outputs.PipelineGatewayDefinition;
import com.pulumi.databricks.outputs.PipelineIngestionDefinition;
import com.pulumi.databricks.outputs.PipelineLatestUpdate;
import com.pulumi.databricks.outputs.PipelineLibrary;
import com.pulumi.databricks.outputs.PipelineNotification;
import com.pulumi.databricks.outputs.PipelineRestartWindow;
import com.pulumi.databricks.outputs.PipelineTrigger;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="databricks:index/pipeline:Pipeline")
public class Pipeline extends com.pulumi.resources.CustomResource {
    @Export(name="allowDuplicateNames", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> allowDuplicateNames;

    public Output<Optional<Boolean>> allowDuplicateNames() {
        return Codegen.optional(this.allowDuplicateNames);
    }
    @Export(name="budgetPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> budgetPolicyId;

    public Output<Optional<String>> budgetPolicyId() {
        return Codegen.optional(this.budgetPolicyId);
    }
    @Export(name="catalog", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> catalog;

    public Output<Optional<String>> catalog() {
        return Codegen.optional(this.catalog);
    }
    @Export(name="cause", refs={String.class}, tree="[0]")
    private Output<String> cause;

    public Output<String> cause() {
        return this.cause;
    }
    @Export(name="channel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> channel;

    public Output<Optional<String>> channel() {
        return Codegen.optional(this.channel);
    }
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    public Output<String> clusterId() {
        return this.clusterId;
    }
    @Export(name="clusters", refs={List.class,PipelineCluster.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineCluster>> clusters;

    public Output<Optional<List<PipelineCluster>>> clusters() {
        return Codegen.optional(this.clusters);
    }
    @Export(name="configuration", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> configuration;

    public Output<Optional<Map<String,String>>> configuration() {
        return Codegen.optional(this.configuration);
    }
    @Export(name="continuous", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> continuous;

    public Output<Optional<Boolean>> continuous() {
        return Codegen.optional(this.continuous);
    }
    @Export(name="creatorUserName", refs={String.class}, tree="[0]")
    private Output<String> creatorUserName;

    public Output<String> creatorUserName() {
        return this.creatorUserName;
    }
    @Export(name="deployment", refs={PipelineDeployment.class}, tree="[0]")
    private Output</* @Nullable */ PipelineDeployment> deployment;

    public Output<Optional<PipelineDeployment>> deployment() {
        return Codegen.optional(this.deployment);
    }
    @Export(name="development", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> development;

    public Output<Optional<Boolean>> development() {
        return Codegen.optional(this.development);
    }
    @Export(name="edition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> edition;

    public Output<Optional<String>> edition() {
        return Codegen.optional(this.edition);
    }
    @Export(name="expectedLastModified", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> expectedLastModified;

    public Output<Optional<Integer>> expectedLastModified() {
        return Codegen.optional(this.expectedLastModified);
    }
    @Export(name="filters", refs={PipelineFilters.class}, tree="[0]")
    private Output</* @Nullable */ PipelineFilters> filters;

    public Output<Optional<PipelineFilters>> filters() {
        return Codegen.optional(this.filters);
    }
    @Export(name="gatewayDefinition", refs={PipelineGatewayDefinition.class}, tree="[0]")
    private Output</* @Nullable */ PipelineGatewayDefinition> gatewayDefinition;

    public Output<Optional<PipelineGatewayDefinition>> gatewayDefinition() {
        return Codegen.optional(this.gatewayDefinition);
    }
    @Export(name="health", refs={String.class}, tree="[0]")
    private Output<String> health;

    public Output<String> health() {
        return this.health;
    }
    @Export(name="ingestionDefinition", refs={PipelineIngestionDefinition.class}, tree="[0]")
    private Output</* @Nullable */ PipelineIngestionDefinition> ingestionDefinition;

    public Output<Optional<PipelineIngestionDefinition>> ingestionDefinition() {
        return Codegen.optional(this.ingestionDefinition);
    }
    @Export(name="lastModified", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastModified;

    public Output<Integer> lastModified() {
        return this.lastModified;
    }
    @Export(name="latestUpdates", refs={List.class,PipelineLatestUpdate.class}, tree="[0,1]")
    private Output<List<PipelineLatestUpdate>> latestUpdates;

    public Output<List<PipelineLatestUpdate>> latestUpdates() {
        return this.latestUpdates;
    }
    @Export(name="libraries", refs={List.class,PipelineLibrary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineLibrary>> libraries;

    public Output<Optional<List<PipelineLibrary>>> libraries() {
        return Codegen.optional(this.libraries);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="notifications", refs={List.class,PipelineNotification.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineNotification>> notifications;

    public Output<Optional<List<PipelineNotification>>> notifications() {
        return Codegen.optional(this.notifications);
    }
    @Export(name="photon", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> photon;

    public Output<Optional<Boolean>> photon() {
        return Codegen.optional(this.photon);
    }
    @Export(name="restartWindow", refs={PipelineRestartWindow.class}, tree="[0]")
    private Output</* @Nullable */ PipelineRestartWindow> restartWindow;

    public Output<Optional<PipelineRestartWindow>> restartWindow() {
        return Codegen.optional(this.restartWindow);
    }
    @Export(name="runAsUserName", refs={String.class}, tree="[0]")
    private Output<String> runAsUserName;

    public Output<String> runAsUserName() {
        return this.runAsUserName;
    }
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> schema;

    public Output<Optional<String>> schema() {
        return Codegen.optional(this.schema);
    }
    @Export(name="serverless", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> serverless;

    public Output<Optional<Boolean>> serverless() {
        return Codegen.optional(this.serverless);
    }
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    @Export(name="storage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storage;

    public Output<Optional<String>> storage() {
        return Codegen.optional(this.storage);
    }
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> target;

    public Output<Optional<String>> target() {
        return Codegen.optional(this.target);
    }
    @Export(name="trigger", refs={PipelineTrigger.class}, tree="[0]")
    private Output</* @Nullable */ PipelineTrigger> trigger;

    public Output<Optional<PipelineTrigger>> trigger() {
        return Codegen.optional(this.trigger);
    }
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Pipeline(java.lang.String name) {
        this(name, PipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Pipeline(java.lang.String name, @Nullable PipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Pipeline(java.lang.String name, @Nullable PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/pipeline:Pipeline", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Pipeline(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/pipeline:Pipeline", name, state, makeResourceOptions(options, id), false);
    }

    private static PipelineArgs makeArgs(@Nullable PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PipelineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Pipeline get(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Pipeline(name, id, state, options);
    }
}
