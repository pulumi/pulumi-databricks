// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MwsWorkspacesGkeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MwsWorkspacesGkeConfigArgs Empty = new MwsWorkspacesGkeConfigArgs();

    /**
     * Specifies the network connectivity types for the GKE nodes and the GKE master network. Possible values are: `PRIVATE_NODE_PUBLIC_MASTER`, `PUBLIC_NODE_PUBLIC_MASTER`.
     * 
     */
    @Import(name="connectivityType", required=true)
    private Output<String> connectivityType;

    /**
     * @return Specifies the network connectivity types for the GKE nodes and the GKE master network. Possible values are: `PRIVATE_NODE_PUBLIC_MASTER`, `PUBLIC_NODE_PUBLIC_MASTER`.
     * 
     */
    public Output<String> connectivityType() {
        return this.connectivityType;
    }

    /**
     * The IP range from which to allocate GKE cluster master resources. This field will be ignored if GKE private cluster is not enabled. It must be exactly as big as `/28`.
     * 
     */
    @Import(name="masterIpRange", required=true)
    private Output<String> masterIpRange;

    /**
     * @return The IP range from which to allocate GKE cluster master resources. This field will be ignored if GKE private cluster is not enabled. It must be exactly as big as `/28`.
     * 
     */
    public Output<String> masterIpRange() {
        return this.masterIpRange;
    }

    private MwsWorkspacesGkeConfigArgs() {}

    private MwsWorkspacesGkeConfigArgs(MwsWorkspacesGkeConfigArgs $) {
        this.connectivityType = $.connectivityType;
        this.masterIpRange = $.masterIpRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MwsWorkspacesGkeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MwsWorkspacesGkeConfigArgs $;

        public Builder() {
            $ = new MwsWorkspacesGkeConfigArgs();
        }

        public Builder(MwsWorkspacesGkeConfigArgs defaults) {
            $ = new MwsWorkspacesGkeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectivityType Specifies the network connectivity types for the GKE nodes and the GKE master network. Possible values are: `PRIVATE_NODE_PUBLIC_MASTER`, `PUBLIC_NODE_PUBLIC_MASTER`.
         * 
         * @return builder
         * 
         */
        public Builder connectivityType(Output<String> connectivityType) {
            $.connectivityType = connectivityType;
            return this;
        }

        /**
         * @param connectivityType Specifies the network connectivity types for the GKE nodes and the GKE master network. Possible values are: `PRIVATE_NODE_PUBLIC_MASTER`, `PUBLIC_NODE_PUBLIC_MASTER`.
         * 
         * @return builder
         * 
         */
        public Builder connectivityType(String connectivityType) {
            return connectivityType(Output.of(connectivityType));
        }

        /**
         * @param masterIpRange The IP range from which to allocate GKE cluster master resources. This field will be ignored if GKE private cluster is not enabled. It must be exactly as big as `/28`.
         * 
         * @return builder
         * 
         */
        public Builder masterIpRange(Output<String> masterIpRange) {
            $.masterIpRange = masterIpRange;
            return this;
        }

        /**
         * @param masterIpRange The IP range from which to allocate GKE cluster master resources. This field will be ignored if GKE private cluster is not enabled. It must be exactly as big as `/28`.
         * 
         * @return builder
         * 
         */
        public Builder masterIpRange(String masterIpRange) {
            return masterIpRange(Output.of(masterIpRange));
        }

        public MwsWorkspacesGkeConfigArgs build() {
            if ($.connectivityType == null) {
                throw new MissingRequiredPropertyException("MwsWorkspacesGkeConfigArgs", "connectivityType");
            }
            if ($.masterIpRange == null) {
                throw new MissingRequiredPropertyException("MwsWorkspacesGkeConfigArgs", "masterIpRange");
            }
            return $;
        }
    }

}
