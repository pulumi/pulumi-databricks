// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServicePrincipalFederationPolicyOidcPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetServicePrincipalFederationPolicyOidcPolicy Empty = new GetServicePrincipalFederationPolicyOidcPolicy();

    /**
     * (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    @Import(name="audiences")
    private @Nullable List<String> audiences;

    /**
     * @return (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    public Optional<List<String>> audiences() {
        return Optional.ofNullable(this.audiences);
    }

    /**
     * (string) - The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    @Import(name="issuer")
    private @Nullable String issuer;

    /**
     * @return (string) - The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    public Optional<String> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * (string) - The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    @Import(name="jwksJson")
    private @Nullable String jwksJson;

    /**
     * @return (string) - The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    public Optional<String> jwksJson() {
        return Optional.ofNullable(this.jwksJson);
    }

    /**
     * (string) - URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    @Import(name="jwksUri")
    private @Nullable String jwksUri;

    /**
     * @return (string) - URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    public Optional<String> jwksUri() {
        return Optional.ofNullable(this.jwksUri);
    }

    /**
     * (string) - The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    @Import(name="subject")
    private @Nullable String subject;

    /**
     * @return (string) - The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * (string) - The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    @Import(name="subjectClaim")
    private @Nullable String subjectClaim;

    /**
     * @return (string) - The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    public Optional<String> subjectClaim() {
        return Optional.ofNullable(this.subjectClaim);
    }

    private GetServicePrincipalFederationPolicyOidcPolicy() {}

    private GetServicePrincipalFederationPolicyOidcPolicy(GetServicePrincipalFederationPolicyOidcPolicy $) {
        this.audiences = $.audiences;
        this.issuer = $.issuer;
        this.jwksJson = $.jwksJson;
        this.jwksUri = $.jwksUri;
        this.subject = $.subject;
        this.subjectClaim = $.subjectClaim;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServicePrincipalFederationPolicyOidcPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServicePrincipalFederationPolicyOidcPolicy $;

        public Builder() {
            $ = new GetServicePrincipalFederationPolicyOidcPolicy();
        }

        public Builder(GetServicePrincipalFederationPolicyOidcPolicy defaults) {
            $ = new GetServicePrincipalFederationPolicyOidcPolicy(Objects.requireNonNull(defaults));
        }

        /**
         * @param audiences (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
         * The audience identifier is intended to represent the recipient of the token.
         * Can be any non-empty string value. As long as the audience in the token matches
         * at least one audience in the policy, the token is considered a match. If audiences
         * is unspecified, defaults to your Databricks account id
         * 
         * @return builder
         * 
         */
        public Builder audiences(@Nullable List<String> audiences) {
            $.audiences = audiences;
            return this;
        }

        /**
         * @param audiences (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
         * The audience identifier is intended to represent the recipient of the token.
         * Can be any non-empty string value. As long as the audience in the token matches
         * at least one audience in the policy, the token is considered a match. If audiences
         * is unspecified, defaults to your Databricks account id
         * 
         * @return builder
         * 
         */
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }

        /**
         * @param issuer (string) - The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable String issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param jwksJson (string) - The public keys used to validate the signature of federated tokens, in JWKS format.
         * Most use cases should not need to specify this field. If jwks_uri and jwks_json
         * are both unspecified (recommended), Databricks automatically fetches the public
         * keys from your issuer’s well known endpoint. Databricks strongly recommends
         * relying on your issuer’s well known endpoint for discovering public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksJson(@Nullable String jwksJson) {
            $.jwksJson = jwksJson;
            return this;
        }

        /**
         * @param jwksUri (string) - URL of the public keys used to validate the signature of federated tokens, in
         * JWKS format. Most use cases should not need to specify this field. If jwks_uri
         * and jwks_json are both unspecified (recommended), Databricks automatically
         * fetches the public keys from your issuer’s well known endpoint. Databricks
         * strongly recommends relying on your issuer’s well known endpoint for discovering
         * public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksUri(@Nullable String jwksUri) {
            $.jwksUri = jwksUri;
            return this;
        }

        /**
         * @param subject (string) - The required token subject, as specified in the subject claim of federated tokens.
         * Must be specified for service principal federation policies. Must not be specified
         * for account federation policies
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable String subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subjectClaim (string) - The claim that contains the subject of the token. If unspecified, the default value
         * is &#39;sub&#39;
         * 
         * @return builder
         * 
         */
        public Builder subjectClaim(@Nullable String subjectClaim) {
            $.subjectClaim = subjectClaim;
            return this;
        }

        public GetServicePrincipalFederationPolicyOidcPolicy build() {
            return $;
        }
    }

}
