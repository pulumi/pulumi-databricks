// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.AppsSettingsCustomTemplateArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.AppsSettingsCustomTemplateState;
import com.pulumi.databricks.outputs.AppsSettingsCustomTemplateManifest;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Custom App Templates store the metadata of custom app code hosted in an external Git repository, enabling users to reuse boilerplate code when creating apps.
 * 
 * ## Example Usage
 * 
 * ### Basic Example
 * 
 * This example creates a Custom Template in the workspace with the specified name.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.AppsSettingsCustomTemplate;
 * import com.pulumi.databricks.AppsSettingsCustomTemplateArgs;
 * import com.pulumi.databricks.inputs.AppsSettingsCustomTemplateManifestArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new AppsSettingsCustomTemplate("this", AppsSettingsCustomTemplateArgs.builder()
 *             .name("my-custom-template")
 *             .description("A sample custom app template")
 *             .gitRepo("https://github.com/example/repo.git")
 *             .path("path-to-template")
 *             .gitProvider("github")
 *             .manifest(AppsSettingsCustomTemplateManifestArgs.builder()
 *                 .version(1)
 *                 .name("my-custom-app")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Example with API Scopes
 * 
 * This example creates a custom template that declares required user API scopes.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Example with Resource Requirements
 * 
 * This example defines a template that requests specific workspace resources with permissions granted.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * As of Pulumi v1.5, resources can be imported through configuration.
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;name&#34;
 * 
 *   to = databricks_apps_settings_custom_template.this
 * 
 * }
 * 
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 * 
 * ```sh
 * $ pulumi import databricks:index/appsSettingsCustomTemplate:AppsSettingsCustomTemplate databricks_apps_settings_custom_template &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/appsSettingsCustomTemplate:AppsSettingsCustomTemplate")
public class AppsSettingsCustomTemplate extends com.pulumi.resources.CustomResource {
    /**
     * (string)
     * 
     */
    @Export(name="creator", refs={String.class}, tree="[0]")
    private Output<String> creator;

    /**
     * @return (string)
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * The description of the template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the template
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Git provider of the template
     * 
     */
    @Export(name="gitProvider", refs={String.class}, tree="[0]")
    private Output<String> gitProvider;

    /**
     * @return The Git provider of the template
     * 
     */
    public Output<String> gitProvider() {
        return this.gitProvider;
    }
    /**
     * The Git repository URL that the template resides in
     * 
     */
    @Export(name="gitRepo", refs={String.class}, tree="[0]")
    private Output<String> gitRepo;

    /**
     * @return The Git repository URL that the template resides in
     * 
     */
    public Output<String> gitRepo() {
        return this.gitRepo;
    }
    /**
     * The manifest of the template. It defines fields and default values when installing the template
     * 
     */
    @Export(name="manifest", refs={AppsSettingsCustomTemplateManifest.class}, tree="[0]")
    private Output<AppsSettingsCustomTemplateManifest> manifest;

    /**
     * @return The manifest of the template. It defines fields and default values when installing the template
     * 
     */
    public Output<AppsSettingsCustomTemplateManifest> manifest() {
        return this.manifest;
    }
    /**
     * The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The path to the template within the Git repository
     * 
     */
    @Export(name="path", refs={String.class}, tree="[0]")
    private Output<String> path;

    /**
     * @return The path to the template within the Git repository
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * Workspace ID of the resource
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Output<Optional<String>> workspaceId() {
        return Codegen.optional(this.workspaceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppsSettingsCustomTemplate(java.lang.String name) {
        this(name, AppsSettingsCustomTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppsSettingsCustomTemplate(java.lang.String name, AppsSettingsCustomTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppsSettingsCustomTemplate(java.lang.String name, AppsSettingsCustomTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/appsSettingsCustomTemplate:AppsSettingsCustomTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppsSettingsCustomTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable AppsSettingsCustomTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/appsSettingsCustomTemplate:AppsSettingsCustomTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static AppsSettingsCustomTemplateArgs makeArgs(AppsSettingsCustomTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppsSettingsCustomTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppsSettingsCustomTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable AppsSettingsCustomTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppsSettingsCustomTemplate(name, id, state, options);
    }
}
