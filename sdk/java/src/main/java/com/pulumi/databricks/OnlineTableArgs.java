// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.OnlineTableSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnlineTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnlineTableArgs Empty = new OnlineTableArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="spec")
    private @Nullable Output<OnlineTableSpecArgs> spec;

    public Optional<Output<OnlineTableSpecArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private OnlineTableArgs() {}

    private OnlineTableArgs(OnlineTableArgs $) {
        this.name = $.name;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnlineTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnlineTableArgs $;

        public Builder() {
            $ = new OnlineTableArgs();
        }

        public Builder(OnlineTableArgs defaults) {
            $ = new OnlineTableArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder spec(@Nullable Output<OnlineTableSpecArgs> spec) {
            $.spec = spec;
            return this;
        }

        public Builder spec(OnlineTableSpecArgs spec) {
            return spec(Output.of(spec));
        }

        public OnlineTableArgs build() {
            return $;
        }
    }

}
