// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.PolicyInfoRowFilterUsing;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PolicyInfoRowFilter {
    private String functionName;
    private @Nullable List<PolicyInfoRowFilterUsing> usings;

    private PolicyInfoRowFilter() {}
    public String functionName() {
        return this.functionName;
    }
    public List<PolicyInfoRowFilterUsing> usings() {
        return this.usings == null ? List.of() : this.usings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyInfoRowFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String functionName;
        private @Nullable List<PolicyInfoRowFilterUsing> usings;
        public Builder() {}
        public Builder(PolicyInfoRowFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionName = defaults.functionName;
    	      this.usings = defaults.usings;
        }

        @CustomType.Setter
        public Builder functionName(String functionName) {
            if (functionName == null) {
              throw new MissingRequiredPropertyException("PolicyInfoRowFilter", "functionName");
            }
            this.functionName = functionName;
            return this;
        }
        @CustomType.Setter
        public Builder usings(@Nullable List<PolicyInfoRowFilterUsing> usings) {

            this.usings = usings;
            return this;
        }
        public Builder usings(PolicyInfoRowFilterUsing... usings) {
            return usings(List.of(usings));
        }
        public PolicyInfoRowFilter build() {
            final var _resultValue = new PolicyInfoRowFilter();
            _resultValue.functionName = functionName;
            _resultValue.usings = usings;
            return _resultValue;
        }
    }
}
