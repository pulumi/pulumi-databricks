// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.PipelineClusterArgs;
import com.pulumi.databricks.inputs.PipelineDeploymentArgs;
import com.pulumi.databricks.inputs.PipelineFiltersArgs;
import com.pulumi.databricks.inputs.PipelineGatewayDefinitionArgs;
import com.pulumi.databricks.inputs.PipelineIngestionDefinitionArgs;
import com.pulumi.databricks.inputs.PipelineLatestUpdateArgs;
import com.pulumi.databricks.inputs.PipelineLibraryArgs;
import com.pulumi.databricks.inputs.PipelineNotificationArgs;
import com.pulumi.databricks.inputs.PipelineRestartWindowArgs;
import com.pulumi.databricks.inputs.PipelineTriggerArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineState Empty = new PipelineState();

    @Import(name="allowDuplicateNames")
    private @Nullable Output<Boolean> allowDuplicateNames;

    public Optional<Output<Boolean>> allowDuplicateNames() {
        return Optional.ofNullable(this.allowDuplicateNames);
    }

    @Import(name="budgetPolicyId")
    private @Nullable Output<String> budgetPolicyId;

    public Optional<Output<String>> budgetPolicyId() {
        return Optional.ofNullable(this.budgetPolicyId);
    }

    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    @Import(name="cause")
    private @Nullable Output<String> cause;

    public Optional<Output<String>> cause() {
        return Optional.ofNullable(this.cause);
    }

    @Import(name="channel")
    private @Nullable Output<String> channel;

    public Optional<Output<String>> channel() {
        return Optional.ofNullable(this.channel);
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="clusters")
    private @Nullable Output<List<PipelineClusterArgs>> clusters;

    public Optional<Output<List<PipelineClusterArgs>>> clusters() {
        return Optional.ofNullable(this.clusters);
    }

    @Import(name="configuration")
    private @Nullable Output<Map<String,String>> configuration;

    public Optional<Output<Map<String,String>>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    @Import(name="continuous")
    private @Nullable Output<Boolean> continuous;

    public Optional<Output<Boolean>> continuous() {
        return Optional.ofNullable(this.continuous);
    }

    @Import(name="creatorUserName")
    private @Nullable Output<String> creatorUserName;

    public Optional<Output<String>> creatorUserName() {
        return Optional.ofNullable(this.creatorUserName);
    }

    @Import(name="deployment")
    private @Nullable Output<PipelineDeploymentArgs> deployment;

    public Optional<Output<PipelineDeploymentArgs>> deployment() {
        return Optional.ofNullable(this.deployment);
    }

    @Import(name="development")
    private @Nullable Output<Boolean> development;

    public Optional<Output<Boolean>> development() {
        return Optional.ofNullable(this.development);
    }

    @Import(name="edition")
    private @Nullable Output<String> edition;

    public Optional<Output<String>> edition() {
        return Optional.ofNullable(this.edition);
    }

    @Import(name="expectedLastModified")
    private @Nullable Output<Integer> expectedLastModified;

    public Optional<Output<Integer>> expectedLastModified() {
        return Optional.ofNullable(this.expectedLastModified);
    }

    @Import(name="filters")
    private @Nullable Output<PipelineFiltersArgs> filters;

    public Optional<Output<PipelineFiltersArgs>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="gatewayDefinition")
    private @Nullable Output<PipelineGatewayDefinitionArgs> gatewayDefinition;

    public Optional<Output<PipelineGatewayDefinitionArgs>> gatewayDefinition() {
        return Optional.ofNullable(this.gatewayDefinition);
    }

    @Import(name="health")
    private @Nullable Output<String> health;

    public Optional<Output<String>> health() {
        return Optional.ofNullable(this.health);
    }

    @Import(name="ingestionDefinition")
    private @Nullable Output<PipelineIngestionDefinitionArgs> ingestionDefinition;

    public Optional<Output<PipelineIngestionDefinitionArgs>> ingestionDefinition() {
        return Optional.ofNullable(this.ingestionDefinition);
    }

    @Import(name="lastModified")
    private @Nullable Output<Integer> lastModified;

    public Optional<Output<Integer>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    @Import(name="latestUpdates")
    private @Nullable Output<List<PipelineLatestUpdateArgs>> latestUpdates;

    public Optional<Output<List<PipelineLatestUpdateArgs>>> latestUpdates() {
        return Optional.ofNullable(this.latestUpdates);
    }

    @Import(name="libraries")
    private @Nullable Output<List<PipelineLibraryArgs>> libraries;

    public Optional<Output<List<PipelineLibraryArgs>>> libraries() {
        return Optional.ofNullable(this.libraries);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notifications")
    private @Nullable Output<List<PipelineNotificationArgs>> notifications;

    public Optional<Output<List<PipelineNotificationArgs>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    @Import(name="photon")
    private @Nullable Output<Boolean> photon;

    public Optional<Output<Boolean>> photon() {
        return Optional.ofNullable(this.photon);
    }

    @Import(name="restartWindow")
    private @Nullable Output<PipelineRestartWindowArgs> restartWindow;

    public Optional<Output<PipelineRestartWindowArgs>> restartWindow() {
        return Optional.ofNullable(this.restartWindow);
    }

    @Import(name="runAsUserName")
    private @Nullable Output<String> runAsUserName;

    public Optional<Output<String>> runAsUserName() {
        return Optional.ofNullable(this.runAsUserName);
    }

    @Import(name="schema")
    private @Nullable Output<String> schema;

    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    @Import(name="serverless")
    private @Nullable Output<Boolean> serverless;

    public Optional<Output<Boolean>> serverless() {
        return Optional.ofNullable(this.serverless);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="storage")
    private @Nullable Output<String> storage;

    public Optional<Output<String>> storage() {
        return Optional.ofNullable(this.storage);
    }

    @Import(name="target")
    private @Nullable Output<String> target;

    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="trigger")
    private @Nullable Output<PipelineTriggerArgs> trigger;

    public Optional<Output<PipelineTriggerArgs>> trigger() {
        return Optional.ofNullable(this.trigger);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private PipelineState() {}

    private PipelineState(PipelineState $) {
        this.allowDuplicateNames = $.allowDuplicateNames;
        this.budgetPolicyId = $.budgetPolicyId;
        this.catalog = $.catalog;
        this.cause = $.cause;
        this.channel = $.channel;
        this.clusterId = $.clusterId;
        this.clusters = $.clusters;
        this.configuration = $.configuration;
        this.continuous = $.continuous;
        this.creatorUserName = $.creatorUserName;
        this.deployment = $.deployment;
        this.development = $.development;
        this.edition = $.edition;
        this.expectedLastModified = $.expectedLastModified;
        this.filters = $.filters;
        this.gatewayDefinition = $.gatewayDefinition;
        this.health = $.health;
        this.ingestionDefinition = $.ingestionDefinition;
        this.lastModified = $.lastModified;
        this.latestUpdates = $.latestUpdates;
        this.libraries = $.libraries;
        this.name = $.name;
        this.notifications = $.notifications;
        this.photon = $.photon;
        this.restartWindow = $.restartWindow;
        this.runAsUserName = $.runAsUserName;
        this.schema = $.schema;
        this.serverless = $.serverless;
        this.state = $.state;
        this.storage = $.storage;
        this.target = $.target;
        this.trigger = $.trigger;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineState $;

        public Builder() {
            $ = new PipelineState();
        }

        public Builder(PipelineState defaults) {
            $ = new PipelineState(Objects.requireNonNull(defaults));
        }

        public Builder allowDuplicateNames(@Nullable Output<Boolean> allowDuplicateNames) {
            $.allowDuplicateNames = allowDuplicateNames;
            return this;
        }

        public Builder allowDuplicateNames(Boolean allowDuplicateNames) {
            return allowDuplicateNames(Output.of(allowDuplicateNames));
        }

        public Builder budgetPolicyId(@Nullable Output<String> budgetPolicyId) {
            $.budgetPolicyId = budgetPolicyId;
            return this;
        }

        public Builder budgetPolicyId(String budgetPolicyId) {
            return budgetPolicyId(Output.of(budgetPolicyId));
        }

        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        public Builder cause(@Nullable Output<String> cause) {
            $.cause = cause;
            return this;
        }

        public Builder cause(String cause) {
            return cause(Output.of(cause));
        }

        public Builder channel(@Nullable Output<String> channel) {
            $.channel = channel;
            return this;
        }

        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder clusters(@Nullable Output<List<PipelineClusterArgs>> clusters) {
            $.clusters = clusters;
            return this;
        }

        public Builder clusters(List<PipelineClusterArgs> clusters) {
            return clusters(Output.of(clusters));
        }

        public Builder clusters(PipelineClusterArgs... clusters) {
            return clusters(List.of(clusters));
        }

        public Builder configuration(@Nullable Output<Map<String,String>> configuration) {
            $.configuration = configuration;
            return this;
        }

        public Builder configuration(Map<String,String> configuration) {
            return configuration(Output.of(configuration));
        }

        public Builder continuous(@Nullable Output<Boolean> continuous) {
            $.continuous = continuous;
            return this;
        }

        public Builder continuous(Boolean continuous) {
            return continuous(Output.of(continuous));
        }

        public Builder creatorUserName(@Nullable Output<String> creatorUserName) {
            $.creatorUserName = creatorUserName;
            return this;
        }

        public Builder creatorUserName(String creatorUserName) {
            return creatorUserName(Output.of(creatorUserName));
        }

        public Builder deployment(@Nullable Output<PipelineDeploymentArgs> deployment) {
            $.deployment = deployment;
            return this;
        }

        public Builder deployment(PipelineDeploymentArgs deployment) {
            return deployment(Output.of(deployment));
        }

        public Builder development(@Nullable Output<Boolean> development) {
            $.development = development;
            return this;
        }

        public Builder development(Boolean development) {
            return development(Output.of(development));
        }

        public Builder edition(@Nullable Output<String> edition) {
            $.edition = edition;
            return this;
        }

        public Builder edition(String edition) {
            return edition(Output.of(edition));
        }

        public Builder expectedLastModified(@Nullable Output<Integer> expectedLastModified) {
            $.expectedLastModified = expectedLastModified;
            return this;
        }

        public Builder expectedLastModified(Integer expectedLastModified) {
            return expectedLastModified(Output.of(expectedLastModified));
        }

        public Builder filters(@Nullable Output<PipelineFiltersArgs> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(PipelineFiltersArgs filters) {
            return filters(Output.of(filters));
        }

        public Builder gatewayDefinition(@Nullable Output<PipelineGatewayDefinitionArgs> gatewayDefinition) {
            $.gatewayDefinition = gatewayDefinition;
            return this;
        }

        public Builder gatewayDefinition(PipelineGatewayDefinitionArgs gatewayDefinition) {
            return gatewayDefinition(Output.of(gatewayDefinition));
        }

        public Builder health(@Nullable Output<String> health) {
            $.health = health;
            return this;
        }

        public Builder health(String health) {
            return health(Output.of(health));
        }

        public Builder ingestionDefinition(@Nullable Output<PipelineIngestionDefinitionArgs> ingestionDefinition) {
            $.ingestionDefinition = ingestionDefinition;
            return this;
        }

        public Builder ingestionDefinition(PipelineIngestionDefinitionArgs ingestionDefinition) {
            return ingestionDefinition(Output.of(ingestionDefinition));
        }

        public Builder lastModified(@Nullable Output<Integer> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        public Builder lastModified(Integer lastModified) {
            return lastModified(Output.of(lastModified));
        }

        public Builder latestUpdates(@Nullable Output<List<PipelineLatestUpdateArgs>> latestUpdates) {
            $.latestUpdates = latestUpdates;
            return this;
        }

        public Builder latestUpdates(List<PipelineLatestUpdateArgs> latestUpdates) {
            return latestUpdates(Output.of(latestUpdates));
        }

        public Builder latestUpdates(PipelineLatestUpdateArgs... latestUpdates) {
            return latestUpdates(List.of(latestUpdates));
        }

        public Builder libraries(@Nullable Output<List<PipelineLibraryArgs>> libraries) {
            $.libraries = libraries;
            return this;
        }

        public Builder libraries(List<PipelineLibraryArgs> libraries) {
            return libraries(Output.of(libraries));
        }

        public Builder libraries(PipelineLibraryArgs... libraries) {
            return libraries(List.of(libraries));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notifications(@Nullable Output<List<PipelineNotificationArgs>> notifications) {
            $.notifications = notifications;
            return this;
        }

        public Builder notifications(List<PipelineNotificationArgs> notifications) {
            return notifications(Output.of(notifications));
        }

        public Builder notifications(PipelineNotificationArgs... notifications) {
            return notifications(List.of(notifications));
        }

        public Builder photon(@Nullable Output<Boolean> photon) {
            $.photon = photon;
            return this;
        }

        public Builder photon(Boolean photon) {
            return photon(Output.of(photon));
        }

        public Builder restartWindow(@Nullable Output<PipelineRestartWindowArgs> restartWindow) {
            $.restartWindow = restartWindow;
            return this;
        }

        public Builder restartWindow(PipelineRestartWindowArgs restartWindow) {
            return restartWindow(Output.of(restartWindow));
        }

        public Builder runAsUserName(@Nullable Output<String> runAsUserName) {
            $.runAsUserName = runAsUserName;
            return this;
        }

        public Builder runAsUserName(String runAsUserName) {
            return runAsUserName(Output.of(runAsUserName));
        }

        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public Builder serverless(@Nullable Output<Boolean> serverless) {
            $.serverless = serverless;
            return this;
        }

        public Builder serverless(Boolean serverless) {
            return serverless(Output.of(serverless));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder storage(@Nullable Output<String> storage) {
            $.storage = storage;
            return this;
        }

        public Builder storage(String storage) {
            return storage(Output.of(storage));
        }

        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder trigger(@Nullable Output<PipelineTriggerArgs> trigger) {
            $.trigger = trigger;
            return this;
        }

        public Builder trigger(PipelineTriggerArgs trigger) {
            return trigger(Output.of(trigger));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public PipelineState build() {
            return $;
        }
    }

}
