// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServicePrincipalFederationPoliciesPolicyOidcPolicy {
    /**
     * @return (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    private @Nullable List<String> audiences;
    /**
     * @return (string) - The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    private @Nullable String issuer;
    /**
     * @return (string) - The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    private @Nullable String jwksJson;
    /**
     * @return (string) - URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    private @Nullable String jwksUri;
    /**
     * @return (string) - The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    private @Nullable String subject;
    /**
     * @return (string) - The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    private @Nullable String subjectClaim;

    private GetServicePrincipalFederationPoliciesPolicyOidcPolicy() {}
    /**
     * @return (list of string) - The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    public List<String> audiences() {
        return this.audiences == null ? List.of() : this.audiences;
    }
    /**
     * @return (string) - The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    public Optional<String> issuer() {
        return Optional.ofNullable(this.issuer);
    }
    /**
     * @return (string) - The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    public Optional<String> jwksJson() {
        return Optional.ofNullable(this.jwksJson);
    }
    /**
     * @return (string) - URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    public Optional<String> jwksUri() {
        return Optional.ofNullable(this.jwksUri);
    }
    /**
     * @return (string) - The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }
    /**
     * @return (string) - The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    public Optional<String> subjectClaim() {
        return Optional.ofNullable(this.subjectClaim);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicePrincipalFederationPoliciesPolicyOidcPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> audiences;
        private @Nullable String issuer;
        private @Nullable String jwksJson;
        private @Nullable String jwksUri;
        private @Nullable String subject;
        private @Nullable String subjectClaim;
        public Builder() {}
        public Builder(GetServicePrincipalFederationPoliciesPolicyOidcPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audiences = defaults.audiences;
    	      this.issuer = defaults.issuer;
    	      this.jwksJson = defaults.jwksJson;
    	      this.jwksUri = defaults.jwksUri;
    	      this.subject = defaults.subject;
    	      this.subjectClaim = defaults.subjectClaim;
        }

        @CustomType.Setter
        public Builder audiences(@Nullable List<String> audiences) {

            this.audiences = audiences;
            return this;
        }
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }
        @CustomType.Setter
        public Builder issuer(@Nullable String issuer) {

            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder jwksJson(@Nullable String jwksJson) {

            this.jwksJson = jwksJson;
            return this;
        }
        @CustomType.Setter
        public Builder jwksUri(@Nullable String jwksUri) {

            this.jwksUri = jwksUri;
            return this;
        }
        @CustomType.Setter
        public Builder subject(@Nullable String subject) {

            this.subject = subject;
            return this;
        }
        @CustomType.Setter
        public Builder subjectClaim(@Nullable String subjectClaim) {

            this.subjectClaim = subjectClaim;
            return this;
        }
        public GetServicePrincipalFederationPoliciesPolicyOidcPolicy build() {
            final var _resultValue = new GetServicePrincipalFederationPoliciesPolicyOidcPolicy();
            _resultValue.audiences = audiences;
            _resultValue.issuer = issuer;
            _resultValue.jwksJson = jwksJson;
            _resultValue.jwksUri = jwksUri;
            _resultValue.subject = subject;
            _resultValue.subjectClaim = subjectClaim;
            return _resultValue;
        }
    }
}
