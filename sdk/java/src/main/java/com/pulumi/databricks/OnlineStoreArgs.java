// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnlineStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnlineStoreArgs Empty = new OnlineStoreArgs();

    /**
     * The capacity of the online store. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    @Import(name="capacity", required=true)
    private Output<String> capacity;

    /**
     * @return The capacity of the online store. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    public Output<String> capacity() {
        return this.capacity;
    }

    /**
     * The name of the online store. This is the unique identifier for the online store
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the online store. This is the unique identifier for the online store
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The number of read replicas for the online store. Defaults to 0
     * 
     */
    @Import(name="readReplicaCount")
    private @Nullable Output<Integer> readReplicaCount;

    /**
     * @return The number of read replicas for the online store. Defaults to 0
     * 
     */
    public Optional<Output<Integer>> readReplicaCount() {
        return Optional.ofNullable(this.readReplicaCount);
    }

    /**
     * Workspace ID of the resource
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private OnlineStoreArgs() {}

    private OnlineStoreArgs(OnlineStoreArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
        this.readReplicaCount = $.readReplicaCount;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnlineStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnlineStoreArgs $;

        public Builder() {
            $ = new OnlineStoreArgs();
        }

        public Builder(OnlineStoreArgs defaults) {
            $ = new OnlineStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity The capacity of the online store. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
         * 
         * @return builder
         * 
         */
        public Builder capacity(Output<String> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity The capacity of the online store. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
         * 
         * @return builder
         * 
         */
        public Builder capacity(String capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param name The name of the online store. This is the unique identifier for the online store
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the online store. This is the unique identifier for the online store
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param readReplicaCount The number of read replicas for the online store. Defaults to 0
         * 
         * @return builder
         * 
         */
        public Builder readReplicaCount(@Nullable Output<Integer> readReplicaCount) {
            $.readReplicaCount = readReplicaCount;
            return this;
        }

        /**
         * @param readReplicaCount The number of read replicas for the online store. Defaults to 0
         * 
         * @return builder
         * 
         */
        public Builder readReplicaCount(Integer readReplicaCount) {
            return readReplicaCount(Output.of(readReplicaCount));
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Workspace ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public OnlineStoreArgs build() {
            if ($.capacity == null) {
                throw new MissingRequiredPropertyException("OnlineStoreArgs", "capacity");
            }
            return $;
        }
    }

}
