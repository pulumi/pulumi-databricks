// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTriggerTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTriggerTableArgs Empty = new JobTriggerTableArgs();

    @Import(name="condition")
    private @Nullable Output<String> condition;

    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="minTimeBetweenTriggersSeconds")
    private @Nullable Output<Integer> minTimeBetweenTriggersSeconds;

    public Optional<Output<Integer>> minTimeBetweenTriggersSeconds() {
        return Optional.ofNullable(this.minTimeBetweenTriggersSeconds);
    }

    @Import(name="tableNames")
    private @Nullable Output<List<String>> tableNames;

    public Optional<Output<List<String>>> tableNames() {
        return Optional.ofNullable(this.tableNames);
    }

    @Import(name="waitAfterLastChangeSeconds")
    private @Nullable Output<Integer> waitAfterLastChangeSeconds;

    public Optional<Output<Integer>> waitAfterLastChangeSeconds() {
        return Optional.ofNullable(this.waitAfterLastChangeSeconds);
    }

    private JobTriggerTableArgs() {}

    private JobTriggerTableArgs(JobTriggerTableArgs $) {
        this.condition = $.condition;
        this.minTimeBetweenTriggersSeconds = $.minTimeBetweenTriggersSeconds;
        this.tableNames = $.tableNames;
        this.waitAfterLastChangeSeconds = $.waitAfterLastChangeSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTriggerTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTriggerTableArgs $;

        public Builder() {
            $ = new JobTriggerTableArgs();
        }

        public Builder(JobTriggerTableArgs defaults) {
            $ = new JobTriggerTableArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        public Builder minTimeBetweenTriggersSeconds(@Nullable Output<Integer> minTimeBetweenTriggersSeconds) {
            $.minTimeBetweenTriggersSeconds = minTimeBetweenTriggersSeconds;
            return this;
        }

        public Builder minTimeBetweenTriggersSeconds(Integer minTimeBetweenTriggersSeconds) {
            return minTimeBetweenTriggersSeconds(Output.of(minTimeBetweenTriggersSeconds));
        }

        public Builder tableNames(@Nullable Output<List<String>> tableNames) {
            $.tableNames = tableNames;
            return this;
        }

        public Builder tableNames(List<String> tableNames) {
            return tableNames(Output.of(tableNames));
        }

        public Builder tableNames(String... tableNames) {
            return tableNames(List.of(tableNames));
        }

        public Builder waitAfterLastChangeSeconds(@Nullable Output<Integer> waitAfterLastChangeSeconds) {
            $.waitAfterLastChangeSeconds = waitAfterLastChangeSeconds;
            return this;
        }

        public Builder waitAfterLastChangeSeconds(Integer waitAfterLastChangeSeconds) {
            return waitAfterLastChangeSeconds(Output.of(waitAfterLastChangeSeconds));
        }

        public JobTriggerTableArgs build() {
            return $;
        }
    }

}
