// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.PipelineIngestionDefinitionObjectTableTableConfigurationArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineIngestionDefinitionObjectTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineIngestionDefinitionObjectTableArgs Empty = new PipelineIngestionDefinitionObjectTableArgs();

    @Import(name="destinationCatalog", required=true)
    private Output<String> destinationCatalog;

    public Output<String> destinationCatalog() {
        return this.destinationCatalog;
    }

    @Import(name="destinationSchema", required=true)
    private Output<String> destinationSchema;

    public Output<String> destinationSchema() {
        return this.destinationSchema;
    }

    @Import(name="destinationTable")
    private @Nullable Output<String> destinationTable;

    public Optional<Output<String>> destinationTable() {
        return Optional.ofNullable(this.destinationTable);
    }

    @Import(name="sourceCatalog")
    private @Nullable Output<String> sourceCatalog;

    public Optional<Output<String>> sourceCatalog() {
        return Optional.ofNullable(this.sourceCatalog);
    }

    @Import(name="sourceSchema")
    private @Nullable Output<String> sourceSchema;

    public Optional<Output<String>> sourceSchema() {
        return Optional.ofNullable(this.sourceSchema);
    }

    @Import(name="sourceTable", required=true)
    private Output<String> sourceTable;

    public Output<String> sourceTable() {
        return this.sourceTable;
    }

    @Import(name="tableConfiguration")
    private @Nullable Output<PipelineIngestionDefinitionObjectTableTableConfigurationArgs> tableConfiguration;

    public Optional<Output<PipelineIngestionDefinitionObjectTableTableConfigurationArgs>> tableConfiguration() {
        return Optional.ofNullable(this.tableConfiguration);
    }

    private PipelineIngestionDefinitionObjectTableArgs() {}

    private PipelineIngestionDefinitionObjectTableArgs(PipelineIngestionDefinitionObjectTableArgs $) {
        this.destinationCatalog = $.destinationCatalog;
        this.destinationSchema = $.destinationSchema;
        this.destinationTable = $.destinationTable;
        this.sourceCatalog = $.sourceCatalog;
        this.sourceSchema = $.sourceSchema;
        this.sourceTable = $.sourceTable;
        this.tableConfiguration = $.tableConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineIngestionDefinitionObjectTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineIngestionDefinitionObjectTableArgs $;

        public Builder() {
            $ = new PipelineIngestionDefinitionObjectTableArgs();
        }

        public Builder(PipelineIngestionDefinitionObjectTableArgs defaults) {
            $ = new PipelineIngestionDefinitionObjectTableArgs(Objects.requireNonNull(defaults));
        }

        public Builder destinationCatalog(Output<String> destinationCatalog) {
            $.destinationCatalog = destinationCatalog;
            return this;
        }

        public Builder destinationCatalog(String destinationCatalog) {
            return destinationCatalog(Output.of(destinationCatalog));
        }

        public Builder destinationSchema(Output<String> destinationSchema) {
            $.destinationSchema = destinationSchema;
            return this;
        }

        public Builder destinationSchema(String destinationSchema) {
            return destinationSchema(Output.of(destinationSchema));
        }

        public Builder destinationTable(@Nullable Output<String> destinationTable) {
            $.destinationTable = destinationTable;
            return this;
        }

        public Builder destinationTable(String destinationTable) {
            return destinationTable(Output.of(destinationTable));
        }

        public Builder sourceCatalog(@Nullable Output<String> sourceCatalog) {
            $.sourceCatalog = sourceCatalog;
            return this;
        }

        public Builder sourceCatalog(String sourceCatalog) {
            return sourceCatalog(Output.of(sourceCatalog));
        }

        public Builder sourceSchema(@Nullable Output<String> sourceSchema) {
            $.sourceSchema = sourceSchema;
            return this;
        }

        public Builder sourceSchema(String sourceSchema) {
            return sourceSchema(Output.of(sourceSchema));
        }

        public Builder sourceTable(Output<String> sourceTable) {
            $.sourceTable = sourceTable;
            return this;
        }

        public Builder sourceTable(String sourceTable) {
            return sourceTable(Output.of(sourceTable));
        }

        public Builder tableConfiguration(@Nullable Output<PipelineIngestionDefinitionObjectTableTableConfigurationArgs> tableConfiguration) {
            $.tableConfiguration = tableConfiguration;
            return this;
        }

        public Builder tableConfiguration(PipelineIngestionDefinitionObjectTableTableConfigurationArgs tableConfiguration) {
            return tableConfiguration(Output.of(tableConfiguration));
        }

        public PipelineIngestionDefinitionObjectTableArgs build() {
            if ($.destinationCatalog == null) {
                throw new MissingRequiredPropertyException("PipelineIngestionDefinitionObjectTableArgs", "destinationCatalog");
            }
            if ($.destinationSchema == null) {
                throw new MissingRequiredPropertyException("PipelineIngestionDefinitionObjectTableArgs", "destinationSchema");
            }
            if ($.sourceTable == null) {
                throw new MissingRequiredPropertyException("PipelineIngestionDefinitionObjectTableArgs", "sourceTable");
            }
            return $;
        }
    }

}
