// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.WorkspaceBindingArgs;
import com.pulumi.databricks.inputs.WorkspaceBindingState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * If you use workspaces to isolate user data access, you may want to limit access to catalog, external locations or storage credentials from specific workspaces in your account, also known as workspace binding
 * 
 * &gt; This resource can only be used with a workspace-level provider!
 * 
 * By default, Databricks assigns the securable to all workspaces attached to the current metastore. By using `databricks.WorkspaceBinding`, the securable will be unassigned from all workspaces and only assigned explicitly using this resource.
 * 
 * &gt; To use this resource the securable must have its isolation mode set to `ISOLATED` (for databricks_catalog) or `ISOLATION_MODE_ISOLATED` (for  (for databricks_external_location, databricks.StorageCredential or databricks_credential) for the `isolationMode` attribute. Alternatively, the isolation mode can be set using the UI or API by following [this guide](https://docs.databricks.com/data-governance/unity-catalog/create-catalogs.html#configuration), [this guide](https://docs.databricks.com/en/connect/unity-catalog/external-locations.html#workspace-binding) or [this guide](https://docs.databricks.com/en/connect/unity-catalog/storage-credentials.html#optional-assign-a-storage-credential-to-specific-workspaces).
 * 
 * &gt; If the securable&#39;s isolation mode was set to `ISOLATED` using Pulumi then the securable will have been automatically bound to the workspace it was created from.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.Catalog;
 * import com.pulumi.databricks.CatalogArgs;
 * import com.pulumi.databricks.WorkspaceBinding;
 * import com.pulumi.databricks.WorkspaceBindingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sandbox = new Catalog("sandbox", CatalogArgs.builder()
 *             .name("sandbox")
 *             .isolationMode("ISOLATED")
 *             .build());
 * 
 *         var sandboxWorkspaceBinding = new WorkspaceBinding("sandboxWorkspaceBinding", WorkspaceBindingArgs.builder()
 *             .securableName(sandbox.name())
 *             .workspaceId(other.workspaceId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * This resource can be imported by using combination of workspace ID, securable type and name:
 * 
 * hcl
 * 
 * import {
 * 
 *   to = databricks_workspace_binding.this
 * 
 *   id = &#34;&lt;workspace_id&gt;|&lt;securable_type&gt;|&lt;securable_name&gt;&#34;
 * 
 * }
 * 
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import databricks:index/workspaceBinding:WorkspaceBinding this &#34;&lt;workspace_id&gt;|&lt;securable_type&gt;|&lt;securable_name&gt;&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/workspaceBinding:WorkspaceBinding")
public class WorkspaceBinding extends com.pulumi.resources.CustomResource {
    /**
     * Binding mode. Default to `BINDING_TYPE_READ_WRITE`. Possible values are `BINDING_TYPE_READ_ONLY`, `BINDING_TYPE_READ_WRITE`.
     * 
     */
    @Export(name="bindingType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bindingType;

    /**
     * @return Binding mode. Default to `BINDING_TYPE_READ_WRITE`. Possible values are `BINDING_TYPE_READ_ONLY`, `BINDING_TYPE_READ_WRITE`.
     * 
     */
    public Output<Optional<String>> bindingType() {
        return Codegen.optional(this.bindingType);
    }
    /**
     * @deprecated
     * Please use &#39;securable_name&#39; and &#39;securable_type instead.
     * 
     */
    @Deprecated /* Please use 'securable_name' and 'securable_type instead. */
    @Export(name="catalogName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> catalogName;

    public Output<Optional<String>> catalogName() {
        return Codegen.optional(this.catalogName);
    }
    /**
     * Name of securable. Change forces creation of a new resource.
     * 
     */
    @Export(name="securableName", refs={String.class}, tree="[0]")
    private Output<String> securableName;

    /**
     * @return Name of securable. Change forces creation of a new resource.
     * 
     */
    public Output<String> securableName() {
        return this.securableName;
    }
    /**
     * Type of securable. Can be `catalog`, `externalLocation`, `storageCredential` or `credential`. Default to `catalog`. Change forces creation of a new resource.
     * 
     */
    @Export(name="securableType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securableType;

    /**
     * @return Type of securable. Can be `catalog`, `externalLocation`, `storageCredential` or `credential`. Default to `catalog`. Change forces creation of a new resource.
     * 
     */
    public Output<Optional<String>> securableType() {
        return Codegen.optional(this.securableType);
    }
    /**
     * ID of the workspace. Change forces creation of a new resource.
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return ID of the workspace. Change forces creation of a new resource.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkspaceBinding(java.lang.String name) {
        this(name, WorkspaceBindingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkspaceBinding(java.lang.String name, WorkspaceBindingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkspaceBinding(java.lang.String name, WorkspaceBindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/workspaceBinding:WorkspaceBinding", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkspaceBinding(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceBindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/workspaceBinding:WorkspaceBinding", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkspaceBindingArgs makeArgs(WorkspaceBindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkspaceBindingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkspaceBinding get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceBindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkspaceBinding(name, id, state, options);
    }
}
