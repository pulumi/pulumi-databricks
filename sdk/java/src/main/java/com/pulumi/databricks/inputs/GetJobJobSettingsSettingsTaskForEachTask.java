// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.databricks.inputs.GetJobJobSettingsSettingsTaskForEachTaskTask;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJobJobSettingsSettingsTaskForEachTask extends com.pulumi.resources.InvokeArgs {

    public static final GetJobJobSettingsSettingsTaskForEachTask Empty = new GetJobJobSettingsSettingsTaskForEachTask();

    @Import(name="concurrency")
    private @Nullable Integer concurrency;

    public Optional<Integer> concurrency() {
        return Optional.ofNullable(this.concurrency);
    }

    @Import(name="inputs", required=true)
    private String inputs;

    public String inputs() {
        return this.inputs;
    }

    @Import(name="task", required=true)
    private GetJobJobSettingsSettingsTaskForEachTaskTask task;

    public GetJobJobSettingsSettingsTaskForEachTaskTask task() {
        return this.task;
    }

    private GetJobJobSettingsSettingsTaskForEachTask() {}

    private GetJobJobSettingsSettingsTaskForEachTask(GetJobJobSettingsSettingsTaskForEachTask $) {
        this.concurrency = $.concurrency;
        this.inputs = $.inputs;
        this.task = $.task;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobJobSettingsSettingsTaskForEachTask defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobJobSettingsSettingsTaskForEachTask $;

        public Builder() {
            $ = new GetJobJobSettingsSettingsTaskForEachTask();
        }

        public Builder(GetJobJobSettingsSettingsTaskForEachTask defaults) {
            $ = new GetJobJobSettingsSettingsTaskForEachTask(Objects.requireNonNull(defaults));
        }

        public Builder concurrency(@Nullable Integer concurrency) {
            $.concurrency = concurrency;
            return this;
        }

        public Builder inputs(String inputs) {
            $.inputs = inputs;
            return this;
        }

        public Builder task(GetJobJobSettingsSettingsTaskForEachTaskTask task) {
            $.task = task;
            return this;
        }

        public GetJobJobSettingsSettingsTaskForEachTask build() {
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("GetJobJobSettingsSettingsTaskForEachTask", "inputs");
            }
            if ($.task == null) {
                throw new MissingRequiredPropertyException("GetJobJobSettingsSettingsTaskForEachTask", "task");
            }
            return $;
        }
    }

}
