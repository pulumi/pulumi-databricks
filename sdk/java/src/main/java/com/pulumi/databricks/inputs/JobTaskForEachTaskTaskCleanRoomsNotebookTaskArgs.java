// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs Empty = new JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs();

    @Import(name="cleanRoomName", required=true)
    private Output<String> cleanRoomName;

    public Output<String> cleanRoomName() {
        return this.cleanRoomName;
    }

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="notebookBaseParameters")
    private @Nullable Output<Map<String,String>> notebookBaseParameters;

    public Optional<Output<Map<String,String>>> notebookBaseParameters() {
        return Optional.ofNullable(this.notebookBaseParameters);
    }

    @Import(name="notebookName", required=true)
    private Output<String> notebookName;

    public Output<String> notebookName() {
        return this.notebookName;
    }

    private JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs() {}

    private JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs(JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs $) {
        this.cleanRoomName = $.cleanRoomName;
        this.etag = $.etag;
        this.notebookBaseParameters = $.notebookBaseParameters;
        this.notebookName = $.notebookName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs $;

        public Builder() {
            $ = new JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs();
        }

        public Builder(JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs defaults) {
            $ = new JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs(Objects.requireNonNull(defaults));
        }

        public Builder cleanRoomName(Output<String> cleanRoomName) {
            $.cleanRoomName = cleanRoomName;
            return this;
        }

        public Builder cleanRoomName(String cleanRoomName) {
            return cleanRoomName(Output.of(cleanRoomName));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder notebookBaseParameters(@Nullable Output<Map<String,String>> notebookBaseParameters) {
            $.notebookBaseParameters = notebookBaseParameters;
            return this;
        }

        public Builder notebookBaseParameters(Map<String,String> notebookBaseParameters) {
            return notebookBaseParameters(Output.of(notebookBaseParameters));
        }

        public Builder notebookName(Output<String> notebookName) {
            $.notebookName = notebookName;
            return this;
        }

        public Builder notebookName(String notebookName) {
            return notebookName(Output.of(notebookName));
        }

        public JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs build() {
            if ($.cleanRoomName == null) {
                throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs", "cleanRoomName");
            }
            if ($.notebookName == null) {
                throw new MissingRequiredPropertyException("JobTaskForEachTaskTaskCleanRoomsNotebookTaskArgs", "notebookName");
            }
            return $;
        }
    }

}
