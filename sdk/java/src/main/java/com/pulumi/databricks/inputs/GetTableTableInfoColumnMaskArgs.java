// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTableTableInfoColumnMaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetTableTableInfoColumnMaskArgs Empty = new GetTableTableInfoColumnMaskArgs();

    @Import(name="functionName")
    private @Nullable Output<String> functionName;

    public Optional<Output<String>> functionName() {
        return Optional.ofNullable(this.functionName);
    }

    @Import(name="usingColumnNames")
    private @Nullable Output<List<String>> usingColumnNames;

    public Optional<Output<List<String>>> usingColumnNames() {
        return Optional.ofNullable(this.usingColumnNames);
    }

    private GetTableTableInfoColumnMaskArgs() {}

    private GetTableTableInfoColumnMaskArgs(GetTableTableInfoColumnMaskArgs $) {
        this.functionName = $.functionName;
        this.usingColumnNames = $.usingColumnNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTableTableInfoColumnMaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTableTableInfoColumnMaskArgs $;

        public Builder() {
            $ = new GetTableTableInfoColumnMaskArgs();
        }

        public Builder(GetTableTableInfoColumnMaskArgs defaults) {
            $ = new GetTableTableInfoColumnMaskArgs(Objects.requireNonNull(defaults));
        }

        public Builder functionName(@Nullable Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder usingColumnNames(@Nullable Output<List<String>> usingColumnNames) {
            $.usingColumnNames = usingColumnNames;
            return this;
        }

        public Builder usingColumnNames(List<String> usingColumnNames) {
            return usingColumnNames(Output.of(usingColumnNames));
        }

        public Builder usingColumnNames(String... usingColumnNames) {
            return usingColumnNames(List.of(usingColumnNames));
        }

        public GetTableTableInfoColumnMaskArgs build() {
            return $;
        }
    }

}
