// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileState extends com.pulumi.resources.ResourceArgs {

    public static final FileState Empty = new FileState();

    @Import(name="contentBase64")
    private @Nullable Output<String> contentBase64;

    public Optional<Output<String>> contentBase64() {
        return Optional.ofNullable(this.contentBase64);
    }

    @Import(name="fileSize")
    private @Nullable Output<Integer> fileSize;

    public Optional<Output<Integer>> fileSize() {
        return Optional.ofNullable(this.fileSize);
    }

    @Import(name="md5")
    private @Nullable Output<String> md5;

    public Optional<Output<String>> md5() {
        return Optional.ofNullable(this.md5);
    }

    @Import(name="modificationTime")
    private @Nullable Output<String> modificationTime;

    public Optional<Output<String>> modificationTime() {
        return Optional.ofNullable(this.modificationTime);
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="remoteFileModified")
    private @Nullable Output<Boolean> remoteFileModified;

    public Optional<Output<Boolean>> remoteFileModified() {
        return Optional.ofNullable(this.remoteFileModified);
    }

    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private FileState() {}

    private FileState(FileState $) {
        this.contentBase64 = $.contentBase64;
        this.fileSize = $.fileSize;
        this.md5 = $.md5;
        this.modificationTime = $.modificationTime;
        this.path = $.path;
        this.remoteFileModified = $.remoteFileModified;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileState $;

        public Builder() {
            $ = new FileState();
        }

        public Builder(FileState defaults) {
            $ = new FileState(Objects.requireNonNull(defaults));
        }

        public Builder contentBase64(@Nullable Output<String> contentBase64) {
            $.contentBase64 = contentBase64;
            return this;
        }

        public Builder contentBase64(String contentBase64) {
            return contentBase64(Output.of(contentBase64));
        }

        public Builder fileSize(@Nullable Output<Integer> fileSize) {
            $.fileSize = fileSize;
            return this;
        }

        public Builder fileSize(Integer fileSize) {
            return fileSize(Output.of(fileSize));
        }

        public Builder md5(@Nullable Output<String> md5) {
            $.md5 = md5;
            return this;
        }

        public Builder md5(String md5) {
            return md5(Output.of(md5));
        }

        public Builder modificationTime(@Nullable Output<String> modificationTime) {
            $.modificationTime = modificationTime;
            return this;
        }

        public Builder modificationTime(String modificationTime) {
            return modificationTime(Output.of(modificationTime));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder remoteFileModified(@Nullable Output<Boolean> remoteFileModified) {
            $.remoteFileModified = remoteFileModified;
            return this;
        }

        public Builder remoteFileModified(Boolean remoteFileModified) {
            return remoteFileModified(Output.of(remoteFileModified));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public FileState build() {
            return $;
        }
    }

}
