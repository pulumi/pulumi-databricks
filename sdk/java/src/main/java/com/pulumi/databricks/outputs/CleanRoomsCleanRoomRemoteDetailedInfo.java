// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoCollaborator;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoCreator;
import com.pulumi.databricks.outputs.CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CleanRoomsCleanRoomRemoteDetailedInfo {
    /**
     * @return (string) - Central clean room ID
     * 
     */
    private @Nullable String centralCleanRoomId;
    /**
     * @return Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    private @Nullable String cloudVendor;
    /**
     * @return Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     * 1. It has the creator&#39;s globalMetastoreId (determined by caller of CreateCleanRoom).
     * 
     * 2. Its inviteRecipientEmail is empty
     * 
     */
    private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators;
    /**
     * @return (ComplianceSecurityProfile)
     * 
     */
    private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile;
    /**
     * @return (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoCreator creator;
    /**
     * @return Egress network policy to apply to the central clean room workspace
     * 
     */
    private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy;
    private @Nullable String region;

    private CleanRoomsCleanRoomRemoteDetailedInfo() {}
    /**
     * @return (string) - Central clean room ID
     * 
     */
    public Optional<String> centralCleanRoomId() {
        return Optional.ofNullable(this.centralCleanRoomId);
    }
    /**
     * @return Cloud vendor (aws,azure,gcp) of the central clean room
     * 
     */
    public Optional<String> cloudVendor() {
        return Optional.ofNullable(this.cloudVendor);
    }
    /**
     * @return Collaborators in the central clean room. There should one and only one collaborator
     * in the list that satisfies the owner condition:
     * 
     * 1. It has the creator&#39;s globalMetastoreId (determined by caller of CreateCleanRoom).
     * 
     * 2. Its inviteRecipientEmail is empty
     * 
     */
    public List<CleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators() {
        return this.collaborators == null ? List.of() : this.collaborators;
    }
    /**
     * @return (ComplianceSecurityProfile)
     * 
     */
    public Optional<CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile> complianceSecurityProfile() {
        return Optional.ofNullable(this.complianceSecurityProfile);
    }
    /**
     * @return (CleanRoomCollaborator) - Collaborator who creates the clean room
     * 
     */
    public Optional<CleanRoomsCleanRoomRemoteDetailedInfoCreator> creator() {
        return Optional.ofNullable(this.creator);
    }
    /**
     * @return Egress network policy to apply to the central clean room workspace
     * 
     */
    public Optional<CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy> egressNetworkPolicy() {
        return Optional.ofNullable(this.egressNetworkPolicy);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CleanRoomsCleanRoomRemoteDetailedInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String centralCleanRoomId;
        private @Nullable String cloudVendor;
        private @Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators;
        private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile;
        private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoCreator creator;
        private @Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy;
        private @Nullable String region;
        public Builder() {}
        public Builder(CleanRoomsCleanRoomRemoteDetailedInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.centralCleanRoomId = defaults.centralCleanRoomId;
    	      this.cloudVendor = defaults.cloudVendor;
    	      this.collaborators = defaults.collaborators;
    	      this.complianceSecurityProfile = defaults.complianceSecurityProfile;
    	      this.creator = defaults.creator;
    	      this.egressNetworkPolicy = defaults.egressNetworkPolicy;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder centralCleanRoomId(@Nullable String centralCleanRoomId) {

            this.centralCleanRoomId = centralCleanRoomId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudVendor(@Nullable String cloudVendor) {

            this.cloudVendor = cloudVendor;
            return this;
        }
        @CustomType.Setter
        public Builder collaborators(@Nullable List<CleanRoomsCleanRoomRemoteDetailedInfoCollaborator> collaborators) {

            this.collaborators = collaborators;
            return this;
        }
        public Builder collaborators(CleanRoomsCleanRoomRemoteDetailedInfoCollaborator... collaborators) {
            return collaborators(List.of(collaborators));
        }
        @CustomType.Setter
        public Builder complianceSecurityProfile(@Nullable CleanRoomsCleanRoomRemoteDetailedInfoComplianceSecurityProfile complianceSecurityProfile) {

            this.complianceSecurityProfile = complianceSecurityProfile;
            return this;
        }
        @CustomType.Setter
        public Builder creator(@Nullable CleanRoomsCleanRoomRemoteDetailedInfoCreator creator) {

            this.creator = creator;
            return this;
        }
        @CustomType.Setter
        public Builder egressNetworkPolicy(@Nullable CleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicy egressNetworkPolicy) {

            this.egressNetworkPolicy = egressNetworkPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        public CleanRoomsCleanRoomRemoteDetailedInfo build() {
            final var _resultValue = new CleanRoomsCleanRoomRemoteDetailedInfo();
            _resultValue.centralCleanRoomId = centralCleanRoomId;
            _resultValue.cloudVendor = cloudVendor;
            _resultValue.collaborators = collaborators;
            _resultValue.complianceSecurityProfile = complianceSecurityProfile;
            _resultValue.creator = creator;
            _resultValue.egressNetworkPolicy = egressNetworkPolicy;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
