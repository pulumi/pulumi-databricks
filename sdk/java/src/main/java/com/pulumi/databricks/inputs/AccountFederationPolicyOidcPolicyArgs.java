// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountFederationPolicyOidcPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountFederationPolicyOidcPolicyArgs Empty = new AccountFederationPolicyOidcPolicyArgs();

    /**
     * The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    @Import(name="audiences")
    private @Nullable Output<List<String>> audiences;

    /**
     * @return The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
     * The audience identifier is intended to represent the recipient of the token.
     * Can be any non-empty string value. As long as the audience in the token matches
     * at least one audience in the policy, the token is considered a match. If audiences
     * is unspecified, defaults to your Databricks account id
     * 
     */
    public Optional<Output<List<String>>> audiences() {
        return Optional.ofNullable(this.audiences);
    }

    /**
     * The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    /**
     * @return The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
     * 
     */
    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    @Import(name="jwksJson")
    private @Nullable Output<String> jwksJson;

    /**
     * @return The public keys used to validate the signature of federated tokens, in JWKS format.
     * Most use cases should not need to specify this field. If jwks_uri and jwks_json
     * are both unspecified (recommended), Databricks automatically fetches the public
     * keys from your issuer’s well known endpoint. Databricks strongly recommends
     * relying on your issuer’s well known endpoint for discovering public keys
     * 
     */
    public Optional<Output<String>> jwksJson() {
        return Optional.ofNullable(this.jwksJson);
    }

    /**
     * URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    @Import(name="jwksUri")
    private @Nullable Output<String> jwksUri;

    /**
     * @return URL of the public keys used to validate the signature of federated tokens, in
     * JWKS format. Most use cases should not need to specify this field. If jwks_uri
     * and jwks_json are both unspecified (recommended), Databricks automatically
     * fetches the public keys from your issuer’s well known endpoint. Databricks
     * strongly recommends relying on your issuer’s well known endpoint for discovering
     * public keys
     * 
     */
    public Optional<Output<String>> jwksUri() {
        return Optional.ofNullable(this.jwksUri);
    }

    /**
     * The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return The required token subject, as specified in the subject claim of federated tokens.
     * Must be specified for service principal federation policies. Must not be specified
     * for account federation policies
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    @Import(name="subjectClaim")
    private @Nullable Output<String> subjectClaim;

    /**
     * @return The claim that contains the subject of the token. If unspecified, the default value
     * is &#39;sub&#39;
     * 
     */
    public Optional<Output<String>> subjectClaim() {
        return Optional.ofNullable(this.subjectClaim);
    }

    private AccountFederationPolicyOidcPolicyArgs() {}

    private AccountFederationPolicyOidcPolicyArgs(AccountFederationPolicyOidcPolicyArgs $) {
        this.audiences = $.audiences;
        this.issuer = $.issuer;
        this.jwksJson = $.jwksJson;
        this.jwksUri = $.jwksUri;
        this.subject = $.subject;
        this.subjectClaim = $.subjectClaim;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountFederationPolicyOidcPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountFederationPolicyOidcPolicyArgs $;

        public Builder() {
            $ = new AccountFederationPolicyOidcPolicyArgs();
        }

        public Builder(AccountFederationPolicyOidcPolicyArgs defaults) {
            $ = new AccountFederationPolicyOidcPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audiences The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
         * The audience identifier is intended to represent the recipient of the token.
         * Can be any non-empty string value. As long as the audience in the token matches
         * at least one audience in the policy, the token is considered a match. If audiences
         * is unspecified, defaults to your Databricks account id
         * 
         * @return builder
         * 
         */
        public Builder audiences(@Nullable Output<List<String>> audiences) {
            $.audiences = audiences;
            return this;
        }

        /**
         * @param audiences The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
         * The audience identifier is intended to represent the recipient of the token.
         * Can be any non-empty string value. As long as the audience in the token matches
         * at least one audience in the policy, the token is considered a match. If audiences
         * is unspecified, defaults to your Databricks account id
         * 
         * @return builder
         * 
         */
        public Builder audiences(List<String> audiences) {
            return audiences(Output.of(audiences));
        }

        /**
         * @param audiences The allowed token audiences, as specified in the &#39;aud&#39; claim of federated tokens.
         * The audience identifier is intended to represent the recipient of the token.
         * Can be any non-empty string value. As long as the audience in the token matches
         * at least one audience in the policy, the token is considered a match. If audiences
         * is unspecified, defaults to your Databricks account id
         * 
         * @return builder
         * 
         */
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }

        /**
         * @param issuer The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer The required token issuer, as specified in the &#39;iss&#39; claim of federated tokens
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param jwksJson The public keys used to validate the signature of federated tokens, in JWKS format.
         * Most use cases should not need to specify this field. If jwks_uri and jwks_json
         * are both unspecified (recommended), Databricks automatically fetches the public
         * keys from your issuer’s well known endpoint. Databricks strongly recommends
         * relying on your issuer’s well known endpoint for discovering public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksJson(@Nullable Output<String> jwksJson) {
            $.jwksJson = jwksJson;
            return this;
        }

        /**
         * @param jwksJson The public keys used to validate the signature of federated tokens, in JWKS format.
         * Most use cases should not need to specify this field. If jwks_uri and jwks_json
         * are both unspecified (recommended), Databricks automatically fetches the public
         * keys from your issuer’s well known endpoint. Databricks strongly recommends
         * relying on your issuer’s well known endpoint for discovering public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksJson(String jwksJson) {
            return jwksJson(Output.of(jwksJson));
        }

        /**
         * @param jwksUri URL of the public keys used to validate the signature of federated tokens, in
         * JWKS format. Most use cases should not need to specify this field. If jwks_uri
         * and jwks_json are both unspecified (recommended), Databricks automatically
         * fetches the public keys from your issuer’s well known endpoint. Databricks
         * strongly recommends relying on your issuer’s well known endpoint for discovering
         * public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksUri(@Nullable Output<String> jwksUri) {
            $.jwksUri = jwksUri;
            return this;
        }

        /**
         * @param jwksUri URL of the public keys used to validate the signature of federated tokens, in
         * JWKS format. Most use cases should not need to specify this field. If jwks_uri
         * and jwks_json are both unspecified (recommended), Databricks automatically
         * fetches the public keys from your issuer’s well known endpoint. Databricks
         * strongly recommends relying on your issuer’s well known endpoint for discovering
         * public keys
         * 
         * @return builder
         * 
         */
        public Builder jwksUri(String jwksUri) {
            return jwksUri(Output.of(jwksUri));
        }

        /**
         * @param subject The required token subject, as specified in the subject claim of federated tokens.
         * Must be specified for service principal federation policies. Must not be specified
         * for account federation policies
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject The required token subject, as specified in the subject claim of federated tokens.
         * Must be specified for service principal federation policies. Must not be specified
         * for account federation policies
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        /**
         * @param subjectClaim The claim that contains the subject of the token. If unspecified, the default value
         * is &#39;sub&#39;
         * 
         * @return builder
         * 
         */
        public Builder subjectClaim(@Nullable Output<String> subjectClaim) {
            $.subjectClaim = subjectClaim;
            return this;
        }

        /**
         * @param subjectClaim The claim that contains the subject of the token. If unspecified, the default value
         * is &#39;sub&#39;
         * 
         * @return builder
         * 
         */
        public Builder subjectClaim(String subjectClaim) {
            return subjectClaim(Output.of(subjectClaim));
        }

        public AccountFederationPolicyOidcPolicyArgs build() {
            return $;
        }
    }

}
