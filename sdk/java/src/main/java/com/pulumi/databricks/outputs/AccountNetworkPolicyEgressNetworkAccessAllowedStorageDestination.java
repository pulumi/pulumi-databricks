// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination {
    /**
     * @return The Azure storage account name
     * 
     */
    private @Nullable String azureStorageAccount;
    /**
     * @return The Azure storage service type (blob, dfs, etc.)
     * 
     */
    private @Nullable String azureStorageService;
    private @Nullable String bucketName;
    private @Nullable String region;
    /**
     * @return The type of storage destination. Possible values are: `AWS_S3`, `AZURE_STORAGE`, `GOOGLE_CLOUD_STORAGE`
     * 
     */
    private @Nullable String storageDestinationType;

    private AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination() {}
    /**
     * @return The Azure storage account name
     * 
     */
    public Optional<String> azureStorageAccount() {
        return Optional.ofNullable(this.azureStorageAccount);
    }
    /**
     * @return The Azure storage service type (blob, dfs, etc.)
     * 
     */
    public Optional<String> azureStorageService() {
        return Optional.ofNullable(this.azureStorageService);
    }
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The type of storage destination. Possible values are: `AWS_S3`, `AZURE_STORAGE`, `GOOGLE_CLOUD_STORAGE`
     * 
     */
    public Optional<String> storageDestinationType() {
        return Optional.ofNullable(this.storageDestinationType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String azureStorageAccount;
        private @Nullable String azureStorageService;
        private @Nullable String bucketName;
        private @Nullable String region;
        private @Nullable String storageDestinationType;
        public Builder() {}
        public Builder(AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureStorageAccount = defaults.azureStorageAccount;
    	      this.azureStorageService = defaults.azureStorageService;
    	      this.bucketName = defaults.bucketName;
    	      this.region = defaults.region;
    	      this.storageDestinationType = defaults.storageDestinationType;
        }

        @CustomType.Setter
        public Builder azureStorageAccount(@Nullable String azureStorageAccount) {

            this.azureStorageAccount = azureStorageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder azureStorageService(@Nullable String azureStorageService) {

            this.azureStorageService = azureStorageService;
            return this;
        }
        @CustomType.Setter
        public Builder bucketName(@Nullable String bucketName) {

            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder storageDestinationType(@Nullable String storageDestinationType) {

            this.storageDestinationType = storageDestinationType;
            return this;
        }
        public AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination build() {
            final var _resultValue = new AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestination();
            _resultValue.azureStorageAccount = azureStorageAccount;
            _resultValue.azureStorageService = azureStorageService;
            _resultValue.bucketName = bucketName;
            _resultValue.region = region;
            _resultValue.storageDestinationType = storageDestinationType;
            return _resultValue;
        }
    }
}
