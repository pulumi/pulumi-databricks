// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.GetRegisteredModelModelInfo;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegisteredModelResult {
    /**
     * @return The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     * 
     */
    private String fullName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean includeAliases;
    private @Nullable Boolean includeBrowse;
    /**
     * @return block with information about the model in Unity Catalog:
     * 
     */
    private List<GetRegisteredModelModelInfo> modelInfos;

    private GetRegisteredModelResult() {}
    /**
     * @return The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     * 
     */
    public String fullName() {
        return this.fullName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeAliases() {
        return Optional.ofNullable(this.includeAliases);
    }
    public Optional<Boolean> includeBrowse() {
        return Optional.ofNullable(this.includeBrowse);
    }
    /**
     * @return block with information about the model in Unity Catalog:
     * 
     */
    public List<GetRegisteredModelModelInfo> modelInfos() {
        return this.modelInfos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegisteredModelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fullName;
        private String id;
        private @Nullable Boolean includeAliases;
        private @Nullable Boolean includeBrowse;
        private List<GetRegisteredModelModelInfo> modelInfos;
        public Builder() {}
        public Builder(GetRegisteredModelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fullName = defaults.fullName;
    	      this.id = defaults.id;
    	      this.includeAliases = defaults.includeAliases;
    	      this.includeBrowse = defaults.includeBrowse;
    	      this.modelInfos = defaults.modelInfos;
        }

        @CustomType.Setter
        public Builder fullName(String fullName) {
            if (fullName == null) {
              throw new MissingRequiredPropertyException("GetRegisteredModelResult", "fullName");
            }
            this.fullName = fullName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRegisteredModelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeAliases(@Nullable Boolean includeAliases) {

            this.includeAliases = includeAliases;
            return this;
        }
        @CustomType.Setter
        public Builder includeBrowse(@Nullable Boolean includeBrowse) {

            this.includeBrowse = includeBrowse;
            return this;
        }
        @CustomType.Setter
        public Builder modelInfos(List<GetRegisteredModelModelInfo> modelInfos) {
            if (modelInfos == null) {
              throw new MissingRequiredPropertyException("GetRegisteredModelResult", "modelInfos");
            }
            this.modelInfos = modelInfos;
            return this;
        }
        public Builder modelInfos(GetRegisteredModelModelInfo... modelInfos) {
            return modelInfos(List.of(modelInfos));
        }
        public GetRegisteredModelResult build() {
            final var _resultValue = new GetRegisteredModelResult();
            _resultValue.fullName = fullName;
            _resultValue.id = id;
            _resultValue.includeAliases = includeAliases;
            _resultValue.includeBrowse = includeBrowse;
            _resultValue.modelInfos = modelInfos;
            return _resultValue;
        }
    }
}
