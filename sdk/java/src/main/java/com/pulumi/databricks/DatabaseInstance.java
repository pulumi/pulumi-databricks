// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.DatabaseInstanceArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.DatabaseInstanceState;
import com.pulumi.databricks.outputs.DatabaseInstanceChildInstanceRef;
import com.pulumi.databricks.outputs.DatabaseInstanceParentInstanceRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Lakebase Database Instances are managed Postgres instances, composed of a primary Postgres compute instance and 0 or more read replica instances.
 * 
 * ## Example Usage
 * 
 * ### Basic Example
 * 
 * This example creates a simple Database Instance with the specified name and capacity.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.DatabaseInstance;
 * import com.pulumi.databricks.DatabaseInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new DatabaseInstance("this", DatabaseInstanceArgs.builder()
 *             .name("my-database-instance")
 *             .capacity("CU_2")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Example with Readable Secondaries
 * 
 * This example creates a Database Instance with readable secondaries (and HA) enabled.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.DatabaseInstance;
 * import com.pulumi.databricks.DatabaseInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new DatabaseInstance("this", DatabaseInstanceArgs.builder()
 *             .name("my-database-instance")
 *             .capacity("CU_2")
 *             .nodeCount(2)
 *             .enableReadableSecondaries(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Example Child Instance Created From Parent
 * 
 * This example creates a child Database Instance from a specified parent Database Instance at the current point in time.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.DatabaseInstance;
 * import com.pulumi.databricks.DatabaseInstanceArgs;
 * import com.pulumi.databricks.inputs.DatabaseInstanceParentInstanceRefArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var child = new DatabaseInstance("child", DatabaseInstanceArgs.builder()
 *             .name("my-database-instance")
 *             .capacity("CU_2")
 *             .parentInstanceRef(DatabaseInstanceParentInstanceRefArgs.builder()
 *                 .name("my-parent-instance")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * As of Pulumi v1.5, resources can be imported through configuration.
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;name&#34;
 * 
 *   to = databricks_database_instance.this
 * 
 * }
 * 
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 * 
 * ```sh
 * $ pulumi import databricks:index/databaseInstance:DatabaseInstance databricks_database_instance &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/databaseInstance:DatabaseInstance")
public class DatabaseInstance extends com.pulumi.resources.CustomResource {
    /**
     * The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    @Export(name="capacity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> capacity;

    /**
     * @return The sku of the instance. Valid values are &#34;CU_1&#34;, &#34;CU_2&#34;, &#34;CU_4&#34;, &#34;CU_8&#34;
     * 
     */
    public Output<Optional<String>> capacity() {
        return Codegen.optional(this.capacity);
    }
    /**
     * (list of DatabaseInstanceRef) - The refs of the child instances. This is only available if the instance is
     * parent instance
     * 
     */
    @Export(name="childInstanceRefs", refs={List.class,DatabaseInstanceChildInstanceRef.class}, tree="[0,1]")
    private Output<List<DatabaseInstanceChildInstanceRef>> childInstanceRefs;

    /**
     * @return (list of DatabaseInstanceRef) - The refs of the child instances. This is only available if the instance is
     * parent instance
     * 
     */
    public Output<List<DatabaseInstanceChildInstanceRef>> childInstanceRefs() {
        return this.childInstanceRefs;
    }
    /**
     * (string) - The timestamp when the instance was created
     * 
     */
    @Export(name="creationTime", refs={String.class}, tree="[0]")
    private Output<String> creationTime;

    /**
     * @return (string) - The timestamp when the instance was created
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }
    /**
     * (string) - The email of the creator of the instance
     * 
     */
    @Export(name="creator", refs={String.class}, tree="[0]")
    private Output<String> creator;

    /**
     * @return (string) - The email of the creator of the instance
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * (boolean) - xref AIP-129. `enablePgNativeLogin` is owned by the client, while `effectiveEnablePgNativeLogin` is owned by the server.
     * `enablePgNativeLogin` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveEnablePgNativeLogin` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    @Export(name="effectiveEnablePgNativeLogin", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> effectiveEnablePgNativeLogin;

    /**
     * @return (boolean) - xref AIP-129. `enablePgNativeLogin` is owned by the client, while `effectiveEnablePgNativeLogin` is owned by the server.
     * `enablePgNativeLogin` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveEnablePgNativeLogin` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    public Output<Boolean> effectiveEnablePgNativeLogin() {
        return this.effectiveEnablePgNativeLogin;
    }
    /**
     * (boolean) - xref AIP-129. `enableReadableSecondaries` is owned by the client, while `effectiveEnableReadableSecondaries` is owned by the server.
     * `enableReadableSecondaries` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveEnableReadableSecondaries` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    @Export(name="effectiveEnableReadableSecondaries", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> effectiveEnableReadableSecondaries;

    /**
     * @return (boolean) - xref AIP-129. `enableReadableSecondaries` is owned by the client, while `effectiveEnableReadableSecondaries` is owned by the server.
     * `enableReadableSecondaries` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveEnableReadableSecondaries` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    public Output<Boolean> effectiveEnableReadableSecondaries() {
        return this.effectiveEnableReadableSecondaries;
    }
    /**
     * (integer) - xref AIP-129. `nodeCount` is owned by the client, while `effectiveNodeCount` is owned by the server.
     * `nodeCount` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveNodeCount` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    @Export(name="effectiveNodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> effectiveNodeCount;

    /**
     * @return (integer) - xref AIP-129. `nodeCount` is owned by the client, while `effectiveNodeCount` is owned by the server.
     * `nodeCount` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveNodeCount` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    public Output<Integer> effectiveNodeCount() {
        return this.effectiveNodeCount;
    }
    /**
     * (integer) - xref AIP-129. `retentionWindowInDays` is owned by the client, while `effectiveRetentionWindowInDays` is owned by the server.
     * `retentionWindowInDays` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveRetentionWindowInDays` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    @Export(name="effectiveRetentionWindowInDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> effectiveRetentionWindowInDays;

    /**
     * @return (integer) - xref AIP-129. `retentionWindowInDays` is owned by the client, while `effectiveRetentionWindowInDays` is owned by the server.
     * `retentionWindowInDays` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveRetentionWindowInDays` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    public Output<Integer> effectiveRetentionWindowInDays() {
        return this.effectiveRetentionWindowInDays;
    }
    /**
     * (boolean) - xref AIP-129. `stopped` is owned by the client, while `effectiveStopped` is owned by the server.
     * `stopped` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveStopped` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    @Export(name="effectiveStopped", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> effectiveStopped;

    /**
     * @return (boolean) - xref AIP-129. `stopped` is owned by the client, while `effectiveStopped` is owned by the server.
     * `stopped` will only be set in Create/Update response messages if and only if the user provides the field via the request.
     * `effectiveStopped` on the other hand will always bet set in all response messages (Create/Update/Get/List)
     * 
     */
    public Output<Boolean> effectiveStopped() {
        return this.effectiveStopped;
    }
    /**
     * Whether the instance has PG native password login enabled. Defaults to true
     * 
     */
    @Export(name="enablePgNativeLogin", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enablePgNativeLogin;

    /**
     * @return Whether the instance has PG native password login enabled. Defaults to true
     * 
     */
    public Output<Boolean> enablePgNativeLogin() {
        return this.enablePgNativeLogin;
    }
    /**
     * Whether to enable secondaries to serve read-only traffic. Defaults to false
     * 
     */
    @Export(name="enableReadableSecondaries", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableReadableSecondaries;

    /**
     * @return Whether to enable secondaries to serve read-only traffic. Defaults to false
     * 
     */
    public Output<Optional<Boolean>> enableReadableSecondaries() {
        return Codegen.optional(this.enableReadableSecondaries);
    }
    /**
     * The name of the instance. This is the unique identifier for the instance
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the instance. This is the unique identifier for the instance
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of nodes in the instance, composed of 1 primary and 0 or more secondaries. Defaults to
     * 1 primary and 0 secondaries
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> nodeCount;

    /**
     * @return The number of nodes in the instance, composed of 1 primary and 0 or more secondaries. Defaults to
     * 1 primary and 0 secondaries
     * 
     */
    public Output<Optional<Integer>> nodeCount() {
        return Codegen.optional(this.nodeCount);
    }
    /**
     * The ref of the parent instance. This is only available if the instance is
     * child instance.
     * Input: For specifying the parent instance to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    @Export(name="parentInstanceRef", refs={DatabaseInstanceParentInstanceRef.class}, tree="[0]")
    private Output</* @Nullable */ DatabaseInstanceParentInstanceRef> parentInstanceRef;

    /**
     * @return The ref of the parent instance. This is only available if the instance is
     * child instance.
     * Input: For specifying the parent instance to create a child instance. Optional.
     * Output: Only populated if provided as input to create a child instance
     * 
     */
    public Output<Optional<DatabaseInstanceParentInstanceRef>> parentInstanceRef() {
        return Codegen.optional(this.parentInstanceRef);
    }
    /**
     * (string) - The version of Postgres running on the instance
     * 
     */
    @Export(name="pgVersion", refs={String.class}, tree="[0]")
    private Output<String> pgVersion;

    /**
     * @return (string) - The version of Postgres running on the instance
     * 
     */
    public Output<String> pgVersion() {
        return this.pgVersion;
    }
    /**
     * Purge the resource on delete
     * 
     */
    @Export(name="purgeOnDelete", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> purgeOnDelete;

    /**
     * @return Purge the resource on delete
     * 
     */
    public Output<Optional<Boolean>> purgeOnDelete() {
        return Codegen.optional(this.purgeOnDelete);
    }
    /**
     * (string) - The DNS endpoint to connect to the instance for read only access. This is only available if
     * enableReadableSecondaries is true
     * 
     */
    @Export(name="readOnlyDns", refs={String.class}, tree="[0]")
    private Output<String> readOnlyDns;

    /**
     * @return (string) - The DNS endpoint to connect to the instance for read only access. This is only available if
     * enableReadableSecondaries is true
     * 
     */
    public Output<String> readOnlyDns() {
        return this.readOnlyDns;
    }
    /**
     * (string) - The DNS endpoint to connect to the instance for read+write access
     * 
     */
    @Export(name="readWriteDns", refs={String.class}, tree="[0]")
    private Output<String> readWriteDns;

    /**
     * @return (string) - The DNS endpoint to connect to the instance for read+write access
     * 
     */
    public Output<String> readWriteDns() {
        return this.readWriteDns;
    }
    /**
     * The retention window for the instance. This is the time window in days
     * for which the historical data is retained. The default value is 7 days.
     * Valid values are 2 to 35 days
     * 
     */
    @Export(name="retentionWindowInDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retentionWindowInDays;

    /**
     * @return The retention window for the instance. This is the time window in days
     * for which the historical data is retained. The default value is 7 days.
     * Valid values are 2 to 35 days
     * 
     */
    public Output<Optional<Integer>> retentionWindowInDays() {
        return Codegen.optional(this.retentionWindowInDays);
    }
    /**
     * (string) - The current state of the instance. Possible values are: `AVAILABLE`, `DELETING`, `FAILING_OVER`, `STARTING`, `STOPPED`, `UPDATING`
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return (string) - The current state of the instance. Possible values are: `AVAILABLE`, `DELETING`, `FAILING_OVER`, `STARTING`, `STOPPED`, `UPDATING`
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Whether the instance is stopped
     * 
     */
    @Export(name="stopped", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> stopped;

    /**
     * @return Whether the instance is stopped
     * 
     */
    public Output<Optional<Boolean>> stopped() {
        return Codegen.optional(this.stopped);
    }
    /**
     * (string) - Id of the ref database instance
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return (string) - Id of the ref database instance
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Workspace ID of the resource
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Output<Optional<String>> workspaceId() {
        return Codegen.optional(this.workspaceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseInstance(java.lang.String name) {
        this(name, DatabaseInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseInstance(java.lang.String name, @Nullable DatabaseInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseInstance(java.lang.String name, @Nullable DatabaseInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/databaseInstance:DatabaseInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatabaseInstance(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/databaseInstance:DatabaseInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabaseInstanceArgs makeArgs(@Nullable DatabaseInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabaseInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseInstance(name, id, state, options);
    }
}
