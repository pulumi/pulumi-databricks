// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CatalogWorkspaceBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final CatalogWorkspaceBindingArgs Empty = new CatalogWorkspaceBindingArgs();

    /**
     * Name of Catalog. Change forces creation of a new resource.
     * 
     */
    @Import(name="catalogName", required=true)
    private Output<String> catalogName;

    /**
     * @return Name of Catalog. Change forces creation of a new resource.
     * 
     */
    public Output<String> catalogName() {
        return this.catalogName;
    }

    /**
     * ID of the workspace. Change forces creation of a new resource.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return ID of the workspace. Change forces creation of a new resource.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private CatalogWorkspaceBindingArgs() {}

    private CatalogWorkspaceBindingArgs(CatalogWorkspaceBindingArgs $) {
        this.catalogName = $.catalogName;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogWorkspaceBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogWorkspaceBindingArgs $;

        public Builder() {
            $ = new CatalogWorkspaceBindingArgs();
        }

        public Builder(CatalogWorkspaceBindingArgs defaults) {
            $ = new CatalogWorkspaceBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogName Name of Catalog. Change forces creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder catalogName(Output<String> catalogName) {
            $.catalogName = catalogName;
            return this;
        }

        /**
         * @param catalogName Name of Catalog. Change forces creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder catalogName(String catalogName) {
            return catalogName(Output.of(catalogName));
        }

        /**
         * @param workspaceId ID of the workspace. Change forces creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId ID of the workspace. Change forces creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public CatalogWorkspaceBindingArgs build() {
            $.catalogName = Objects.requireNonNull($.catalogName, "expected parameter 'catalogName' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            return $;
        }
    }

}
