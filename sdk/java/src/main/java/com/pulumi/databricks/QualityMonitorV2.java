// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.QualityMonitorV2Args;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.QualityMonitorV2State;
import com.pulumi.databricks.outputs.QualityMonitorV2AnomalyDetectionConfig;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Users with MANAGE Schema can use quality monitor v2 to set up data quality monitoring checks for UC objects, currently support schema.
 * 
 * &gt; **Note** This resource can only be used with an workspace-level provider!
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.databricks.Schema;
 * import com.pulumi.databricks.SchemaArgs;
 * import com.pulumi.databricks.QualityMonitorV2;
 * import com.pulumi.databricks.QualityMonitorV2Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new Schema("this", SchemaArgs.builder()
 *             .catalogName("my_catalog")
 *             .name("my_schema")
 *             .build());
 * 
 *         var thisQualityMonitorV2 = new QualityMonitorV2("thisQualityMonitorV2", QualityMonitorV2Args.builder()
 *             .objectType("schema")
 *             .objectId(this_.schemaId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * As of Pulumi v1.5, resources can be imported through configuration.
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;object_type,object_id&#34;
 * 
 *   to = databricks_quality_monitor_v2.this
 * 
 * }
 * 
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 * 
 * ```sh
 * $ pulumi import databricks:index/qualityMonitorV2:QualityMonitorV2 databricks_quality_monitor_v2 &#34;object_type,object_id&#34;
 * ```
 * 
 */
@ResourceType(type="databricks:index/qualityMonitorV2:QualityMonitorV2")
public class QualityMonitorV2 extends com.pulumi.resources.CustomResource {
    /**
     * (AnomalyDetectionConfig)
     * 
     */
    @Export(name="anomalyDetectionConfig", refs={QualityMonitorV2AnomalyDetectionConfig.class}, tree="[0]")
    private Output<QualityMonitorV2AnomalyDetectionConfig> anomalyDetectionConfig;

    /**
     * @return (AnomalyDetectionConfig)
     * 
     */
    public Output<QualityMonitorV2AnomalyDetectionConfig> anomalyDetectionConfig() {
        return this.anomalyDetectionConfig;
    }
    /**
     * The uuid of the request object. For example, schema id
     * 
     */
    @Export(name="objectId", refs={String.class}, tree="[0]")
    private Output<String> objectId;

    /**
     * @return The uuid of the request object. For example, schema id
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }
    /**
     * The type of the monitored object. Can be one of the following: schema
     * 
     */
    @Export(name="objectType", refs={String.class}, tree="[0]")
    private Output<String> objectType;

    /**
     * @return The type of the monitored object. Can be one of the following: schema
     * 
     */
    public Output<String> objectType() {
        return this.objectType;
    }
    /**
     * Workspace ID of the resource
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return Workspace ID of the resource
     * 
     */
    public Output<Optional<String>> workspaceId() {
        return Codegen.optional(this.workspaceId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public QualityMonitorV2(java.lang.String name) {
        this(name, QualityMonitorV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public QualityMonitorV2(java.lang.String name, QualityMonitorV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public QualityMonitorV2(java.lang.String name, QualityMonitorV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/qualityMonitorV2:QualityMonitorV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private QualityMonitorV2(java.lang.String name, Output<java.lang.String> id, @Nullable QualityMonitorV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/qualityMonitorV2:QualityMonitorV2", name, state, makeResourceOptions(options, id), false);
    }

    private static QualityMonitorV2Args makeArgs(QualityMonitorV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? QualityMonitorV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static QualityMonitorV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable QualityMonitorV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new QualityMonitorV2(name, id, state, options);
    }
}
