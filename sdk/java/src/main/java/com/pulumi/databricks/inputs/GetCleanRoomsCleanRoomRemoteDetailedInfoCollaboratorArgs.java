// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs Empty = new GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs();

    /**
     * (string) - Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
     * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    @Import(name="collaboratorAlias", required=true)
    private Output<String> collaboratorAlias;

    /**
     * @return (string) - Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
     * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     * 
     */
    public Output<String> collaboratorAlias() {
        return this.collaboratorAlias;
    }

    /**
     * (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
     * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
     * these values and could change in the future
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
     * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
     * these values and could change in the future
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (string) - The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
     * 
     */
    @Import(name="globalMetastoreId")
    private @Nullable Output<String> globalMetastoreId;

    /**
     * @return (string) - The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
     * 
     */
    public Optional<Output<String>> globalMetastoreId() {
        return Optional.ofNullable(this.globalMetastoreId);
    }

    /**
     * (string) - Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
     * for the creator of the clean room, and non-empty for the invitees of the clean room.
     * It is only returned in the output when clean room creator calls GET
     * 
     */
    @Import(name="inviteRecipientEmail")
    private @Nullable Output<String> inviteRecipientEmail;

    /**
     * @return (string) - Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
     * for the creator of the clean room, and non-empty for the invitees of the clean room.
     * It is only returned in the output when clean room creator calls GET
     * 
     */
    public Optional<Output<String>> inviteRecipientEmail() {
        return Optional.ofNullable(this.inviteRecipientEmail);
    }

    /**
     * (integer) - Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
     * invite_recipient_email is specified.
     * It should be empty when the collaborator is the creator of the clean room
     * 
     */
    @Import(name="inviteRecipientWorkspaceId", required=true)
    private Output<Integer> inviteRecipientWorkspaceId;

    /**
     * @return (integer) - Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
     * invite_recipient_email is specified.
     * It should be empty when the collaborator is the creator of the clean room
     * 
     */
    public Output<Integer> inviteRecipientWorkspaceId() {
        return this.inviteRecipientWorkspaceId;
    }

    /**
     * (string) - Organization name
     * configured in the metastore
     * 
     */
    @Import(name="organizationName", required=true)
    private Output<String> organizationName;

    /**
     * @return (string) - Organization name
     * configured in the metastore
     * 
     */
    public Output<String> organizationName() {
        return this.organizationName;
    }

    private GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs() {}

    private GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs(GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs $) {
        this.collaboratorAlias = $.collaboratorAlias;
        this.displayName = $.displayName;
        this.globalMetastoreId = $.globalMetastoreId;
        this.inviteRecipientEmail = $.inviteRecipientEmail;
        this.inviteRecipientWorkspaceId = $.inviteRecipientWorkspaceId;
        this.organizationName = $.organizationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs $;

        public Builder() {
            $ = new GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs();
        }

        public Builder(GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs defaults) {
            $ = new GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collaboratorAlias (string) - Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
         * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
         * 
         * @return builder
         * 
         */
        public Builder collaboratorAlias(Output<String> collaboratorAlias) {
            $.collaboratorAlias = collaboratorAlias;
            return this;
        }

        /**
         * @param collaboratorAlias (string) - Collaborator alias specified by the clean room creator. It is unique across all collaborators of this clean room, and used to derive
         * multiple values internally such as catalog alias and clean room name for single metastore clean rooms.
         * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
         * 
         * @return builder
         * 
         */
        public Builder collaboratorAlias(String collaboratorAlias) {
            return collaboratorAlias(Output.of(collaboratorAlias));
        }

        /**
         * @param displayName (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
         * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
         * these values and could change in the future
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (string) - Generated display name for the collaborator. In the case of a single metastore clean room, it is the clean
         * room name. For x-metastore clean rooms, it is the organization name of the metastore. It is not restricted to
         * these values and could change in the future
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param globalMetastoreId (string) - The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
         * 
         * @return builder
         * 
         */
        public Builder globalMetastoreId(@Nullable Output<String> globalMetastoreId) {
            $.globalMetastoreId = globalMetastoreId;
            return this;
        }

        /**
         * @param globalMetastoreId (string) - The global Unity Catalog metastore id of the collaborator. The identifier is of format cloud:region:metastore-uuid
         * 
         * @return builder
         * 
         */
        public Builder globalMetastoreId(String globalMetastoreId) {
            return globalMetastoreId(Output.of(globalMetastoreId));
        }

        /**
         * @param inviteRecipientEmail (string) - Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
         * for the creator of the clean room, and non-empty for the invitees of the clean room.
         * It is only returned in the output when clean room creator calls GET
         * 
         * @return builder
         * 
         */
        public Builder inviteRecipientEmail(@Nullable Output<String> inviteRecipientEmail) {
            $.inviteRecipientEmail = inviteRecipientEmail;
            return this;
        }

        /**
         * @param inviteRecipientEmail (string) - Email of the user who is receiving the clean room &#34;invitation&#34;. It should be empty
         * for the creator of the clean room, and non-empty for the invitees of the clean room.
         * It is only returned in the output when clean room creator calls GET
         * 
         * @return builder
         * 
         */
        public Builder inviteRecipientEmail(String inviteRecipientEmail) {
            return inviteRecipientEmail(Output.of(inviteRecipientEmail));
        }

        /**
         * @param inviteRecipientWorkspaceId (integer) - Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
         * invite_recipient_email is specified.
         * It should be empty when the collaborator is the creator of the clean room
         * 
         * @return builder
         * 
         */
        public Builder inviteRecipientWorkspaceId(Output<Integer> inviteRecipientWorkspaceId) {
            $.inviteRecipientWorkspaceId = inviteRecipientWorkspaceId;
            return this;
        }

        /**
         * @param inviteRecipientWorkspaceId (integer) - Workspace ID of the user who is receiving the clean room &#34;invitation&#34;. Must be specified if
         * invite_recipient_email is specified.
         * It should be empty when the collaborator is the creator of the clean room
         * 
         * @return builder
         * 
         */
        public Builder inviteRecipientWorkspaceId(Integer inviteRecipientWorkspaceId) {
            return inviteRecipientWorkspaceId(Output.of(inviteRecipientWorkspaceId));
        }

        /**
         * @param organizationName (string) - Organization name
         * configured in the metastore
         * 
         * @return builder
         * 
         */
        public Builder organizationName(Output<String> organizationName) {
            $.organizationName = organizationName;
            return this;
        }

        /**
         * @param organizationName (string) - Organization name
         * configured in the metastore
         * 
         * @return builder
         * 
         */
        public Builder organizationName(String organizationName) {
            return organizationName(Output.of(organizationName));
        }

        public GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs build() {
            if ($.collaboratorAlias == null) {
                throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs", "collaboratorAlias");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs", "displayName");
            }
            if ($.inviteRecipientWorkspaceId == null) {
                throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs", "inviteRecipientWorkspaceId");
            }
            if ($.organizationName == null) {
                throw new MissingRequiredPropertyException("GetCleanRoomsCleanRoomRemoteDetailedInfoCollaboratorArgs", "organizationName");
            }
            return $;
        }
    }

}
