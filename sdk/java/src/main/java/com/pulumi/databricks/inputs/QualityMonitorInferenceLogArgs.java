// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QualityMonitorInferenceLogArgs extends com.pulumi.resources.ResourceArgs {

    public static final QualityMonitorInferenceLogArgs Empty = new QualityMonitorInferenceLogArgs();

    @Import(name="granularities", required=true)
    private Output<List<String>> granularities;

    public Output<List<String>> granularities() {
        return this.granularities;
    }

    @Import(name="labelCol")
    private @Nullable Output<String> labelCol;

    public Optional<Output<String>> labelCol() {
        return Optional.ofNullable(this.labelCol);
    }

    @Import(name="modelIdCol", required=true)
    private Output<String> modelIdCol;

    public Output<String> modelIdCol() {
        return this.modelIdCol;
    }

    @Import(name="predictionCol", required=true)
    private Output<String> predictionCol;

    public Output<String> predictionCol() {
        return this.predictionCol;
    }

    @Import(name="predictionProbaCol")
    private @Nullable Output<String> predictionProbaCol;

    public Optional<Output<String>> predictionProbaCol() {
        return Optional.ofNullable(this.predictionProbaCol);
    }

    @Import(name="problemType", required=true)
    private Output<String> problemType;

    public Output<String> problemType() {
        return this.problemType;
    }

    @Import(name="timestampCol", required=true)
    private Output<String> timestampCol;

    public Output<String> timestampCol() {
        return this.timestampCol;
    }

    private QualityMonitorInferenceLogArgs() {}

    private QualityMonitorInferenceLogArgs(QualityMonitorInferenceLogArgs $) {
        this.granularities = $.granularities;
        this.labelCol = $.labelCol;
        this.modelIdCol = $.modelIdCol;
        this.predictionCol = $.predictionCol;
        this.predictionProbaCol = $.predictionProbaCol;
        this.problemType = $.problemType;
        this.timestampCol = $.timestampCol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QualityMonitorInferenceLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QualityMonitorInferenceLogArgs $;

        public Builder() {
            $ = new QualityMonitorInferenceLogArgs();
        }

        public Builder(QualityMonitorInferenceLogArgs defaults) {
            $ = new QualityMonitorInferenceLogArgs(Objects.requireNonNull(defaults));
        }

        public Builder granularities(Output<List<String>> granularities) {
            $.granularities = granularities;
            return this;
        }

        public Builder granularities(List<String> granularities) {
            return granularities(Output.of(granularities));
        }

        public Builder granularities(String... granularities) {
            return granularities(List.of(granularities));
        }

        public Builder labelCol(@Nullable Output<String> labelCol) {
            $.labelCol = labelCol;
            return this;
        }

        public Builder labelCol(String labelCol) {
            return labelCol(Output.of(labelCol));
        }

        public Builder modelIdCol(Output<String> modelIdCol) {
            $.modelIdCol = modelIdCol;
            return this;
        }

        public Builder modelIdCol(String modelIdCol) {
            return modelIdCol(Output.of(modelIdCol));
        }

        public Builder predictionCol(Output<String> predictionCol) {
            $.predictionCol = predictionCol;
            return this;
        }

        public Builder predictionCol(String predictionCol) {
            return predictionCol(Output.of(predictionCol));
        }

        public Builder predictionProbaCol(@Nullable Output<String> predictionProbaCol) {
            $.predictionProbaCol = predictionProbaCol;
            return this;
        }

        public Builder predictionProbaCol(String predictionProbaCol) {
            return predictionProbaCol(Output.of(predictionProbaCol));
        }

        public Builder problemType(Output<String> problemType) {
            $.problemType = problemType;
            return this;
        }

        public Builder problemType(String problemType) {
            return problemType(Output.of(problemType));
        }

        public Builder timestampCol(Output<String> timestampCol) {
            $.timestampCol = timestampCol;
            return this;
        }

        public Builder timestampCol(String timestampCol) {
            return timestampCol(Output.of(timestampCol));
        }

        public QualityMonitorInferenceLogArgs build() {
            if ($.granularities == null) {
                throw new MissingRequiredPropertyException("QualityMonitorInferenceLogArgs", "granularities");
            }
            if ($.modelIdCol == null) {
                throw new MissingRequiredPropertyException("QualityMonitorInferenceLogArgs", "modelIdCol");
            }
            if ($.predictionCol == null) {
                throw new MissingRequiredPropertyException("QualityMonitorInferenceLogArgs", "predictionCol");
            }
            if ($.problemType == null) {
                throw new MissingRequiredPropertyException("QualityMonitorInferenceLogArgs", "problemType");
            }
            if ($.timestampCol == null) {
                throw new MissingRequiredPropertyException("QualityMonitorInferenceLogArgs", "timestampCol");
            }
            return $;
        }
    }

}
