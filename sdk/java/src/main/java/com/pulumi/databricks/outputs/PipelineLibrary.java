// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.PipelineLibraryFile;
import com.pulumi.databricks.outputs.PipelineLibraryGlob;
import com.pulumi.databricks.outputs.PipelineLibraryMaven;
import com.pulumi.databricks.outputs.PipelineLibraryNotebook;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineLibrary {
    /**
     * @return specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    private @Nullable PipelineLibraryFile file;
    /**
     * @return The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
     * 
     */
    private @Nullable PipelineLibraryGlob glob;
    private @Nullable String jar;
    private @Nullable PipelineLibraryMaven maven;
    /**
     * @return specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    private @Nullable PipelineLibraryNotebook notebook;
    /**
     * @deprecated
     * The &#39;whl&#39; field is deprecated
     * 
     */
    @Deprecated /* The 'whl' field is deprecated */
    private @Nullable String whl;

    private PipelineLibrary() {}
    /**
     * @return specifies path to a file in Databricks Workspace to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    public Optional<PipelineLibraryFile> file() {
        return Optional.ofNullable(this.file);
    }
    /**
     * @return The unified field to include source code. Each entry should have the `include` attribute that can specify a notebook path, a file path, or a folder path that ends `/**` (to include everything from that folder). This field cannot be used together with `notebook` or `file`.
     * 
     */
    public Optional<PipelineLibraryGlob> glob() {
        return Optional.ofNullable(this.glob);
    }
    public Optional<String> jar() {
        return Optional.ofNullable(this.jar);
    }
    public Optional<PipelineLibraryMaven> maven() {
        return Optional.ofNullable(this.maven);
    }
    /**
     * @return specifies path to a Databricks Notebook to include as source. Actual path is specified as `path` attribute inside the block.
     * 
     */
    public Optional<PipelineLibraryNotebook> notebook() {
        return Optional.ofNullable(this.notebook);
    }
    /**
     * @deprecated
     * The &#39;whl&#39; field is deprecated
     * 
     */
    @Deprecated /* The 'whl' field is deprecated */
    public Optional<String> whl() {
        return Optional.ofNullable(this.whl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineLibrary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PipelineLibraryFile file;
        private @Nullable PipelineLibraryGlob glob;
        private @Nullable String jar;
        private @Nullable PipelineLibraryMaven maven;
        private @Nullable PipelineLibraryNotebook notebook;
        private @Nullable String whl;
        public Builder() {}
        public Builder(PipelineLibrary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.file = defaults.file;
    	      this.glob = defaults.glob;
    	      this.jar = defaults.jar;
    	      this.maven = defaults.maven;
    	      this.notebook = defaults.notebook;
    	      this.whl = defaults.whl;
        }

        @CustomType.Setter
        public Builder file(@Nullable PipelineLibraryFile file) {

            this.file = file;
            return this;
        }
        @CustomType.Setter
        public Builder glob(@Nullable PipelineLibraryGlob glob) {

            this.glob = glob;
            return this;
        }
        @CustomType.Setter
        public Builder jar(@Nullable String jar) {

            this.jar = jar;
            return this;
        }
        @CustomType.Setter
        public Builder maven(@Nullable PipelineLibraryMaven maven) {

            this.maven = maven;
            return this;
        }
        @CustomType.Setter
        public Builder notebook(@Nullable PipelineLibraryNotebook notebook) {

            this.notebook = notebook;
            return this;
        }
        @CustomType.Setter
        public Builder whl(@Nullable String whl) {

            this.whl = whl;
            return this;
        }
        public PipelineLibrary build() {
            final var _resultValue = new PipelineLibrary();
            _resultValue.file = file;
            _resultValue.glob = glob;
            _resultValue.jar = jar;
            _resultValue.maven = maven;
            _resultValue.notebook = notebook;
            _resultValue.whl = whl;
            return _resultValue;
        }
    }
}
