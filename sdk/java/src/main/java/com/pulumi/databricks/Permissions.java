// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.databricks.PermissionsArgs;
import com.pulumi.databricks.Utilities;
import com.pulumi.databricks.inputs.PermissionsState;
import com.pulumi.databricks.outputs.PermissionsAccessControl;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ### Import Example Configuration filehcl resource &#34;databricks_mlflow_model&#34; &#34;model&#34; {
 * 
 *  name
 * 
 * = &#34;example_model&#34;
 * 
 *  description = &#34;MLflow registered model&#34; } resource &#34;databricks_permissions&#34; &#34;model_usage&#34; {
 * 
 *  registered_model_id = databricks_mlflow_model.model.registered_model_id
 * 
 *  access_control {
 * 
 *  group_name
 * 
 *  = &#34;users&#34;
 * 
 *  permission_level = &#34;CAN_READ&#34;
 * 
 *  } } Import commandbash
 * 
 * ```sh
 *  $ pulumi import databricks:index/permissions:Permissions model_usage /registered-models/&lt;registered_model_id&gt;
 * ```
 * 
 */
@ResourceType(type="databricks:index/permissions:Permissions")
public class Permissions extends com.pulumi.resources.CustomResource {
    @Export(name="accessControls", type=List.class, parameters={PermissionsAccessControl.class})
    private Output<List<PermissionsAccessControl>> accessControls;

    public Output<List<PermissionsAccessControl>> accessControls() {
        return this.accessControls;
    }
    /**
     * either [`tokens`](https://docs.databricks.com/administration-guide/access-control/tokens.html) or [`passwords`](https://docs.databricks.com/administration-guide/users-groups/single-sign-on/index.html#configure-password-permission).
     * 
     */
    @Export(name="authorization", type=String.class, parameters={})
    private Output</* @Nullable */ String> authorization;

    /**
     * @return either [`tokens`](https://docs.databricks.com/administration-guide/access-control/tokens.html) or [`passwords`](https://docs.databricks.com/administration-guide/users-groups/single-sign-on/index.html#configure-password-permission).
     * 
     */
    public Output<Optional<String>> authorization() {
        return Codegen.optional(this.authorization);
    }
    /**
     * cluster id
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clusterId;

    /**
     * @return cluster id
     * 
     */
    public Output<Optional<String>> clusterId() {
        return Codegen.optional(this.clusterId);
    }
    /**
     * cluster policy id
     * 
     */
    @Export(name="clusterPolicyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clusterPolicyId;

    /**
     * @return cluster policy id
     * 
     */
    public Output<Optional<String>> clusterPolicyId() {
        return Codegen.optional(this.clusterPolicyId);
    }
    /**
     * directory id
     * 
     */
    @Export(name="directoryId", type=String.class, parameters={})
    private Output</* @Nullable */ String> directoryId;

    /**
     * @return directory id
     * 
     */
    public Output<Optional<String>> directoryId() {
        return Codegen.optional(this.directoryId);
    }
    /**
     * path of directory
     * 
     */
    @Export(name="directoryPath", type=String.class, parameters={})
    private Output</* @Nullable */ String> directoryPath;

    /**
     * @return path of directory
     * 
     */
    public Output<Optional<String>> directoryPath() {
        return Codegen.optional(this.directoryPath);
    }
    /**
     * MLflow experiment id
     * 
     */
    @Export(name="experimentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> experimentId;

    /**
     * @return MLflow experiment id
     * 
     */
    public Output<Optional<String>> experimentId() {
        return Codegen.optional(this.experimentId);
    }
    /**
     * instance pool id
     * 
     */
    @Export(name="instancePoolId", type=String.class, parameters={})
    private Output</* @Nullable */ String> instancePoolId;

    /**
     * @return instance pool id
     * 
     */
    public Output<Optional<String>> instancePoolId() {
        return Codegen.optional(this.instancePoolId);
    }
    /**
     * job id
     * 
     */
    @Export(name="jobId", type=String.class, parameters={})
    private Output</* @Nullable */ String> jobId;

    /**
     * @return job id
     * 
     */
    public Output<Optional<String>> jobId() {
        return Codegen.optional(this.jobId);
    }
    /**
     * ID of notebook within workspace
     * 
     */
    @Export(name="notebookId", type=String.class, parameters={})
    private Output</* @Nullable */ String> notebookId;

    /**
     * @return ID of notebook within workspace
     * 
     */
    public Output<Optional<String>> notebookId() {
        return Codegen.optional(this.notebookId);
    }
    /**
     * path of notebook
     * 
     */
    @Export(name="notebookPath", type=String.class, parameters={})
    private Output</* @Nullable */ String> notebookPath;

    /**
     * @return path of notebook
     * 
     */
    public Output<Optional<String>> notebookPath() {
        return Codegen.optional(this.notebookPath);
    }
    /**
     * type of permissions.
     * 
     */
    @Export(name="objectType", type=String.class, parameters={})
    private Output<String> objectType;

    /**
     * @return type of permissions.
     * 
     */
    public Output<String> objectType() {
        return this.objectType;
    }
    /**
     * pipeline id
     * 
     */
    @Export(name="pipelineId", type=String.class, parameters={})
    private Output</* @Nullable */ String> pipelineId;

    /**
     * @return pipeline id
     * 
     */
    public Output<Optional<String>> pipelineId() {
        return Codegen.optional(this.pipelineId);
    }
    /**
     * MLflow registered model id
     * 
     */
    @Export(name="registeredModelId", type=String.class, parameters={})
    private Output</* @Nullable */ String> registeredModelId;

    /**
     * @return MLflow registered model id
     * 
     */
    public Output<Optional<String>> registeredModelId() {
        return Codegen.optional(this.registeredModelId);
    }
    /**
     * repo id
     * 
     */
    @Export(name="repoId", type=String.class, parameters={})
    private Output</* @Nullable */ String> repoId;

    /**
     * @return repo id
     * 
     */
    public Output<Optional<String>> repoId() {
        return Codegen.optional(this.repoId);
    }
    /**
     * path of databricks repo directory(`/Repos/&lt;username&gt;/...`)
     * 
     */
    @Export(name="repoPath", type=String.class, parameters={})
    private Output</* @Nullable */ String> repoPath;

    /**
     * @return path of databricks repo directory(`/Repos/&lt;username&gt;/...`)
     * 
     */
    public Output<Optional<String>> repoPath() {
        return Codegen.optional(this.repoPath);
    }
    /**
     * Model Serving endpoint id.
     * 
     */
    @Export(name="servingEndpointId", type=String.class, parameters={})
    private Output</* @Nullable */ String> servingEndpointId;

    /**
     * @return Model Serving endpoint id.
     * 
     */
    public Output<Optional<String>> servingEndpointId() {
        return Codegen.optional(this.servingEndpointId);
    }
    /**
     * [SQL alert](https://docs.databricks.com/sql/user/security/access-control/alert-acl.html) id
     * 
     */
    @Export(name="sqlAlertId", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlAlertId;

    /**
     * @return [SQL alert](https://docs.databricks.com/sql/user/security/access-control/alert-acl.html) id
     * 
     */
    public Output<Optional<String>> sqlAlertId() {
        return Codegen.optional(this.sqlAlertId);
    }
    /**
     * SQL dashboard id
     * 
     */
    @Export(name="sqlDashboardId", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlDashboardId;

    /**
     * @return SQL dashboard id
     * 
     */
    public Output<Optional<String>> sqlDashboardId() {
        return Codegen.optional(this.sqlDashboardId);
    }
    /**
     * SQL warehouse id
     * 
     */
    @Export(name="sqlEndpointId", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlEndpointId;

    /**
     * @return SQL warehouse id
     * 
     */
    public Output<Optional<String>> sqlEndpointId() {
        return Codegen.optional(this.sqlEndpointId);
    }
    /**
     * SQL query id
     * 
     */
    @Export(name="sqlQueryId", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlQueryId;

    /**
     * @return SQL query id
     * 
     */
    public Output<Optional<String>> sqlQueryId() {
        return Codegen.optional(this.sqlQueryId);
    }
    @Export(name="workspaceFileId", type=String.class, parameters={})
    private Output</* @Nullable */ String> workspaceFileId;

    public Output<Optional<String>> workspaceFileId() {
        return Codegen.optional(this.workspaceFileId);
    }
    @Export(name="workspaceFilePath", type=String.class, parameters={})
    private Output</* @Nullable */ String> workspaceFilePath;

    public Output<Optional<String>> workspaceFilePath() {
        return Codegen.optional(this.workspaceFilePath);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Permissions(String name) {
        this(name, PermissionsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Permissions(String name, PermissionsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Permissions(String name, PermissionsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/permissions:Permissions", name, args == null ? PermissionsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Permissions(String name, Output<String> id, @Nullable PermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("databricks:index/permissions:Permissions", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Permissions get(String name, Output<String> id, @Nullable PermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Permissions(name, id, state, options);
    }
}
