// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Import
    /// 
    /// As of Pulumi v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = "entity_type,entity_name,tag_key"
    /// 
    ///   to = databricks_entity_tag_assignment.this
    /// 
    /// }
    /// 
    /// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/entityTagAssignment:EntityTagAssignment databricks_entity_tag_assignment "entity_type,entity_name,tag_key"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/entityTagAssignment:EntityTagAssignment")]
    public partial class EntityTagAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fully qualified name of the entity to which the tag is assigned
        /// </summary>
        [Output("entityName")]
        public Output<string> EntityName { get; private set; } = null!;

        /// <summary>
        /// The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
        /// </summary>
        [Output("entityType")]
        public Output<string> EntityType { get; private set; } = null!;

        /// <summary>
        /// The key of the tag
        /// </summary>
        [Output("tagKey")]
        public Output<string> TagKey { get; private set; } = null!;

        /// <summary>
        /// The value of the tag
        /// </summary>
        [Output("tagValue")]
        public Output<string?> TagValue { get; private set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Output("workspaceId")]
        public Output<string?> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a EntityTagAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EntityTagAssignment(string name, EntityTagAssignmentArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/entityTagAssignment:EntityTagAssignment", name, args ?? new EntityTagAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EntityTagAssignment(string name, Input<string> id, EntityTagAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/entityTagAssignment:EntityTagAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EntityTagAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EntityTagAssignment Get(string name, Input<string> id, EntityTagAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new EntityTagAssignment(name, id, state, options);
        }
    }

    public sealed class EntityTagAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified name of the entity to which the tag is assigned
        /// </summary>
        [Input("entityName", required: true)]
        public Input<string> EntityName { get; set; } = null!;

        /// <summary>
        /// The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
        /// </summary>
        [Input("entityType", required: true)]
        public Input<string> EntityType { get; set; } = null!;

        /// <summary>
        /// The key of the tag
        /// </summary>
        [Input("tagKey", required: true)]
        public Input<string> TagKey { get; set; } = null!;

        /// <summary>
        /// The value of the tag
        /// </summary>
        [Input("tagValue")]
        public Input<string>? TagValue { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public EntityTagAssignmentArgs()
        {
        }
        public static new EntityTagAssignmentArgs Empty => new EntityTagAssignmentArgs();
    }

    public sealed class EntityTagAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified name of the entity to which the tag is assigned
        /// </summary>
        [Input("entityName")]
        public Input<string>? EntityName { get; set; }

        /// <summary>
        /// The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
        /// </summary>
        [Input("entityType")]
        public Input<string>? EntityType { get; set; }

        /// <summary>
        /// The key of the tag
        /// </summary>
        [Input("tagKey")]
        public Input<string>? TagKey { get; set; }

        /// <summary>
        /// The value of the tag
        /// </summary>
        [Input("tagValue")]
        public Input<string>? TagValue { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public EntityTagAssignmentState()
        {
        }
        public static new EntityTagAssignmentState Empty => new EntityTagAssignmentState();
    }
}
