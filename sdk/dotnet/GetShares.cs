// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetShares
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Getting all existing shares in the metastore
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Databricks.GetShares.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["shareName"] = @this.Apply(@this =&gt; @this.Apply(getSharesResult =&gt; getSharesResult.Shares)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.Share to create Delta Sharing shares.
        /// * databricks.Recipient to create Delta Sharing recipients.
        /// * databricks.Grants to manage Delta Sharing permissions.
        /// </summary>
        public static Task<GetSharesResult> InvokeAsync(GetSharesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSharesResult>("databricks:index/getShares:getShares", args ?? new GetSharesArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Getting all existing shares in the metastore
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Databricks.GetShares.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["shareName"] = @this.Apply(@this =&gt; @this.Apply(getSharesResult =&gt; getSharesResult.Shares)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.Share to create Delta Sharing shares.
        /// * databricks.Recipient to create Delta Sharing recipients.
        /// * databricks.Grants to manage Delta Sharing permissions.
        /// </summary>
        public static Output<GetSharesResult> Invoke(GetSharesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSharesResult>("databricks:index/getShares:getShares", args ?? new GetSharesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSharesArgs : global::Pulumi.InvokeArgs
    {
        [Input("shares")]
        private List<string>? _shares;

        /// <summary>
        /// list of databricks.Share names.
        /// </summary>
        public List<string> Shares
        {
            get => _shares ?? (_shares = new List<string>());
            set => _shares = value;
        }

        public GetSharesArgs()
        {
        }
        public static new GetSharesArgs Empty => new GetSharesArgs();
    }

    public sealed class GetSharesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("shares")]
        private InputList<string>? _shares;

        /// <summary>
        /// list of databricks.Share names.
        /// </summary>
        public InputList<string> Shares
        {
            get => _shares ?? (_shares = new InputList<string>());
            set => _shares = value;
        }

        public GetSharesInvokeArgs()
        {
        }
        public static new GetSharesInvokeArgs Empty => new GetSharesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSharesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// list of databricks.Share names.
        /// </summary>
        public readonly ImmutableArray<string> Shares;

        [OutputConstructor]
        private GetSharesResult(
            string id,

            ImmutableArray<string> shares)
        {
            Id = id;
            Shares = shares;
        }
    }
}
