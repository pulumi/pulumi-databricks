// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sandbox = new Databricks.Catalog("sandbox", new()
    ///     {
    ///         Name = "sandbox",
    ///         IsolationMode = "ISOLATED",
    ///     });
    /// 
    ///     var sandboxWorkspaceBinding = new Databricks.WorkspaceBinding("sandbox", new()
    ///     {
    ///         SecurableName = sandbox.Name,
    ///         WorkspaceId = other.WorkspaceId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by using combination of workspace ID, securable type and name:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/workspaceBinding:WorkspaceBinding this "&lt;workspace_id&gt;|&lt;securable_type&gt;|&lt;securable_name&gt;"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/workspaceBinding:WorkspaceBinding")]
    public partial class WorkspaceBinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Binding mode. Default to `BINDING_TYPE_READ_WRITE`. For `catalog`, possible values are `BINDING_TYPE_READ_ONLY`, `BINDING_TYPE_READ_WRITE`. For `external-location` or `storage-credential`, no binding mode needs to be specified
        /// </summary>
        [Output("bindingType")]
        public Output<string?> BindingType { get; private set; } = null!;

        [Output("catalogName")]
        public Output<string?> CatalogName { get; private set; } = null!;

        /// <summary>
        /// Name of securable. Change forces creation of a new resource.
        /// </summary>
        [Output("securableName")]
        public Output<string> SecurableName { get; private set; } = null!;

        /// <summary>
        /// Type of securable. Can be `catalog`, `external-locations` or `storage-credentials`. Default to `catalog`. Change forces creation of a new resource.
        /// </summary>
        [Output("securableType")]
        public Output<string?> SecurableType { get; private set; } = null!;

        /// <summary>
        /// ID of the workspace. Change forces creation of a new resource.
        /// </summary>
        [Output("workspaceId")]
        public Output<string?> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceBinding(string name, WorkspaceBindingArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/workspaceBinding:WorkspaceBinding", name, args ?? new WorkspaceBindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceBinding(string name, Input<string> id, WorkspaceBindingState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/workspaceBinding:WorkspaceBinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceBinding Get(string name, Input<string> id, WorkspaceBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceBinding(name, id, state, options);
        }
    }

    public sealed class WorkspaceBindingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Binding mode. Default to `BINDING_TYPE_READ_WRITE`. For `catalog`, possible values are `BINDING_TYPE_READ_ONLY`, `BINDING_TYPE_READ_WRITE`. For `external-location` or `storage-credential`, no binding mode needs to be specified
        /// </summary>
        [Input("bindingType")]
        public Input<string>? BindingType { get; set; }

        [Input("catalogName")]
        public Input<string>? CatalogName { get; set; }

        /// <summary>
        /// Name of securable. Change forces creation of a new resource.
        /// </summary>
        [Input("securableName")]
        public Input<string>? SecurableName { get; set; }

        /// <summary>
        /// Type of securable. Can be `catalog`, `external-locations` or `storage-credentials`. Default to `catalog`. Change forces creation of a new resource.
        /// </summary>
        [Input("securableType")]
        public Input<string>? SecurableType { get; set; }

        /// <summary>
        /// ID of the workspace. Change forces creation of a new resource.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceBindingArgs()
        {
        }
        public static new WorkspaceBindingArgs Empty => new WorkspaceBindingArgs();
    }

    public sealed class WorkspaceBindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Binding mode. Default to `BINDING_TYPE_READ_WRITE`. For `catalog`, possible values are `BINDING_TYPE_READ_ONLY`, `BINDING_TYPE_READ_WRITE`. For `external-location` or `storage-credential`, no binding mode needs to be specified
        /// </summary>
        [Input("bindingType")]
        public Input<string>? BindingType { get; set; }

        [Input("catalogName")]
        public Input<string>? CatalogName { get; set; }

        /// <summary>
        /// Name of securable. Change forces creation of a new resource.
        /// </summary>
        [Input("securableName")]
        public Input<string>? SecurableName { get; set; }

        /// <summary>
        /// Type of securable. Can be `catalog`, `external-locations` or `storage-credentials`. Default to `catalog`. Change forces creation of a new resource.
        /// </summary>
        [Input("securableType")]
        public Input<string>? SecurableType { get; set; }

        /// <summary>
        /// ID of the workspace. Change forces creation of a new resource.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceBindingState()
        {
        }
        public static new WorkspaceBindingState Empty => new WorkspaceBindingState();
    }
}
