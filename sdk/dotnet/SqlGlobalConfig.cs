// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/sqlGlobalConfig:SqlGlobalConfig")]
    public partial class SqlGlobalConfig : global::Pulumi.CustomResource
    {
        [Output("dataAccessConfig")]
        public Output<ImmutableDictionary<string, string>?> DataAccessConfig { get; private set; } = null!;

        [Output("enableServerlessCompute")]
        public Output<bool> EnableServerlessCompute { get; private set; } = null!;

        [Output("googleServiceAccount")]
        public Output<string?> GoogleServiceAccount { get; private set; } = null!;

        [Output("instanceProfileArn")]
        public Output<string?> InstanceProfileArn { get; private set; } = null!;

        [Output("securityPolicy")]
        public Output<string?> SecurityPolicy { get; private set; } = null!;

        [Output("sqlConfigParams")]
        public Output<ImmutableDictionary<string, string>?> SqlConfigParams { get; private set; } = null!;


        /// <summary>
        /// Create a SqlGlobalConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlGlobalConfig(string name, SqlGlobalConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/sqlGlobalConfig:SqlGlobalConfig", name, args ?? new SqlGlobalConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlGlobalConfig(string name, Input<string> id, SqlGlobalConfigState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/sqlGlobalConfig:SqlGlobalConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlGlobalConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlGlobalConfig Get(string name, Input<string> id, SqlGlobalConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlGlobalConfig(name, id, state, options);
        }
    }

    public sealed class SqlGlobalConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("dataAccessConfig")]
        private InputMap<string>? _dataAccessConfig;
        public InputMap<string> DataAccessConfig
        {
            get => _dataAccessConfig ?? (_dataAccessConfig = new InputMap<string>());
            set => _dataAccessConfig = value;
        }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("googleServiceAccount")]
        public Input<string>? GoogleServiceAccount { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("securityPolicy")]
        public Input<string>? SecurityPolicy { get; set; }

        [Input("sqlConfigParams")]
        private InputMap<string>? _sqlConfigParams;
        public InputMap<string> SqlConfigParams
        {
            get => _sqlConfigParams ?? (_sqlConfigParams = new InputMap<string>());
            set => _sqlConfigParams = value;
        }

        public SqlGlobalConfigArgs()
        {
        }
        public static new SqlGlobalConfigArgs Empty => new SqlGlobalConfigArgs();
    }

    public sealed class SqlGlobalConfigState : global::Pulumi.ResourceArgs
    {
        [Input("dataAccessConfig")]
        private InputMap<string>? _dataAccessConfig;
        public InputMap<string> DataAccessConfig
        {
            get => _dataAccessConfig ?? (_dataAccessConfig = new InputMap<string>());
            set => _dataAccessConfig = value;
        }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("googleServiceAccount")]
        public Input<string>? GoogleServiceAccount { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("securityPolicy")]
        public Input<string>? SecurityPolicy { get; set; }

        [Input("sqlConfigParams")]
        private InputMap<string>? _sqlConfigParams;
        public InputMap<string> SqlConfigParams
        {
            get => _sqlConfigParams ?? (_sqlConfigParams = new InputMap<string>());
            set => _sqlConfigParams = value;
        }

        public SqlGlobalConfigState()
        {
        }
        public static new SqlGlobalConfigState Empty => new SqlGlobalConfigState();
    }
}
