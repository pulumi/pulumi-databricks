// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// &gt; **Deprecated** Please rewrite with databricks_user_role. This resource will be removed in v0.5.x
    /// 
    /// This resource allows you to attach databricks.InstanceProfile (AWS) to databricks_user.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var instanceProfile = new Databricks.InstanceProfile("instanceProfile", new()
    ///     {
    ///         InstanceProfileArn = "my_instance_profile_arn",
    ///     });
    /// 
    ///     var myUser = new Databricks.User("myUser", new()
    ///     {
    ///         UserName = "me@example.com",
    ///     });
    /// 
    ///     var myUserInstanceProfile = new Databricks.UserInstanceProfile("myUserInstanceProfile", new()
    ///     {
    ///         UserId = myUser.Id,
    ///         InstanceProfileId = instanceProfile.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are often used in the same context:
    /// 
    /// * End to end workspace management guide.
    /// * databricks.GroupInstanceProfile to attach databricks.InstanceProfile (AWS) to databricks_group.
    /// * databricks.GroupMember to attach users and groups as group members.
    /// * databricks.InstanceProfile to manage AWS EC2 instance profiles that users can launch databricks.Cluster and access data, like databricks_mount.
    /// * databricks.User to [manage users](https://docs.databricks.com/administration-guide/users-groups/users.html), that could be added to databricks.Group within the workspace.
    /// * databricks.User data to retrieve information about databricks_user.
    /// 
    /// ## Import
    /// 
    /// -&gt; **Note** Importing this resource is not currently supported.
    /// </summary>
    [DatabricksResourceType("databricks:index/userInstanceProfile:UserInstanceProfile")]
    public partial class UserInstanceProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This is the id of the instance profile resource.
        /// </summary>
        [Output("instanceProfileId")]
        public Output<string> InstanceProfileId { get; private set; } = null!;

        /// <summary>
        /// This is the id of the user resource.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserInstanceProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserInstanceProfile(string name, UserInstanceProfileArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/userInstanceProfile:UserInstanceProfile", name, args ?? new UserInstanceProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserInstanceProfile(string name, Input<string> id, UserInstanceProfileState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/userInstanceProfile:UserInstanceProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserInstanceProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserInstanceProfile Get(string name, Input<string> id, UserInstanceProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new UserInstanceProfile(name, id, state, options);
        }
    }

    public sealed class UserInstanceProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is the id of the instance profile resource.
        /// </summary>
        [Input("instanceProfileId", required: true)]
        public Input<string> InstanceProfileId { get; set; } = null!;

        /// <summary>
        /// This is the id of the user resource.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UserInstanceProfileArgs()
        {
        }
        public static new UserInstanceProfileArgs Empty => new UserInstanceProfileArgs();
    }

    public sealed class UserInstanceProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is the id of the instance profile resource.
        /// </summary>
        [Input("instanceProfileId")]
        public Input<string>? InstanceProfileId { get; set; }

        /// <summary>
        /// This is the id of the user resource.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UserInstanceProfileState()
        {
        }
        public static new UserInstanceProfileState Empty => new UserInstanceProfileState();
    }
}
