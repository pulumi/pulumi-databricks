// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Import
    /// 
    /// As of terraform v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = network_policy_id
    /// 
    ///   to = databricks_account_network_policy.this
    /// 
    /// }
    /// 
    /// If you are using an older version of terraform, you can import the resource using cli as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/accountNetworkPolicy:AccountNetworkPolicy databricks_account_network_policy network_policy_id
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/accountNetworkPolicy:AccountNetworkPolicy")]
    public partial class AccountNetworkPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The associated account ID for this Network Policy object
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        /// <summary>
        /// The network policies applying for egress traffic
        /// </summary>
        [Output("egress")]
        public Output<Outputs.AccountNetworkPolicyEgress?> Egress { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the network policy
        /// </summary>
        [Output("networkPolicyId")]
        public Output<string?> NetworkPolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AccountNetworkPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountNetworkPolicy(string name, AccountNetworkPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/accountNetworkPolicy:AccountNetworkPolicy", name, args ?? new AccountNetworkPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountNetworkPolicy(string name, Input<string> id, AccountNetworkPolicyState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/accountNetworkPolicy:AccountNetworkPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountNetworkPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountNetworkPolicy Get(string name, Input<string> id, AccountNetworkPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountNetworkPolicy(name, id, state, options);
        }
    }

    public sealed class AccountNetworkPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The associated account ID for this Network Policy object
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The network policies applying for egress traffic
        /// </summary>
        [Input("egress")]
        public Input<Inputs.AccountNetworkPolicyEgressArgs>? Egress { get; set; }

        /// <summary>
        /// The unique identifier for the network policy
        /// </summary>
        [Input("networkPolicyId")]
        public Input<string>? NetworkPolicyId { get; set; }

        public AccountNetworkPolicyArgs()
        {
        }
        public static new AccountNetworkPolicyArgs Empty => new AccountNetworkPolicyArgs();
    }

    public sealed class AccountNetworkPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The associated account ID for this Network Policy object
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The network policies applying for egress traffic
        /// </summary>
        [Input("egress")]
        public Input<Inputs.AccountNetworkPolicyEgressGetArgs>? Egress { get; set; }

        /// <summary>
        /// The unique identifier for the network policy
        /// </summary>
        [Input("networkPolicyId")]
        public Input<string>? NetworkPolicyId { get; set; }

        public AccountNetworkPolicyState()
        {
        }
        public static new AccountNetworkPolicyState Empty => new AccountNetworkPolicyState();
    }
}
