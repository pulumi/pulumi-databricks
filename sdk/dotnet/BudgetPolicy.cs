// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// Administrators can use budget policies to ensure that the correct tags appear automatically on serverless resources without depending on users to attach tags manually, allowing for customized cost reporting and chargebacks. Budget policies consist of tags that are applied to any serverless compute activity incurred by a user assigned to the policy. The tags are logged in your billing records, allowing you to attribute serverless usage to specific budgets.
    /// 
    /// &gt; This resource can only be used with an account-level provider!
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.BudgetPolicy("this", new()
    ///     {
    ///         PolicyName = "my-budget-policy",
    ///         CustomTags = new[]
    ///         {
    ///             new Databricks.Inputs.BudgetPolicyCustomTagArgs
    ///             {
    ///                 Key = "mykey",
    ///                 Value = "myvalue",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Access Control
    /// 
    /// * databricks.AccessControlRuleSet can control which groups or individual users can manage or use the given budget policy.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by ID.
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/budgetPolicy:BudgetPolicy this policy_id
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/budgetPolicy:BudgetPolicy")]
    public partial class BudgetPolicy : global::Pulumi.CustomResource
    {
        [Output("bindingWorkspaceIds")]
        public Output<ImmutableArray<int>> BindingWorkspaceIds { get; private set; } = null!;

        /// <summary>
        /// A list of tags defined by the customer. At most 20 entries are allowed per policy.
        /// </summary>
        [Output("customTags")]
        public Output<ImmutableArray<Outputs.BudgetPolicyCustomTag>> CustomTags { get; private set; } = null!;

        /// <summary>
        /// ID of the budget policy
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The name of the policy. Must be unique among active policies. Can contain only characters from the ISO 8859-1 (latin1) set.
        /// </summary>
        [Output("policyName")]
        public Output<string?> PolicyName { get; private set; } = null!;


        /// <summary>
        /// Create a BudgetPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BudgetPolicy(string name, BudgetPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/budgetPolicy:BudgetPolicy", name, args ?? new BudgetPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BudgetPolicy(string name, Input<string> id, BudgetPolicyState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/budgetPolicy:BudgetPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BudgetPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BudgetPolicy Get(string name, Input<string> id, BudgetPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new BudgetPolicy(name, id, state, options);
        }
    }

    public sealed class BudgetPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("bindingWorkspaceIds")]
        private InputList<int>? _bindingWorkspaceIds;
        public InputList<int> BindingWorkspaceIds
        {
            get => _bindingWorkspaceIds ?? (_bindingWorkspaceIds = new InputList<int>());
            set => _bindingWorkspaceIds = value;
        }

        [Input("customTags")]
        private InputList<Inputs.BudgetPolicyCustomTagArgs>? _customTags;

        /// <summary>
        /// A list of tags defined by the customer. At most 20 entries are allowed per policy.
        /// </summary>
        public InputList<Inputs.BudgetPolicyCustomTagArgs> CustomTags
        {
            get => _customTags ?? (_customTags = new InputList<Inputs.BudgetPolicyCustomTagArgs>());
            set => _customTags = value;
        }

        /// <summary>
        /// The name of the policy. Must be unique among active policies. Can contain only characters from the ISO 8859-1 (latin1) set.
        /// </summary>
        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        public BudgetPolicyArgs()
        {
        }
        public static new BudgetPolicyArgs Empty => new BudgetPolicyArgs();
    }

    public sealed class BudgetPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("bindingWorkspaceIds")]
        private InputList<int>? _bindingWorkspaceIds;
        public InputList<int> BindingWorkspaceIds
        {
            get => _bindingWorkspaceIds ?? (_bindingWorkspaceIds = new InputList<int>());
            set => _bindingWorkspaceIds = value;
        }

        [Input("customTags")]
        private InputList<Inputs.BudgetPolicyCustomTagGetArgs>? _customTags;

        /// <summary>
        /// A list of tags defined by the customer. At most 20 entries are allowed per policy.
        /// </summary>
        public InputList<Inputs.BudgetPolicyCustomTagGetArgs> CustomTags
        {
            get => _customTags ?? (_customTags = new InputList<Inputs.BudgetPolicyCustomTagGetArgs>());
            set => _customTags = value;
        }

        /// <summary>
        /// ID of the budget policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The name of the policy. Must be unique among active policies. Can contain only characters from the ISO 8859-1 (latin1) set.
        /// </summary>
        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        public BudgetPolicyState()
        {
        }
        public static new BudgetPolicyState Empty => new BudgetPolicyState();
    }
}
