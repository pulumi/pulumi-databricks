// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetWorkspaceNetworkOption
    {
        public static Task<GetWorkspaceNetworkOptionResult> InvokeAsync(GetWorkspaceNetworkOptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceNetworkOptionResult>("databricks:index/getWorkspaceNetworkOption:getWorkspaceNetworkOption", args ?? new GetWorkspaceNetworkOptionArgs(), options.WithDefaults());

        public static Output<GetWorkspaceNetworkOptionResult> Invoke(GetWorkspaceNetworkOptionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceNetworkOptionResult>("databricks:index/getWorkspaceNetworkOption:getWorkspaceNetworkOption", args ?? new GetWorkspaceNetworkOptionInvokeArgs(), options.WithDefaults());

        public static Output<GetWorkspaceNetworkOptionResult> Invoke(GetWorkspaceNetworkOptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceNetworkOptionResult>("databricks:index/getWorkspaceNetworkOption:getWorkspaceNetworkOption", args ?? new GetWorkspaceNetworkOptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceNetworkOptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - The network policy ID to apply to the workspace. This controls the network access rules
        /// for all serverless compute resources in the workspace. Each workspace can only be
        /// linked to one policy at a time. If no policy is explicitly assigned,
        /// the workspace will use 'default-policy'
        /// </summary>
        [Input("networkPolicyId")]
        public string? NetworkPolicyId { get; set; }

        /// <summary>
        /// The workspace ID
        /// </summary>
        [Input("workspaceId")]
        public string? WorkspaceId { get; set; }

        public GetWorkspaceNetworkOptionArgs()
        {
        }
        public static new GetWorkspaceNetworkOptionArgs Empty => new GetWorkspaceNetworkOptionArgs();
    }

    public sealed class GetWorkspaceNetworkOptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - The network policy ID to apply to the workspace. This controls the network access rules
        /// for all serverless compute resources in the workspace. Each workspace can only be
        /// linked to one policy at a time. If no policy is explicitly assigned,
        /// the workspace will use 'default-policy'
        /// </summary>
        [Input("networkPolicyId")]
        public Input<string>? NetworkPolicyId { get; set; }

        /// <summary>
        /// The workspace ID
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public GetWorkspaceNetworkOptionInvokeArgs()
        {
        }
        public static new GetWorkspaceNetworkOptionInvokeArgs Empty => new GetWorkspaceNetworkOptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceNetworkOptionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (string) - The network policy ID to apply to the workspace. This controls the network access rules
        /// for all serverless compute resources in the workspace. Each workspace can only be
        /// linked to one policy at a time. If no policy is explicitly assigned,
        /// the workspace will use 'default-policy'
        /// </summary>
        public readonly string? NetworkPolicyId;
        /// <summary>
        /// (integer) - The workspace ID
        /// </summary>
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceNetworkOptionResult(
            string id,

            string? networkPolicyId,

            string? workspaceId)
        {
            Id = id;
            NetworkPolicyId = networkPolicyId;
            WorkspaceId = workspaceId;
        }
    }
}
