// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/recipient:Recipient")]
    public partial class Recipient : global::Pulumi.CustomResource
    {
        [Output("activated")]
        public Output<bool> Activated { get; private set; } = null!;

        [Output("activationUrl")]
        public Output<string> ActivationUrl { get; private set; } = null!;

        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        [Output("dataRecipientGlobalMetastoreId")]
        public Output<string?> DataRecipientGlobalMetastoreId { get; private set; } = null!;

        [Output("ipAccessList")]
        public Output<Outputs.RecipientIpAccessList?> IpAccessList { get; private set; } = null!;

        [Output("metastoreId")]
        public Output<string> MetastoreId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("owner")]
        public Output<string?> Owner { get; private set; } = null!;

        [Output("propertiesKvpairs")]
        public Output<Outputs.RecipientPropertiesKvpairs?> PropertiesKvpairs { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("sharingCode")]
        public Output<string?> SharingCode { get; private set; } = null!;

        [Output("tokens")]
        public Output<ImmutableArray<Outputs.RecipientToken>> Tokens { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<int> UpdatedAt { get; private set; } = null!;

        [Output("updatedBy")]
        public Output<string> UpdatedBy { get; private set; } = null!;


        /// <summary>
        /// Create a Recipient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Recipient(string name, RecipientArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/recipient:Recipient", name, args ?? new RecipientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Recipient(string name, Input<string> id, RecipientState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/recipient:Recipient", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "sharingCode",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Recipient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Recipient Get(string name, Input<string> id, RecipientState? state = null, CustomResourceOptions? options = null)
        {
            return new Recipient(name, id, state, options);
        }
    }

    public sealed class RecipientArgs : global::Pulumi.ResourceArgs
    {
        [Input("authenticationType", required: true)]
        public Input<string> AuthenticationType { get; set; } = null!;

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("dataRecipientGlobalMetastoreId")]
        public Input<string>? DataRecipientGlobalMetastoreId { get; set; }

        [Input("ipAccessList")]
        public Input<Inputs.RecipientIpAccessListArgs>? IpAccessList { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("propertiesKvpairs")]
        public Input<Inputs.RecipientPropertiesKvpairsArgs>? PropertiesKvpairs { get; set; }

        [Input("sharingCode")]
        private Input<string>? _sharingCode;
        public Input<string>? SharingCode
        {
            get => _sharingCode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharingCode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokens")]
        private InputList<Inputs.RecipientTokenArgs>? _tokens;
        public InputList<Inputs.RecipientTokenArgs> Tokens
        {
            get => _tokens ?? (_tokens = new InputList<Inputs.RecipientTokenArgs>());
            set => _tokens = value;
        }

        public RecipientArgs()
        {
        }
        public static new RecipientArgs Empty => new RecipientArgs();
    }

    public sealed class RecipientState : global::Pulumi.ResourceArgs
    {
        [Input("activated")]
        public Input<bool>? Activated { get; set; }

        [Input("activationUrl")]
        public Input<string>? ActivationUrl { get; set; }

        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("dataRecipientGlobalMetastoreId")]
        public Input<string>? DataRecipientGlobalMetastoreId { get; set; }

        [Input("ipAccessList")]
        public Input<Inputs.RecipientIpAccessListGetArgs>? IpAccessList { get; set; }

        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("propertiesKvpairs")]
        public Input<Inputs.RecipientPropertiesKvpairsGetArgs>? PropertiesKvpairs { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sharingCode")]
        private Input<string>? _sharingCode;
        public Input<string>? SharingCode
        {
            get => _sharingCode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharingCode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokens")]
        private InputList<Inputs.RecipientTokenGetArgs>? _tokens;
        public InputList<Inputs.RecipientTokenGetArgs> Tokens
        {
            get => _tokens ?? (_tokens = new InputList<Inputs.RecipientTokenGetArgs>());
            set => _tokens = value;
        }

        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        public RecipientState()
        {
        }
        public static new RecipientState Empty => new RecipientState();
    }
}
