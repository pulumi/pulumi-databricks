// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetQualityMonitorV2
    {
        /// <summary>
        /// This data source can be used to fetch a quality monitors v2.
        /// 
        /// &gt; **Note** This data source can only be used with an workspace-level provider!
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Referring to a quality monitor by uc object type (currently only support `schema`) and object id:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Databricks.GetSchema.Invoke(new()
        ///     {
        ///         Name = "my_catalog.my_schema",
        ///     });
        /// 
        ///     var thisGetQualityMonitorV2 = Databricks.GetQualityMonitorV2.Invoke(new()
        ///     {
        ///         ObjectType = "schema",
        ///         ObjectId = @this.Apply(getSchemaResult =&gt; getSchemaResult.SchemaInfo?.SchemaId),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetQualityMonitorV2Result> InvokeAsync(GetQualityMonitorV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQualityMonitorV2Result>("databricks:index/getQualityMonitorV2:getQualityMonitorV2", args ?? new GetQualityMonitorV2Args(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch a quality monitors v2.
        /// 
        /// &gt; **Note** This data source can only be used with an workspace-level provider!
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Referring to a quality monitor by uc object type (currently only support `schema`) and object id:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Databricks.GetSchema.Invoke(new()
        ///     {
        ///         Name = "my_catalog.my_schema",
        ///     });
        /// 
        ///     var thisGetQualityMonitorV2 = Databricks.GetQualityMonitorV2.Invoke(new()
        ///     {
        ///         ObjectType = "schema",
        ///         ObjectId = @this.Apply(getSchemaResult =&gt; getSchemaResult.SchemaInfo?.SchemaId),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQualityMonitorV2Result> Invoke(GetQualityMonitorV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQualityMonitorV2Result>("databricks:index/getQualityMonitorV2:getQualityMonitorV2", args ?? new GetQualityMonitorV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch a quality monitors v2.
        /// 
        /// &gt; **Note** This data source can only be used with an workspace-level provider!
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Referring to a quality monitor by uc object type (currently only support `schema`) and object id:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Databricks.GetSchema.Invoke(new()
        ///     {
        ///         Name = "my_catalog.my_schema",
        ///     });
        /// 
        ///     var thisGetQualityMonitorV2 = Databricks.GetQualityMonitorV2.Invoke(new()
        ///     {
        ///         ObjectType = "schema",
        ///         ObjectId = @this.Apply(getSchemaResult =&gt; getSchemaResult.SchemaInfo?.SchemaId),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQualityMonitorV2Result> Invoke(GetQualityMonitorV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetQualityMonitorV2Result>("databricks:index/getQualityMonitorV2:getQualityMonitorV2", args ?? new GetQualityMonitorV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQualityMonitorV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the request object. For example, schema id
        /// </summary>
        [Input("objectId", required: true)]
        public string ObjectId { get; set; } = null!;

        /// <summary>
        /// The type of the monitored object. Can be one of the following: schema
        /// </summary>
        [Input("objectType", required: true)]
        public string ObjectType { get; set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public string? WorkspaceId { get; set; }

        public GetQualityMonitorV2Args()
        {
        }
        public static new GetQualityMonitorV2Args Empty => new GetQualityMonitorV2Args();
    }

    public sealed class GetQualityMonitorV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the request object. For example, schema id
        /// </summary>
        [Input("objectId", required: true)]
        public Input<string> ObjectId { get; set; } = null!;

        /// <summary>
        /// The type of the monitored object. Can be one of the following: schema
        /// </summary>
        [Input("objectType", required: true)]
        public Input<string> ObjectType { get; set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public GetQualityMonitorV2InvokeArgs()
        {
        }
        public static new GetQualityMonitorV2InvokeArgs Empty => new GetQualityMonitorV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetQualityMonitorV2Result
    {
        /// <summary>
        /// (AnomalyDetectionConfig)
        /// </summary>
        public readonly Outputs.GetQualityMonitorV2AnomalyDetectionConfigResult AnomalyDetectionConfig;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (string) - The uuid of the request object. For example, schema id
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// (string) - The type of the monitored object. Can be one of the following: schema
        /// </summary>
        public readonly string ObjectType;
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetQualityMonitorV2Result(
            Outputs.GetQualityMonitorV2AnomalyDetectionConfigResult anomalyDetectionConfig,

            string id,

            string objectId,

            string objectType,

            string? workspaceId)
        {
            AnomalyDetectionConfig = anomalyDetectionConfig;
            Id = id;
            ObjectId = objectId;
            ObjectType = objectType;
            WorkspaceId = workspaceId;
        }
    }
}
