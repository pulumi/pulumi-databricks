// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/qualityMonitor:QualityMonitor")]
    public partial class QualityMonitor : global::Pulumi.CustomResource
    {
        [Output("assetsDir")]
        public Output<string> AssetsDir { get; private set; } = null!;

        [Output("baselineTableName")]
        public Output<string?> BaselineTableName { get; private set; } = null!;

        [Output("customMetrics")]
        public Output<ImmutableArray<Outputs.QualityMonitorCustomMetric>> CustomMetrics { get; private set; } = null!;

        [Output("dashboardId")]
        public Output<string> DashboardId { get; private set; } = null!;

        [Output("dataClassificationConfig")]
        public Output<Outputs.QualityMonitorDataClassificationConfig?> DataClassificationConfig { get; private set; } = null!;

        [Output("driftMetricsTableName")]
        public Output<string> DriftMetricsTableName { get; private set; } = null!;

        [Output("inferenceLog")]
        public Output<Outputs.QualityMonitorInferenceLog?> InferenceLog { get; private set; } = null!;

        [Output("latestMonitorFailureMsg")]
        public Output<string?> LatestMonitorFailureMsg { get; private set; } = null!;

        [Output("monitorId")]
        public Output<string> MonitorId { get; private set; } = null!;

        [Output("monitorVersion")]
        public Output<string> MonitorVersion { get; private set; } = null!;

        [Output("notifications")]
        public Output<Outputs.QualityMonitorNotifications?> Notifications { get; private set; } = null!;

        [Output("outputSchemaName")]
        public Output<string> OutputSchemaName { get; private set; } = null!;

        [Output("profileMetricsTableName")]
        public Output<string> ProfileMetricsTableName { get; private set; } = null!;

        [Output("schedule")]
        public Output<Outputs.QualityMonitorSchedule?> Schedule { get; private set; } = null!;

        [Output("skipBuiltinDashboard")]
        public Output<bool?> SkipBuiltinDashboard { get; private set; } = null!;

        [Output("slicingExprs")]
        public Output<ImmutableArray<string>> SlicingExprs { get; private set; } = null!;

        [Output("snapshot")]
        public Output<Outputs.QualityMonitorSnapshot?> Snapshot { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;

        [Output("timeSeries")]
        public Output<Outputs.QualityMonitorTimeSeries?> TimeSeries { get; private set; } = null!;

        [Output("warehouseId")]
        public Output<string?> WarehouseId { get; private set; } = null!;


        /// <summary>
        /// Create a QualityMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QualityMonitor(string name, QualityMonitorArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/qualityMonitor:QualityMonitor", name, args ?? new QualityMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QualityMonitor(string name, Input<string> id, QualityMonitorState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/qualityMonitor:QualityMonitor", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QualityMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QualityMonitor Get(string name, Input<string> id, QualityMonitorState? state = null, CustomResourceOptions? options = null)
        {
            return new QualityMonitor(name, id, state, options);
        }
    }

    public sealed class QualityMonitorArgs : global::Pulumi.ResourceArgs
    {
        [Input("assetsDir", required: true)]
        public Input<string> AssetsDir { get; set; } = null!;

        [Input("baselineTableName")]
        public Input<string>? BaselineTableName { get; set; }

        [Input("customMetrics")]
        private InputList<Inputs.QualityMonitorCustomMetricArgs>? _customMetrics;
        public InputList<Inputs.QualityMonitorCustomMetricArgs> CustomMetrics
        {
            get => _customMetrics ?? (_customMetrics = new InputList<Inputs.QualityMonitorCustomMetricArgs>());
            set => _customMetrics = value;
        }

        [Input("dataClassificationConfig")]
        public Input<Inputs.QualityMonitorDataClassificationConfigArgs>? DataClassificationConfig { get; set; }

        [Input("inferenceLog")]
        public Input<Inputs.QualityMonitorInferenceLogArgs>? InferenceLog { get; set; }

        [Input("latestMonitorFailureMsg")]
        public Input<string>? LatestMonitorFailureMsg { get; set; }

        [Input("monitorId")]
        public Input<string>? MonitorId { get; set; }

        [Input("notifications")]
        public Input<Inputs.QualityMonitorNotificationsArgs>? Notifications { get; set; }

        [Input("outputSchemaName", required: true)]
        public Input<string> OutputSchemaName { get; set; } = null!;

        [Input("schedule")]
        public Input<Inputs.QualityMonitorScheduleArgs>? Schedule { get; set; }

        [Input("skipBuiltinDashboard")]
        public Input<bool>? SkipBuiltinDashboard { get; set; }

        [Input("slicingExprs")]
        private InputList<string>? _slicingExprs;
        public InputList<string> SlicingExprs
        {
            get => _slicingExprs ?? (_slicingExprs = new InputList<string>());
            set => _slicingExprs = value;
        }

        [Input("snapshot")]
        public Input<Inputs.QualityMonitorSnapshotArgs>? Snapshot { get; set; }

        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        [Input("timeSeries")]
        public Input<Inputs.QualityMonitorTimeSeriesArgs>? TimeSeries { get; set; }

        [Input("warehouseId")]
        public Input<string>? WarehouseId { get; set; }

        public QualityMonitorArgs()
        {
        }
        public static new QualityMonitorArgs Empty => new QualityMonitorArgs();
    }

    public sealed class QualityMonitorState : global::Pulumi.ResourceArgs
    {
        [Input("assetsDir")]
        public Input<string>? AssetsDir { get; set; }

        [Input("baselineTableName")]
        public Input<string>? BaselineTableName { get; set; }

        [Input("customMetrics")]
        private InputList<Inputs.QualityMonitorCustomMetricGetArgs>? _customMetrics;
        public InputList<Inputs.QualityMonitorCustomMetricGetArgs> CustomMetrics
        {
            get => _customMetrics ?? (_customMetrics = new InputList<Inputs.QualityMonitorCustomMetricGetArgs>());
            set => _customMetrics = value;
        }

        [Input("dashboardId")]
        public Input<string>? DashboardId { get; set; }

        [Input("dataClassificationConfig")]
        public Input<Inputs.QualityMonitorDataClassificationConfigGetArgs>? DataClassificationConfig { get; set; }

        [Input("driftMetricsTableName")]
        public Input<string>? DriftMetricsTableName { get; set; }

        [Input("inferenceLog")]
        public Input<Inputs.QualityMonitorInferenceLogGetArgs>? InferenceLog { get; set; }

        [Input("latestMonitorFailureMsg")]
        public Input<string>? LatestMonitorFailureMsg { get; set; }

        [Input("monitorId")]
        public Input<string>? MonitorId { get; set; }

        [Input("monitorVersion")]
        public Input<string>? MonitorVersion { get; set; }

        [Input("notifications")]
        public Input<Inputs.QualityMonitorNotificationsGetArgs>? Notifications { get; set; }

        [Input("outputSchemaName")]
        public Input<string>? OutputSchemaName { get; set; }

        [Input("profileMetricsTableName")]
        public Input<string>? ProfileMetricsTableName { get; set; }

        [Input("schedule")]
        public Input<Inputs.QualityMonitorScheduleGetArgs>? Schedule { get; set; }

        [Input("skipBuiltinDashboard")]
        public Input<bool>? SkipBuiltinDashboard { get; set; }

        [Input("slicingExprs")]
        private InputList<string>? _slicingExprs;
        public InputList<string> SlicingExprs
        {
            get => _slicingExprs ?? (_slicingExprs = new InputList<string>());
            set => _slicingExprs = value;
        }

        [Input("snapshot")]
        public Input<Inputs.QualityMonitorSnapshotGetArgs>? Snapshot { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        [Input("timeSeries")]
        public Input<Inputs.QualityMonitorTimeSeriesGetArgs>? TimeSeries { get; set; }

        [Input("warehouseId")]
        public Input<string>? WarehouseId { get; set; }

        public QualityMonitorState()
        {
        }
        public static new QualityMonitorState Empty => new QualityMonitorState();
    }
}
