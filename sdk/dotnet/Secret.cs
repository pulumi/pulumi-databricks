// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/secret:Secret")]
    public partial class Secret : global::Pulumi.CustomResource
    {
        [Output("configReference")]
        public Output<string> ConfigReference { get; private set; } = null!;

        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("lastUpdatedTimestamp")]
        public Output<int> LastUpdatedTimestamp { get; private set; } = null!;

        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        [Output("stringValue")]
        public Output<string> StringValue { get; private set; } = null!;


        /// <summary>
        /// Create a Secret resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Secret(string name, SecretArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/secret:Secret", name, args ?? new SecretArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Secret(string name, Input<string> id, SecretState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/secret:Secret", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "stringValue",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Secret resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Secret Get(string name, Input<string> id, SecretState? state = null, CustomResourceOptions? options = null)
        {
            return new Secret(name, id, state, options);
        }
    }

    public sealed class SecretArgs : global::Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        [Input("stringValue", required: true)]
        private Input<string>? _stringValue;
        public Input<string>? StringValue
        {
            get => _stringValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _stringValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SecretArgs()
        {
        }
        public static new SecretArgs Empty => new SecretArgs();
    }

    public sealed class SecretState : global::Pulumi.ResourceArgs
    {
        [Input("configReference")]
        public Input<string>? ConfigReference { get; set; }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("lastUpdatedTimestamp")]
        public Input<int>? LastUpdatedTimestamp { get; set; }

        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("stringValue")]
        private Input<string>? _stringValue;
        public Input<string>? StringValue
        {
            get => _stringValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _stringValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SecretState()
        {
        }
        public static new SecretState Empty => new SecretState();
    }
}
