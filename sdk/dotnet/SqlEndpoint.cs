// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/sqlEndpoint:SqlEndpoint")]
    public partial class SqlEndpoint : global::Pulumi.CustomResource
    {
        [Output("autoStopMins")]
        public Output<int?> AutoStopMins { get; private set; } = null!;

        [Output("channel")]
        public Output<Outputs.SqlEndpointChannel?> Channel { get; private set; } = null!;

        [Output("clusterSize")]
        public Output<string> ClusterSize { get; private set; } = null!;

        [Output("creatorName")]
        public Output<string> CreatorName { get; private set; } = null!;

        [Output("dataSourceId")]
        public Output<string> DataSourceId { get; private set; } = null!;

        [Output("enablePhoton")]
        public Output<bool?> EnablePhoton { get; private set; } = null!;

        [Output("enableServerlessCompute")]
        public Output<bool> EnableServerlessCompute { get; private set; } = null!;

        [Output("healths")]
        public Output<ImmutableArray<Outputs.SqlEndpointHealth>> Healths { get; private set; } = null!;

        [Output("instanceProfileArn")]
        public Output<string?> InstanceProfileArn { get; private set; } = null!;

        [Output("jdbcUrl")]
        public Output<string> JdbcUrl { get; private set; } = null!;

        [Output("maxNumClusters")]
        public Output<int?> MaxNumClusters { get; private set; } = null!;

        [Output("minNumClusters")]
        public Output<int?> MinNumClusters { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("numActiveSessions")]
        public Output<int> NumActiveSessions { get; private set; } = null!;

        [Output("numClusters")]
        public Output<int> NumClusters { get; private set; } = null!;

        [Output("odbcParams")]
        public Output<Outputs.SqlEndpointOdbcParams> OdbcParams { get; private set; } = null!;

        [Output("spotInstancePolicy")]
        public Output<string?> SpotInstancePolicy { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("tags")]
        public Output<Outputs.SqlEndpointTags?> Tags { get; private set; } = null!;

        [Output("warehouseType")]
        public Output<string?> WarehouseType { get; private set; } = null!;


        /// <summary>
        /// Create a SqlEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlEndpoint(string name, SqlEndpointArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/sqlEndpoint:SqlEndpoint", name, args ?? new SqlEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlEndpoint(string name, Input<string> id, SqlEndpointState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/sqlEndpoint:SqlEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlEndpoint Get(string name, Input<string> id, SqlEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlEndpoint(name, id, state, options);
        }
    }

    public sealed class SqlEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoStopMins")]
        public Input<int>? AutoStopMins { get; set; }

        [Input("channel")]
        public Input<Inputs.SqlEndpointChannelArgs>? Channel { get; set; }

        [Input("clusterSize", required: true)]
        public Input<string> ClusterSize { get; set; } = null!;

        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public Input<bool>? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("maxNumClusters")]
        public Input<int>? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public Input<int>? MinNumClusters { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("spotInstancePolicy")]
        public Input<string>? SpotInstancePolicy { get; set; }

        [Input("tags")]
        public Input<Inputs.SqlEndpointTagsArgs>? Tags { get; set; }

        [Input("warehouseType")]
        public Input<string>? WarehouseType { get; set; }

        public SqlEndpointArgs()
        {
        }
        public static new SqlEndpointArgs Empty => new SqlEndpointArgs();
    }

    public sealed class SqlEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("autoStopMins")]
        public Input<int>? AutoStopMins { get; set; }

        [Input("channel")]
        public Input<Inputs.SqlEndpointChannelGetArgs>? Channel { get; set; }

        [Input("clusterSize")]
        public Input<string>? ClusterSize { get; set; }

        [Input("creatorName")]
        public Input<string>? CreatorName { get; set; }

        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public Input<bool>? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("healths")]
        private InputList<Inputs.SqlEndpointHealthGetArgs>? _healths;
        public InputList<Inputs.SqlEndpointHealthGetArgs> Healths
        {
            get => _healths ?? (_healths = new InputList<Inputs.SqlEndpointHealthGetArgs>());
            set => _healths = value;
        }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("jdbcUrl")]
        public Input<string>? JdbcUrl { get; set; }

        [Input("maxNumClusters")]
        public Input<int>? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public Input<int>? MinNumClusters { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numActiveSessions")]
        public Input<int>? NumActiveSessions { get; set; }

        [Input("numClusters")]
        public Input<int>? NumClusters { get; set; }

        [Input("odbcParams")]
        public Input<Inputs.SqlEndpointOdbcParamsGetArgs>? OdbcParams { get; set; }

        [Input("spotInstancePolicy")]
        public Input<string>? SpotInstancePolicy { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        public Input<Inputs.SqlEndpointTagsGetArgs>? Tags { get; set; }

        [Input("warehouseType")]
        public Input<string>? WarehouseType { get; set; }

        public SqlEndpointState()
        {
        }
        public static new SqlEndpointState Empty => new SqlEndpointState();
    }
}
