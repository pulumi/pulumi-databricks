// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var initScripts = new Databricks.ArtifactAllowlist("init_scripts", new()
    ///     {
    ///         ArtifactType = "INIT_SCRIPT",
    ///         ArtifactMatchers = new[]
    ///         {
    ///             new Databricks.Inputs.ArtifactAllowlistArtifactMatcherArgs
    ///             {
    ///                 Artifact = "/Volumes/inits",
    ///                 MatchType = "PREFIX_MATCH",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are used in the same context:
    /// 
    /// * databricks.Cluster to create [Databricks Clusters](https://docs.databricks.com/clusters/index.html).
    /// * databricks.Library to install a [library](https://docs.databricks.com/libraries/index.html) on databricks_cluster.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by name:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/artifactAllowlist:ArtifactAllowlist this '&lt;metastore_id&gt;|&lt;artifact_type&gt;'
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/artifactAllowlist:ArtifactAllowlist")]
    public partial class ArtifactAllowlist : global::Pulumi.CustomResource
    {
        [Output("artifactMatchers")]
        public Output<ImmutableArray<Outputs.ArtifactAllowlistArtifactMatcher>> ArtifactMatchers { get; private set; } = null!;

        /// <summary>
        /// The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
        /// </summary>
        [Output("artifactType")]
        public Output<string> ArtifactType { get; private set; } = null!;

        /// <summary>
        /// Time at which this artifact allowlist was set.
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Identity that set the artifact allowlist.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// ID of the parent metastore.
        /// </summary>
        [Output("metastoreId")]
        public Output<string> MetastoreId { get; private set; } = null!;


        /// <summary>
        /// Create a ArtifactAllowlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ArtifactAllowlist(string name, ArtifactAllowlistArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/artifactAllowlist:ArtifactAllowlist", name, args ?? new ArtifactAllowlistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ArtifactAllowlist(string name, Input<string> id, ArtifactAllowlistState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/artifactAllowlist:ArtifactAllowlist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ArtifactAllowlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ArtifactAllowlist Get(string name, Input<string> id, ArtifactAllowlistState? state = null, CustomResourceOptions? options = null)
        {
            return new ArtifactAllowlist(name, id, state, options);
        }
    }

    public sealed class ArtifactAllowlistArgs : global::Pulumi.ResourceArgs
    {
        [Input("artifactMatchers", required: true)]
        private InputList<Inputs.ArtifactAllowlistArtifactMatcherArgs>? _artifactMatchers;
        public InputList<Inputs.ArtifactAllowlistArtifactMatcherArgs> ArtifactMatchers
        {
            get => _artifactMatchers ?? (_artifactMatchers = new InputList<Inputs.ArtifactAllowlistArtifactMatcherArgs>());
            set => _artifactMatchers = value;
        }

        /// <summary>
        /// The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
        /// </summary>
        [Input("artifactType", required: true)]
        public Input<string> ArtifactType { get; set; } = null!;

        /// <summary>
        /// Time at which this artifact allowlist was set.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// Identity that set the artifact allowlist.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// ID of the parent metastore.
        /// </summary>
        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        public ArtifactAllowlistArgs()
        {
        }
        public static new ArtifactAllowlistArgs Empty => new ArtifactAllowlistArgs();
    }

    public sealed class ArtifactAllowlistState : global::Pulumi.ResourceArgs
    {
        [Input("artifactMatchers")]
        private InputList<Inputs.ArtifactAllowlistArtifactMatcherGetArgs>? _artifactMatchers;
        public InputList<Inputs.ArtifactAllowlistArtifactMatcherGetArgs> ArtifactMatchers
        {
            get => _artifactMatchers ?? (_artifactMatchers = new InputList<Inputs.ArtifactAllowlistArtifactMatcherGetArgs>());
            set => _artifactMatchers = value;
        }

        /// <summary>
        /// The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
        /// </summary>
        [Input("artifactType")]
        public Input<string>? ArtifactType { get; set; }

        /// <summary>
        /// Time at which this artifact allowlist was set.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// Identity that set the artifact allowlist.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// ID of the parent metastore.
        /// </summary>
        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        public ArtifactAllowlistState()
        {
        }
        public static new ArtifactAllowlistState Empty => new ArtifactAllowlistState();
    }
}
