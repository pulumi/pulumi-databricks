// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/query:Query")]
    public partial class Query : global::Pulumi.CustomResource
    {
        [Output("applyAutoLimit")]
        public Output<bool?> ApplyAutoLimit { get; private set; } = null!;

        [Output("catalog")]
        public Output<string?> Catalog { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("lastModifierUserName")]
        public Output<string> LastModifierUserName { get; private set; } = null!;

        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        [Output("ownerUserName")]
        public Output<string?> OwnerUserName { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableArray<Outputs.QueryParameter>> Parameters { get; private set; } = null!;

        [Output("parentPath")]
        public Output<string?> ParentPath { get; private set; } = null!;

        [Output("queryText")]
        public Output<string> QueryText { get; private set; } = null!;

        [Output("runAsMode")]
        public Output<string?> RunAsMode { get; private set; } = null!;

        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("warehouseId")]
        public Output<string> WarehouseId { get; private set; } = null!;


        /// <summary>
        /// Create a Query resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Query(string name, QueryArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/query:Query", name, args ?? new QueryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Query(string name, Input<string> id, QueryState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/query:Query", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Query resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Query Get(string name, Input<string> id, QueryState? state = null, CustomResourceOptions? options = null)
        {
            return new Query(name, id, state, options);
        }
    }

    public sealed class QueryArgs : global::Pulumi.ResourceArgs
    {
        [Input("applyAutoLimit")]
        public Input<bool>? ApplyAutoLimit { get; set; }

        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("ownerUserName")]
        public Input<string>? OwnerUserName { get; set; }

        [Input("parameters")]
        private InputList<Inputs.QueryParameterArgs>? _parameters;
        public InputList<Inputs.QueryParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.QueryParameterArgs>());
            set => _parameters = value;
        }

        [Input("parentPath")]
        public Input<string>? ParentPath { get; set; }

        [Input("queryText", required: true)]
        public Input<string> QueryText { get; set; } = null!;

        [Input("runAsMode")]
        public Input<string>? RunAsMode { get; set; }

        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("warehouseId", required: true)]
        public Input<string> WarehouseId { get; set; } = null!;

        public QueryArgs()
        {
        }
        public static new QueryArgs Empty => new QueryArgs();
    }

    public sealed class QueryState : global::Pulumi.ResourceArgs
    {
        [Input("applyAutoLimit")]
        public Input<bool>? ApplyAutoLimit { get; set; }

        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("lastModifierUserName")]
        public Input<string>? LastModifierUserName { get; set; }

        [Input("lifecycleState")]
        public Input<string>? LifecycleState { get; set; }

        [Input("ownerUserName")]
        public Input<string>? OwnerUserName { get; set; }

        [Input("parameters")]
        private InputList<Inputs.QueryParameterGetArgs>? _parameters;
        public InputList<Inputs.QueryParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.QueryParameterGetArgs>());
            set => _parameters = value;
        }

        [Input("parentPath")]
        public Input<string>? ParentPath { get; set; }

        [Input("queryText")]
        public Input<string>? QueryText { get; set; }

        [Input("runAsMode")]
        public Input<string>? RunAsMode { get; set; }

        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("warehouseId")]
        public Input<string>? WarehouseId { get; set; }

        public QueryState()
        {
        }
        public static new QueryState Empty => new QueryState();
    }
}
