// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// This resource allows you to enable [custom OAuth applications](https://docs.databricks.com/en/integrations/enable-disable-oauth.html#enable-custom-oauth-applications-using-the-databricks-ui).
    /// 
    /// &gt; This resource can only be used with an account-level provider!
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.CustomAppIntegration("this", new()
    ///     {
    ///         Name = "custom_integration_name",
    ///         RedirectUrls = new[]
    ///         {
    ///             "https://example.com",
    ///         },
    ///         Scopes = new[]
    ///         {
    ///             "all-apis",
    ///         },
    ///         TokenAccessPolicy = new Databricks.Inputs.CustomAppIntegrationTokenAccessPolicyArgs
    ///         {
    ///             AccessTokenTtlInMinutes = 15,
    ///             RefreshTokenTtlInMinutes = 30,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are used in the context:
    /// 
    /// * databricks.MwsWorkspaces to set up Databricks workspaces.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by its integration ID.
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/customAppIntegration:CustomAppIntegration this '&lt;integration_id&gt;'
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/customAppIntegration:CustomAppIntegration")]
    public partial class CustomAppIntegration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// OAuth client-id generated by Databricks
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// OAuth client-secret generated by the Databricks if this is a confidential OAuth app.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Indicates whether an OAuth client secret is required to authenticate this client. Default to `false`. Change requires a new resource.
        /// </summary>
        [Output("confidential")]
        public Output<bool?> Confidential { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("createdBy")]
        public Output<int> CreatedBy { get; private set; } = null!;

        [Output("creatorUsername")]
        public Output<string> CreatorUsername { get; private set; } = null!;

        /// <summary>
        /// Unique integration id for the custom OAuth app.
        /// </summary>
        [Output("integrationId")]
        public Output<string> IntegrationId { get; private set; } = null!;

        /// <summary>
        /// Name of the custom OAuth app. Change requires a new resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of OAuth redirect urls.
        /// </summary>
        [Output("redirectUrls")]
        public Output<ImmutableArray<string>> RedirectUrls { get; private set; } = null!;

        /// <summary>
        /// OAuth scopes granted to the application. Supported scopes: `all-apis`, `sql`, `offline_access`, `openid`, `profile`, `email`.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        [Output("tokenAccessPolicy")]
        public Output<Outputs.CustomAppIntegrationTokenAccessPolicy?> TokenAccessPolicy { get; private set; } = null!;

        [Output("userAuthorizedScopes")]
        public Output<ImmutableArray<string>> UserAuthorizedScopes { get; private set; } = null!;


        /// <summary>
        /// Create a CustomAppIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomAppIntegration(string name, CustomAppIntegrationArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/customAppIntegration:CustomAppIntegration", name, args ?? new CustomAppIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomAppIntegration(string name, Input<string> id, CustomAppIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/customAppIntegration:CustomAppIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomAppIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomAppIntegration Get(string name, Input<string> id, CustomAppIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomAppIntegration(name, id, state, options);
        }
    }

    public sealed class CustomAppIntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OAuth client-id generated by Databricks
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// OAuth client-secret generated by the Databricks if this is a confidential OAuth app.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Indicates whether an OAuth client secret is required to authenticate this client. Default to `false`. Change requires a new resource.
        /// </summary>
        [Input("confidential")]
        public Input<bool>? Confidential { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("createdBy")]
        public Input<int>? CreatedBy { get; set; }

        [Input("creatorUsername")]
        public Input<string>? CreatorUsername { get; set; }

        /// <summary>
        /// Unique integration id for the custom OAuth app.
        /// </summary>
        [Input("integrationId")]
        public Input<string>? IntegrationId { get; set; }

        /// <summary>
        /// Name of the custom OAuth app. Change requires a new resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redirectUrls")]
        private InputList<string>? _redirectUrls;

        /// <summary>
        /// List of OAuth redirect urls.
        /// </summary>
        public InputList<string> RedirectUrls
        {
            get => _redirectUrls ?? (_redirectUrls = new InputList<string>());
            set => _redirectUrls = value;
        }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// OAuth scopes granted to the application. Supported scopes: `all-apis`, `sql`, `offline_access`, `openid`, `profile`, `email`.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("tokenAccessPolicy")]
        public Input<Inputs.CustomAppIntegrationTokenAccessPolicyArgs>? TokenAccessPolicy { get; set; }

        [Input("userAuthorizedScopes")]
        private InputList<string>? _userAuthorizedScopes;
        public InputList<string> UserAuthorizedScopes
        {
            get => _userAuthorizedScopes ?? (_userAuthorizedScopes = new InputList<string>());
            set => _userAuthorizedScopes = value;
        }

        public CustomAppIntegrationArgs()
        {
        }
        public static new CustomAppIntegrationArgs Empty => new CustomAppIntegrationArgs();
    }

    public sealed class CustomAppIntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OAuth client-id generated by Databricks
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// OAuth client-secret generated by the Databricks if this is a confidential OAuth app.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Indicates whether an OAuth client secret is required to authenticate this client. Default to `false`. Change requires a new resource.
        /// </summary>
        [Input("confidential")]
        public Input<bool>? Confidential { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("createdBy")]
        public Input<int>? CreatedBy { get; set; }

        [Input("creatorUsername")]
        public Input<string>? CreatorUsername { get; set; }

        /// <summary>
        /// Unique integration id for the custom OAuth app.
        /// </summary>
        [Input("integrationId")]
        public Input<string>? IntegrationId { get; set; }

        /// <summary>
        /// Name of the custom OAuth app. Change requires a new resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redirectUrls")]
        private InputList<string>? _redirectUrls;

        /// <summary>
        /// List of OAuth redirect urls.
        /// </summary>
        public InputList<string> RedirectUrls
        {
            get => _redirectUrls ?? (_redirectUrls = new InputList<string>());
            set => _redirectUrls = value;
        }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// OAuth scopes granted to the application. Supported scopes: `all-apis`, `sql`, `offline_access`, `openid`, `profile`, `email`.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("tokenAccessPolicy")]
        public Input<Inputs.CustomAppIntegrationTokenAccessPolicyGetArgs>? TokenAccessPolicy { get; set; }

        [Input("userAuthorizedScopes")]
        private InputList<string>? _userAuthorizedScopes;
        public InputList<string> UserAuthorizedScopes
        {
            get => _userAuthorizedScopes ?? (_userAuthorizedScopes = new InputList<string>());
            set => _userAuthorizedScopes = value;
        }

        public CustomAppIntegrationState()
        {
        }
        public static new CustomAppIntegrationState Empty => new CustomAppIntegrationState();
    }
}
