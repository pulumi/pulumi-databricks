// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetCleanRoomAssets
    {
        /// <summary>
        /// This data source can be used to fetch the list of clean room assets.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Clean Room Assets Datasource
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = new Databricks.Index.CleanRoomsAsset("all");
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCleanRoomAssetsResult> InvokeAsync(GetCleanRoomAssetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCleanRoomAssetsResult>("databricks:index/getCleanRoomAssets:getCleanRoomAssets", args ?? new GetCleanRoomAssetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of clean room assets.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Clean Room Assets Datasource
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = new Databricks.Index.CleanRoomsAsset("all");
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCleanRoomAssetsResult> Invoke(GetCleanRoomAssetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCleanRoomAssetsResult>("databricks:index/getCleanRoomAssets:getCleanRoomAssets", args ?? new GetCleanRoomAssetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of clean room assets.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Clean Room Assets Datasource
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = new Databricks.Index.CleanRoomsAsset("all");
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCleanRoomAssetsResult> Invoke(GetCleanRoomAssetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCleanRoomAssetsResult>("databricks:index/getCleanRoomAssets:getCleanRoomAssets", args ?? new GetCleanRoomAssetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCleanRoomAssetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the clean room
        /// </summary>
        [Input("cleanRoomName", required: true)]
        public string CleanRoomName { get; set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public string? WorkspaceId { get; set; }

        public GetCleanRoomAssetsArgs()
        {
        }
        public static new GetCleanRoomAssetsArgs Empty => new GetCleanRoomAssetsArgs();
    }

    public sealed class GetCleanRoomAssetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the clean room
        /// </summary>
        [Input("cleanRoomName", required: true)]
        public Input<string> CleanRoomName { get; set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public GetCleanRoomAssetsInvokeArgs()
        {
        }
        public static new GetCleanRoomAssetsInvokeArgs Empty => new GetCleanRoomAssetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCleanRoomAssetsResult
    {
        public readonly ImmutableArray<Outputs.GetCleanRoomAssetsAssetResult> Assets;
        /// <summary>
        /// (string) - The name of the clean room this asset belongs to.
        /// This field is required for create operations and populated by the server for responses
        /// </summary>
        public readonly string CleanRoomName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetCleanRoomAssetsResult(
            ImmutableArray<Outputs.GetCleanRoomAssetsAssetResult> assets,

            string cleanRoomName,

            string id,

            string? workspaceId)
        {
            Assets = assets;
            CleanRoomName = cleanRoomName;
            Id = id;
            WorkspaceId = workspaceId;
        }
    }
}
