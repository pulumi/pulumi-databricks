// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetAwsUnityCatalogAssumeRolePolicy
    {
        public static Task<GetAwsUnityCatalogAssumeRolePolicyResult> InvokeAsync(GetAwsUnityCatalogAssumeRolePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsUnityCatalogAssumeRolePolicyResult>("databricks:index/getAwsUnityCatalogAssumeRolePolicy:getAwsUnityCatalogAssumeRolePolicy", args ?? new GetAwsUnityCatalogAssumeRolePolicyArgs(), options.WithDefaults());

        public static Output<GetAwsUnityCatalogAssumeRolePolicyResult> Invoke(GetAwsUnityCatalogAssumeRolePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsUnityCatalogAssumeRolePolicyResult>("databricks:index/getAwsUnityCatalogAssumeRolePolicy:getAwsUnityCatalogAssumeRolePolicy", args ?? new GetAwsUnityCatalogAssumeRolePolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetAwsUnityCatalogAssumeRolePolicyResult> Invoke(GetAwsUnityCatalogAssumeRolePolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsUnityCatalogAssumeRolePolicyResult>("databricks:index/getAwsUnityCatalogAssumeRolePolicy:getAwsUnityCatalogAssumeRolePolicy", args ?? new GetAwsUnityCatalogAssumeRolePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsUnityCatalogAssumeRolePolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("awsAccountId", required: true)]
        public string AwsAccountId { get; set; } = null!;

        [Input("awsPartition")]
        public string? AwsPartition { get; set; }

        [Input("externalId", required: true)]
        public string ExternalId { get; set; } = null!;

        [Input("roleName", required: true)]
        public string RoleName { get; set; } = null!;

        [Input("unityCatalogIamArn")]
        public string? UnityCatalogIamArn { get; set; }

        public GetAwsUnityCatalogAssumeRolePolicyArgs()
        {
        }
        public static new GetAwsUnityCatalogAssumeRolePolicyArgs Empty => new GetAwsUnityCatalogAssumeRolePolicyArgs();
    }

    public sealed class GetAwsUnityCatalogAssumeRolePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        [Input("awsPartition")]
        public Input<string>? AwsPartition { get; set; }

        [Input("externalId", required: true)]
        public Input<string> ExternalId { get; set; } = null!;

        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        [Input("unityCatalogIamArn")]
        public Input<string>? UnityCatalogIamArn { get; set; }

        public GetAwsUnityCatalogAssumeRolePolicyInvokeArgs()
        {
        }
        public static new GetAwsUnityCatalogAssumeRolePolicyInvokeArgs Empty => new GetAwsUnityCatalogAssumeRolePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsUnityCatalogAssumeRolePolicyResult
    {
        public readonly string AwsAccountId;
        public readonly string? AwsPartition;
        public readonly string ExternalId;
        public readonly string Id;
        public readonly string Json;
        public readonly string RoleName;
        public readonly string UnityCatalogIamArn;

        [OutputConstructor]
        private GetAwsUnityCatalogAssumeRolePolicyResult(
            string awsAccountId,

            string? awsPartition,

            string externalId,

            string id,

            string json,

            string roleName,

            string unityCatalogIamArn)
        {
            AwsAccountId = awsAccountId;
            AwsPartition = awsPartition;
            ExternalId = externalId;
            Id = id;
            Json = json;
            RoleName = roleName;
            UnityCatalogIamArn = unityCatalogIamArn;
        }
    }
}
