// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Import
    /// 
    /// -&gt; **Note** Importing this resource is not currently supported.
    /// </summary>
    [DatabricksResourceType("databricks:index/oboToken:OboToken")]
    public partial class OboToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Application ID of databricks.ServicePrincipal to create a PAT token for.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Comment that describes the purpose of the token.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The number of seconds before the token expires. Token resource is re-created when it expires. If no lifetime is specified, the token remains valid indefinitely.
        /// </summary>
        [Output("lifetimeSeconds")]
        public Output<int?> LifetimeSeconds { get; private set; } = null!;

        /// <summary>
        /// **Sensitive** value of the newly-created token.
        /// </summary>
        [Output("tokenValue")]
        public Output<string> TokenValue { get; private set; } = null!;


        /// <summary>
        /// Create a OboToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OboToken(string name, OboTokenArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/oboToken:OboToken", name, args ?? new OboTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OboToken(string name, Input<string> id, OboTokenState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/oboToken:OboToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "tokenValue",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OboToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OboToken Get(string name, Input<string> id, OboTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new OboToken(name, id, state, options);
        }
    }

    public sealed class OboTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application ID of databricks.ServicePrincipal to create a PAT token for.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Comment that describes the purpose of the token.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The number of seconds before the token expires. Token resource is re-created when it expires. If no lifetime is specified, the token remains valid indefinitely.
        /// </summary>
        [Input("lifetimeSeconds")]
        public Input<int>? LifetimeSeconds { get; set; }

        public OboTokenArgs()
        {
        }
        public static new OboTokenArgs Empty => new OboTokenArgs();
    }

    public sealed class OboTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application ID of databricks.ServicePrincipal to create a PAT token for.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Comment that describes the purpose of the token.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The number of seconds before the token expires. Token resource is re-created when it expires. If no lifetime is specified, the token remains valid indefinitely.
        /// </summary>
        [Input("lifetimeSeconds")]
        public Input<int>? LifetimeSeconds { get; set; }

        [Input("tokenValue")]
        private Input<string>? _tokenValue;

        /// <summary>
        /// **Sensitive** value of the newly-created token.
        /// </summary>
        public Input<string>? TokenValue
        {
            get => _tokenValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public OboTokenState()
        {
        }
        public static new OboTokenState Empty => new OboTokenState();
    }
}
