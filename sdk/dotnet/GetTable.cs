// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetTable
    {
        public static Task<GetTableResult> InvokeAsync(GetTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableArgs(), options.WithDefaults());

        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());

        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tableInfo")]
        public Inputs.GetTableTableInfoArgs? TableInfo { get; set; }

        public GetTableArgs()
        {
        }
        public static new GetTableArgs Empty => new GetTableArgs();
    }

    public sealed class GetTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tableInfo")]
        public Input<Inputs.GetTableTableInfoInputArgs>? TableInfo { get; set; }

        public GetTableInvokeArgs()
        {
        }
        public static new GetTableInvokeArgs Empty => new GetTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResult
    {
        public readonly string Id;
        public readonly string Name;
        public readonly Outputs.GetTableTableInfoResult TableInfo;

        [OutputConstructor]
        private GetTableResult(
            string id,

            string name,

            Outputs.GetTableTableInfoResult tableInfo)
        {
            Id = id;
            Name = name;
            TableInfo = tableInfo;
        }
    }
}
