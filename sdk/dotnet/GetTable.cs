// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetTable
    {
        /// <summary>
        /// &gt; **Note** This data source can only be used with a workspace-level provider!
        /// 
        /// &gt; **Note** If you have a fully automated setup with workspaces created by databricks.MwsWorkspaces or azurerm_databricks_workspace, please make sure to add depends_on attribute in order to prevent _default auth: cannot configure default credentials_ errors.
        /// 
        /// Retrieves details of a specific table in Unity Catalog, that were created by Pulumi or manually. Use databricks.getTables to retrieve multiple tables in Unity Catalog
        /// 
        /// ## Example Usage
        /// 
        /// Read  on a specific table `main.certified.fct_transactions`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fctTransactions = Databricks.GetTable.Invoke(new()
        ///     {
        ///         Name = "main.certified.fct_transactions",
        ///     });
        /// 
        ///     var things = new Databricks.Grants("things", new()
        ///     {
        ///         Table = fctTransactions.Apply(getTableResult =&gt; getTableResult.Name),
        ///         GrantDetails = new[]
        ///         {
        ///             new Databricks.Inputs.GrantsGrantArgs
        ///             {
        ///                 Principal = "sensitive",
        ///                 Privileges = new[]
        ///                 {
        ///                     "SELECT",
        ///                     "MODIFY",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.Grant to manage grants within Unity Catalog.
        /// * databricks.getTables to list all tables within a schema in Unity Catalog.
        /// </summary>
        public static Task<GetTableResult> InvokeAsync(GetTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **Note** This data source can only be used with a workspace-level provider!
        /// 
        /// &gt; **Note** If you have a fully automated setup with workspaces created by databricks.MwsWorkspaces or azurerm_databricks_workspace, please make sure to add depends_on attribute in order to prevent _default auth: cannot configure default credentials_ errors.
        /// 
        /// Retrieves details of a specific table in Unity Catalog, that were created by Pulumi or manually. Use databricks.getTables to retrieve multiple tables in Unity Catalog
        /// 
        /// ## Example Usage
        /// 
        /// Read  on a specific table `main.certified.fct_transactions`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fctTransactions = Databricks.GetTable.Invoke(new()
        ///     {
        ///         Name = "main.certified.fct_transactions",
        ///     });
        /// 
        ///     var things = new Databricks.Grants("things", new()
        ///     {
        ///         Table = fctTransactions.Apply(getTableResult =&gt; getTableResult.Name),
        ///         GrantDetails = new[]
        ///         {
        ///             new Databricks.Inputs.GrantsGrantArgs
        ///             {
        ///                 Principal = "sensitive",
        ///                 Privileges = new[]
        ///                 {
        ///                     "SELECT",
        ///                     "MODIFY",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.Grant to manage grants within Unity Catalog.
        /// * databricks.getTables to list all tables within a schema in Unity Catalog.
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **Note** This data source can only be used with a workspace-level provider!
        /// 
        /// &gt; **Note** If you have a fully automated setup with workspaces created by databricks.MwsWorkspaces or azurerm_databricks_workspace, please make sure to add depends_on attribute in order to prevent _default auth: cannot configure default credentials_ errors.
        /// 
        /// Retrieves details of a specific table in Unity Catalog, that were created by Pulumi or manually. Use databricks.getTables to retrieve multiple tables in Unity Catalog
        /// 
        /// ## Example Usage
        /// 
        /// Read  on a specific table `main.certified.fct_transactions`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fctTransactions = Databricks.GetTable.Invoke(new()
        ///     {
        ///         Name = "main.certified.fct_transactions",
        ///     });
        /// 
        ///     var things = new Databricks.Grants("things", new()
        ///     {
        ///         Table = fctTransactions.Apply(getTableResult =&gt; getTableResult.Name),
        ///         GrantDetails = new[]
        ///         {
        ///             new Databricks.Inputs.GrantsGrantArgs
        ///             {
        ///                 Principal = "sensitive",
        ///                 Privileges = new[]
        ///                 {
        ///                     "SELECT",
        ///                     "MODIFY",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.Grant to manage grants within Unity Catalog.
        /// * databricks.getTables to list all tables within a schema in Unity Catalog.
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("databricks:index/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Full name of the databricks_table: _`catalog`.`schema`.`table`_
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// TableInfo object for a Unity Catalog table. This contains the following attributes:
        /// </summary>
        [Input("tableInfo")]
        public Inputs.GetTableTableInfoArgs? TableInfo { get; set; }

        public GetTableArgs()
        {
        }
        public static new GetTableArgs Empty => new GetTableArgs();
    }

    public sealed class GetTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Full name of the databricks_table: _`catalog`.`schema`.`table`_
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// TableInfo object for a Unity Catalog table. This contains the following attributes:
        /// </summary>
        [Input("tableInfo")]
        public Input<Inputs.GetTableTableInfoInputArgs>? TableInfo { get; set; }

        public GetTableInvokeArgs()
        {
        }
        public static new GetTableInvokeArgs Empty => new GetTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResult
    {
        public readonly string Id;
        /// <summary>
        /// Name of table, relative to parent schema.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// TableInfo object for a Unity Catalog table. This contains the following attributes:
        /// </summary>
        public readonly Outputs.GetTableTableInfoResult TableInfo;

        [OutputConstructor]
        private GetTableResult(
            string id,

            string name,

            Outputs.GetTableTableInfoResult tableInfo)
        {
            Id = id;
            Name = name;
            TableInfo = tableInfo;
        }
    }
}
