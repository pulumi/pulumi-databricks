// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetServicePrincipal
    {
        public static Task<GetServicePrincipalResult> InvokeAsync(GetServicePrincipalArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicePrincipalResult>("databricks:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalArgs(), options.WithDefaults());

        public static Output<GetServicePrincipalResult> Invoke(GetServicePrincipalInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalResult>("databricks:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalInvokeArgs(), options.WithDefaults());

        public static Output<GetServicePrincipalResult> Invoke(GetServicePrincipalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalResult>("databricks:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicePrincipalArgs : global::Pulumi.InvokeArgs
    {
        [Input("aclPrincipalId")]
        public string? AclPrincipalId { get; set; }

        [Input("active")]
        public bool? Active { get; set; }

        [Input("applicationId")]
        public string? ApplicationId { get; set; }

        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("externalId")]
        public string? ExternalId { get; set; }

        [Input("home")]
        public string? Home { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("repos")]
        public string? Repos { get; set; }

        [Input("spId")]
        public string? SpId { get; set; }

        public GetServicePrincipalArgs()
        {
        }
        public static new GetServicePrincipalArgs Empty => new GetServicePrincipalArgs();
    }

    public sealed class GetServicePrincipalInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("aclPrincipalId")]
        public Input<string>? AclPrincipalId { get; set; }

        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("home")]
        public Input<string>? Home { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("repos")]
        public Input<string>? Repos { get; set; }

        [Input("spId")]
        public Input<string>? SpId { get; set; }

        public GetServicePrincipalInvokeArgs()
        {
        }
        public static new GetServicePrincipalInvokeArgs Empty => new GetServicePrincipalInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicePrincipalResult
    {
        public readonly string AclPrincipalId;
        public readonly bool Active;
        public readonly string ApplicationId;
        public readonly string DisplayName;
        public readonly string ExternalId;
        public readonly string Home;
        public readonly string Id;
        public readonly string Repos;
        public readonly string SpId;

        [OutputConstructor]
        private GetServicePrincipalResult(
            string aclPrincipalId,

            bool active,

            string applicationId,

            string displayName,

            string externalId,

            string home,

            string id,

            string repos,

            string spId)
        {
            AclPrincipalId = aclPrincipalId;
            Active = active;
            ApplicationId = applicationId;
            DisplayName = displayName;
            ExternalId = externalId;
            Home = home;
            Id = id;
            Repos = repos;
            SpId = spId;
        }
    }
}
