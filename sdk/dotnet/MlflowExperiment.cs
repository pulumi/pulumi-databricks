// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// This resource allows you to manage [MLflow experiments](https://docs.databricks.com/data/data-sources/mlflow-experiment.html) in Databricks.
    /// 
    /// &gt; This resource can only be used with a workspace-level provider!
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var me = Databricks.GetCurrentUser.Invoke();
    /// 
    ///     var @this = new Databricks.MlflowExperiment("this", new()
    ///     {
    ///         Name = $"{me.Apply(getCurrentUserResult =&gt; getCurrentUserResult.Home)}/Sample",
    ///         ArtifactLocation = "dbfs:/tmp/my-experiment",
    ///         Tags = new[]
    ///         {
    ///             new Databricks.Inputs.MlflowExperimentTagArgs
    ///             {
    ///                 Key = "key1",
    ///                 Value = "value1",
    ///             },
    ///             new Databricks.Inputs.MlflowExperimentTagArgs
    ///             {
    ///                 Key = "key2",
    ///                 Value = "value2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Access Control
    /// 
    /// * databricks.Permissions can control which groups or individual users can *Read*, *Edit*, or *Manage* individual experiments.
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are often used in the same context:
    /// 
    /// * databricks.RegisteredModel to create [Models in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html) in Databricks.
    /// * End to end workspace management guide.
    /// * databricks.Directory to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
    /// * databricks.MlflowModel to create models in the [workspace model registry](https://docs.databricks.com/en/mlflow/model-registry.html) in Databricks.
    /// * databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
    /// * databricks.Notebook data to export a notebook from Databricks Workspace.
    /// * databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
    /// 
    /// ## Import
    /// 
    /// The experiment resource can be imported using the id of the experiment:
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   to = databricks_mlflow_experiment.this
    /// 
    ///   id = "&lt;experiment-id&gt;"
    /// 
    /// }
    /// 
    /// Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/mlflowExperiment:MlflowExperiment this "&lt;experiment-id&gt;"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/mlflowExperiment:MlflowExperiment")]
    public partial class MlflowExperiment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
        /// </summary>
        [Output("artifactLocation")]
        public Output<string?> ArtifactLocation { get; private set; } = null!;

        [Output("creationTime")]
        public Output<int> CreationTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("experimentId")]
        public Output<string> ExperimentId { get; private set; } = null!;

        [Output("lastUpdateTime")]
        public Output<int> LastUpdateTime { get; private set; } = null!;

        [Output("lifecycleStage")]
        public Output<string> LifecycleStage { get; private set; } = null!;

        /// <summary>
        /// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/&lt;some-username&gt;/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Tags for the MLflow experiment.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.MlflowExperimentTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a MlflowExperiment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MlflowExperiment(string name, MlflowExperimentArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/mlflowExperiment:MlflowExperiment", name, args ?? new MlflowExperimentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MlflowExperiment(string name, Input<string> id, MlflowExperimentState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mlflowExperiment:MlflowExperiment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MlflowExperiment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MlflowExperiment Get(string name, Input<string> id, MlflowExperimentState? state = null, CustomResourceOptions? options = null)
        {
            return new MlflowExperiment(name, id, state, options);
        }
    }

    public sealed class MlflowExperimentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
        /// </summary>
        [Input("artifactLocation")]
        public Input<string>? ArtifactLocation { get; set; }

        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("experimentId")]
        public Input<string>? ExperimentId { get; set; }

        [Input("lastUpdateTime")]
        public Input<int>? LastUpdateTime { get; set; }

        [Input("lifecycleStage")]
        public Input<string>? LifecycleStage { get; set; }

        /// <summary>
        /// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/&lt;some-username&gt;/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Inputs.MlflowExperimentTagArgs>? _tags;

        /// <summary>
        /// Tags for the MLflow experiment.
        /// </summary>
        public InputList<Inputs.MlflowExperimentTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MlflowExperimentTagArgs>());
            set => _tags = value;
        }

        public MlflowExperimentArgs()
        {
        }
        public static new MlflowExperimentArgs Empty => new MlflowExperimentArgs();
    }

    public sealed class MlflowExperimentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
        /// </summary>
        [Input("artifactLocation")]
        public Input<string>? ArtifactLocation { get; set; }

        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("experimentId")]
        public Input<string>? ExperimentId { get; set; }

        [Input("lastUpdateTime")]
        public Input<int>? LastUpdateTime { get; set; }

        [Input("lifecycleStage")]
        public Input<string>? LifecycleStage { get; set; }

        /// <summary>
        /// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/&lt;some-username&gt;/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Inputs.MlflowExperimentTagGetArgs>? _tags;

        /// <summary>
        /// Tags for the MLflow experiment.
        /// </summary>
        public InputList<Inputs.MlflowExperimentTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MlflowExperimentTagGetArgs>());
            set => _tags = value;
        }

        public MlflowExperimentState()
        {
        }
        public static new MlflowExperimentState Empty => new MlflowExperimentState();
    }
}
