// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var databricksAccountId = config.RequireObject&lt;dynamic&gt;("databricksAccountId");
    ///     var rootStorageBucket = new Aws.S3.BucketV2("rootStorageBucket", new()
    ///     {
    ///         Acl = "private",
    ///         Versionings = new[]
    ///         {
    ///             new Aws.S3.Inputs.BucketV2VersioningArgs
    ///             {
    ///                 Enabled = false,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var @this = new Databricks.MwsStorageConfigurations("this", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         StorageConfigurationName = $"{@var.Prefix}-storage",
    ///         BucketName = rootStorageBucket.Bucket,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = databricks.Mws,
    ///     });
    /// 
    /// });
    /// ```
    /// ## Related Resources
    /// 
    /// The following resources are used in the same context:
    /// 
    /// * Provisioning Databricks on AWS guide.
    /// * Provisioning Databricks on AWS with PrivateLink guide.
    /// * databricks.MwsCredentials to configure the cross-account role for creation of new workspaces within AWS.
    /// * databricks.MwsCustomerManagedKeys to configure KMS keys for new workspaces within AWS.
    /// * databricks.MwsLogDelivery to configure delivery of [billable usage logs](https://docs.databricks.com/administration-guide/account-settings/billable-usage-delivery.html) and [audit logs](https://docs.databricks.com/administration-guide/account-settings/audit-logs.html).
    /// * databricks.MwsNetworks to [configure VPC](https://docs.databricks.com/administration-guide/cloud-configurations/aws/customer-managed-vpc.html) &amp; subnets for new workspaces within AWS.
    /// * databricks.MwsWorkspaces to set up [workspaces in E2 architecture on AWS](https://docs.databricks.com/getting-started/overview.html#e2-architecture-1).
    /// 
    /// ## Import
    /// 
    /// -&gt; **Note** Importing this resource is not currently supported.
    /// </summary>
    [DatabricksResourceType("databricks:index/mwsStorageConfigurations:MwsStorageConfigurations")]
    public partial class MwsStorageConfigurations : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// name of AWS S3 bucket
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        [Output("creationTime")]
        public Output<int> CreationTime { get; private set; } = null!;

        /// <summary>
        /// (String) id of storage config to be used for `databricks_mws_workspace` resource.
        /// </summary>
        [Output("storageConfigurationId")]
        public Output<string> StorageConfigurationId { get; private set; } = null!;

        /// <summary>
        /// name under which this storage configuration is stored
        /// </summary>
        [Output("storageConfigurationName")]
        public Output<string> StorageConfigurationName { get; private set; } = null!;


        /// <summary>
        /// Create a MwsStorageConfigurations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MwsStorageConfigurations(string name, MwsStorageConfigurationsArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/mwsStorageConfigurations:MwsStorageConfigurations", name, args ?? new MwsStorageConfigurationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MwsStorageConfigurations(string name, Input<string> id, MwsStorageConfigurationsState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mwsStorageConfigurations:MwsStorageConfigurations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accountId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MwsStorageConfigurations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MwsStorageConfigurations Get(string name, Input<string> id, MwsStorageConfigurationsState? state = null, CustomResourceOptions? options = null)
        {
            return new MwsStorageConfigurations(name, id, state, options);
        }
    }

    public sealed class MwsStorageConfigurationsArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        private Input<string>? _accountId;

        /// <summary>
        /// Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
        /// </summary>
        public Input<string>? AccountId
        {
            get => _accountId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// name of AWS S3 bucket
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// name under which this storage configuration is stored
        /// </summary>
        [Input("storageConfigurationName", required: true)]
        public Input<string> StorageConfigurationName { get; set; } = null!;

        public MwsStorageConfigurationsArgs()
        {
        }
        public static new MwsStorageConfigurationsArgs Empty => new MwsStorageConfigurationsArgs();
    }

    public sealed class MwsStorageConfigurationsState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        private Input<string>? _accountId;

        /// <summary>
        /// Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
        /// </summary>
        public Input<string>? AccountId
        {
            get => _accountId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// name of AWS S3 bucket
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        /// <summary>
        /// (String) id of storage config to be used for `databricks_mws_workspace` resource.
        /// </summary>
        [Input("storageConfigurationId")]
        public Input<string>? StorageConfigurationId { get; set; }

        /// <summary>
        /// name under which this storage configuration is stored
        /// </summary>
        [Input("storageConfigurationName")]
        public Input<string>? StorageConfigurationName { get; set; }

        public MwsStorageConfigurationsState()
        {
        }
        public static new MwsStorageConfigurationsState Empty => new MwsStorageConfigurationsState();
    }
}
