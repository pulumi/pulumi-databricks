// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/alert:Alert")]
    public partial class Alert : global::Pulumi.CustomResource
    {
        [Output("condition")]
        public Output<Outputs.AlertCondition> Condition { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("customBody")]
        public Output<string?> CustomBody { get; private set; } = null!;

        [Output("customSubject")]
        public Output<string?> CustomSubject { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        [Output("notifyOnOk")]
        public Output<bool?> NotifyOnOk { get; private set; } = null!;

        [Output("ownerUserName")]
        public Output<string?> OwnerUserName { get; private set; } = null!;

        [Output("parentPath")]
        public Output<string?> ParentPath { get; private set; } = null!;

        [Output("queryId")]
        public Output<string> QueryId { get; private set; } = null!;

        [Output("secondsToRetrigger")]
        public Output<int?> SecondsToRetrigger { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("triggerTime")]
        public Output<string> TriggerTime { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Alert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Alert(string name, AlertArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/alert:Alert", name, args ?? new AlertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Alert(string name, Input<string> id, AlertState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/alert:Alert", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Alert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Alert Get(string name, Input<string> id, AlertState? state = null, CustomResourceOptions? options = null)
        {
            return new Alert(name, id, state, options);
        }
    }

    public sealed class AlertArgs : global::Pulumi.ResourceArgs
    {
        [Input("condition", required: true)]
        public Input<Inputs.AlertConditionArgs> Condition { get; set; } = null!;

        [Input("customBody")]
        public Input<string>? CustomBody { get; set; }

        [Input("customSubject")]
        public Input<string>? CustomSubject { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("notifyOnOk")]
        public Input<bool>? NotifyOnOk { get; set; }

        [Input("ownerUserName")]
        public Input<string>? OwnerUserName { get; set; }

        [Input("parentPath")]
        public Input<string>? ParentPath { get; set; }

        [Input("queryId", required: true)]
        public Input<string> QueryId { get; set; } = null!;

        [Input("secondsToRetrigger")]
        public Input<int>? SecondsToRetrigger { get; set; }

        public AlertArgs()
        {
        }
        public static new AlertArgs Empty => new AlertArgs();
    }

    public sealed class AlertState : global::Pulumi.ResourceArgs
    {
        [Input("condition")]
        public Input<Inputs.AlertConditionGetArgs>? Condition { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("customBody")]
        public Input<string>? CustomBody { get; set; }

        [Input("customSubject")]
        public Input<string>? CustomSubject { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("lifecycleState")]
        public Input<string>? LifecycleState { get; set; }

        [Input("notifyOnOk")]
        public Input<bool>? NotifyOnOk { get; set; }

        [Input("ownerUserName")]
        public Input<string>? OwnerUserName { get; set; }

        [Input("parentPath")]
        public Input<string>? ParentPath { get; set; }

        [Input("queryId")]
        public Input<string>? QueryId { get; set; }

        [Input("secondsToRetrigger")]
        public Input<int>? SecondsToRetrigger { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("triggerTime")]
        public Input<string>? TriggerTime { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public AlertState()
        {
        }
        public static new AlertState Empty => new AlertState();
    }
}
