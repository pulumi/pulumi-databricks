// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/metastoreProvider:MetastoreProvider")]
    public partial class MetastoreProvider : global::Pulumi.CustomResource
    {
        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("recipientProfileStr")]
        public Output<string> RecipientProfileStr { get; private set; } = null!;


        /// <summary>
        /// Create a MetastoreProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetastoreProvider(string name, MetastoreProviderArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/metastoreProvider:MetastoreProvider", name, args ?? new MetastoreProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetastoreProvider(string name, Input<string> id, MetastoreProviderState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/metastoreProvider:MetastoreProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "recipientProfileStr",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetastoreProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetastoreProvider Get(string name, Input<string> id, MetastoreProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new MetastoreProvider(name, id, state, options);
        }
    }

    public sealed class MetastoreProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("authenticationType", required: true)]
        public Input<string> AuthenticationType { get; set; } = null!;

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipientProfileStr", required: true)]
        private Input<string>? _recipientProfileStr;
        public Input<string>? RecipientProfileStr
        {
            get => _recipientProfileStr;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _recipientProfileStr = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public MetastoreProviderArgs()
        {
        }
        public static new MetastoreProviderArgs Empty => new MetastoreProviderArgs();
    }

    public sealed class MetastoreProviderState : global::Pulumi.ResourceArgs
    {
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipientProfileStr")]
        private Input<string>? _recipientProfileStr;
        public Input<string>? RecipientProfileStr
        {
            get => _recipientProfileStr;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _recipientProfileStr = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public MetastoreProviderState()
        {
        }
        public static new MetastoreProviderState Empty => new MetastoreProviderState();
    }
}
