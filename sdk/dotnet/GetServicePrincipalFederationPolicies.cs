// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetServicePrincipalFederationPolicies
    {
        /// <summary>
        /// This data source can be used to fetch the list of federation policies for a service principal.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all service principal federation policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetServicePrincipalFederationPolicies.Invoke(new()
        ///     {
        ///         ServicePrincipalId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServicePrincipalFederationPoliciesResult> InvokeAsync(GetServicePrincipalFederationPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicePrincipalFederationPoliciesResult>("databricks:index/getServicePrincipalFederationPolicies:getServicePrincipalFederationPolicies", args ?? new GetServicePrincipalFederationPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of federation policies for a service principal.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all service principal federation policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetServicePrincipalFederationPolicies.Invoke(new()
        ///     {
        ///         ServicePrincipalId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServicePrincipalFederationPoliciesResult> Invoke(GetServicePrincipalFederationPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalFederationPoliciesResult>("databricks:index/getServicePrincipalFederationPolicies:getServicePrincipalFederationPolicies", args ?? new GetServicePrincipalFederationPoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of federation policies for a service principal.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all service principal federation policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetServicePrincipalFederationPolicies.Invoke(new()
        ///     {
        ///         ServicePrincipalId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServicePrincipalFederationPoliciesResult> Invoke(GetServicePrincipalFederationPoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalFederationPoliciesResult>("databricks:index/getServicePrincipalFederationPolicies:getServicePrincipalFederationPolicies", args ?? new GetServicePrincipalFederationPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicePrincipalFederationPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service principal id for the federation policy
        /// </summary>
        [Input("servicePrincipalId", required: true)]
        public int ServicePrincipalId { get; set; }

        public GetServicePrincipalFederationPoliciesArgs()
        {
        }
        public static new GetServicePrincipalFederationPoliciesArgs Empty => new GetServicePrincipalFederationPoliciesArgs();
    }

    public sealed class GetServicePrincipalFederationPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service principal id for the federation policy
        /// </summary>
        [Input("servicePrincipalId", required: true)]
        public Input<int> ServicePrincipalId { get; set; } = null!;

        public GetServicePrincipalFederationPoliciesInvokeArgs()
        {
        }
        public static new GetServicePrincipalFederationPoliciesInvokeArgs Empty => new GetServicePrincipalFederationPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicePrincipalFederationPoliciesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetServicePrincipalFederationPoliciesPolicyResult> Policies;
        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        public readonly int ServicePrincipalId;

        [OutputConstructor]
        private GetServicePrincipalFederationPoliciesResult(
            string id,

            ImmutableArray<Outputs.GetServicePrincipalFederationPoliciesPolicyResult> policies,

            int servicePrincipalId)
        {
            Id = id;
            Policies = policies;
            ServicePrincipalId = servicePrincipalId;
        }
    }
}
