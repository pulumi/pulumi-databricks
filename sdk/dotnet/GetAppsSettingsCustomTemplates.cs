// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetAppsSettingsCustomTemplates
    {
        /// <summary>
        /// This data source can be used to fetch the list of Custom Templates within the workspace.
        /// The list can then be accessed via the data object's `templates` field.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all Custom Templates:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetAppsSettingsCustomTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allCustomTemplates"] = all.Apply(getAppsSettingsCustomTemplatesResult =&gt; getAppsSettingsCustomTemplatesResult.Templates),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetAppsSettingsCustomTemplatesResult> InvokeAsync(GetAppsSettingsCustomTemplatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppsSettingsCustomTemplatesResult>("databricks:index/getAppsSettingsCustomTemplates:getAppsSettingsCustomTemplates", args ?? new GetAppsSettingsCustomTemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of Custom Templates within the workspace.
        /// The list can then be accessed via the data object's `templates` field.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all Custom Templates:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetAppsSettingsCustomTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allCustomTemplates"] = all.Apply(getAppsSettingsCustomTemplatesResult =&gt; getAppsSettingsCustomTemplatesResult.Templates),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppsSettingsCustomTemplatesResult> Invoke(GetAppsSettingsCustomTemplatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsSettingsCustomTemplatesResult>("databricks:index/getAppsSettingsCustomTemplates:getAppsSettingsCustomTemplates", args ?? new GetAppsSettingsCustomTemplatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch the list of Custom Templates within the workspace.
        /// The list can then be accessed via the data object's `templates` field.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// Getting a list of all Custom Templates:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetAppsSettingsCustomTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allCustomTemplates"] = all.Apply(getAppsSettingsCustomTemplatesResult =&gt; getAppsSettingsCustomTemplatesResult.Templates),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppsSettingsCustomTemplatesResult> Invoke(GetAppsSettingsCustomTemplatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsSettingsCustomTemplatesResult>("databricks:index/getAppsSettingsCustomTemplates:getAppsSettingsCustomTemplates", args ?? new GetAppsSettingsCustomTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppsSettingsCustomTemplatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public string? WorkspaceId { get; set; }

        public GetAppsSettingsCustomTemplatesArgs()
        {
        }
        public static new GetAppsSettingsCustomTemplatesArgs Empty => new GetAppsSettingsCustomTemplatesArgs();
    }

    public sealed class GetAppsSettingsCustomTemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public GetAppsSettingsCustomTemplatesInvokeArgs()
        {
        }
        public static new GetAppsSettingsCustomTemplatesInvokeArgs Empty => new GetAppsSettingsCustomTemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppsSettingsCustomTemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetAppsSettingsCustomTemplatesTemplateResult> Templates;
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetAppsSettingsCustomTemplatesResult(
            string id,

            ImmutableArray<Outputs.GetAppsSettingsCustomTemplatesTemplateResult> templates,

            string? workspaceId)
        {
            Id = id;
            Templates = templates;
            WorkspaceId = workspaceId;
        }
    }
}
