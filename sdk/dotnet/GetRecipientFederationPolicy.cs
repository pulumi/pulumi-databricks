// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetRecipientFederationPolicy
    {
        public static Task<GetRecipientFederationPolicyResult> InvokeAsync(GetRecipientFederationPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecipientFederationPolicyResult>("databricks:index/getRecipientFederationPolicy:getRecipientFederationPolicy", args ?? new GetRecipientFederationPolicyArgs(), options.WithDefaults());

        public static Output<GetRecipientFederationPolicyResult> Invoke(GetRecipientFederationPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecipientFederationPolicyResult>("databricks:index/getRecipientFederationPolicy:getRecipientFederationPolicy", args ?? new GetRecipientFederationPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetRecipientFederationPolicyResult> Invoke(GetRecipientFederationPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecipientFederationPolicyResult>("databricks:index/getRecipientFederationPolicy:getRecipientFederationPolicy", args ?? new GetRecipientFederationPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecipientFederationPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - Description of the policy. This is a user-provided description
        /// </summary>
        [Input("comment")]
        public string? Comment { get; set; }

        /// <summary>
        /// Name of the federation policy. A recipient can have multiple policies with different names.
        /// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
        /// </summary>
        [Input("oidcPolicy")]
        public Inputs.GetRecipientFederationPolicyOidcPolicyArgs? OidcPolicy { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public string? WorkspaceId { get; set; }

        public GetRecipientFederationPolicyArgs()
        {
        }
        public static new GetRecipientFederationPolicyArgs Empty => new GetRecipientFederationPolicyArgs();
    }

    public sealed class GetRecipientFederationPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - Description of the policy. This is a user-provided description
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Name of the federation policy. A recipient can have multiple policies with different names.
        /// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
        /// </summary>
        [Input("oidcPolicy")]
        public Input<Inputs.GetRecipientFederationPolicyOidcPolicyInputArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public GetRecipientFederationPolicyInvokeArgs()
        {
        }
        public static new GetRecipientFederationPolicyInvokeArgs Empty => new GetRecipientFederationPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecipientFederationPolicyResult
    {
        /// <summary>
        /// (string) - Description of the policy. This is a user-provided description
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// (string) - System-generated timestamp indicating when the policy was created
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// (string) - Unique, immutable system-generated identifier for the federation policy
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (string) - Name of the federation policy. A recipient can have multiple policies with different names.
        /// The name must contain only lowercase alphanumeric characters, numbers, and hyphens
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// (OidcFederationPolicy) - Specifies the policy to use for validating OIDC claims in the federated tokens
        /// </summary>
        public readonly Outputs.GetRecipientFederationPolicyOidcPolicyResult? OidcPolicy;
        /// <summary>
        /// (string) - System-generated timestamp indicating when the policy was last updated
        /// </summary>
        public readonly string UpdateTime;
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetRecipientFederationPolicyResult(
            string? comment,

            string createTime,

            string id,

            string? name,

            Outputs.GetRecipientFederationPolicyOidcPolicyResult? oidcPolicy,

            string updateTime,

            string? workspaceId)
        {
            Comment = comment;
            CreateTime = createTime;
            Id = id;
            Name = name;
            OidcPolicy = oidcPolicy;
            UpdateTime = updateTime;
            WorkspaceId = workspaceId;
        }
    }
}
