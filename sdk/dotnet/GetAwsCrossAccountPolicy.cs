// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetAwsCrossAccountPolicy
    {
        public static Task<GetAwsCrossAccountPolicyResult> InvokeAsync(GetAwsCrossAccountPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsCrossAccountPolicyResult>("databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy", args ?? new GetAwsCrossAccountPolicyArgs(), options.WithDefaults());

        public static Output<GetAwsCrossAccountPolicyResult> Invoke(GetAwsCrossAccountPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCrossAccountPolicyResult>("databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy", args ?? new GetAwsCrossAccountPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetAwsCrossAccountPolicyResult> Invoke(GetAwsCrossAccountPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCrossAccountPolicyResult>("databricks:index/getAwsCrossAccountPolicy:getAwsCrossAccountPolicy", args ?? new GetAwsCrossAccountPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsCrossAccountPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("awsAccountId")]
        public string? AwsAccountId { get; set; }

        [Input("awsPartition")]
        public string? AwsPartition { get; set; }

        [Input("passRoles")]
        private List<string>? _passRoles;
        public List<string> PassRoles
        {
            get => _passRoles ?? (_passRoles = new List<string>());
            set => _passRoles = value;
        }

        [Input("policyType")]
        public string? PolicyType { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("securityGroupId")]
        public string? SecurityGroupId { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetAwsCrossAccountPolicyArgs()
        {
        }
        public static new GetAwsCrossAccountPolicyArgs Empty => new GetAwsCrossAccountPolicyArgs();
    }

    public sealed class GetAwsCrossAccountPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        [Input("awsPartition")]
        public Input<string>? AwsPartition { get; set; }

        [Input("passRoles")]
        private InputList<string>? _passRoles;
        public InputList<string> PassRoles
        {
            get => _passRoles ?? (_passRoles = new InputList<string>());
            set => _passRoles = value;
        }

        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetAwsCrossAccountPolicyInvokeArgs()
        {
        }
        public static new GetAwsCrossAccountPolicyInvokeArgs Empty => new GetAwsCrossAccountPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsCrossAccountPolicyResult
    {
        public readonly string? AwsAccountId;
        public readonly string? AwsPartition;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly ImmutableArray<string> PassRoles;
        public readonly string? PolicyType;
        public readonly string? Region;
        public readonly string? SecurityGroupId;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetAwsCrossAccountPolicyResult(
            string? awsAccountId,

            string? awsPartition,

            string id,

            string json,

            ImmutableArray<string> passRoles,

            string? policyType,

            string? region,

            string? securityGroupId,

            string? vpcId)
        {
            AwsAccountId = awsAccountId;
            AwsPartition = awsPartition;
            Id = id;
            Json = json;
            PassRoles = passRoles;
            PolicyType = policyType;
            Region = region;
            SecurityGroupId = securityGroupId;
            VpcId = vpcId;
        }
    }
}
