// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Import
    /// 
    /// As of Pulumi v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = "rule_id"
    /// 
    ///   to = databricks_clean_room_auto_approval_rule.this
    /// 
    /// }
    /// 
    /// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule databricks_clean_room_auto_approval_rule "rule_id"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule")]
    public partial class CleanRoomAutoApprovalRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Collaborator alias of the author covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set
        /// </summary>
        [Output("authorCollaboratorAlias")]
        public Output<string?> AuthorCollaboratorAlias { get; private set; } = null!;

        /// <summary>
        /// Scope of authors covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set. Possible values are: `ANY_AUTHOR`
        /// </summary>
        [Output("authorScope")]
        public Output<string?> AuthorScope { get; private set; } = null!;

        /// <summary>
        /// The name of the clean room this auto-approval rule belongs to
        /// </summary>
        [Output("cleanRoomName")]
        public Output<string?> CleanRoomName { get; private set; } = null!;

        /// <summary>
        /// (integer) - Timestamp of when the rule was created, in epoch milliseconds
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// (string) - A generated UUID identifying the rule
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// (string) - The owner of the rule to whom the rule applies
        /// </summary>
        [Output("ruleOwnerCollaboratorAlias")]
        public Output<string> RuleOwnerCollaboratorAlias { get; private set; } = null!;

        /// <summary>
        /// Collaborator alias of the runner covered by the rule
        /// </summary>
        [Output("runnerCollaboratorAlias")]
        public Output<string?> RunnerCollaboratorAlias { get; private set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Output("workspaceId")]
        public Output<string?> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a CleanRoomAutoApprovalRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CleanRoomAutoApprovalRule(string name, CleanRoomAutoApprovalRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule", name, args ?? new CleanRoomAutoApprovalRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CleanRoomAutoApprovalRule(string name, Input<string> id, CleanRoomAutoApprovalRuleState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/cleanRoomAutoApprovalRule:CleanRoomAutoApprovalRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CleanRoomAutoApprovalRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CleanRoomAutoApprovalRule Get(string name, Input<string> id, CleanRoomAutoApprovalRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new CleanRoomAutoApprovalRule(name, id, state, options);
        }
    }

    public sealed class CleanRoomAutoApprovalRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Collaborator alias of the author covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set
        /// </summary>
        [Input("authorCollaboratorAlias")]
        public Input<string>? AuthorCollaboratorAlias { get; set; }

        /// <summary>
        /// Scope of authors covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set. Possible values are: `ANY_AUTHOR`
        /// </summary>
        [Input("authorScope")]
        public Input<string>? AuthorScope { get; set; }

        /// <summary>
        /// The name of the clean room this auto-approval rule belongs to
        /// </summary>
        [Input("cleanRoomName")]
        public Input<string>? CleanRoomName { get; set; }

        /// <summary>
        /// Collaborator alias of the runner covered by the rule
        /// </summary>
        [Input("runnerCollaboratorAlias")]
        public Input<string>? RunnerCollaboratorAlias { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public CleanRoomAutoApprovalRuleArgs()
        {
        }
        public static new CleanRoomAutoApprovalRuleArgs Empty => new CleanRoomAutoApprovalRuleArgs();
    }

    public sealed class CleanRoomAutoApprovalRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Collaborator alias of the author covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set
        /// </summary>
        [Input("authorCollaboratorAlias")]
        public Input<string>? AuthorCollaboratorAlias { get; set; }

        /// <summary>
        /// Scope of authors covered by the rule.
        /// Only one of `AuthorCollaboratorAlias` and `AuthorScope` can be set. Possible values are: `ANY_AUTHOR`
        /// </summary>
        [Input("authorScope")]
        public Input<string>? AuthorScope { get; set; }

        /// <summary>
        /// The name of the clean room this auto-approval rule belongs to
        /// </summary>
        [Input("cleanRoomName")]
        public Input<string>? CleanRoomName { get; set; }

        /// <summary>
        /// (integer) - Timestamp of when the rule was created, in epoch milliseconds
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// (string) - A generated UUID identifying the rule
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// (string) - The owner of the rule to whom the rule applies
        /// </summary>
        [Input("ruleOwnerCollaboratorAlias")]
        public Input<string>? RuleOwnerCollaboratorAlias { get; set; }

        /// <summary>
        /// Collaborator alias of the runner covered by the rule
        /// </summary>
        [Input("runnerCollaboratorAlias")]
        public Input<string>? RunnerCollaboratorAlias { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public CleanRoomAutoApprovalRuleState()
        {
        }
        public static new CleanRoomAutoApprovalRuleState Empty => new CleanRoomAutoApprovalRuleState();
    }
}
