// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetCleanRoomsCleanRoom
    {
        /// <summary>
        /// This data source can be used to get a single clean room.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Datasource (Singular) Artifact
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Databricks.GetCleanRoomsCleanRoom.Invoke(new()
        ///     {
        ///         Name = "example-clean-room",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCleanRoomsCleanRoomResult> InvokeAsync(GetCleanRoomsCleanRoomArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCleanRoomsCleanRoomResult>("databricks:index/getCleanRoomsCleanRoom:getCleanRoomsCleanRoom", args ?? new GetCleanRoomsCleanRoomArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to get a single clean room.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Datasource (Singular) Artifact
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Databricks.GetCleanRoomsCleanRoom.Invoke(new()
        ///     {
        ///         Name = "example-clean-room",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCleanRoomsCleanRoomResult> Invoke(GetCleanRoomsCleanRoomInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCleanRoomsCleanRoomResult>("databricks:index/getCleanRoomsCleanRoom:getCleanRoomsCleanRoom", args ?? new GetCleanRoomsCleanRoomInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to get a single clean room.
        /// 
        /// ## Example Usage
        /// 
        /// # Example: Datasource (Singular) Artifact
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Databricks.GetCleanRoomsCleanRoom.Invoke(new()
        ///     {
        ///         Name = "example-clean-room",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCleanRoomsCleanRoomResult> Invoke(GetCleanRoomsCleanRoomInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCleanRoomsCleanRoomResult>("databricks:index/getCleanRoomsCleanRoom:getCleanRoomsCleanRoom", args ?? new GetCleanRoomsCleanRoomInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCleanRoomsCleanRoomArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) -
        /// </summary>
        [Input("comment")]
        public string? Comment { get; set; }

        /// <summary>
        /// The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// (string) - This is Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        [Input("owner")]
        public string? Owner { get; set; }

        /// <summary>
        /// (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        [Input("remoteDetailedInfo")]
        public Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoArgs? RemoteDetailedInfo { get; set; }

        public GetCleanRoomsCleanRoomArgs()
        {
        }
        public static new GetCleanRoomsCleanRoomArgs Empty => new GetCleanRoomsCleanRoomArgs();
    }

    public sealed class GetCleanRoomsCleanRoomInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) -
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (string) - This is Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        [Input("remoteDetailedInfo")]
        public Input<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoInputArgs>? RemoteDetailedInfo { get; set; }

        public GetCleanRoomsCleanRoomInvokeArgs()
        {
        }
        public static new GetCleanRoomsCleanRoomInvokeArgs Empty => new GetCleanRoomsCleanRoomInvokeArgs();
    }


    [OutputType]
    public sealed class GetCleanRoomsCleanRoomResult
    {
        /// <summary>
        /// (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
        /// </summary>
        public readonly string AccessRestricted;
        /// <summary>
        /// (string) -
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// (integer) - When the clean room was created, in epoch milliseconds
        /// </summary>
        public readonly int CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (string) - The alias of the collaborator tied to the local clean room
        /// </summary>
        public readonly string LocalCollaboratorAlias;
        /// <summary>
        /// (string) - The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
        /// using the separate CreateCleanRoomOutputCatalog API
        /// </summary>
        public readonly Outputs.GetCleanRoomsCleanRoomOutputCatalogResult OutputCatalog;
        /// <summary>
        /// (string) - This is Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        public readonly string? Owner;
        /// <summary>
        /// (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        public readonly Outputs.GetCleanRoomsCleanRoomRemoteDetailedInfoResult? RemoteDetailedInfo;
        /// <summary>
        /// (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// (integer) - When the clean room was last updated, in epoch milliseconds
        /// </summary>
        public readonly int UpdatedAt;

        [OutputConstructor]
        private GetCleanRoomsCleanRoomResult(
            string accessRestricted,

            string? comment,

            int createdAt,

            string id,

            string localCollaboratorAlias,

            string? name,

            Outputs.GetCleanRoomsCleanRoomOutputCatalogResult outputCatalog,

            string? owner,

            Outputs.GetCleanRoomsCleanRoomRemoteDetailedInfoResult? remoteDetailedInfo,

            string status,

            int updatedAt)
        {
            AccessRestricted = accessRestricted;
            Comment = comment;
            CreatedAt = createdAt;
            Id = id;
            LocalCollaboratorAlias = localCollaboratorAlias;
            Name = name;
            OutputCatalog = outputCatalog;
            Owner = owner;
            RemoteDetailedInfo = remoteDetailedInfo;
            Status = status;
            UpdatedAt = updatedAt;
        }
    }
}
