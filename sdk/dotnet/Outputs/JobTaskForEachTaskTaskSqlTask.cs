// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class JobTaskForEachTaskTaskSqlTask
    {
        /// <summary>
        /// block consisting of following fields:
        /// </summary>
        public readonly Outputs.JobTaskForEachTaskTaskSqlTaskAlert? Alert;
        /// <summary>
        /// block consisting of following fields:
        /// </summary>
        public readonly Outputs.JobTaskForEachTaskTaskSqlTaskDashboard? Dashboard;
        /// <summary>
        /// block consisting of single string fields:
        /// </summary>
        public readonly Outputs.JobTaskForEachTaskTaskSqlTaskFile? File;
        /// <summary>
        /// (Map) parameters to be used for each run of this task. The SQL alert task does not support custom parameters.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Parameters;
        /// <summary>
        /// block consisting of single string field: `query_id` - identifier of the Databricks SQL Query (databricks_sql_query).
        /// </summary>
        public readonly Outputs.JobTaskForEachTaskTaskSqlTaskQuery? Query;
        /// <summary>
        /// ID of the (the databricks_sql_endpoint) that will be used to execute the task.  Only Serverless &amp; Pro warehouses are supported right now.
        /// </summary>
        public readonly string? WarehouseId;

        [OutputConstructor]
        private JobTaskForEachTaskTaskSqlTask(
            Outputs.JobTaskForEachTaskTaskSqlTaskAlert? alert,

            Outputs.JobTaskForEachTaskTaskSqlTaskDashboard? dashboard,

            Outputs.JobTaskForEachTaskTaskSqlTaskFile? file,

            ImmutableDictionary<string, object>? parameters,

            Outputs.JobTaskForEachTaskTaskSqlTaskQuery? query,

            string? warehouseId)
        {
            Alert = alert;
            Dashboard = dashboard;
            File = file;
            Parameters = parameters;
            Query = query;
            WarehouseId = warehouseId;
        }
    }
}
