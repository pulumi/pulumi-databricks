// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetStorageCredentialStorageCredentialInfoResult
    {
        public readonly Outputs.GetStorageCredentialStorageCredentialInfoAwsIamRoleResult? AwsIamRole;
        public readonly Outputs.GetStorageCredentialStorageCredentialInfoAzureManagedIdentityResult? AzureManagedIdentity;
        public readonly Outputs.GetStorageCredentialStorageCredentialInfoAzureServicePrincipalResult? AzureServicePrincipal;
        public readonly Outputs.GetStorageCredentialStorageCredentialInfoCloudflareApiTokenResult? CloudflareApiToken;
        public readonly string? Comment;
        public readonly int? CreatedAt;
        public readonly string? CreatedBy;
        public readonly Outputs.GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountResult? DatabricksGcpServiceAccount;
        public readonly string? FullName;
        public readonly string? Id;
        public readonly string? IsolationMode;
        public readonly string? MetastoreId;
        public readonly string? Name;
        public readonly string? Owner;
        public readonly bool? ReadOnly;
        public readonly int? UpdatedAt;
        public readonly string? UpdatedBy;
        public readonly bool? UsedForManagedStorage;

        [OutputConstructor]
        private GetStorageCredentialStorageCredentialInfoResult(
            Outputs.GetStorageCredentialStorageCredentialInfoAwsIamRoleResult? awsIamRole,

            Outputs.GetStorageCredentialStorageCredentialInfoAzureManagedIdentityResult? azureManagedIdentity,

            Outputs.GetStorageCredentialStorageCredentialInfoAzureServicePrincipalResult? azureServicePrincipal,

            Outputs.GetStorageCredentialStorageCredentialInfoCloudflareApiTokenResult? cloudflareApiToken,

            string? comment,

            int? createdAt,

            string? createdBy,

            Outputs.GetStorageCredentialStorageCredentialInfoDatabricksGcpServiceAccountResult? databricksGcpServiceAccount,

            string? fullName,

            string? id,

            string? isolationMode,

            string? metastoreId,

            string? name,

            string? owner,

            bool? readOnly,

            int? updatedAt,

            string? updatedBy,

            bool? usedForManagedStorage)
        {
            AwsIamRole = awsIamRole;
            AzureManagedIdentity = azureManagedIdentity;
            AzureServicePrincipal = azureServicePrincipal;
            CloudflareApiToken = cloudflareApiToken;
            Comment = comment;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DatabricksGcpServiceAccount = databricksGcpServiceAccount;
            FullName = fullName;
            Id = id;
            IsolationMode = isolationMode;
            MetastoreId = metastoreId;
            Name = name;
            Owner = owner;
            ReadOnly = readOnly;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
            UsedForManagedStorage = usedForManagedStorage;
        }
    }
}
