// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetAppAppResult
    {
        public readonly Outputs.GetAppAppActiveDeploymentResult ActiveDeployment;
        /// <summary>
        /// attribute
        /// </summary>
        public readonly Outputs.GetAppAppAppStatusResult AppStatus;
        public readonly string? BudgetPolicyId;
        /// <summary>
        /// attribute
        /// </summary>
        public readonly Outputs.GetAppAppComputeStatusResult ComputeStatus;
        /// <summary>
        /// The creation time of the app.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The email of the user that created the app.
        /// </summary>
        public readonly string Creator;
        /// <summary>
        /// The default workspace file system path of the source code from which app deployment are created. This field tracks the workspace source code path of the last active deployment.
        /// </summary>
        public readonly string DefaultSourceCodePath;
        /// <summary>
        /// The description of the resource.
        /// </summary>
        public readonly string? Description;
        public readonly string EffectiveBudgetPolicyId;
        /// <summary>
        /// Id of the job to grant permission on.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the app.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.GetAppAppPendingDeploymentResult PendingDeployment;
        /// <summary>
        /// A list of resources that the app have access to.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppAppResourceResult> Resources;
        public readonly string ServicePrincipalClientId;
        /// <summary>
        /// id of the app service principal
        /// </summary>
        public readonly int ServicePrincipalId;
        /// <summary>
        /// name of the app service principal
        /// </summary>
        public readonly string ServicePrincipalName;
        /// <summary>
        /// The update time of the app.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The email of the user that last updated the app.
        /// </summary>
        public readonly string Updater;
        /// <summary>
        /// The URL of the app once it is deployed.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetAppAppResult(
            Outputs.GetAppAppActiveDeploymentResult activeDeployment,

            Outputs.GetAppAppAppStatusResult appStatus,

            string? budgetPolicyId,

            Outputs.GetAppAppComputeStatusResult computeStatus,

            string createTime,

            string creator,

            string defaultSourceCodePath,

            string? description,

            string effectiveBudgetPolicyId,

            string id,

            string name,

            Outputs.GetAppAppPendingDeploymentResult pendingDeployment,

            ImmutableArray<Outputs.GetAppAppResourceResult> resources,

            string servicePrincipalClientId,

            int servicePrincipalId,

            string servicePrincipalName,

            string updateTime,

            string updater,

            string url)
        {
            ActiveDeployment = activeDeployment;
            AppStatus = appStatus;
            BudgetPolicyId = budgetPolicyId;
            ComputeStatus = computeStatus;
            CreateTime = createTime;
            Creator = creator;
            DefaultSourceCodePath = defaultSourceCodePath;
            Description = description;
            EffectiveBudgetPolicyId = effectiveBudgetPolicyId;
            Id = id;
            Name = name;
            PendingDeployment = pendingDeployment;
            Resources = resources;
            ServicePrincipalClientId = servicePrincipalClientId;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalName = servicePrincipalName;
            UpdateTime = updateTime;
            Updater = updater;
            Url = url;
        }
    }
}
