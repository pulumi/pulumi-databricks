// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class ModelServingConfigServedEntityExternalModelAmazonBedrockConfig
    {
        /// <summary>
        /// The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
        /// </summary>
        public readonly string? AwsAccessKeyId;
        /// <summary>
        /// An AWS access key ID with permissions to interact with Bedrock services provided as a plaintext string.
        /// </summary>
        public readonly string? AwsAccessKeyIdPlaintext;
        /// <summary>
        /// The AWS region to use. Bedrock has to be enabled there.
        /// </summary>
        public readonly string AwsRegion;
        /// <summary>
        /// The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
        /// </summary>
        public readonly string? AwsSecretAccessKey;
        /// <summary>
        /// An AWS secret access key paired with the access key ID, with permissions to interact with Bedrock services provided as a plaintext string.
        /// </summary>
        public readonly string? AwsSecretAccessKeyPlaintext;
        /// <summary>
        /// The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: `Anthropic`, `Cohere`, `AI21Labs`, `Amazon`.
        /// </summary>
        public readonly string BedrockProvider;

        [OutputConstructor]
        private ModelServingConfigServedEntityExternalModelAmazonBedrockConfig(
            string? awsAccessKeyId,

            string? awsAccessKeyIdPlaintext,

            string awsRegion,

            string? awsSecretAccessKey,

            string? awsSecretAccessKeyPlaintext,

            string bedrockProvider)
        {
            AwsAccessKeyId = awsAccessKeyId;
            AwsAccessKeyIdPlaintext = awsAccessKeyIdPlaintext;
            AwsRegion = awsRegion;
            AwsSecretAccessKey = awsSecretAccessKey;
            AwsSecretAccessKeyPlaintext = awsSecretAccessKeyPlaintext;
            BedrockProvider = bedrockProvider;
        }
    }
}
