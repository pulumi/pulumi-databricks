// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetClusterClusterInfoResult
    {
        public readonly Outputs.GetClusterClusterInfoAutoscaleResult? Autoscale;
        public readonly int? AutoterminationMinutes;
        public readonly Outputs.GetClusterClusterInfoAwsAttributesResult? AwsAttributes;
        public readonly Outputs.GetClusterClusterInfoAzureAttributesResult? AzureAttributes;
        public readonly double? ClusterCores;
        public readonly string? ClusterId;
        public readonly Outputs.GetClusterClusterInfoClusterLogConfResult? ClusterLogConf;
        public readonly Outputs.GetClusterClusterInfoClusterLogStatusResult? ClusterLogStatus;
        public readonly int? ClusterMemoryMb;
        public readonly string? ClusterName;
        public readonly string? ClusterSource;
        public readonly string? CreatorUserName;
        public readonly ImmutableDictionary<string, string>? CustomTags;
        public readonly string? DataSecurityMode;
        public readonly ImmutableDictionary<string, string>? DefaultTags;
        public readonly Outputs.GetClusterClusterInfoDockerImageResult? DockerImage;
        public readonly Outputs.GetClusterClusterInfoDriverResult? Driver;
        public readonly string? DriverInstancePoolId;
        public readonly string? DriverNodeTypeId;
        public readonly bool? EnableElasticDisk;
        public readonly bool? EnableLocalDiskEncryption;
        public readonly ImmutableArray<Outputs.GetClusterClusterInfoExecutorResult> Executors;
        public readonly Outputs.GetClusterClusterInfoGcpAttributesResult? GcpAttributes;
        public readonly ImmutableArray<Outputs.GetClusterClusterInfoInitScriptResult> InitScripts;
        public readonly string? InstancePoolId;
        public readonly bool? IsSingleNode;
        public readonly int? JdbcPort;
        public readonly string? Kind;
        public readonly int? LastRestartedTime;
        public readonly int? LastStateLossTime;
        public readonly string? NodeTypeId;
        public readonly int? NumWorkers;
        public readonly string? PolicyId;
        public readonly string? RuntimeEngine;
        public readonly string? SingleUserName;
        public readonly ImmutableDictionary<string, string>? SparkConf;
        public readonly int? SparkContextId;
        public readonly ImmutableDictionary<string, string>? SparkEnvVars;
        public readonly string? SparkVersion;
        public readonly Outputs.GetClusterClusterInfoSpecResult? Spec;
        public readonly ImmutableArray<string> SshPublicKeys;
        public readonly int? StartTime;
        public readonly string? State;
        public readonly string? StateMessage;
        public readonly int? TerminatedTime;
        public readonly Outputs.GetClusterClusterInfoTerminationReasonResult? TerminationReason;
        public readonly bool? UseMlRuntime;
        public readonly Outputs.GetClusterClusterInfoWorkloadTypeResult? WorkloadType;

        [OutputConstructor]
        private GetClusterClusterInfoResult(
            Outputs.GetClusterClusterInfoAutoscaleResult? autoscale,

            int? autoterminationMinutes,

            Outputs.GetClusterClusterInfoAwsAttributesResult? awsAttributes,

            Outputs.GetClusterClusterInfoAzureAttributesResult? azureAttributes,

            double? clusterCores,

            string? clusterId,

            Outputs.GetClusterClusterInfoClusterLogConfResult? clusterLogConf,

            Outputs.GetClusterClusterInfoClusterLogStatusResult? clusterLogStatus,

            int? clusterMemoryMb,

            string? clusterName,

            string? clusterSource,

            string? creatorUserName,

            ImmutableDictionary<string, string>? customTags,

            string? dataSecurityMode,

            ImmutableDictionary<string, string>? defaultTags,

            Outputs.GetClusterClusterInfoDockerImageResult? dockerImage,

            Outputs.GetClusterClusterInfoDriverResult? driver,

            string? driverInstancePoolId,

            string? driverNodeTypeId,

            bool? enableElasticDisk,

            bool? enableLocalDiskEncryption,

            ImmutableArray<Outputs.GetClusterClusterInfoExecutorResult> executors,

            Outputs.GetClusterClusterInfoGcpAttributesResult? gcpAttributes,

            ImmutableArray<Outputs.GetClusterClusterInfoInitScriptResult> initScripts,

            string? instancePoolId,

            bool? isSingleNode,

            int? jdbcPort,

            string? kind,

            int? lastRestartedTime,

            int? lastStateLossTime,

            string? nodeTypeId,

            int? numWorkers,

            string? policyId,

            string? runtimeEngine,

            string? singleUserName,

            ImmutableDictionary<string, string>? sparkConf,

            int? sparkContextId,

            ImmutableDictionary<string, string>? sparkEnvVars,

            string? sparkVersion,

            Outputs.GetClusterClusterInfoSpecResult? spec,

            ImmutableArray<string> sshPublicKeys,

            int? startTime,

            string? state,

            string? stateMessage,

            int? terminatedTime,

            Outputs.GetClusterClusterInfoTerminationReasonResult? terminationReason,

            bool? useMlRuntime,

            Outputs.GetClusterClusterInfoWorkloadTypeResult? workloadType)
        {
            Autoscale = autoscale;
            AutoterminationMinutes = autoterminationMinutes;
            AwsAttributes = awsAttributes;
            AzureAttributes = azureAttributes;
            ClusterCores = clusterCores;
            ClusterId = clusterId;
            ClusterLogConf = clusterLogConf;
            ClusterLogStatus = clusterLogStatus;
            ClusterMemoryMb = clusterMemoryMb;
            ClusterName = clusterName;
            ClusterSource = clusterSource;
            CreatorUserName = creatorUserName;
            CustomTags = customTags;
            DataSecurityMode = dataSecurityMode;
            DefaultTags = defaultTags;
            DockerImage = dockerImage;
            Driver = driver;
            DriverInstancePoolId = driverInstancePoolId;
            DriverNodeTypeId = driverNodeTypeId;
            EnableElasticDisk = enableElasticDisk;
            EnableLocalDiskEncryption = enableLocalDiskEncryption;
            Executors = executors;
            GcpAttributes = gcpAttributes;
            InitScripts = initScripts;
            InstancePoolId = instancePoolId;
            IsSingleNode = isSingleNode;
            JdbcPort = jdbcPort;
            Kind = kind;
            LastRestartedTime = lastRestartedTime;
            LastStateLossTime = lastStateLossTime;
            NodeTypeId = nodeTypeId;
            NumWorkers = numWorkers;
            PolicyId = policyId;
            RuntimeEngine = runtimeEngine;
            SingleUserName = singleUserName;
            SparkConf = sparkConf;
            SparkContextId = sparkContextId;
            SparkEnvVars = sparkEnvVars;
            SparkVersion = sparkVersion;
            Spec = spec;
            SshPublicKeys = sshPublicKeys;
            StartTime = startTime;
            State = state;
            StateMessage = stateMessage;
            TerminatedTime = terminatedTime;
            TerminationReason = terminationReason;
            UseMlRuntime = useMlRuntime;
            WorkloadType = workloadType;
        }
    }
}
