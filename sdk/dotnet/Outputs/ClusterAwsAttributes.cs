// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class ClusterAwsAttributes
    {
        /// <summary>
        /// Availability type used for all subsequent nodes past the `first_on_demand` ones. Valid values are `SPOT`, `SPOT_WITH_FALLBACK` and `ON_DEMAND`. Note: If `first_on_demand` is zero, this availability type will be used for the entire cluster. Backend default value is `SPOT_WITH_FALLBACK` and could change in the future
        /// </summary>
        public readonly string? Availability;
        /// <summary>
        /// The number of volumes launched for each instance. You can choose up to 10 volumes. This feature is only enabled for supported node types. Legacy node types cannot specify custom EBS volumes. For node types with no instance store, at least one EBS volume needs to be specified; otherwise, cluster creation will fail. These EBS volumes will be mounted at /ebs0, /ebs1, and etc. Instance store volumes will be mounted at /local_disk0, /local_disk1, and etc. If EBS volumes are attached, Databricks will configure Spark to use only the EBS volumes for scratch storage because heterogeneously sized scratch devices can lead to inefficient disk utilization. If no EBS volumes are attached, Databricks will configure Spark to use instance store volumes. If EBS volumes are specified, then the Spark configuration spark.local.dir will be overridden.
        /// </summary>
        public readonly int? EbsVolumeCount;
        public readonly int? EbsVolumeIops;
        /// <summary>
        /// The size of each EBS volume (in GiB) launched for each instance. For general purpose SSD, this value must be within the range 100 - 4096. For throughput optimized HDD, this value must be within the range 500 - 4096. Custom EBS volumes cannot be specified for the legacy node types (memory-optimized and compute-optimized).
        /// </summary>
        public readonly int? EbsVolumeSize;
        public readonly int? EbsVolumeThroughput;
        /// <summary>
        /// The type of EBS volumes that will be launched with this cluster. Valid values are `GENERAL_PURPOSE_SSD` or `THROUGHPUT_OPTIMIZED_HDD`. Use this option only if you're not picking *Delta Optimized `i3.*`* node types.
        /// </summary>
        public readonly string? EbsVolumeType;
        /// <summary>
        /// The first `first_on_demand` nodes of the cluster will be placed on on-demand instances. If this value is greater than 0, the cluster driver node will be placed on an on-demand instance. If this value is greater than or equal to the current cluster size, all nodes will be placed on on-demand instances. If this value is less than the current cluster size, `first_on_demand` nodes will be placed on on-demand instances, and the remainder will be placed on availability instances. This value does not affect cluster size and cannot be mutated over the lifetime of a cluster. Backend default value is `1` and could change in the future
        /// </summary>
        public readonly int? FirstOnDemand;
        public readonly string? InstanceProfileArn;
        /// <summary>
        /// The max price for AWS spot instances, as a percentage of the corresponding instance typeâ€™s on-demand price. For example, if this field is set to 50, and the cluster needs a new `i3.xlarge` spot instance, then the max price is half of the price of on-demand `i3.xlarge` instances. Similarly, if this field is set to 200, the max price is twice the price of on-demand `i3.xlarge` instances. If not specified, the default value is `100`. When spot instances are requested for this cluster, only spot instances whose max price percentage matches this field will be considered. For safety, we enforce this field to be no more than `10000`.
        /// </summary>
        public readonly int? SpotBidPricePercent;
        /// <summary>
        /// Identifier for the availability zone/datacenter in which the cluster resides. This string will be of a form like `us-west-2a`. The provided availability zone must be in the same region as the Databricks deployment. For example, `us-west-2a` is not a valid zone ID if the Databricks deployment resides in the `us-east-1` region. Enable automatic availability zone selection ("Auto-AZ"), by setting the value `auto`. Databricks selects the AZ based on available IPs in the workspace subnets and retries in other availability zones if AWS returns insufficient capacity errors.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private ClusterAwsAttributes(
            string? availability,

            int? ebsVolumeCount,

            int? ebsVolumeIops,

            int? ebsVolumeSize,

            int? ebsVolumeThroughput,

            string? ebsVolumeType,

            int? firstOnDemand,

            string? instanceProfileArn,

            int? spotBidPricePercent,

            string? zoneId)
        {
            Availability = availability;
            EbsVolumeCount = ebsVolumeCount;
            EbsVolumeIops = ebsVolumeIops;
            EbsVolumeSize = ebsVolumeSize;
            EbsVolumeThroughput = ebsVolumeThroughput;
            EbsVolumeType = ebsVolumeType;
            FirstOnDemand = firstOnDemand;
            InstanceProfileArn = instanceProfileArn;
            SpotBidPricePercent = spotBidPricePercent;
            ZoneId = zoneId;
        }
    }
}
