// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetSchemaSchemaInfoResult
    {
        public readonly bool? BrowseOnly;
        public readonly string? CatalogName;
        public readonly string? CatalogType;
        public readonly string? Comment;
        public readonly int? CreatedAt;
        public readonly string? CreatedBy;
        public readonly Outputs.GetSchemaSchemaInfoEffectivePredictiveOptimizationFlagResult? EffectivePredictiveOptimizationFlag;
        public readonly string? EnablePredictiveOptimization;
        public readonly string? FullName;
        public readonly string? MetastoreId;
        public readonly string? Name;
        public readonly string? Owner;
        public readonly ImmutableDictionary<string, string>? Properties;
        public readonly string? SchemaId;
        public readonly string? StorageLocation;
        public readonly string? StorageRoot;
        public readonly int? UpdatedAt;
        public readonly string? UpdatedBy;

        [OutputConstructor]
        private GetSchemaSchemaInfoResult(
            bool? browseOnly,

            string? catalogName,

            string? catalogType,

            string? comment,

            int? createdAt,

            string? createdBy,

            Outputs.GetSchemaSchemaInfoEffectivePredictiveOptimizationFlagResult? effectivePredictiveOptimizationFlag,

            string? enablePredictiveOptimization,

            string? fullName,

            string? metastoreId,

            string? name,

            string? owner,

            ImmutableDictionary<string, string>? properties,

            string? schemaId,

            string? storageLocation,

            string? storageRoot,

            int? updatedAt,

            string? updatedBy)
        {
            BrowseOnly = browseOnly;
            CatalogName = catalogName;
            CatalogType = catalogType;
            Comment = comment;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            EffectivePredictiveOptimizationFlag = effectivePredictiveOptimizationFlag;
            EnablePredictiveOptimization = enablePredictiveOptimization;
            FullName = fullName;
            MetastoreId = metastoreId;
            Name = name;
            Owner = owner;
            Properties = properties;
            SchemaId = schemaId;
            StorageLocation = storageLocation;
            StorageRoot = storageRoot;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
