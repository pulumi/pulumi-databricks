// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetRecipientFederationPolicyOidcPolicyResult
    {
        /// <summary>
        /// (list of string) - The allowed token audiences, as specified in the 'aud' claim of federated tokens.
        /// The audience identifier is intended to represent the recipient of the token.
        /// Can be any non-empty string value. As long as the audience in the token matches at least one audience in the policy,
        /// </summary>
        public readonly ImmutableArray<string> Audiences;
        /// <summary>
        /// (string) - The required token issuer, as specified in the 'iss' claim of federated tokens
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// (string) - The required token subject, as specified in the subject claim of federated tokens.
        /// The subject claim identifies the identity of the user or machine accessing the resource.
        /// Examples for Entra ID (AAD):
        /// - U2M flow (group access): If the subject claim is `Groups`, this must be the Object ID of the group in Entra ID.
        /// - U2M flow (user access): If the subject claim is `Oid`, this must be the Object ID of the user in Entra ID.
        /// - M2M flow (OAuth App access): If the subject claim is `Azp`, this must be the client ID of the OAuth app registered in Entra ID
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// (string) - The claim that contains the subject of the token.
        /// Depending on the identity provider and the use case (U2M or M2M), this can vary:
        /// - For Entra ID (AAD):
        /// * U2M flow (group access): Use `Groups`.
        /// * U2M flow (user access): Use `Oid`.
        /// * M2M flow (OAuth App access): Use `Azp`.
        /// - For other IdPs, refer to the specific IdP documentation.
        /// </summary>
        public readonly string SubjectClaim;

        [OutputConstructor]
        private GetRecipientFederationPolicyOidcPolicyResult(
            ImmutableArray<string> audiences,

            string issuer,

            string subject,

            string subjectClaim)
        {
            Audiences = audiences;
            Issuer = issuer;
            Subject = subject;
            SubjectClaim = subjectClaim;
        }
    }
}
