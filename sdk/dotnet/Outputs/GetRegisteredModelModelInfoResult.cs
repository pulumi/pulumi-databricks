// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetRegisteredModelModelInfoResult
    {
        /// <summary>
        /// the list of aliases associated with this model. Each item is object consisting of following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegisteredModelModelInfoAliasResult> Aliases;
        public readonly bool? BrowseOnly;
        /// <summary>
        /// The name of the catalog where the schema and the registered model reside.
        /// </summary>
        public readonly string? CatalogName;
        /// <summary>
        /// The comment attached to the registered model.
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// the Unix timestamp at the model's creation
        /// </summary>
        public readonly int? CreatedAt;
        /// <summary>
        /// the identifier of the user who created the model
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
        /// </summary>
        public readonly string? FullName;
        /// <summary>
        /// the unique identifier of the metastore
        /// </summary>
        public readonly string? MetastoreId;
        /// <summary>
        /// The name of the registered model.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the registered model owner.
        /// </summary>
        public readonly string? Owner;
        /// <summary>
        /// The name of the schema where the registered model resides.
        /// </summary>
        public readonly string? SchemaName;
        /// <summary>
        /// The storage location under which model version data files are stored.
        /// </summary>
        public readonly string? StorageLocation;
        /// <summary>
        /// the timestamp of the last time changes were made to the model
        /// </summary>
        public readonly int? UpdatedAt;
        /// <summary>
        /// the identifier of the user who updated the model last time
        /// </summary>
        public readonly string? UpdatedBy;

        [OutputConstructor]
        private GetRegisteredModelModelInfoResult(
            ImmutableArray<Outputs.GetRegisteredModelModelInfoAliasResult> aliases,

            bool? browseOnly,

            string? catalogName,

            string? comment,

            int? createdAt,

            string? createdBy,

            string? fullName,

            string? metastoreId,

            string? name,

            string? owner,

            string? schemaName,

            string? storageLocation,

            int? updatedAt,

            string? updatedBy)
        {
            Aliases = aliases;
            BrowseOnly = browseOnly;
            CatalogName = catalogName;
            Comment = comment;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            FullName = fullName;
            MetastoreId = metastoreId;
            Name = name;
            Owner = owner;
            SchemaName = schemaName;
            StorageLocation = storageLocation;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
