// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionResult
    {
        /// <summary>
        /// (integer) - When the asset is added to the clean room, in epoch milliseconds
        /// </summary>
        public readonly int AddedAt;
        /// <summary>
        /// Asset type. Only NOTEBOOK_FILE is supported. Possible values are: `FOREIGN_TABLE`, `NOTEBOOK_FILE`, `TABLE`, `VIEW`, `VOLUME`
        /// </summary>
        public readonly string AssetType;
        /// <summary>
        /// Name of the clean room
        /// </summary>
        public readonly string? CleanRoomName;
        /// <summary>
        /// (CleanRoomAssetForeignTable) - Foreign table details available to all collaborators of the clean room.
        /// Present if and only if **asset_type** is **FOREIGN_TABLE**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionForeignTableResult? ForeignTable;
        /// <summary>
        /// (CleanRoomAssetForeignTableLocalDetails) - Local details for a foreign that are only available to its owner.
        /// Present if and only if **asset_type** is **FOREIGN_TABLE**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionForeignTableLocalDetailsResult? ForeignTableLocalDetails;
        /// <summary>
        /// Name of the asset
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (CleanRoomAssetNotebook) - Notebook details available to all collaborators of the clean room.
        /// Present if and only if **asset_type** is **NOTEBOOK_FILE**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionNotebookResult? Notebook;
        /// <summary>
        /// (string) - The alias of the collaborator who owns this asset
        /// </summary>
        public readonly string OwnerCollaboratorAlias;
        /// <summary>
        /// (string) - Status of the asset. Possible values are: `ACTIVE`, `PENDING`, `PERMISSION_DENIED`
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// (CleanRoomAssetTable) - Table details available to all collaborators of the clean room.
        /// Present if and only if **asset_type** is **TABLE**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionTableResult? Table;
        /// <summary>
        /// (CleanRoomAssetTableLocalDetails) - Local details for a table that are only available to its owner.
        /// Present if and only if **asset_type** is **TABLE**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionTableLocalDetailsResult? TableLocalDetails;
        /// <summary>
        /// (CleanRoomAssetView) - View details available to all collaborators of the clean room.
        /// Present if and only if **asset_type** is **VIEW**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionViewResult? View;
        /// <summary>
        /// (CleanRoomAssetViewLocalDetails) - Local details for a view that are only available to its owner.
        /// Present if and only if **asset_type** is **VIEW**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionViewLocalDetailsResult? ViewLocalDetails;
        /// <summary>
        /// (CleanRoomAssetVolumeLocalDetails) - Local details for a volume that are only available to its owner.
        /// Present if and only if **asset_type** is **VOLUME**
        /// </summary>
        public readonly Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionVolumeLocalDetailsResult? VolumeLocalDetails;

        [OutputConstructor]
        private GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionResult(
            int addedAt,

            string assetType,

            string? cleanRoomName,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionForeignTableResult? foreignTable,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionForeignTableLocalDetailsResult? foreignTableLocalDetails,

            string name,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionNotebookResult? notebook,

            string ownerCollaboratorAlias,

            string status,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionTableResult? table,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionTableLocalDetailsResult? tableLocalDetails,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionViewResult? view,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionViewLocalDetailsResult? viewLocalDetails,

            Outputs.GetCleanRoomAssetRevisionsCleanRoomAssetsRevisionVolumeLocalDetailsResult? volumeLocalDetails)
        {
            AddedAt = addedAt;
            AssetType = assetType;
            CleanRoomName = cleanRoomName;
            ForeignTable = foreignTable;
            ForeignTableLocalDetails = foreignTableLocalDetails;
            Name = name;
            Notebook = notebook;
            OwnerCollaboratorAlias = ownerCollaboratorAlias;
            Status = status;
            Table = table;
            TableLocalDetails = tableLocalDetails;
            View = view;
            ViewLocalDetails = viewLocalDetails;
            VolumeLocalDetails = volumeLocalDetails;
        }
    }
}
