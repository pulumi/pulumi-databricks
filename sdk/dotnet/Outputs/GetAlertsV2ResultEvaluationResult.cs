// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class GetAlertsV2ResultEvaluationResult
    {
        /// <summary>
        /// (string) - Operator used for comparison in alert evaluation. Possible values are: EQUAL, GREATER_THAN, GREATER_THAN_OR_EQUAL, IS_NOT_NULL, IS_NULL, LESS_THAN, LESS_THAN_OR_EQUAL, NOT_EQUAL
        /// </summary>
        public readonly string? ComparisonOperator;
        /// <summary>
        /// (string) - Alert state if result is empty. Possible values are: ERROR, OK, TRIGGERED, UNKNOWN
        /// </summary>
        public readonly string? EmptyResultState;
        /// <summary>
        /// (string) - Timestamp of the last evaluation
        /// </summary>
        public readonly string LastEvaluatedAt;
        /// <summary>
        /// (AlertV2Notification) - User or Notification Destination to notify when alert is triggered
        /// </summary>
        public readonly Outputs.GetAlertsV2ResultEvaluationNotificationResult? Notification;
        /// <summary>
        /// (AlertV2OperandColumn) - Source column from result to use to evaluate alert
        /// </summary>
        public readonly Outputs.GetAlertsV2ResultEvaluationSourceResult? Source;
        /// <summary>
        /// (string) - Latest state of alert evaluation. Possible values are: ERROR, OK, TRIGGERED, UNKNOWN
        /// </summary>
        public readonly string State;
        /// <summary>
        /// (AlertV2Operand) - Threshold to user for alert evaluation, can be a column or a value
        /// </summary>
        public readonly Outputs.GetAlertsV2ResultEvaluationThresholdResult? Threshold;

        [OutputConstructor]
        private GetAlertsV2ResultEvaluationResult(
            string? comparisonOperator,

            string? emptyResultState,

            string lastEvaluatedAt,

            Outputs.GetAlertsV2ResultEvaluationNotificationResult? notification,

            Outputs.GetAlertsV2ResultEvaluationSourceResult? source,

            string state,

            Outputs.GetAlertsV2ResultEvaluationThresholdResult? threshold)
        {
            ComparisonOperator = comparisonOperator;
            EmptyResultState = emptyResultState;
            LastEvaluatedAt = lastEvaluatedAt;
            Notification = notification;
            Source = source;
            State = state;
            Threshold = threshold;
        }
    }
}
