// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Outputs
{

    [OutputType]
    public sealed class ModelServingConfigServedEntityExternalModelOpenaiConfig
    {
        /// <summary>
        /// This field is only required for Azure AD OpenAI and is the Microsoft Entra Client ID.
        /// </summary>
        public readonly string? MicrosoftEntraClientId;
        /// <summary>
        /// The Databricks secret key reference for a client secret used for Microsoft Entra ID authentication.
        /// </summary>
        public readonly string? MicrosoftEntraClientSecret;
        /// <summary>
        /// The client secret used for Microsoft Entra ID authentication provided as a plaintext string.
        /// </summary>
        public readonly string? MicrosoftEntraClientSecretPlaintext;
        /// <summary>
        /// This field is only required for Azure AD OpenAI and is the Microsoft Entra Tenant ID.
        /// </summary>
        public readonly string? MicrosoftEntraTenantId;
        /// <summary>
        /// This is the base URL for the OpenAI API (default: "&lt;https://api.openai.com/v1&gt;"). For Azure OpenAI, this field is required and is the base URL for the Azure OpenAI API service provided by Azure.
        /// </summary>
        public readonly string? OpenaiApiBase;
        /// <summary>
        /// The Databricks secret key reference for an OpenAI or Azure OpenAI API key.
        /// </summary>
        public readonly string? OpenaiApiKey;
        /// <summary>
        /// The OpenAI API key using the OpenAI or Azure service provided as a plaintext string.
        /// </summary>
        public readonly string? OpenaiApiKeyPlaintext;
        /// <summary>
        /// This is an optional field to specify the type of OpenAI API to use. For Azure OpenAI, this field is required, and this parameter represents the preferred security access validation protocol. For access token validation, use `Azure`. For authentication using Azure Active Directory (Azure AD) use, `Azuread`.
        /// </summary>
        public readonly string? OpenaiApiType;
        /// <summary>
        /// This is an optional field to specify the OpenAI API version. For Azure OpenAI, this field is required and is the version of the Azure OpenAI service to utilize, specified by a date.
        /// </summary>
        public readonly string? OpenaiApiVersion;
        /// <summary>
        /// This field is only required for Azure OpenAI and is the name of the deployment resource for the Azure OpenAI service.
        /// </summary>
        public readonly string? OpenaiDeploymentName;
        /// <summary>
        /// This is an optional field to specify the organization in OpenAI or Azure OpenAI.
        /// </summary>
        public readonly string? OpenaiOrganization;

        [OutputConstructor]
        private ModelServingConfigServedEntityExternalModelOpenaiConfig(
            string? microsoftEntraClientId,

            string? microsoftEntraClientSecret,

            string? microsoftEntraClientSecretPlaintext,

            string? microsoftEntraTenantId,

            string? openaiApiBase,

            string? openaiApiKey,

            string? openaiApiKeyPlaintext,

            string? openaiApiType,

            string? openaiApiVersion,

            string? openaiDeploymentName,

            string? openaiOrganization)
        {
            MicrosoftEntraClientId = microsoftEntraClientId;
            MicrosoftEntraClientSecret = microsoftEntraClientSecret;
            MicrosoftEntraClientSecretPlaintext = microsoftEntraClientSecretPlaintext;
            MicrosoftEntraTenantId = microsoftEntraTenantId;
            OpenaiApiBase = openaiApiBase;
            OpenaiApiKey = openaiApiKey;
            OpenaiApiKeyPlaintext = openaiApiKeyPlaintext;
            OpenaiApiType = openaiApiType;
            OpenaiApiVersion = openaiApiVersion;
            OpenaiDeploymentName = openaiDeploymentName;
            OpenaiOrganization = openaiOrganization;
        }
    }
}
