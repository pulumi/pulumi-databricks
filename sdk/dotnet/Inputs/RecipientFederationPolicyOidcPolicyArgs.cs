// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class RecipientFederationPolicyOidcPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("audiences")]
        private InputList<string>? _audiences;

        /// <summary>
        /// The allowed token audiences, as specified in the 'aud' claim of federated tokens.
        /// The audience identifier is intended to represent the recipient of the token.
        /// Can be any non-empty string value. As long as the audience in the token matches at least one audience in the policy,
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// The required token issuer, as specified in the 'iss' claim of federated tokens
        /// </summary>
        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        /// <summary>
        /// The required token subject, as specified in the subject claim of federated tokens.
        /// The subject claim identifies the identity of the user or machine accessing the resource.
        /// Examples for Entra ID (AAD):
        /// - U2M flow (group access): If the subject claim is `groups`, this must be the Object ID of the group in Entra ID.
        /// - U2M flow (user access): If the subject claim is `oid`, this must be the Object ID of the user in Entra ID.
        /// - M2M flow (OAuth App access): If the subject claim is `azp`, this must be the client ID of the OAuth app registered in Entra ID
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        /// <summary>
        /// The claim that contains the subject of the token.
        /// Depending on the identity provider and the use case (U2M or M2M), this can vary:
        /// - For Entra ID (AAD):
        /// * U2M flow (group access): Use `groups`.
        /// * U2M flow (user access): Use `oid`.
        /// * M2M flow (OAuth App access): Use `azp`.
        /// - For other IdPs, refer to the specific IdP documentation.
        /// 
        /// Supported `subject_claim` values are:
        /// </summary>
        [Input("subjectClaim", required: true)]
        public Input<string> SubjectClaim { get; set; } = null!;

        public RecipientFederationPolicyOidcPolicyArgs()
        {
        }
        public static new RecipientFederationPolicyOidcPolicyArgs Empty => new RecipientFederationPolicyOidcPolicyArgs();
    }
}
