// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetTableTableInfoInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPoint")]
        public Input<string>? AccessPoint { get; set; }

        [Input("browseOnly")]
        public Input<bool>? BrowseOnly { get; set; }

        /// <summary>
        /// Name of parent catalog.
        /// </summary>
        [Input("catalogName")]
        public Input<string>? CatalogName { get; set; }

        [Input("columns")]
        private InputList<Inputs.GetTableTableInfoColumnInputArgs>? _columns;

        /// <summary>
        /// Array of ColumnInfo objects of the table's columns
        /// </summary>
        public InputList<Inputs.GetTableTableInfoColumnInputArgs> Columns
        {
            get => _columns ?? (_columns = new InputList<Inputs.GetTableTableInfoColumnInputArgs>());
            set => _columns = value;
        }

        /// <summary>
        /// Free-form text description
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("dataAccessConfigurationId")]
        public Input<string>? DataAccessConfigurationId { get; set; }

        /// <summary>
        /// Table format, e.g. DELTA, CSV, JSON
        /// </summary>
        [Input("dataSourceFormat")]
        public Input<string>? DataSourceFormat { get; set; }

        [Input("deletedAt")]
        public Input<int>? DeletedAt { get; set; }

        [Input("deltaRuntimePropertiesKvpairs")]
        public Input<Inputs.GetTableTableInfoDeltaRuntimePropertiesKvpairsInputArgs>? DeltaRuntimePropertiesKvpairs { get; set; }

        [Input("effectivePredictiveOptimizationFlag")]
        public Input<Inputs.GetTableTableInfoEffectivePredictiveOptimizationFlagInputArgs>? EffectivePredictiveOptimizationFlag { get; set; }

        [Input("enablePredictiveOptimization")]
        public Input<string>? EnablePredictiveOptimization { get; set; }

        [Input("encryptionDetails")]
        public Input<Inputs.GetTableTableInfoEncryptionDetailsInputArgs>? EncryptionDetails { get; set; }

        [Input("fullName")]
        public Input<string>? FullName { get; set; }

        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        /// <summary>
        /// Full name of the databricks_table: _`Catalog`.`Schema`.`Table`_
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Current owner of the table
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("pipelineId")]
        public Input<string>? PipelineId { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("rowFilter")]
        public Input<Inputs.GetTableTableInfoRowFilterInputArgs>? RowFilter { get; set; }

        /// <summary>
        /// Name of parent schema relative to its parent catalog.
        /// </summary>
        [Input("schemaName")]
        public Input<string>? SchemaName { get; set; }

        [Input("securableKindManifest")]
        public Input<Inputs.GetTableTableInfoSecurableKindManifestInputArgs>? SecurableKindManifest { get; set; }

        [Input("sqlPath")]
        public Input<string>? SqlPath { get; set; }

        [Input("storageCredentialName")]
        public Input<string>? StorageCredentialName { get; set; }

        [Input("storageLocation")]
        public Input<string>? StorageLocation { get; set; }

        [Input("tableConstraints")]
        private InputList<Inputs.GetTableTableInfoTableConstraintInputArgs>? _tableConstraints;
        public InputList<Inputs.GetTableTableInfoTableConstraintInputArgs> TableConstraints
        {
            get => _tableConstraints ?? (_tableConstraints = new InputList<Inputs.GetTableTableInfoTableConstraintInputArgs>());
            set => _tableConstraints = value;
        }

        [Input("tableId")]
        public Input<string>? TableId { get; set; }

        /// <summary>
        /// Table type, e.g. MANAGED, EXTERNAL, VIEW
        /// </summary>
        [Input("tableType")]
        public Input<string>? TableType { get; set; }

        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        /// <summary>
        /// View definition SQL (when `TableType` is VIEW, MATERIALIZED_VIEW, or STREAMING_TABLE)
        /// </summary>
        [Input("viewDefinition")]
        public Input<string>? ViewDefinition { get; set; }

        /// <summary>
        /// View dependencies (when `TableType` is VIEW or MATERIALIZED_VIEW, STREAMING_TABLE)
        /// </summary>
        [Input("viewDependencies")]
        public Input<Inputs.GetTableTableInfoViewDependenciesInputArgs>? ViewDependencies { get; set; }

        public GetTableTableInfoInputArgs()
        {
        }
        public static new GetTableTableInfoInputArgs Empty => new GetTableTableInfoInputArgs();
    }
}
