// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class JobTriggerTableUpdateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The table(s) condition based on which to trigger a job run. Valid values are `ANY_UPDATED` or `ALL_UPDATED`.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// If set, the trigger starts a run only after the specified amount of time passed since the last time the trigger fired. The minimum allowed value is 60 seconds.
        /// </summary>
        [Input("minTimeBetweenTriggersSeconds")]
        public Input<int>? MinTimeBetweenTriggersSeconds { get; set; }

        [Input("tableNames", required: true)]
        private InputList<string>? _tableNames;

        /// <summary>
        /// A list of Delta tables to monitor for changes. The table name must be in the format `catalog_name.schema_name.table_name`.
        /// </summary>
        public InputList<string> TableNames
        {
            get => _tableNames ?? (_tableNames = new InputList<string>());
            set => _tableNames = value;
        }

        /// <summary>
        /// If set, the trigger starts a run only after no file activity has occurred for the specified amount of time. This makes it possible to wait for a batch of incoming files to arrive before triggering a run. The minimum allowed value is 60 seconds.
        /// </summary>
        [Input("waitAfterLastChangeSeconds")]
        public Input<int>? WaitAfterLastChangeSeconds { get; set; }

        public JobTriggerTableUpdateArgs()
        {
        }
        public static new JobTriggerTableUpdateArgs Empty => new JobTriggerTableUpdateArgs();
    }
}
