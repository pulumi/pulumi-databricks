// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class AlertV2EvaluationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Operator used for comparison in alert evaluation. Possible values are: `EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `NOT_EQUAL`
        /// </summary>
        [Input("comparisonOperator")]
        public Input<string>? ComparisonOperator { get; set; }

        /// <summary>
        /// Alert state if result is empty. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
        /// </summary>
        [Input("emptyResultState")]
        public Input<string>? EmptyResultState { get; set; }

        /// <summary>
        /// (string) - Timestamp of the last evaluation
        /// </summary>
        [Input("lastEvaluatedAt")]
        public Input<string>? LastEvaluatedAt { get; set; }

        /// <summary>
        /// User or Notification Destination to notify when alert is triggered
        /// </summary>
        [Input("notification")]
        public Input<Inputs.AlertV2EvaluationNotificationArgs>? Notification { get; set; }

        /// <summary>
        /// Source column from result to use to evaluate alert
        /// </summary>
        [Input("source")]
        public Input<Inputs.AlertV2EvaluationSourceArgs>? Source { get; set; }

        /// <summary>
        /// (string) - Latest state of alert evaluation. Possible values are: `ERROR`, `OK`, `TRIGGERED`, `UNKNOWN`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Threshold to user for alert evaluation, can be a column or a value
        /// </summary>
        [Input("threshold")]
        public Input<Inputs.AlertV2EvaluationThresholdArgs>? Threshold { get; set; }

        public AlertV2EvaluationArgs()
        {
        }
        public static new AlertV2EvaluationArgs Empty => new AlertV2EvaluationArgs();
    }
}
