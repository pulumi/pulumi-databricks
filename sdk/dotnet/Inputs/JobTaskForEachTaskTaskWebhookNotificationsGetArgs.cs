// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class JobTaskForEachTaskTaskWebhookNotificationsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("onDurationWarningThresholdExceededs")]
        private InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnDurationWarningThresholdExceededGetArgs>? _onDurationWarningThresholdExceededs;
        public InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnDurationWarningThresholdExceededGetArgs> OnDurationWarningThresholdExceededs
        {
            get => _onDurationWarningThresholdExceededs ?? (_onDurationWarningThresholdExceededs = new InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnDurationWarningThresholdExceededGetArgs>());
            set => _onDurationWarningThresholdExceededs = value;
        }

        [Input("onFailures")]
        private InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnFailureGetArgs>? _onFailures;
        public InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnFailureGetArgs> OnFailures
        {
            get => _onFailures ?? (_onFailures = new InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnFailureGetArgs>());
            set => _onFailures = value;
        }

        [Input("onStarts")]
        private InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStartGetArgs>? _onStarts;
        public InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStartGetArgs> OnStarts
        {
            get => _onStarts ?? (_onStarts = new InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStartGetArgs>());
            set => _onStarts = value;
        }

        [Input("onStreamingBacklogExceededs")]
        private InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStreamingBacklogExceededGetArgs>? _onStreamingBacklogExceededs;
        public InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStreamingBacklogExceededGetArgs> OnStreamingBacklogExceededs
        {
            get => _onStreamingBacklogExceededs ?? (_onStreamingBacklogExceededs = new InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnStreamingBacklogExceededGetArgs>());
            set => _onStreamingBacklogExceededs = value;
        }

        [Input("onSuccesses")]
        private InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnSuccessGetArgs>? _onSuccesses;
        public InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnSuccessGetArgs> OnSuccesses
        {
            get => _onSuccesses ?? (_onSuccesses = new InputList<Inputs.JobTaskForEachTaskTaskWebhookNotificationsOnSuccessGetArgs>());
            set => _onSuccesses = value;
        }

        public JobTaskForEachTaskTaskWebhookNotificationsGetArgs()
        {
        }
        public static new JobTaskForEachTaskTaskWebhookNotificationsGetArgs Empty => new JobTaskForEachTaskTaskWebhookNotificationsGetArgs();
    }
}
