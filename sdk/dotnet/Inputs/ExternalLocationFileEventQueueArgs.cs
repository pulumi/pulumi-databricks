// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class ExternalLocationFileEventQueueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for managed Azure Queue Storage queue.
        /// </summary>
        [Input("managedAqs")]
        public Input<Inputs.ExternalLocationFileEventQueueManagedAqsArgs>? ManagedAqs { get; set; }

        /// <summary>
        /// Configuration for managed Google Cloud Pub/Sub queue.
        /// </summary>
        [Input("managedPubsub")]
        public Input<Inputs.ExternalLocationFileEventQueueManagedPubsubArgs>? ManagedPubsub { get; set; }

        /// <summary>
        /// Configuration for managed Amazon SQS queue.
        /// </summary>
        [Input("managedSqs")]
        public Input<Inputs.ExternalLocationFileEventQueueManagedSqsArgs>? ManagedSqs { get; set; }

        /// <summary>
        /// Configuration for provided Azure Storage Queue.
        /// </summary>
        [Input("providedAqs")]
        public Input<Inputs.ExternalLocationFileEventQueueProvidedAqsArgs>? ProvidedAqs { get; set; }

        /// <summary>
        /// Configuration for provided Google Cloud Pub/Sub queue.
        /// </summary>
        [Input("providedPubsub")]
        public Input<Inputs.ExternalLocationFileEventQueueProvidedPubsubArgs>? ProvidedPubsub { get; set; }

        /// <summary>
        /// Configuration for provided Amazon SQS queue.
        /// </summary>
        [Input("providedSqs")]
        public Input<Inputs.ExternalLocationFileEventQueueProvidedSqsArgs>? ProvidedSqs { get; set; }

        public ExternalLocationFileEventQueueArgs()
        {
        }
        public static new ExternalLocationFileEventQueueArgs Empty => new ExternalLocationFileEventQueueArgs();
    }
}
