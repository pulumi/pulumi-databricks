// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class AccountNetworkPolicyEgressNetworkAccessGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedInternetDestinations")]
        private InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationGetArgs>? _allowedInternetDestinations;

        /// <summary>
        /// List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
        /// </summary>
        public InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationGetArgs> AllowedInternetDestinations
        {
            get => _allowedInternetDestinations ?? (_allowedInternetDestinations = new InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationGetArgs>());
            set => _allowedInternetDestinations = value;
        }

        [Input("allowedStorageDestinations")]
        private InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationGetArgs>? _allowedStorageDestinations;

        /// <summary>
        /// List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
        /// </summary>
        public InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationGetArgs> AllowedStorageDestinations
        {
            get => _allowedStorageDestinations ?? (_allowedStorageDestinations = new InputList<Inputs.AccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationGetArgs>());
            set => _allowedStorageDestinations = value;
        }

        /// <summary>
        /// Optional. When policy_enforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
        /// </summary>
        [Input("policyEnforcement")]
        public Input<Inputs.AccountNetworkPolicyEgressNetworkAccessPolicyEnforcementGetArgs>? PolicyEnforcement { get; set; }

        /// <summary>
        /// The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
        /// </summary>
        [Input("restrictionMode", required: true)]
        public Input<string> RestrictionMode { get; set; } = null!;

        public AccountNetworkPolicyEgressNetworkAccessGetArgs()
        {
        }
        public static new AccountNetworkPolicyEgressNetworkAccessGetArgs Empty => new AccountNetworkPolicyEgressNetworkAccessGetArgs();
    }
}
