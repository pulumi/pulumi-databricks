// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class NotificationDestinationConfigGenericWebhookArgs : global::Pulumi.ResourceArgs
    {
        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password for basic authentication.
        /// 
        /// &gt; **NOTE** If the type of notification destination is changed, the existing notification destination will be deleted and a new notification destination will be created with the new type.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("passwordSet")]
        public Input<bool>? PasswordSet { get; set; }

        [Input("url")]
        private Input<string>? _url;

        /// <summary>
        /// The Generic Webhook URL.
        /// </summary>
        public Input<string>? Url
        {
            get => _url;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _url = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("urlSet")]
        public Input<bool>? UrlSet { get; set; }

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// The username for basic authentication.
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("usernameSet")]
        public Input<bool>? UsernameSet { get; set; }

        public NotificationDestinationConfigGenericWebhookArgs()
        {
        }
        public static new NotificationDestinationConfigGenericWebhookArgs Empty => new NotificationDestinationConfigGenericWebhookArgs();
    }
}
