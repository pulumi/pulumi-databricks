// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedInternetDestinations")]
        private InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestinationInputArgs>? _allowedInternetDestinations;

        /// <summary>
        /// (list of EgressNetworkPolicyInternetAccessPolicyInternetDestination) -
        /// </summary>
        public InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestinationInputArgs> AllowedInternetDestinations
        {
            get => _allowedInternetDestinations ?? (_allowedInternetDestinations = new InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedInternetDestinationInputArgs>());
            set => _allowedInternetDestinations = value;
        }

        [Input("allowedStorageDestinations")]
        private InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestinationInputArgs>? _allowedStorageDestinations;

        /// <summary>
        /// (list of EgressNetworkPolicyInternetAccessPolicyStorageDestination) -
        /// </summary>
        public InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestinationInputArgs> AllowedStorageDestinations
        {
            get => _allowedStorageDestinations ?? (_allowedStorageDestinations = new InputList<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessAllowedStorageDestinationInputArgs>());
            set => _allowedStorageDestinations = value;
        }

        /// <summary>
        /// (EgressNetworkPolicyInternetAccessPolicyLogOnlyMode) - Optional. If not specified, assume the policy is enforced for all workloads
        /// </summary>
        [Input("logOnlyMode")]
        public Input<Inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessLogOnlyModeInputArgs>? LogOnlyMode { get; set; }

        /// <summary>
        /// (string) - . Possible values are: `FULL_ACCESS`, `PRIVATE_ACCESS_ONLY`, `RESTRICTED_ACCESS`
        /// </summary>
        [Input("restrictionMode")]
        public Input<string>? RestrictionMode { get; set; }

        public GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessInputArgs()
        {
        }
        public static new GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessInputArgs Empty => new GetCleanRoomsCleanRoomRemoteDetailedInfoEgressNetworkPolicyInternetAccessInputArgs();
    }
}
