// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetRegisteredModelVersionsModelVersionInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<Inputs.GetRegisteredModelVersionsModelVersionAliasInputArgs>? _aliases;

        /// <summary>
        /// the list of aliases associated with this model. Each item is object consisting of following attributes:
        /// </summary>
        public InputList<Inputs.GetRegisteredModelVersionsModelVersionAliasInputArgs> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<Inputs.GetRegisteredModelVersionsModelVersionAliasInputArgs>());
            set => _aliases = value;
        }

        [Input("browseOnly")]
        public Input<bool>? BrowseOnly { get; set; }

        /// <summary>
        /// The name of the catalog where the schema and the registered model reside.
        /// </summary>
        [Input("catalogName")]
        public Input<string>? CatalogName { get; set; }

        /// <summary>
        /// The comment attached to the registered model.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// the Unix timestamp at the model's creation
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// the identifier of the user who created the model
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The unique identifier of the model version
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// the unique identifier of the metastore
        /// </summary>
        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        [Input("modelName")]
        public Input<string>? ModelName { get; set; }

        [Input("modelVersionDependencies")]
        private InputList<Inputs.GetRegisteredModelVersionsModelVersionModelVersionDependencyInputArgs>? _modelVersionDependencies;

        /// <summary>
        /// block describing model version dependencies, for feature-store packaged models. Consists of following attributes:
        /// </summary>
        public InputList<Inputs.GetRegisteredModelVersionsModelVersionModelVersionDependencyInputArgs> ModelVersionDependencies
        {
            get => _modelVersionDependencies ?? (_modelVersionDependencies = new InputList<Inputs.GetRegisteredModelVersionsModelVersionModelVersionDependencyInputArgs>());
            set => _modelVersionDependencies = value;
        }

        /// <summary>
        /// MLflow run ID used when creating the model version, if `source` was generated by an experiment run stored in an MLflow tracking server
        /// </summary>
        [Input("runId")]
        public Input<string>? RunId { get; set; }

        /// <summary>
        /// ID of the Databricks workspace containing the MLflow run that generated this model version, if applicable
        /// </summary>
        [Input("runWorkspaceId")]
        public Input<int>? RunWorkspaceId { get; set; }

        /// <summary>
        /// The name of the schema where the registered model resides.
        /// </summary>
        [Input("schemaName")]
        public Input<string>? SchemaName { get; set; }

        /// <summary>
        /// URI indicating the location of the source artifacts (files) for the model version.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Current status of the model version.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The storage location under which model version data files are stored.
        /// </summary>
        [Input("storageLocation")]
        public Input<string>? StorageLocation { get; set; }

        /// <summary>
        /// the timestamp of the last time changes were made to the model
        /// </summary>
        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        /// <summary>
        /// the identifier of the user who updated the model last time
        /// </summary>
        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        /// <summary>
        /// Integer model version number, used to reference the model version in API requests.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetRegisteredModelVersionsModelVersionInputArgs()
        {
        }
        public static new GetRegisteredModelVersionsModelVersionInputArgs Empty => new GetRegisteredModelVersionsModelVersionInputArgs();
    }
}
