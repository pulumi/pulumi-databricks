// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetClusterClusterInfoInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<Inputs.GetClusterClusterInfoAutoscaleInputArgs>? Autoscale { get; set; }

        [Input("autoterminationMinutes")]
        public Input<int>? AutoterminationMinutes { get; set; }

        [Input("awsAttributes")]
        public Input<Inputs.GetClusterClusterInfoAwsAttributesInputArgs>? AwsAttributes { get; set; }

        [Input("azureAttributes")]
        public Input<Inputs.GetClusterClusterInfoAzureAttributesInputArgs>? AzureAttributes { get; set; }

        [Input("clusterCores")]
        public Input<double>? ClusterCores { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterLogConf")]
        public Input<Inputs.GetClusterClusterInfoClusterLogConfInputArgs>? ClusterLogConf { get; set; }

        [Input("clusterLogStatus")]
        public Input<Inputs.GetClusterClusterInfoClusterLogStatusInputArgs>? ClusterLogStatus { get; set; }

        [Input("clusterMemoryMb")]
        public Input<int>? ClusterMemoryMb { get; set; }

        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("clusterSource")]
        public Input<string>? ClusterSource { get; set; }

        [Input("creatorUserName")]
        public Input<string>? CreatorUserName { get; set; }

        [Input("customTags")]
        private InputMap<string>? _customTags;
        public InputMap<string> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<string>());
            set => _customTags = value;
        }

        [Input("dataSecurityMode")]
        public Input<string>? DataSecurityMode { get; set; }

        [Input("defaultTags")]
        private InputMap<string>? _defaultTags;
        public InputMap<string> DefaultTags
        {
            get => _defaultTags ?? (_defaultTags = new InputMap<string>());
            set => _defaultTags = value;
        }

        [Input("dockerImage")]
        public Input<Inputs.GetClusterClusterInfoDockerImageInputArgs>? DockerImage { get; set; }

        [Input("driver")]
        public Input<Inputs.GetClusterClusterInfoDriverInputArgs>? Driver { get; set; }

        [Input("driverInstancePoolId")]
        public Input<string>? DriverInstancePoolId { get; set; }

        [Input("driverNodeTypeId")]
        public Input<string>? DriverNodeTypeId { get; set; }

        [Input("enableElasticDisk")]
        public Input<bool>? EnableElasticDisk { get; set; }

        [Input("enableLocalDiskEncryption")]
        public Input<bool>? EnableLocalDiskEncryption { get; set; }

        [Input("executors")]
        private InputList<Inputs.GetClusterClusterInfoExecutorInputArgs>? _executors;
        public InputList<Inputs.GetClusterClusterInfoExecutorInputArgs> Executors
        {
            get => _executors ?? (_executors = new InputList<Inputs.GetClusterClusterInfoExecutorInputArgs>());
            set => _executors = value;
        }

        [Input("gcpAttributes")]
        public Input<Inputs.GetClusterClusterInfoGcpAttributesInputArgs>? GcpAttributes { get; set; }

        [Input("initScripts")]
        private InputList<Inputs.GetClusterClusterInfoInitScriptInputArgs>? _initScripts;
        public InputList<Inputs.GetClusterClusterInfoInitScriptInputArgs> InitScripts
        {
            get => _initScripts ?? (_initScripts = new InputList<Inputs.GetClusterClusterInfoInitScriptInputArgs>());
            set => _initScripts = value;
        }

        [Input("instancePoolId")]
        public Input<string>? InstancePoolId { get; set; }

        [Input("isSingleNode")]
        public Input<bool>? IsSingleNode { get; set; }

        [Input("jdbcPort")]
        public Input<int>? JdbcPort { get; set; }

        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("lastRestartedTime")]
        public Input<int>? LastRestartedTime { get; set; }

        [Input("lastStateLossTime")]
        public Input<int>? LastStateLossTime { get; set; }

        [Input("nodeTypeId")]
        public Input<string>? NodeTypeId { get; set; }

        [Input("numWorkers")]
        public Input<int>? NumWorkers { get; set; }

        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        [Input("runtimeEngine")]
        public Input<string>? RuntimeEngine { get; set; }

        [Input("singleUserName")]
        public Input<string>? SingleUserName { get; set; }

        [Input("sparkConf")]
        private InputMap<string>? _sparkConf;
        public InputMap<string> SparkConf
        {
            get => _sparkConf ?? (_sparkConf = new InputMap<string>());
            set => _sparkConf = value;
        }

        [Input("sparkContextId")]
        public Input<int>? SparkContextId { get; set; }

        [Input("sparkEnvVars")]
        private InputMap<string>? _sparkEnvVars;
        public InputMap<string> SparkEnvVars
        {
            get => _sparkEnvVars ?? (_sparkEnvVars = new InputMap<string>());
            set => _sparkEnvVars = value;
        }

        [Input("sparkVersion")]
        public Input<string>? SparkVersion { get; set; }

        [Input("spec")]
        public Input<Inputs.GetClusterClusterInfoSpecInputArgs>? Spec { get; set; }

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("stateMessage")]
        public Input<string>? StateMessage { get; set; }

        [Input("terminatedTime")]
        public Input<int>? TerminatedTime { get; set; }

        [Input("terminationReason")]
        public Input<Inputs.GetClusterClusterInfoTerminationReasonInputArgs>? TerminationReason { get; set; }

        [Input("useMlRuntime")]
        public Input<bool>? UseMlRuntime { get; set; }

        [Input("workloadType")]
        public Input<Inputs.GetClusterClusterInfoWorkloadTypeInputArgs>? WorkloadType { get; set; }

        public GetClusterClusterInfoInputArgs()
        {
        }
        public static new GetClusterClusterInfoInputArgs Empty => new GetClusterClusterInfoInputArgs();
    }
}
