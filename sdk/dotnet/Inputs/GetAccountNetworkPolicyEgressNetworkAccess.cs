// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetAccountNetworkPolicyEgressNetworkAccessArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowedInternetDestinations")]
        private List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs>? _allowedInternetDestinations;

        /// <summary>
        /// (list of EgressNetworkPolicyNetworkAccessPolicyInternetDestination) - List of internet destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
        /// </summary>
        public List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs> AllowedInternetDestinations
        {
            get => _allowedInternetDestinations ?? (_allowedInternetDestinations = new List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedInternetDestinationArgs>());
            set => _allowedInternetDestinations = value;
        }

        [Input("allowedStorageDestinations")]
        private List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs>? _allowedStorageDestinations;

        /// <summary>
        /// (list of EgressNetworkPolicyNetworkAccessPolicyStorageDestination) - List of storage destinations that serverless workloads are allowed to access when in RESTRICTED_ACCESS mode
        /// </summary>
        public List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs> AllowedStorageDestinations
        {
            get => _allowedStorageDestinations ?? (_allowedStorageDestinations = new List<Inputs.GetAccountNetworkPolicyEgressNetworkAccessAllowedStorageDestinationArgs>());
            set => _allowedStorageDestinations = value;
        }

        /// <summary>
        /// (EgressNetworkPolicyNetworkAccessPolicyPolicyEnforcement) - Optional. When PolicyEnforcement is not provided, we default to ENFORCE_MODE_ALL_SERVICES
        /// </summary>
        [Input("policyEnforcement")]
        public Inputs.GetAccountNetworkPolicyEgressNetworkAccessPolicyEnforcementArgs? PolicyEnforcement { get; set; }

        /// <summary>
        /// (string) - The restriction mode that controls how serverless workloads can access the internet. Possible values are: `FULL_ACCESS`, `RESTRICTED_ACCESS`
        /// </summary>
        [Input("restrictionMode", required: true)]
        public string RestrictionMode { get; set; } = null!;

        public GetAccountNetworkPolicyEgressNetworkAccessArgs()
        {
        }
        public static new GetAccountNetworkPolicyEgressNetworkAccessArgs Empty => new GetAccountNetworkPolicyEgressNetworkAccessArgs();
    }
}
