// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Inputs
{

    public sealed class GetCurrentMetastoreMetastoreInfoArgs : global::Pulumi.InvokeArgs
    {
        [Input("cloud")]
        public string? Cloud { get; set; }

        [Input("createdAt")]
        public int? CreatedAt { get; set; }

        [Input("createdBy")]
        public string? CreatedBy { get; set; }

        [Input("defaultDataAccessConfigId")]
        public string? DefaultDataAccessConfigId { get; set; }

        [Input("deltaSharingOrganizationName")]
        public string? DeltaSharingOrganizationName { get; set; }

        [Input("deltaSharingRecipientTokenLifetimeInSeconds")]
        public int? DeltaSharingRecipientTokenLifetimeInSeconds { get; set; }

        [Input("deltaSharingScope")]
        public string? DeltaSharingScope { get; set; }

        [Input("externalAccessEnabled")]
        public bool? ExternalAccessEnabled { get; set; }

        [Input("globalMetastoreId")]
        public string? GlobalMetastoreId { get; set; }

        [Input("metastoreId")]
        public string? MetastoreId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("owner")]
        public string? Owner { get; set; }

        [Input("privilegeModelVersion")]
        public string? PrivilegeModelVersion { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("storageRoot")]
        public string? StorageRoot { get; set; }

        [Input("storageRootCredentialId")]
        public string? StorageRootCredentialId { get; set; }

        [Input("storageRootCredentialName")]
        public string? StorageRootCredentialName { get; set; }

        [Input("updatedAt")]
        public int? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public string? UpdatedBy { get; set; }

        public GetCurrentMetastoreMetastoreInfoArgs()
        {
        }
        public static new GetCurrentMetastoreMetastoreInfoArgs Empty => new GetCurrentMetastoreMetastoreInfoArgs();
    }
}
