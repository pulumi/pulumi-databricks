// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/clusterPolicy:ClusterPolicy")]
    public partial class ClusterPolicy : global::Pulumi.CustomResource
    {
        [Output("definition")]
        public Output<string> Definition { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("libraries")]
        public Output<ImmutableArray<Outputs.ClusterPolicyLibrary>> Libraries { get; private set; } = null!;

        [Output("maxClustersPerUser")]
        public Output<int?> MaxClustersPerUser { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("policyFamilyDefinitionOverrides")]
        public Output<string?> PolicyFamilyDefinitionOverrides { get; private set; } = null!;

        [Output("policyFamilyId")]
        public Output<string?> PolicyFamilyId { get; private set; } = null!;

        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterPolicy(string name, ClusterPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/clusterPolicy:ClusterPolicy", name, args ?? new ClusterPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterPolicy(string name, Input<string> id, ClusterPolicyState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/clusterPolicy:ClusterPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterPolicy Get(string name, Input<string> id, ClusterPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterPolicy(name, id, state, options);
        }
    }

    public sealed class ClusterPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("definition")]
        public Input<string>? Definition { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("libraries")]
        private InputList<Inputs.ClusterPolicyLibraryArgs>? _libraries;
        public InputList<Inputs.ClusterPolicyLibraryArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.ClusterPolicyLibraryArgs>());
            set => _libraries = value;
        }

        [Input("maxClustersPerUser")]
        public Input<int>? MaxClustersPerUser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyFamilyDefinitionOverrides")]
        public Input<string>? PolicyFamilyDefinitionOverrides { get; set; }

        [Input("policyFamilyId")]
        public Input<string>? PolicyFamilyId { get; set; }

        public ClusterPolicyArgs()
        {
        }
        public static new ClusterPolicyArgs Empty => new ClusterPolicyArgs();
    }

    public sealed class ClusterPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("definition")]
        public Input<string>? Definition { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("libraries")]
        private InputList<Inputs.ClusterPolicyLibraryGetArgs>? _libraries;
        public InputList<Inputs.ClusterPolicyLibraryGetArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.ClusterPolicyLibraryGetArgs>());
            set => _libraries = value;
        }

        [Input("maxClustersPerUser")]
        public Input<int>? MaxClustersPerUser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyFamilyDefinitionOverrides")]
        public Input<string>? PolicyFamilyDefinitionOverrides { get; set; }

        [Input("policyFamilyId")]
        public Input<string>? PolicyFamilyId { get; set; }

        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        public ClusterPolicyState()
        {
        }
        public static new ClusterPolicyState Empty => new ClusterPolicyState();
    }
}
