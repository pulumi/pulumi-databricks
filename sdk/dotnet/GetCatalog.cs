// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetCatalog
    {
        public static Task<GetCatalogResult> InvokeAsync(GetCatalogArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCatalogResult>("databricks:index/getCatalog:getCatalog", args ?? new GetCatalogArgs(), options.WithDefaults());

        public static Output<GetCatalogResult> Invoke(GetCatalogInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCatalogResult>("databricks:index/getCatalog:getCatalog", args ?? new GetCatalogInvokeArgs(), options.WithDefaults());

        public static Output<GetCatalogResult> Invoke(GetCatalogInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCatalogResult>("databricks:index/getCatalog:getCatalog", args ?? new GetCatalogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCatalogArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalogInfo")]
        public Inputs.GetCatalogCatalogInfoArgs? CatalogInfo { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCatalogArgs()
        {
        }
        public static new GetCatalogArgs Empty => new GetCatalogArgs();
    }

    public sealed class GetCatalogInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalogInfo")]
        public Input<Inputs.GetCatalogCatalogInfoInputArgs>? CatalogInfo { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCatalogInvokeArgs()
        {
        }
        public static new GetCatalogInvokeArgs Empty => new GetCatalogInvokeArgs();
    }


    [OutputType]
    public sealed class GetCatalogResult
    {
        public readonly Outputs.GetCatalogCatalogInfoResult CatalogInfo;
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetCatalogResult(
            Outputs.GetCatalogCatalogInfoResult catalogInfo,

            string id,

            string name)
        {
            CatalogInfo = catalogInfo;
            Id = id;
            Name = name;
        }
    }
}
