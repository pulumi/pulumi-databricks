// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetMwsWorkspaces
    {
        /// <summary>
        /// Lists all databricks.MwsWorkspaces in Databricks Account.
        /// 
        /// &gt; This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Listing all workspaces in
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetMwsWorkspaces.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allMwsWorkspaces"] = all.Apply(getMwsWorkspacesResult =&gt; getMwsWorkspacesResult.Ids),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.MwsWorkspaces to manage Databricks Workspaces on AWS and GCP.
        /// * databricks.MetastoreAssignment to assign databricks.Metastore to databricks.MwsWorkspaces or AzurermDatabricksWorkspace
        /// </summary>
        public static Task<GetMwsWorkspacesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMwsWorkspacesResult>("databricks:index/getMwsWorkspaces:getMwsWorkspaces", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Lists all databricks.MwsWorkspaces in Databricks Account.
        /// 
        /// &gt; This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Listing all workspaces in
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetMwsWorkspaces.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allMwsWorkspaces"] = all.Apply(getMwsWorkspacesResult =&gt; getMwsWorkspacesResult.Ids),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.MwsWorkspaces to manage Databricks Workspaces on AWS and GCP.
        /// * databricks.MetastoreAssignment to assign databricks.Metastore to databricks.MwsWorkspaces or AzurermDatabricksWorkspace
        /// </summary>
        public static Output<GetMwsWorkspacesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMwsWorkspacesResult>("databricks:index/getMwsWorkspaces:getMwsWorkspaces", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Lists all databricks.MwsWorkspaces in Databricks Account.
        /// 
        /// &gt; This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Listing all workspaces in
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetMwsWorkspaces.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allMwsWorkspaces"] = all.Apply(getMwsWorkspacesResult =&gt; getMwsWorkspacesResult.Ids),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.MwsWorkspaces to manage Databricks Workspaces on AWS and GCP.
        /// * databricks.MetastoreAssignment to assign databricks.Metastore to databricks.MwsWorkspaces or AzurermDatabricksWorkspace
        /// </summary>
        public static Output<GetMwsWorkspacesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMwsWorkspacesResult>("databricks:index/getMwsWorkspaces:getMwsWorkspaces", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetMwsWorkspacesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// name-to-id map for all of the workspaces in the account
        /// </summary>
        public readonly ImmutableDictionary<string, string> Ids;

        [OutputConstructor]
        private GetMwsWorkspacesResult(
            string id,

            ImmutableDictionary<string, string> ids)
        {
            Id = id;
            Ids = ids;
        }
    }
}
