// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/app:App")]
    public partial class App : global::Pulumi.CustomResource
    {
        [Output("activeDeployment")]
        public Output<Outputs.AppActiveDeployment> ActiveDeployment { get; private set; } = null!;

        [Output("appStatus")]
        public Output<Outputs.AppAppStatus> AppStatus { get; private set; } = null!;

        [Output("computeStatus")]
        public Output<Outputs.AppComputeStatus> ComputeStatus { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("creator")]
        public Output<string> Creator { get; private set; } = null!;

        [Output("defaultSourceCodePath")]
        public Output<string> DefaultSourceCodePath { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pendingDeployment")]
        public Output<Outputs.AppPendingDeployment> PendingDeployment { get; private set; } = null!;

        [Output("resources")]
        public Output<ImmutableArray<Outputs.AppResource>> Resources { get; private set; } = null!;

        [Output("servicePrincipalClientId")]
        public Output<string> ServicePrincipalClientId { get; private set; } = null!;

        [Output("servicePrincipalId")]
        public Output<int> ServicePrincipalId { get; private set; } = null!;

        [Output("servicePrincipalName")]
        public Output<string> ServicePrincipalName { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("updater")]
        public Output<string> Updater { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a App resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public App(string name, AppArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/app:App", name, args ?? new AppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private App(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/app:App", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing App resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static App Get(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
        {
            return new App(name, id, state, options);
        }
    }

    public sealed class AppArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resources")]
        private InputList<Inputs.AppResourceArgs>? _resources;
        public InputList<Inputs.AppResourceArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.AppResourceArgs>());
            set => _resources = value;
        }

        public AppArgs()
        {
        }
        public static new AppArgs Empty => new AppArgs();
    }

    public sealed class AppState : global::Pulumi.ResourceArgs
    {
        [Input("activeDeployment")]
        public Input<Inputs.AppActiveDeploymentGetArgs>? ActiveDeployment { get; set; }

        [Input("appStatus")]
        public Input<Inputs.AppAppStatusGetArgs>? AppStatus { get; set; }

        [Input("computeStatus")]
        public Input<Inputs.AppComputeStatusGetArgs>? ComputeStatus { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("creator")]
        public Input<string>? Creator { get; set; }

        [Input("defaultSourceCodePath")]
        public Input<string>? DefaultSourceCodePath { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pendingDeployment")]
        public Input<Inputs.AppPendingDeploymentGetArgs>? PendingDeployment { get; set; }

        [Input("resources")]
        private InputList<Inputs.AppResourceGetArgs>? _resources;
        public InputList<Inputs.AppResourceGetArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.AppResourceGetArgs>());
            set => _resources = value;
        }

        [Input("servicePrincipalClientId")]
        public Input<string>? ServicePrincipalClientId { get; set; }

        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        [Input("servicePrincipalName")]
        public Input<string>? ServicePrincipalName { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("updater")]
        public Input<string>? Updater { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public AppState()
        {
        }
        public static new AppState Empty => new AppState();
    }
}
