// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// Service principal federation policies allow automated workloads running outside of Databricks to access Databricks APIs without the need for Databricks secrets. Your application (workload) authenticates to Databricks as a Databricks service principal using tokens issued by the workload runtime, for example Github Actions.
    /// 
    /// A service principal federation policy is associated with a service principal in your Databricks account, and specifies:
    /// * The identity provider (or issuer) from which the service principal can authenticate.
    /// * The workload identity (or subject) that is permitted to authenticate as the Databricks service principal.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.ServicePrincipalFederationPolicy("this", new()
    ///     {
    ///         ServicePrincipalId = 1234,
    ///         PolicyId = "my-policy",
    ///         OidcPolicy = new Databricks.Inputs.ServicePrincipalFederationPolicyOidcPolicyArgs
    ///         {
    ///             Issuer = "https://myidp.example.com",
    ///             Subject_claim = "sub",
    ///             Subject = "subject-in-token-from-myidp",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// As of Pulumi v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = "service_principal_id,policy_id"
    /// 
    ///   to = databricks_service_principal_federation_policy.this
    /// 
    /// }
    /// 
    /// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy databricks_service_principal_federation_policy "service_principal_id,policy_id"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy")]
    public partial class ServicePrincipalFederationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (string) - Creation time of the federation policy
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (string) - Resource name for the federation policy. Example values include
        /// `accounts/&lt;account-id&gt;/federationPolicies/my-federation-policy` for Account Federation Policies, and
        /// `accounts/&lt;account-id&gt;/servicePrincipals/&lt;service-principal-id&gt;/federationPolicies/my-federation-policy`
        /// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
        /// specified in create or update requests. If specified in a request, must match the value in the
        /// request URL
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("oidcPolicy")]
        public Output<Outputs.ServicePrincipalFederationPolicyOidcPolicy?> OidcPolicy { get; private set; } = null!;

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Output("servicePrincipalId")]
        public Output<int> ServicePrincipalId { get; private set; } = null!;

        /// <summary>
        /// (string) - Unique, immutable id of the federation policy
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// (string) - Last update time of the federation policy
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ServicePrincipalFederationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicePrincipalFederationPolicy(string name, ServicePrincipalFederationPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy", name, args ?? new ServicePrincipalFederationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServicePrincipalFederationPolicy(string name, Input<string> id, ServicePrincipalFederationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicePrincipalFederationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicePrincipalFederationPolicy Get(string name, Input<string> id, ServicePrincipalFederationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicePrincipalFederationPolicy(name, id, state, options);
        }
    }

    public sealed class ServicePrincipalFederationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("oidcPolicy")]
        public Input<Inputs.ServicePrincipalFederationPolicyOidcPolicyArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        public ServicePrincipalFederationPolicyArgs()
        {
        }
        public static new ServicePrincipalFederationPolicyArgs Empty => new ServicePrincipalFederationPolicyArgs();
    }

    public sealed class ServicePrincipalFederationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string) - Creation time of the federation policy
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (string) - Resource name for the federation policy. Example values include
        /// `accounts/&lt;account-id&gt;/federationPolicies/my-federation-policy` for Account Federation Policies, and
        /// `accounts/&lt;account-id&gt;/servicePrincipals/&lt;service-principal-id&gt;/federationPolicies/my-federation-policy`
        /// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
        /// specified in create or update requests. If specified in a request, must match the value in the
        /// request URL
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oidcPolicy")]
        public Input<Inputs.ServicePrincipalFederationPolicyOidcPolicyGetArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        /// <summary>
        /// (string) - Unique, immutable id of the federation policy
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// (string) - Last update time of the federation policy
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ServicePrincipalFederationPolicyState()
        {
        }
        public static new ServicePrincipalFederationPolicyState Empty => new ServicePrincipalFederationPolicyState();
    }
}
