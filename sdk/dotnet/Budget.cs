// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// This resource allows you to manage [Databricks Budgets](https://docs.databricks.com/en/admin/account-settings/budgets.html).
    /// 
    /// &gt; This feature is in [Public Preview](https://docs.databricks.com/release-notes/release-types.html).
    /// 
    /// &gt; This resource can only be used with an account-level provider!
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.Budget("this", new()
    ///     {
    ///         DisplayName = "databricks-workspace-budget",
    ///         AlertConfigurations = new[]
    ///         {
    ///             new Databricks.Inputs.BudgetAlertConfigurationArgs
    ///             {
    ///                 TimePeriod = "MONTH",
    ///                 TriggerType = "CUMULATIVE_SPENDING_EXCEEDED",
    ///                 QuantityType = "LIST_PRICE_DOLLARS_USD",
    ///                 QuantityThreshold = "840",
    ///                 ActionConfigurations = new[]
    ///                 {
    ///                     new Databricks.Inputs.BudgetAlertConfigurationActionConfigurationArgs
    ///                     {
    ///                         ActionType = "EMAIL_NOTIFICATION",
    ///                         Target = "abc@gmail.com",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Filter = new Databricks.Inputs.BudgetFilterArgs
    ///         {
    ///             WorkspaceId = new Databricks.Inputs.BudgetFilterWorkspaceIdArgs
    ///             {
    ///                 Operator = "IN",
    ///                 Values = new[]
    ///                 {
    ///                     1234567890098765,
    ///                 },
    ///             },
    ///             Tags = new[]
    ///             {
    ///                 new Databricks.Inputs.BudgetFilterTagArgs
    ///                 {
    ///                     Key = "Team",
    ///                     Value = new Databricks.Inputs.BudgetFilterTagValueArgs
    ///                     {
    ///                         Operator = "IN",
    ///                         Values = new[]
    ///                         {
    ///                             "Data Science",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Databricks.Inputs.BudgetFilterTagArgs
    ///                 {
    ///                     Key = "Environment",
    ///                     Value = new Databricks.Inputs.BudgetFilterTagValueArgs
    ///                     {
    ///                         Operator = "IN",
    ///                         Values = new[]
    ///                         {
    ///                             "Development",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are used in the context:
    /// 
    /// * databricks.MwsWorkspaces to set up Databricks workspaces.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by Databricks account ID and Budget.
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/budget:Budget this '&lt;account_id&gt;|&lt;budget_configuration_id&gt;'
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/budget:Budget")]
    public partial class Budget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Databricks Account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("alertConfigurations")]
        public Output<ImmutableArray<Outputs.BudgetAlertConfiguration>> AlertConfigurations { get; private set; } = null!;

        /// <summary>
        /// The ID of the budget configuration.
        /// </summary>
        [Output("budgetConfigurationId")]
        public Output<string> BudgetConfigurationId { get; private set; } = null!;

        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Name of the budget in Databricks Account.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        [Output("filter")]
        public Output<Outputs.BudgetFilter?> Filter { get; private set; } = null!;

        [Output("updateTime")]
        public Output<int> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Budget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Budget(string name, BudgetArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/budget:Budget", name, args ?? new BudgetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Budget(string name, Input<string> id, BudgetState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/budget:Budget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Budget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Budget Get(string name, Input<string> id, BudgetState? state = null, CustomResourceOptions? options = null)
        {
            return new Budget(name, id, state, options);
        }
    }

    public sealed class BudgetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Databricks Account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("alertConfigurations")]
        private InputList<Inputs.BudgetAlertConfigurationArgs>? _alertConfigurations;
        public InputList<Inputs.BudgetAlertConfigurationArgs> AlertConfigurations
        {
            get => _alertConfigurations ?? (_alertConfigurations = new InputList<Inputs.BudgetAlertConfigurationArgs>());
            set => _alertConfigurations = value;
        }

        /// <summary>
        /// The ID of the budget configuration.
        /// </summary>
        [Input("budgetConfigurationId")]
        public Input<string>? BudgetConfigurationId { get; set; }

        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// Name of the budget in Databricks Account.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filter")]
        public Input<Inputs.BudgetFilterArgs>? Filter { get; set; }

        [Input("updateTime")]
        public Input<int>? UpdateTime { get; set; }

        public BudgetArgs()
        {
        }
        public static new BudgetArgs Empty => new BudgetArgs();
    }

    public sealed class BudgetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Databricks Account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("alertConfigurations")]
        private InputList<Inputs.BudgetAlertConfigurationGetArgs>? _alertConfigurations;
        public InputList<Inputs.BudgetAlertConfigurationGetArgs> AlertConfigurations
        {
            get => _alertConfigurations ?? (_alertConfigurations = new InputList<Inputs.BudgetAlertConfigurationGetArgs>());
            set => _alertConfigurations = value;
        }

        /// <summary>
        /// The ID of the budget configuration.
        /// </summary>
        [Input("budgetConfigurationId")]
        public Input<string>? BudgetConfigurationId { get; set; }

        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// Name of the budget in Databricks Account.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filter")]
        public Input<Inputs.BudgetFilterGetArgs>? Filter { get; set; }

        [Input("updateTime")]
        public Input<int>? UpdateTime { get; set; }

        public BudgetState()
        {
        }
        public static new BudgetState Empty => new BudgetState();
    }
}
