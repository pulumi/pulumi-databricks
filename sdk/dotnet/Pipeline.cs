// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/pipeline:Pipeline")]
    public partial class Pipeline : global::Pulumi.CustomResource
    {
        [Output("allowDuplicateNames")]
        public Output<bool?> AllowDuplicateNames { get; private set; } = null!;

        [Output("budgetPolicyId")]
        public Output<string?> BudgetPolicyId { get; private set; } = null!;

        [Output("catalog")]
        public Output<string?> Catalog { get; private set; } = null!;

        [Output("cause")]
        public Output<string> Cause { get; private set; } = null!;

        [Output("channel")]
        public Output<string?> Channel { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("clusters")]
        public Output<ImmutableArray<Outputs.PipelineCluster>> Clusters { get; private set; } = null!;

        [Output("configuration")]
        public Output<ImmutableDictionary<string, string>?> Configuration { get; private set; } = null!;

        [Output("continuous")]
        public Output<bool?> Continuous { get; private set; } = null!;

        [Output("creatorUserName")]
        public Output<string> CreatorUserName { get; private set; } = null!;

        [Output("deployment")]
        public Output<Outputs.PipelineDeployment?> Deployment { get; private set; } = null!;

        [Output("development")]
        public Output<bool?> Development { get; private set; } = null!;

        [Output("edition")]
        public Output<string?> Edition { get; private set; } = null!;

        [Output("expectedLastModified")]
        public Output<int?> ExpectedLastModified { get; private set; } = null!;

        [Output("filters")]
        public Output<Outputs.PipelineFilters?> Filters { get; private set; } = null!;

        [Output("gatewayDefinition")]
        public Output<Outputs.PipelineGatewayDefinition?> GatewayDefinition { get; private set; } = null!;

        [Output("health")]
        public Output<string> Health { get; private set; } = null!;

        [Output("ingestionDefinition")]
        public Output<Outputs.PipelineIngestionDefinition?> IngestionDefinition { get; private set; } = null!;

        [Output("lastModified")]
        public Output<int> LastModified { get; private set; } = null!;

        [Output("latestUpdates")]
        public Output<ImmutableArray<Outputs.PipelineLatestUpdate>> LatestUpdates { get; private set; } = null!;

        [Output("libraries")]
        public Output<ImmutableArray<Outputs.PipelineLibrary>> Libraries { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notifications")]
        public Output<ImmutableArray<Outputs.PipelineNotification>> Notifications { get; private set; } = null!;

        [Output("photon")]
        public Output<bool?> Photon { get; private set; } = null!;

        [Output("restartWindow")]
        public Output<Outputs.PipelineRestartWindow?> RestartWindow { get; private set; } = null!;

        [Output("runAsUserName")]
        public Output<string> RunAsUserName { get; private set; } = null!;

        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        [Output("serverless")]
        public Output<bool?> Serverless { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("storage")]
        public Output<string?> Storage { get; private set; } = null!;

        [Output("target")]
        public Output<string?> Target { get; private set; } = null!;

        [Output("trigger")]
        public Output<Outputs.PipelineTrigger?> Trigger { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/pipeline:Pipeline", name, args ?? new PipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/pipeline:Pipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, state, options);
        }
    }

    public sealed class PipelineArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowDuplicateNames")]
        public Input<bool>? AllowDuplicateNames { get; set; }

        [Input("budgetPolicyId")]
        public Input<string>? BudgetPolicyId { get; set; }

        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("cause")]
        public Input<string>? Cause { get; set; }

        [Input("channel")]
        public Input<string>? Channel { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusters")]
        private InputList<Inputs.PipelineClusterArgs>? _clusters;
        public InputList<Inputs.PipelineClusterArgs> Clusters
        {
            get => _clusters ?? (_clusters = new InputList<Inputs.PipelineClusterArgs>());
            set => _clusters = value;
        }

        [Input("configuration")]
        private InputMap<string>? _configuration;
        public InputMap<string> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<string>());
            set => _configuration = value;
        }

        [Input("continuous")]
        public Input<bool>? Continuous { get; set; }

        [Input("creatorUserName")]
        public Input<string>? CreatorUserName { get; set; }

        [Input("deployment")]
        public Input<Inputs.PipelineDeploymentArgs>? Deployment { get; set; }

        [Input("development")]
        public Input<bool>? Development { get; set; }

        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("expectedLastModified")]
        public Input<int>? ExpectedLastModified { get; set; }

        [Input("filters")]
        public Input<Inputs.PipelineFiltersArgs>? Filters { get; set; }

        [Input("gatewayDefinition")]
        public Input<Inputs.PipelineGatewayDefinitionArgs>? GatewayDefinition { get; set; }

        [Input("health")]
        public Input<string>? Health { get; set; }

        [Input("ingestionDefinition")]
        public Input<Inputs.PipelineIngestionDefinitionArgs>? IngestionDefinition { get; set; }

        [Input("lastModified")]
        public Input<int>? LastModified { get; set; }

        [Input("latestUpdates")]
        private InputList<Inputs.PipelineLatestUpdateArgs>? _latestUpdates;
        public InputList<Inputs.PipelineLatestUpdateArgs> LatestUpdates
        {
            get => _latestUpdates ?? (_latestUpdates = new InputList<Inputs.PipelineLatestUpdateArgs>());
            set => _latestUpdates = value;
        }

        [Input("libraries")]
        private InputList<Inputs.PipelineLibraryArgs>? _libraries;
        public InputList<Inputs.PipelineLibraryArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.PipelineLibraryArgs>());
            set => _libraries = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications")]
        private InputList<Inputs.PipelineNotificationArgs>? _notifications;
        public InputList<Inputs.PipelineNotificationArgs> Notifications
        {
            get => _notifications ?? (_notifications = new InputList<Inputs.PipelineNotificationArgs>());
            set => _notifications = value;
        }

        [Input("photon")]
        public Input<bool>? Photon { get; set; }

        [Input("restartWindow")]
        public Input<Inputs.PipelineRestartWindowArgs>? RestartWindow { get; set; }

        [Input("runAsUserName")]
        public Input<string>? RunAsUserName { get; set; }

        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("serverless")]
        public Input<bool>? Serverless { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("storage")]
        public Input<string>? Storage { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("trigger")]
        public Input<Inputs.PipelineTriggerArgs>? Trigger { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public PipelineArgs()
        {
        }
        public static new PipelineArgs Empty => new PipelineArgs();
    }

    public sealed class PipelineState : global::Pulumi.ResourceArgs
    {
        [Input("allowDuplicateNames")]
        public Input<bool>? AllowDuplicateNames { get; set; }

        [Input("budgetPolicyId")]
        public Input<string>? BudgetPolicyId { get; set; }

        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("cause")]
        public Input<string>? Cause { get; set; }

        [Input("channel")]
        public Input<string>? Channel { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusters")]
        private InputList<Inputs.PipelineClusterGetArgs>? _clusters;
        public InputList<Inputs.PipelineClusterGetArgs> Clusters
        {
            get => _clusters ?? (_clusters = new InputList<Inputs.PipelineClusterGetArgs>());
            set => _clusters = value;
        }

        [Input("configuration")]
        private InputMap<string>? _configuration;
        public InputMap<string> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<string>());
            set => _configuration = value;
        }

        [Input("continuous")]
        public Input<bool>? Continuous { get; set; }

        [Input("creatorUserName")]
        public Input<string>? CreatorUserName { get; set; }

        [Input("deployment")]
        public Input<Inputs.PipelineDeploymentGetArgs>? Deployment { get; set; }

        [Input("development")]
        public Input<bool>? Development { get; set; }

        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("expectedLastModified")]
        public Input<int>? ExpectedLastModified { get; set; }

        [Input("filters")]
        public Input<Inputs.PipelineFiltersGetArgs>? Filters { get; set; }

        [Input("gatewayDefinition")]
        public Input<Inputs.PipelineGatewayDefinitionGetArgs>? GatewayDefinition { get; set; }

        [Input("health")]
        public Input<string>? Health { get; set; }

        [Input("ingestionDefinition")]
        public Input<Inputs.PipelineIngestionDefinitionGetArgs>? IngestionDefinition { get; set; }

        [Input("lastModified")]
        public Input<int>? LastModified { get; set; }

        [Input("latestUpdates")]
        private InputList<Inputs.PipelineLatestUpdateGetArgs>? _latestUpdates;
        public InputList<Inputs.PipelineLatestUpdateGetArgs> LatestUpdates
        {
            get => _latestUpdates ?? (_latestUpdates = new InputList<Inputs.PipelineLatestUpdateGetArgs>());
            set => _latestUpdates = value;
        }

        [Input("libraries")]
        private InputList<Inputs.PipelineLibraryGetArgs>? _libraries;
        public InputList<Inputs.PipelineLibraryGetArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.PipelineLibraryGetArgs>());
            set => _libraries = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications")]
        private InputList<Inputs.PipelineNotificationGetArgs>? _notifications;
        public InputList<Inputs.PipelineNotificationGetArgs> Notifications
        {
            get => _notifications ?? (_notifications = new InputList<Inputs.PipelineNotificationGetArgs>());
            set => _notifications = value;
        }

        [Input("photon")]
        public Input<bool>? Photon { get; set; }

        [Input("restartWindow")]
        public Input<Inputs.PipelineRestartWindowGetArgs>? RestartWindow { get; set; }

        [Input("runAsUserName")]
        public Input<string>? RunAsUserName { get; set; }

        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("serverless")]
        public Input<bool>? Serverless { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("storage")]
        public Input<string>? Storage { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("trigger")]
        public Input<Inputs.PipelineTriggerGetArgs>? Trigger { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public PipelineState()
        {
        }
        public static new PipelineState Empty => new PipelineState();
    }
}
