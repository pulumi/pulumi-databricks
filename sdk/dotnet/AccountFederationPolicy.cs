// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// Account federation policies allow users and service principals in your Databricks account to securely access Databricks APIs using tokens from your trusted identity providers (IdPs).
    /// 
    /// Token federation policies eliminate the need to manage Databricks secrets, and allow you to centralize management of token issuance policies in your IdP. Databricks token federation policies are typically used in combination with [SCIM](https://www.terraform.io/admin/users-groups/scim/index.html), so users in your IdP are synchronized into your Databricks account.
    /// 
    /// An account federation policy specifies:
    /// * which IdP, or issuer, your Databricks account should accept tokens from
    /// * how to determine which Databricks user, or subject, a token is issued for
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.AccountFederationPolicy("this", new()
    ///     {
    ///         PolicyId = "my-policy",
    ///         OidcPolicy = new Databricks.Inputs.AccountFederationPolicyOidcPolicyArgs
    ///         {
    ///             Issuer = "https://myidp.example.com",
    ///             Subject_claim = "sub",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// As of Pulumi v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = "policy_id"
    /// 
    ///   to = databricks_account_federation_policy.this
    /// 
    /// }
    /// 
    /// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/accountFederationPolicy:AccountFederationPolicy databricks_account_federation_policy "policy_id"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/accountFederationPolicy:AccountFederationPolicy")]
    public partial class AccountFederationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (string) - Creation time of the federation policy
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (string) - Resource name for the federation policy. Example values include
        /// `accounts/&lt;account-id&gt;/federationPolicies/my-federation-policy` for Account Federation Policies, and
        /// `accounts/&lt;account-id&gt;/servicePrincipals/&lt;service-principal-id&gt;/federationPolicies/my-federation-policy`
        /// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
        /// specified in create or update requests. If specified in a request, must match the value in the
        /// request URL
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("oidcPolicy")]
        public Output<Outputs.AccountFederationPolicyOidcPolicy?> OidcPolicy { get; private set; } = null!;

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Output("servicePrincipalId")]
        public Output<int> ServicePrincipalId { get; private set; } = null!;

        /// <summary>
        /// (string) - Unique, immutable id of the federation policy
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// (string) - Last update time of the federation policy
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a AccountFederationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountFederationPolicy(string name, AccountFederationPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/accountFederationPolicy:AccountFederationPolicy", name, args ?? new AccountFederationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountFederationPolicy(string name, Input<string> id, AccountFederationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/accountFederationPolicy:AccountFederationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountFederationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountFederationPolicy Get(string name, Input<string> id, AccountFederationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountFederationPolicy(name, id, state, options);
        }
    }

    public sealed class AccountFederationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("oidcPolicy")]
        public Input<Inputs.AccountFederationPolicyOidcPolicyArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        public AccountFederationPolicyArgs()
        {
        }
        public static new AccountFederationPolicyArgs Empty => new AccountFederationPolicyArgs();
    }

    public sealed class AccountFederationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string) - Creation time of the federation policy
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description of the federation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (string) - Resource name for the federation policy. Example values include
        /// `accounts/&lt;account-id&gt;/federationPolicies/my-federation-policy` for Account Federation Policies, and
        /// `accounts/&lt;account-id&gt;/servicePrincipals/&lt;service-principal-id&gt;/federationPolicies/my-federation-policy`
        /// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
        /// specified in create or update requests. If specified in a request, must match the value in the
        /// request URL
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oidcPolicy")]
        public Input<Inputs.AccountFederationPolicyOidcPolicyGetArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        /// <summary>
        /// (string) - Unique, immutable id of the federation policy
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// (string) - Last update time of the federation policy
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public AccountFederationPolicyState()
        {
        }
        public static new AccountFederationPolicyState Empty => new AccountFederationPolicyState();
    }
}
