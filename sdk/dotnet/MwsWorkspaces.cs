// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/mwsWorkspaces:MwsWorkspaces")]
    public partial class MwsWorkspaces : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("awsRegion")]
        public Output<string?> AwsRegion { get; private set; } = null!;

        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        [Output("cloudResourceContainer")]
        public Output<Outputs.MwsWorkspacesCloudResourceContainer?> CloudResourceContainer { get; private set; } = null!;

        [Output("creationTime")]
        public Output<int> CreationTime { get; private set; } = null!;

        [Output("credentialsId")]
        public Output<string?> CredentialsId { get; private set; } = null!;

        [Output("customTags")]
        public Output<ImmutableDictionary<string, string>?> CustomTags { get; private set; } = null!;

        [Output("customerManagedKeyId")]
        public Output<string?> CustomerManagedKeyId { get; private set; } = null!;

        [Output("deploymentName")]
        public Output<string?> DeploymentName { get; private set; } = null!;

        [Output("externalCustomerInfo")]
        public Output<Outputs.MwsWorkspacesExternalCustomerInfo?> ExternalCustomerInfo { get; private set; } = null!;

        [Output("gcpManagedNetworkConfig")]
        public Output<Outputs.MwsWorkspacesGcpManagedNetworkConfig?> GcpManagedNetworkConfig { get; private set; } = null!;

        [Output("gcpWorkspaceSa")]
        public Output<string> GcpWorkspaceSa { get; private set; } = null!;

        [Output("gkeConfig")]
        public Output<Outputs.MwsWorkspacesGkeConfig?> GkeConfig { get; private set; } = null!;

        [Output("isNoPublicIpEnabled")]
        public Output<bool?> IsNoPublicIpEnabled { get; private set; } = null!;

        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        [Output("managedServicesCustomerManagedKeyId")]
        public Output<string?> ManagedServicesCustomerManagedKeyId { get; private set; } = null!;

        [Output("networkId")]
        public Output<string?> NetworkId { get; private set; } = null!;

        [Output("pricingTier")]
        public Output<string> PricingTier { get; private set; } = null!;

        [Output("privateAccessSettingsId")]
        public Output<string?> PrivateAccessSettingsId { get; private set; } = null!;

        [Output("storageConfigurationId")]
        public Output<string?> StorageConfigurationId { get; private set; } = null!;

        [Output("storageCustomerManagedKeyId")]
        public Output<string?> StorageCustomerManagedKeyId { get; private set; } = null!;

        [Output("token")]
        public Output<Outputs.MwsWorkspacesToken?> Token { get; private set; } = null!;

        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;

        [Output("workspaceName")]
        public Output<string> WorkspaceName { get; private set; } = null!;

        [Output("workspaceStatus")]
        public Output<string> WorkspaceStatus { get; private set; } = null!;

        [Output("workspaceStatusMessage")]
        public Output<string> WorkspaceStatusMessage { get; private set; } = null!;

        [Output("workspaceUrl")]
        public Output<string> WorkspaceUrl { get; private set; } = null!;


        /// <summary>
        /// Create a MwsWorkspaces resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MwsWorkspaces(string name, MwsWorkspacesArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/mwsWorkspaces:MwsWorkspaces", name, args ?? new MwsWorkspacesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MwsWorkspaces(string name, Input<string> id, MwsWorkspacesState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mwsWorkspaces:MwsWorkspaces", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accountId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MwsWorkspaces resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MwsWorkspaces Get(string name, Input<string> id, MwsWorkspacesState? state = null, CustomResourceOptions? options = null)
        {
            return new MwsWorkspaces(name, id, state, options);
        }
    }

    public sealed class MwsWorkspacesArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        private Input<string>? _accountId;
        public Input<string>? AccountId
        {
            get => _accountId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsRegion")]
        public Input<string>? AwsRegion { get; set; }

        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        [Input("cloudResourceContainer")]
        public Input<Inputs.MwsWorkspacesCloudResourceContainerArgs>? CloudResourceContainer { get; set; }

        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        [Input("credentialsId")]
        public Input<string>? CredentialsId { get; set; }

        [Input("customTags")]
        private InputMap<string>? _customTags;
        public InputMap<string> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<string>());
            set => _customTags = value;
        }

        [Input("customerManagedKeyId")]
        public Input<string>? CustomerManagedKeyId { get; set; }

        [Input("deploymentName")]
        public Input<string>? DeploymentName { get; set; }

        [Input("externalCustomerInfo")]
        public Input<Inputs.MwsWorkspacesExternalCustomerInfoArgs>? ExternalCustomerInfo { get; set; }

        [Input("gcpManagedNetworkConfig")]
        public Input<Inputs.MwsWorkspacesGcpManagedNetworkConfigArgs>? GcpManagedNetworkConfig { get; set; }

        [Input("gkeConfig")]
        public Input<Inputs.MwsWorkspacesGkeConfigArgs>? GkeConfig { get; set; }

        [Input("isNoPublicIpEnabled")]
        public Input<bool>? IsNoPublicIpEnabled { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("managedServicesCustomerManagedKeyId")]
        public Input<string>? ManagedServicesCustomerManagedKeyId { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("pricingTier")]
        public Input<string>? PricingTier { get; set; }

        [Input("privateAccessSettingsId")]
        public Input<string>? PrivateAccessSettingsId { get; set; }

        [Input("storageConfigurationId")]
        public Input<string>? StorageConfigurationId { get; set; }

        [Input("storageCustomerManagedKeyId")]
        public Input<string>? StorageCustomerManagedKeyId { get; set; }

        [Input("token")]
        public Input<Inputs.MwsWorkspacesTokenArgs>? Token { get; set; }

        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        [Input("workspaceStatus")]
        public Input<string>? WorkspaceStatus { get; set; }

        [Input("workspaceStatusMessage")]
        public Input<string>? WorkspaceStatusMessage { get; set; }

        [Input("workspaceUrl")]
        public Input<string>? WorkspaceUrl { get; set; }

        public MwsWorkspacesArgs()
        {
        }
        public static new MwsWorkspacesArgs Empty => new MwsWorkspacesArgs();
    }

    public sealed class MwsWorkspacesState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        private Input<string>? _accountId;
        public Input<string>? AccountId
        {
            get => _accountId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsRegion")]
        public Input<string>? AwsRegion { get; set; }

        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        [Input("cloudResourceContainer")]
        public Input<Inputs.MwsWorkspacesCloudResourceContainerGetArgs>? CloudResourceContainer { get; set; }

        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        [Input("credentialsId")]
        public Input<string>? CredentialsId { get; set; }

        [Input("customTags")]
        private InputMap<string>? _customTags;
        public InputMap<string> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<string>());
            set => _customTags = value;
        }

        [Input("customerManagedKeyId")]
        public Input<string>? CustomerManagedKeyId { get; set; }

        [Input("deploymentName")]
        public Input<string>? DeploymentName { get; set; }

        [Input("externalCustomerInfo")]
        public Input<Inputs.MwsWorkspacesExternalCustomerInfoGetArgs>? ExternalCustomerInfo { get; set; }

        [Input("gcpManagedNetworkConfig")]
        public Input<Inputs.MwsWorkspacesGcpManagedNetworkConfigGetArgs>? GcpManagedNetworkConfig { get; set; }

        [Input("gcpWorkspaceSa")]
        public Input<string>? GcpWorkspaceSa { get; set; }

        [Input("gkeConfig")]
        public Input<Inputs.MwsWorkspacesGkeConfigGetArgs>? GkeConfig { get; set; }

        [Input("isNoPublicIpEnabled")]
        public Input<bool>? IsNoPublicIpEnabled { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("managedServicesCustomerManagedKeyId")]
        public Input<string>? ManagedServicesCustomerManagedKeyId { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("pricingTier")]
        public Input<string>? PricingTier { get; set; }

        [Input("privateAccessSettingsId")]
        public Input<string>? PrivateAccessSettingsId { get; set; }

        [Input("storageConfigurationId")]
        public Input<string>? StorageConfigurationId { get; set; }

        [Input("storageCustomerManagedKeyId")]
        public Input<string>? StorageCustomerManagedKeyId { get; set; }

        [Input("token")]
        public Input<Inputs.MwsWorkspacesTokenGetArgs>? Token { get; set; }

        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        [Input("workspaceName")]
        public Input<string>? WorkspaceName { get; set; }

        [Input("workspaceStatus")]
        public Input<string>? WorkspaceStatus { get; set; }

        [Input("workspaceStatusMessage")]
        public Input<string>? WorkspaceStatusMessage { get; set; }

        [Input("workspaceUrl")]
        public Input<string>? WorkspaceUrl { get; set; }

        public MwsWorkspacesState()
        {
        }
        public static new MwsWorkspacesState Empty => new MwsWorkspacesState();
    }
}
