// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// ## Import
    /// 
    /// As of terraform v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = name
    /// 
    ///   to = databricks_database_instance.this
    /// 
    /// }
    /// 
    /// If you are using an older version of terraform, you can import the resource using cli as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/databaseInstance:DatabaseInstance databricks_database_instance name
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/databaseInstance:DatabaseInstance")]
    public partial class DatabaseInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Password for admin user to create. If not provided, no user will be created
        /// </summary>
        [Output("adminPassword")]
        public Output<string?> AdminPassword { get; private set; } = null!;

        /// <summary>
        /// Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
        /// </summary>
        [Output("adminRolename")]
        public Output<string?> AdminRolename { get; private set; } = null!;

        /// <summary>
        /// The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
        /// </summary>
        [Output("capacity")]
        public Output<string?> Capacity { get; private set; } = null!;

        /// <summary>
        /// (string) - The timestamp when the instance was created
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// (string) - The email of the creator of the instance
        /// </summary>
        [Output("creator")]
        public Output<string> Creator { get; private set; } = null!;

        /// <summary>
        /// The name of the instance. This is the unique identifier for the instance
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (string) - The version of Postgres running on the instance
        /// </summary>
        [Output("pgVersion")]
        public Output<string> PgVersion { get; private set; } = null!;

        /// <summary>
        /// (string) - The DNS endpoint to connect to the instance for read+write access
        /// </summary>
        [Output("readWriteDns")]
        public Output<string> ReadWriteDns { get; private set; } = null!;

        /// <summary>
        /// (string) - The current state of the instance. Possible values are: AVAILABLE, DELETING, FAILING_OVER, STARTING, STOPPED, UPDATING
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Whether the instance is stopped
        /// </summary>
        [Output("stopped")]
        public Output<bool?> Stopped { get; private set; } = null!;

        /// <summary>
        /// (string) - An immutable UUID identifier for the instance
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseInstance(string name, DatabaseInstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/databaseInstance:DatabaseInstance", name, args ?? new DatabaseInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseInstance(string name, Input<string> id, DatabaseInstanceState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/databaseInstance:DatabaseInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseInstance Get(string name, Input<string> id, DatabaseInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseInstance(name, id, state, options);
        }
    }

    public sealed class DatabaseInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Password for admin user to create. If not provided, no user will be created
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        /// <summary>
        /// Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
        /// </summary>
        [Input("adminRolename")]
        public Input<string>? AdminRolename { get; set; }

        /// <summary>
        /// The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
        /// </summary>
        [Input("capacity")]
        public Input<string>? Capacity { get; set; }

        /// <summary>
        /// The name of the instance. This is the unique identifier for the instance
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the instance is stopped
        /// </summary>
        [Input("stopped")]
        public Input<bool>? Stopped { get; set; }

        public DatabaseInstanceArgs()
        {
        }
        public static new DatabaseInstanceArgs Empty => new DatabaseInstanceArgs();
    }

    public sealed class DatabaseInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Password for admin user to create. If not provided, no user will be created
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        /// <summary>
        /// Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
        /// </summary>
        [Input("adminRolename")]
        public Input<string>? AdminRolename { get; set; }

        /// <summary>
        /// The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
        /// </summary>
        [Input("capacity")]
        public Input<string>? Capacity { get; set; }

        /// <summary>
        /// (string) - The timestamp when the instance was created
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// (string) - The email of the creator of the instance
        /// </summary>
        [Input("creator")]
        public Input<string>? Creator { get; set; }

        /// <summary>
        /// The name of the instance. This is the unique identifier for the instance
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (string) - The version of Postgres running on the instance
        /// </summary>
        [Input("pgVersion")]
        public Input<string>? PgVersion { get; set; }

        /// <summary>
        /// (string) - The DNS endpoint to connect to the instance for read+write access
        /// </summary>
        [Input("readWriteDns")]
        public Input<string>? ReadWriteDns { get; set; }

        /// <summary>
        /// (string) - The current state of the instance. Possible values are: AVAILABLE, DELETING, FAILING_OVER, STARTING, STOPPED, UPDATING
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Whether the instance is stopped
        /// </summary>
        [Input("stopped")]
        public Input<bool>? Stopped { get; set; }

        /// <summary>
        /// (string) - An immutable UUID identifier for the instance
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public DatabaseInstanceState()
        {
        }
        public static new DatabaseInstanceState Empty => new DatabaseInstanceState();
    }
}
