// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetAccountFederationPolicy
    {
        /// <summary>
        /// This data source can be used to get a single account federation policy.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Referring to an account federation policy by id:
        /// </summary>
        public static Task<GetAccountFederationPolicyResult> InvokeAsync(GetAccountFederationPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountFederationPolicyResult>("databricks:index/getAccountFederationPolicy:getAccountFederationPolicy", args ?? new GetAccountFederationPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to get a single account federation policy.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Referring to an account federation policy by id:
        /// </summary>
        public static Output<GetAccountFederationPolicyResult> Invoke(GetAccountFederationPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountFederationPolicyResult>("databricks:index/getAccountFederationPolicy:getAccountFederationPolicy", args ?? new GetAccountFederationPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to get a single account federation policy.
        /// 
        /// &gt; **Note** This data source can only be used with an account-level provider!
        /// 
        /// ## Example Usage
        /// 
        /// Referring to an account federation policy by id:
        /// </summary>
        public static Output<GetAccountFederationPolicyResult> Invoke(GetAccountFederationPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountFederationPolicyResult>("databricks:index/getAccountFederationPolicy:getAccountFederationPolicy", args ?? new GetAccountFederationPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountFederationPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - Description of the federation policy
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// (OidcFederationPolicy)
        /// </summary>
        [Input("oidcPolicy")]
        public Inputs.GetAccountFederationPolicyOidcPolicyArgs? OidcPolicy { get; set; }

        /// <summary>
        /// The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public string? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public int? ServicePrincipalId { get; set; }

        public GetAccountFederationPolicyArgs()
        {
        }
        public static new GetAccountFederationPolicyArgs Empty => new GetAccountFederationPolicyArgs();
    }

    public sealed class GetAccountFederationPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (string) - Description of the federation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (OidcFederationPolicy)
        /// </summary>
        [Input("oidcPolicy")]
        public Input<Inputs.GetAccountFederationPolicyOidcPolicyInputArgs>? OidcPolicy { get; set; }

        /// <summary>
        /// The ID of the federation policy
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<int>? ServicePrincipalId { get; set; }

        public GetAccountFederationPolicyInvokeArgs()
        {
        }
        public static new GetAccountFederationPolicyInvokeArgs Empty => new GetAccountFederationPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountFederationPolicyResult
    {
        /// <summary>
        /// (string) - Creation time of the federation policy
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// (string) - Description of the federation policy
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (string) - Resource name for the federation policy. Example values include
        /// `accounts/&lt;account-id&gt;/federationPolicies/my-federation-policy` for Account Federation Policies, and
        /// `accounts/&lt;account-id&gt;/servicePrincipals/&lt;service-principal-id&gt;/federationPolicies/my-federation-policy`
        /// for Service Principal Federation Policies. Typically an output parameter, which does not need to be
        /// specified in create or update requests. If specified in a request, must match the value in the
        /// request URL
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (OidcFederationPolicy)
        /// </summary>
        public readonly Outputs.GetAccountFederationPolicyOidcPolicyResult? OidcPolicy;
        /// <summary>
        /// (string) - The ID of the federation policy
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
        /// </summary>
        public readonly int ServicePrincipalId;
        /// <summary>
        /// (string) - Unique, immutable id of the federation policy
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// (string) - Last update time of the federation policy
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetAccountFederationPolicyResult(
            string createTime,

            string? description,

            string id,

            string name,

            Outputs.GetAccountFederationPolicyOidcPolicyResult? oidcPolicy,

            string policyId,

            int servicePrincipalId,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Id = id;
            Name = name;
            OidcPolicy = oidcPolicy;
            PolicyId = policyId;
            ServicePrincipalId = servicePrincipalId;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
