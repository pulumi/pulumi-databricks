// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetClusters
    {
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("databricks:index/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClustersResult>("databricks:index/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());

        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClustersResult>("databricks:index/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterNameContains")]
        public string? ClusterNameContains { get; set; }

        [Input("filterBy")]
        public Inputs.GetClustersFilterByArgs? FilterBy { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        public GetClustersArgs()
        {
        }
        public static new GetClustersArgs Empty => new GetClustersArgs();
    }

    public sealed class GetClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterNameContains")]
        public Input<string>? ClusterNameContains { get; set; }

        [Input("filterBy")]
        public Input<Inputs.GetClustersFilterByInputArgs>? FilterBy { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        public GetClustersInvokeArgs()
        {
        }
        public static new GetClustersInvokeArgs Empty => new GetClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        public readonly string? ClusterNameContains;
        public readonly Outputs.GetClustersFilterByResult? FilterBy;
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;

        [OutputConstructor]
        private GetClustersResult(
            string? clusterNameContains,

            Outputs.GetClustersFilterByResult? filterBy,

            string id,

            ImmutableArray<string> ids)
        {
            ClusterNameContains = clusterNameContains;
            FilterBy = filterBy;
            Id = id;
            Ids = ids;
        }
    }
}
