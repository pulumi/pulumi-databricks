// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// Allows you to create a private endpoint in a Network Connectivity Config that can be used to [configure private connectivity from serverless compute](https://learn.microsoft.com/en-us/azure/databricks/security/network/serverless-network-security/serverless-private-link).
    /// 
    /// &gt; This resource can only be used with an account-level provider!
    /// 
    /// &gt; This feature is available on Azure, and in Public Preview on AWS.
    /// 
    /// ## Example Usage
    /// 
    /// Create private endpoints to an Azure storage account and an Azure standard load balancer.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var region = config.RequireObject&lt;dynamic&gt;("region");
    ///     var prefix = config.RequireObject&lt;dynamic&gt;("prefix");
    ///     var ncc = new Databricks.MwsNetworkConnectivityConfig("ncc", new()
    ///     {
    ///         Name = $"ncc-for-{prefix}",
    ///         Region = region,
    ///     });
    /// 
    ///     var storage = new Databricks.MwsNccPrivateEndpointRule("storage", new()
    ///     {
    ///         NetworkConnectivityConfigId = ncc.NetworkConnectivityConfigId,
    ///         ResourceId = "/subscriptions/653bb673-1234-abcd-a90b-d064d5d53ca4/resourcegroups/example-resource-group/providers/Microsoft.Storage/storageAccounts/examplesa",
    ///         GroupId = "blob",
    ///     });
    /// 
    ///     var slb = new Databricks.MwsNccPrivateEndpointRule("slb", new()
    ///     {
    ///         NetworkConnectivityConfigId = ncc.NetworkConnectivityConfigId,
    ///         ResourceId = "/subscriptions/653bb673-1234-abcd-a90b-d064d5d53ca4/resourcegroups/example-resource-group/providers/Microsoft.Network/privatelinkServices/example-private-link-service",
    ///         DomainNames = new[]
    ///         {
    ///             "my-example.exampledomain.com",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Create a private endpoint rule to an AWS VPC endpoint and to an S3 bucket.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var region = config.RequireObject&lt;dynamic&gt;("region");
    ///     var prefix = config.RequireObject&lt;dynamic&gt;("prefix");
    ///     var ncc = new Databricks.MwsNetworkConnectivityConfig("ncc", new()
    ///     {
    ///         Name = $"ncc-for-{prefix}",
    ///         Region = region,
    ///     });
    /// 
    ///     var storage = new Databricks.MwsNccPrivateEndpointRule("storage", new()
    ///     {
    ///         NetworkConnectivityConfigId = ncc.NetworkConnectivityConfigId,
    ///         EndpointService = "com.amazonaws.us-east-1.s3",
    ///         ResourceNames = new[]
    ///         {
    ///             "bucket",
    ///         },
    ///     });
    /// 
    ///     var vpce = new Databricks.MwsNccPrivateEndpointRule("vpce", new()
    ///     {
    ///         NetworkConnectivityConfigId = ncc.NetworkConnectivityConfigId,
    ///         EndpointService = "com.amazonaws.vpce.us-west-2.vpce-svc-xyz",
    ///         DomainNames = new[]
    ///         {
    ///             "subdomain.internal.net",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are used in the context:
    /// 
    /// * databricks.MwsNetworkConnectivityConfig to create Network Connectivity Config objects.
    /// * databricks.MwsNccBinding to attach an NCC to a workspace.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by Databricks account ID and Network Connectivity Config ID.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   to = databricks_mws_ncc_private_endpoint_rule.this
    /// 
    ///   id = "&lt;network_connectivity_config_id&gt;/&lt;rule_id&gt;"
    /// 
    /// }
    /// 
    /// Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule this "&lt;network_connectivity_config_id&gt;/&lt;rule_id&gt;"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule")]
    public partial class MwsNccPrivateEndpointRule : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        /// <summary>
        /// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
        /// The possible values are:
        /// * `PENDING`: The endpoint has been created and pending approval.
        /// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
        /// * `REJECTED`: Connection was rejected by the private link resource owner.
        /// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
        /// * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
        /// </summary>
        [Output("connectionState")]
        public Output<string> ConnectionState { get; private set; } = null!;

        /// <summary>
        /// Time in epoch milliseconds when this object was created.
        /// </summary>
        [Output("creationTime")]
        public Output<int> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Whether this private endpoint is deactivated.
        /// </summary>
        [Output("deactivated")]
        public Output<bool?> Deactivated { get; private set; } = null!;

        /// <summary>
        /// Time in epoch milliseconds when this object was deactivated.
        /// </summary>
        [Output("deactivatedAt")]
        public Output<int?> DeactivatedAt { get; private set; } = null!;

        /// <summary>
        /// * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `GroupId`.
        /// * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `ResourceNames`.
        /// </summary>
        [Output("domainNames")]
        public Output<ImmutableArray<string>> DomainNames { get; private set; } = null!;

        /// <summary>
        /// Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
        /// </summary>
        [Output("endpointName")]
        public Output<string> EndpointName { get; private set; } = null!;

        /// <summary>
        /// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint. Change forces creation of a new resource.
        /// </summary>
        [Output("endpointService")]
        public Output<string?> EndpointService { get; private set; } = null!;

        /// <summary>
        /// Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `Blob`, `Dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `Blob` and one for `Dfs`. Change forces creation of a new resource. Conflicts with `DomainNames`.
        /// </summary>
        [Output("groupId")]
        public Output<string?> GroupId { get; private set; } = null!;

        /// <summary>
        /// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
        /// </summary>
        [Output("networkConnectivityConfigId")]
        public Output<string> NetworkConnectivityConfigId { get; private set; } = null!;

        /// <summary>
        /// The Azure resource ID of the target resource. Change forces creation of a new resource.
        /// </summary>
        [Output("resourceId")]
        public Output<string?> ResourceId { get; private set; } = null!;

        /// <summary>
        /// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `DomainNames`.
        /// </summary>
        [Output("resourceNames")]
        public Output<ImmutableArray<string>> ResourceNames { get; private set; } = null!;

        /// <summary>
        /// the ID of a private endpoint rule.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// Time in epoch milliseconds when this object was updated.
        /// </summary>
        [Output("updatedTime")]
        public Output<int> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
        /// </summary>
        [Output("vpcEndpointId")]
        public Output<string> VpcEndpointId { get; private set; } = null!;


        /// <summary>
        /// Create a MwsNccPrivateEndpointRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MwsNccPrivateEndpointRule(string name, MwsNccPrivateEndpointRuleArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule", name, args ?? new MwsNccPrivateEndpointRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MwsNccPrivateEndpointRule(string name, Input<string> id, MwsNccPrivateEndpointRuleState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MwsNccPrivateEndpointRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MwsNccPrivateEndpointRule Get(string name, Input<string> id, MwsNccPrivateEndpointRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new MwsNccPrivateEndpointRule(name, id, state, options);
        }
    }

    public sealed class MwsNccPrivateEndpointRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
        /// The possible values are:
        /// * `PENDING`: The endpoint has been created and pending approval.
        /// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
        /// * `REJECTED`: Connection was rejected by the private link resource owner.
        /// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
        /// * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
        /// </summary>
        [Input("connectionState")]
        public Input<string>? ConnectionState { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was created.
        /// </summary>
        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        /// <summary>
        /// Whether this private endpoint is deactivated.
        /// </summary>
        [Input("deactivated")]
        public Input<bool>? Deactivated { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was deactivated.
        /// </summary>
        [Input("deactivatedAt")]
        public Input<int>? DeactivatedAt { get; set; }

        [Input("domainNames")]
        private InputList<string>? _domainNames;

        /// <summary>
        /// * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `GroupId`.
        /// * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `ResourceNames`.
        /// </summary>
        public InputList<string> DomainNames
        {
            get => _domainNames ?? (_domainNames = new InputList<string>());
            set => _domainNames = value;
        }

        /// <summary>
        /// Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
        /// </summary>
        [Input("endpointName")]
        public Input<string>? EndpointName { get; set; }

        /// <summary>
        /// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint. Change forces creation of a new resource.
        /// </summary>
        [Input("endpointService")]
        public Input<string>? EndpointService { get; set; }

        /// <summary>
        /// Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `Blob`, `Dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `Blob` and one for `Dfs`. Change forces creation of a new resource. Conflicts with `DomainNames`.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
        /// </summary>
        [Input("networkConnectivityConfigId", required: true)]
        public Input<string> NetworkConnectivityConfigId { get; set; } = null!;

        /// <summary>
        /// The Azure resource ID of the target resource. Change forces creation of a new resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("resourceNames")]
        private InputList<string>? _resourceNames;

        /// <summary>
        /// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `DomainNames`.
        /// </summary>
        public InputList<string> ResourceNames
        {
            get => _resourceNames ?? (_resourceNames = new InputList<string>());
            set => _resourceNames = value;
        }

        /// <summary>
        /// the ID of a private endpoint rule.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was updated.
        /// </summary>
        [Input("updatedTime")]
        public Input<int>? UpdatedTime { get; set; }

        /// <summary>
        /// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
        /// </summary>
        [Input("vpcEndpointId")]
        public Input<string>? VpcEndpointId { get; set; }

        public MwsNccPrivateEndpointRuleArgs()
        {
        }
        public static new MwsNccPrivateEndpointRuleArgs Empty => new MwsNccPrivateEndpointRuleArgs();
    }

    public sealed class MwsNccPrivateEndpointRuleState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
        /// The possible values are:
        /// * `PENDING`: The endpoint has been created and pending approval.
        /// * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
        /// * `REJECTED`: Connection was rejected by the private link resource owner.
        /// * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
        /// * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
        /// </summary>
        [Input("connectionState")]
        public Input<string>? ConnectionState { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was created.
        /// </summary>
        [Input("creationTime")]
        public Input<int>? CreationTime { get; set; }

        /// <summary>
        /// Whether this private endpoint is deactivated.
        /// </summary>
        [Input("deactivated")]
        public Input<bool>? Deactivated { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was deactivated.
        /// </summary>
        [Input("deactivatedAt")]
        public Input<int>? DeactivatedAt { get; set; }

        [Input("domainNames")]
        private InputList<string>? _domainNames;

        /// <summary>
        /// * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `GroupId`.
        /// * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `ResourceNames`.
        /// </summary>
        public InputList<string> DomainNames
        {
            get => _domainNames ?? (_domainNames = new InputList<string>());
            set => _domainNames = value;
        }

        /// <summary>
        /// Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
        /// </summary>
        [Input("endpointName")]
        public Input<string>? EndpointName { get; set; }

        /// <summary>
        /// Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint. Change forces creation of a new resource.
        /// </summary>
        [Input("endpointService")]
        public Input<string>? EndpointService { get; set; }

        /// <summary>
        /// Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `Blob`, `Dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `Blob` and one for `Dfs`. Change forces creation of a new resource. Conflicts with `DomainNames`.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
        /// </summary>
        [Input("networkConnectivityConfigId")]
        public Input<string>? NetworkConnectivityConfigId { get; set; }

        /// <summary>
        /// The Azure resource ID of the target resource. Change forces creation of a new resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("resourceNames")]
        private InputList<string>? _resourceNames;

        /// <summary>
        /// Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `DomainNames`.
        /// </summary>
        public InputList<string> ResourceNames
        {
            get => _resourceNames ?? (_resourceNames = new InputList<string>());
            set => _resourceNames = value;
        }

        /// <summary>
        /// the ID of a private endpoint rule.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// Time in epoch milliseconds when this object was updated.
        /// </summary>
        [Input("updatedTime")]
        public Input<int>? UpdatedTime { get; set; }

        /// <summary>
        /// The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
        /// </summary>
        [Input("vpcEndpointId")]
        public Input<string>? VpcEndpointId { get; set; }

        public MwsNccPrivateEndpointRuleState()
        {
        }
        public static new MwsNccPrivateEndpointRuleState Empty => new MwsNccPrivateEndpointRuleState();
    }
}
