// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/credential:Credential")]
    public partial class Credential : global::Pulumi.CustomResource
    {
        [Output("awsIamRole")]
        public Output<Outputs.CredentialAwsIamRole?> AwsIamRole { get; private set; } = null!;

        [Output("azureManagedIdentity")]
        public Output<Outputs.CredentialAzureManagedIdentity?> AzureManagedIdentity { get; private set; } = null!;

        [Output("azureServicePrincipal")]
        public Output<Outputs.CredentialAzureServicePrincipal?> AzureServicePrincipal { get; private set; } = null!;

        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        [Output("credentialId")]
        public Output<string> CredentialId { get; private set; } = null!;

        [Output("databricksGcpServiceAccount")]
        public Output<Outputs.CredentialDatabricksGcpServiceAccount> DatabricksGcpServiceAccount { get; private set; } = null!;

        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("forceUpdate")]
        public Output<bool?> ForceUpdate { get; private set; } = null!;

        [Output("fullName")]
        public Output<string> FullName { get; private set; } = null!;

        [Output("isolationMode")]
        public Output<string> IsolationMode { get; private set; } = null!;

        [Output("metastoreId")]
        public Output<string> MetastoreId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("purpose")]
        public Output<string> Purpose { get; private set; } = null!;

        [Output("readOnly")]
        public Output<bool?> ReadOnly { get; private set; } = null!;

        [Output("skipValidation")]
        public Output<bool?> SkipValidation { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<int> UpdatedAt { get; private set; } = null!;

        [Output("updatedBy")]
        public Output<string> UpdatedBy { get; private set; } = null!;

        [Output("usedForManagedStorage")]
        public Output<bool> UsedForManagedStorage { get; private set; } = null!;


        /// <summary>
        /// Create a Credential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Credential(string name, CredentialArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/credential:Credential", name, args ?? new CredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Credential(string name, Input<string> id, CredentialState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/credential:Credential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Credential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Credential Get(string name, Input<string> id, CredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new Credential(name, id, state, options);
        }
    }

    public sealed class CredentialArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsIamRole")]
        public Input<Inputs.CredentialAwsIamRoleArgs>? AwsIamRole { get; set; }

        [Input("azureManagedIdentity")]
        public Input<Inputs.CredentialAzureManagedIdentityArgs>? AzureManagedIdentity { get; set; }

        [Input("azureServicePrincipal")]
        public Input<Inputs.CredentialAzureServicePrincipalArgs>? AzureServicePrincipal { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("databricksGcpServiceAccount")]
        public Input<Inputs.CredentialDatabricksGcpServiceAccountArgs>? DatabricksGcpServiceAccount { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("forceUpdate")]
        public Input<bool>? ForceUpdate { get; set; }

        [Input("fullName")]
        public Input<string>? FullName { get; set; }

        [Input("isolationMode")]
        public Input<string>? IsolationMode { get; set; }

        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("purpose", required: true)]
        public Input<string> Purpose { get; set; } = null!;

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("skipValidation")]
        public Input<bool>? SkipValidation { get; set; }

        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        [Input("usedForManagedStorage")]
        public Input<bool>? UsedForManagedStorage { get; set; }

        public CredentialArgs()
        {
        }
        public static new CredentialArgs Empty => new CredentialArgs();
    }

    public sealed class CredentialState : global::Pulumi.ResourceArgs
    {
        [Input("awsIamRole")]
        public Input<Inputs.CredentialAwsIamRoleGetArgs>? AwsIamRole { get; set; }

        [Input("azureManagedIdentity")]
        public Input<Inputs.CredentialAzureManagedIdentityGetArgs>? AzureManagedIdentity { get; set; }

        [Input("azureServicePrincipal")]
        public Input<Inputs.CredentialAzureServicePrincipalGetArgs>? AzureServicePrincipal { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        [Input("databricksGcpServiceAccount")]
        public Input<Inputs.CredentialDatabricksGcpServiceAccountGetArgs>? DatabricksGcpServiceAccount { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("forceUpdate")]
        public Input<bool>? ForceUpdate { get; set; }

        [Input("fullName")]
        public Input<string>? FullName { get; set; }

        [Input("isolationMode")]
        public Input<string>? IsolationMode { get; set; }

        [Input("metastoreId")]
        public Input<string>? MetastoreId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("skipValidation")]
        public Input<bool>? SkipValidation { get; set; }

        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        [Input("usedForManagedStorage")]
        public Input<bool>? UsedForManagedStorage { get; set; }

        public CredentialState()
        {
        }
        public static new CredentialState Empty => new CredentialState();
    }
}
