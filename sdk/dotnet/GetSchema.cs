// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetSchema
    {
        public static Task<GetSchemaResult> InvokeAsync(GetSchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchemaResult>("databricks:index/getSchema:getSchema", args ?? new GetSchemaArgs(), options.WithDefaults());

        public static Output<GetSchemaResult> Invoke(GetSchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchemaResult>("databricks:index/getSchema:getSchema", args ?? new GetSchemaInvokeArgs(), options.WithDefaults());

        public static Output<GetSchemaResult> Invoke(GetSchemaInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchemaResult>("databricks:index/getSchema:getSchema", args ?? new GetSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchemaArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("schemaInfo")]
        public Inputs.GetSchemaSchemaInfoArgs? SchemaInfo { get; set; }

        public GetSchemaArgs()
        {
        }
        public static new GetSchemaArgs Empty => new GetSchemaArgs();
    }

    public sealed class GetSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("schemaInfo")]
        public Input<Inputs.GetSchemaSchemaInfoInputArgs>? SchemaInfo { get; set; }

        public GetSchemaInvokeArgs()
        {
        }
        public static new GetSchemaInvokeArgs Empty => new GetSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchemaResult
    {
        public readonly string Id;
        public readonly string Name;
        public readonly Outputs.GetSchemaSchemaInfoResult SchemaInfo;

        [OutputConstructor]
        private GetSchemaResult(
            string id,

            string name,

            Outputs.GetSchemaSchemaInfoResult schemaInfo)
        {
            Id = id;
            Name = name;
            SchemaInfo = schemaInfo;
        }
    }
}
