// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// Enables you to register aws_vpc_endpoint resources or gcp vpc_endpoint resources with Databricks such that they can be used as part of a databricks.MwsNetworks configuration.
    /// 
    /// &gt; This resource can only be used with an account-level provider!
    /// 
    /// It is strongly recommended that customers read the [Enable AWS Private Link](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html) or the [Enable GCP Private Service Connect](https://docs.gcp.databricks.com/administration-guide/cloud-configurations/gcp/private-service-connect.html) documentation before trying to leverage this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ### Databricks on AWS usage
    /// 
    /// Before using this resource, you will need to create the necessary VPC Endpoints as per your [VPC endpoint requirements](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html#vpc-endpoint-requirements). You can use the aws_vpc_endpoint resource for this, for example:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var workspace = new Aws.Ec2.VpcEndpoint("workspace", new()
    ///     {
    ///         VpcId = vpc.VpcId,
    ///         ServiceName = privateLink.WorkspaceService,
    ///         VpcEndpointType = "Interface",
    ///         SecurityGroupIds = new[]
    ///         {
    ///             vpc.DefaultSecurityGroupId,
    ///         },
    ///         SubnetIds = new[]
    ///         {
    ///             plSubnet.Id,
    ///         },
    ///         PrivateDnsEnabled = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             plSubnet,
    ///         },
    ///     });
    /// 
    ///     var relay = new Aws.Ec2.VpcEndpoint("relay", new()
    ///     {
    ///         VpcId = vpc.VpcId,
    ///         ServiceName = privateLink.RelayService,
    ///         VpcEndpointType = "Interface",
    ///         SecurityGroupIds = new[]
    ///         {
    ///             vpc.DefaultSecurityGroupId,
    ///         },
    ///         SubnetIds = new[]
    ///         {
    ///             plSubnet.Id,
    ///         },
    ///         PrivateDnsEnabled = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             plSubnet,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Depending on your use case, you may need or choose to add VPC Endpoints for the AWS Services Databricks uses. See [Add VPC endpoints for other AWS services (recommended but optional)
    /// ](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html#step-9-add-vpc-endpoints-for-other-aws-services-recommended-but-optional) for more information. For example:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var s3 = new Aws.Ec2.VpcEndpoint("s3", new()
    ///     {
    ///         VpcId = vpc.VpcId,
    ///         RouteTableIds = vpc.PrivateRouteTableIds,
    ///         ServiceName = $"com.amazonaws.{region}.s3",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             vpc,
    ///         },
    ///     });
    /// 
    ///     var sts = new Aws.Ec2.VpcEndpoint("sts", new()
    ///     {
    ///         VpcId = vpc.VpcId,
    ///         ServiceName = $"com.amazonaws.{region}.sts",
    ///         VpcEndpointType = "Interface",
    ///         SubnetIds = vpc.PrivateSubnets,
    ///         SecurityGroupIds = new[]
    ///         {
    ///             vpc.DefaultSecurityGroupId,
    ///         },
    ///         PrivateDnsEnabled = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             vpc,
    ///         },
    ///     });
    /// 
    ///     var kinesis_streams = new Aws.Ec2.VpcEndpoint("kinesis-streams", new()
    ///     {
    ///         VpcId = vpc.VpcId,
    ///         ServiceName = $"com.amazonaws.{region}.kinesis-streams",
    ///         VpcEndpointType = "Interface",
    ///         SubnetIds = vpc.PrivateSubnets,
    ///         SecurityGroupIds = new[]
    ///         {
    ///             vpc.DefaultSecurityGroupId,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             vpc,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Once you have created the necessary endpoints, you need to register each of them via *this* Pulumi resource, which calls out to the [Databricks Account API](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html#step-3-register-your-vpc-endpoint-ids-with-the-account-api)):
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var workspace = new Databricks.MwsVpcEndpoint("workspace", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         AwsVpcEndpointId = workspaceAwsVpcEndpoint.Id,
    ///         VpcEndpointName = $"VPC Relay for {vpc.VpcId}",
    ///         Region = region,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             workspaceAwsVpcEndpoint,
    ///         },
    ///     });
    /// 
    ///     var relay = new Databricks.MwsVpcEndpoint("relay", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         AwsVpcEndpointId = relayAwsVpcEndpoint.Id,
    ///         VpcEndpointName = $"VPC Relay for {vpc.VpcId}",
    ///         Region = region,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             relayAwsVpcEndpoint,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Typically the next steps after this would be to create a databricks.MwsPrivateAccessSettings and databricks.MwsNetworks configuration, before passing the `databricks_mws_private_access_settings.pas.private_access_settings_id` and `databricks_mws_networks.this.network_id` into a databricks.MwsWorkspaces resource:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.MwsWorkspaces("this", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         AwsRegion = region,
    ///         WorkspaceName = prefix,
    ///         CredentialsId = thisDatabricksMwsCredentials.CredentialsId,
    ///         StorageConfigurationId = thisDatabricksMwsStorageConfigurations.StorageConfigurationId,
    ///         NetworkId = thisDatabricksMwsNetworks.NetworkId,
    ///         PrivateAccessSettingsId = pas.PrivateAccessSettingsId,
    ///         PricingTier = "ENTERPRISE",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             thisDatabricksMwsNetworks,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Databricks on GCP usage
    /// 
    /// Before using this resource, you will need to create the necessary Private Service Connect (PSC) connections on your Google Cloud VPC networks. You can see [Enable Private Service Connect for your workspace](https://docs.gcp.databricks.com/administration-guide/cloud-configurations/gcp/private-service-connect.html) for more details.
    /// 
    /// Once you have created the necessary PSC connections, you need to register each of them via *this* Pulumi resource, which calls out to the Databricks Account API.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     // Account Id that could be found in https://accounts.gcp.databricks.com/
    ///     var databricksAccountId = config.RequireObject&lt;dynamic&gt;("databricksAccountId");
    ///     var databricksGoogleServiceAccount = config.RequireObject&lt;dynamic&gt;("databricksGoogleServiceAccount");
    ///     var googleProject = config.RequireObject&lt;dynamic&gt;("googleProject");
    ///     var subnetRegion = config.RequireObject&lt;dynamic&gt;("subnetRegion");
    ///     var workspace = new Databricks.MwsVpcEndpoint("workspace", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         VpcEndpointName = "PSC Rest API endpoint",
    ///         GcpVpcEndpointInfo = new Databricks.Inputs.MwsVpcEndpointGcpVpcEndpointInfoArgs
    ///         {
    ///             ProjectId = googleProject,
    ///             PscEndpointName = "PSC Rest API endpoint",
    ///             EndpointRegion = subnetRegion,
    ///         },
    ///     });
    /// 
    ///     var relay = new Databricks.MwsVpcEndpoint("relay", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         VpcEndpointName = "PSC Relay endpoint",
    ///         GcpVpcEndpointInfo = new Databricks.Inputs.MwsVpcEndpointGcpVpcEndpointInfoArgs
    ///         {
    ///             ProjectId = googleProject,
    ///             PscEndpointName = "PSC Relay endpoint",
    ///             EndpointRegion = subnetRegion,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Typically the next steps after this would be to create a databricks.MwsPrivateAccessSettings and databricks.MwsNetworks configuration, before passing the `databricks_mws_private_access_settings.pas.private_access_settings_id` and `databricks_mws_networks.this.network_id` into a databricks.MwsWorkspaces resource:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Databricks.MwsWorkspaces("this", new()
    ///     {
    ///         AccountId = databricksAccountId,
    ///         WorkspaceName = "gcp workspace",
    ///         Location = subnetRegion,
    ///         CloudResourceContainer = new Databricks.Inputs.MwsWorkspacesCloudResourceContainerArgs
    ///         {
    ///             Gcp = new Databricks.Inputs.MwsWorkspacesCloudResourceContainerGcpArgs
    ///             {
    ///                 ProjectId = googleProject,
    ///             },
    ///         },
    ///         GkeConfig = new Databricks.Inputs.MwsWorkspacesGkeConfigArgs
    ///         {
    ///             ConnectivityType = "PRIVATE_NODE_PUBLIC_MASTER",
    ///             MasterIpRange = "10.3.0.0/28",
    ///         },
    ///         NetworkId = thisDatabricksMwsNetworks.NetworkId,
    ///         PrivateAccessSettingsId = pas.PrivateAccessSettingsId,
    ///         PricingTier = "PREMIUM",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             thisDatabricksMwsNetworks,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Related Resources
    /// 
    /// The following resources are used in the same context:
    /// 
    /// * Provisioning Databricks on AWS guide.
    /// * Provisioning Databricks on AWS with Private Link guide.
    /// * Provisioning AWS Databricks workspaces with a Hub &amp; Spoke firewall for data exfiltration protection guide.
    /// * Provisioning Databricks workspaces on GCP with Private Service Connect guide.
    /// * databricks.MwsNetworks to [configure VPC](https://docs.databricks.com/administration-guide/cloud-configurations/aws/customer-managed-vpc.html) &amp; subnets for new workspaces within AWS.
    /// * databricks.MwsPrivateAccessSettings to create a [Private Access Setting](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html#step-5-create-a-private-access-settings-configuration-using-the-databricks-account-api) that can be used as part of a databricks.MwsWorkspaces resource to create a [Databricks Workspace that leverages AWS Private Link](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html).
    /// * databricks.MwsWorkspaces to set up [AWS and GCP workspaces](https://docs.databricks.com/getting-started/overview.html#e2-architecture-1).
    /// 
    /// ## Import
    /// 
    /// -&gt; Importing this resource is not currently supported.
    /// </summary>
    [DatabricksResourceType("databricks:index/mwsVpcEndpoint:MwsVpcEndpoint")]
    public partial class MwsVpcEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account Id that could be found in the Accounts Console for [AWS](https://accounts.cloud.databricks.com/) or [GCP](https://accounts.gcp.databricks.com/)
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the [Databricks PrivateLink documentation](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html)
        /// </summary>
        [Output("awsEndpointServiceId")]
        public Output<string> AwsEndpointServiceId { get; private set; } = null!;

        /// <summary>
        /// ID of configured aws_vpc_endpoint
        /// </summary>
        [Output("awsVpcEndpointId")]
        public Output<string?> AwsVpcEndpointId { get; private set; } = null!;

        /// <summary>
        /// a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
        /// </summary>
        [Output("gcpVpcEndpointInfo")]
        public Output<Outputs.MwsVpcEndpointGcpVpcEndpointInfo?> GcpVpcEndpointInfo { get; private set; } = null!;

        /// <summary>
        /// Region of AWS VPC
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// (AWS Only) State of VPC Endpoint
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("useCase")]
        public Output<string> UseCase { get; private set; } = null!;

        /// <summary>
        /// Canonical unique identifier of VPC Endpoint in Databricks Account
        /// </summary>
        [Output("vpcEndpointId")]
        public Output<string> VpcEndpointId { get; private set; } = null!;

        /// <summary>
        /// Name of VPC Endpoint in Databricks Account
        /// </summary>
        [Output("vpcEndpointName")]
        public Output<string> VpcEndpointName { get; private set; } = null!;


        /// <summary>
        /// Create a MwsVpcEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MwsVpcEndpoint(string name, MwsVpcEndpointArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/mwsVpcEndpoint:MwsVpcEndpoint", name, args ?? new MwsVpcEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MwsVpcEndpoint(string name, Input<string> id, MwsVpcEndpointState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mwsVpcEndpoint:MwsVpcEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MwsVpcEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MwsVpcEndpoint Get(string name, Input<string> id, MwsVpcEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new MwsVpcEndpoint(name, id, state, options);
        }
    }

    public sealed class MwsVpcEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account Id that could be found in the Accounts Console for [AWS](https://accounts.cloud.databricks.com/) or [GCP](https://accounts.gcp.databricks.com/)
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the [Databricks PrivateLink documentation](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html)
        /// </summary>
        [Input("awsEndpointServiceId")]
        public Input<string>? AwsEndpointServiceId { get; set; }

        /// <summary>
        /// ID of configured aws_vpc_endpoint
        /// </summary>
        [Input("awsVpcEndpointId")]
        public Input<string>? AwsVpcEndpointId { get; set; }

        /// <summary>
        /// a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
        /// </summary>
        [Input("gcpVpcEndpointInfo")]
        public Input<Inputs.MwsVpcEndpointGcpVpcEndpointInfoArgs>? GcpVpcEndpointInfo { get; set; }

        /// <summary>
        /// Region of AWS VPC
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (AWS Only) State of VPC Endpoint
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("useCase")]
        public Input<string>? UseCase { get; set; }

        /// <summary>
        /// Canonical unique identifier of VPC Endpoint in Databricks Account
        /// </summary>
        [Input("vpcEndpointId")]
        public Input<string>? VpcEndpointId { get; set; }

        /// <summary>
        /// Name of VPC Endpoint in Databricks Account
        /// </summary>
        [Input("vpcEndpointName", required: true)]
        public Input<string> VpcEndpointName { get; set; } = null!;

        public MwsVpcEndpointArgs()
        {
        }
        public static new MwsVpcEndpointArgs Empty => new MwsVpcEndpointArgs();
    }

    public sealed class MwsVpcEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account Id that could be found in the Accounts Console for [AWS](https://accounts.cloud.databricks.com/) or [GCP](https://accounts.gcp.databricks.com/)
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the [Databricks PrivateLink documentation](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html)
        /// </summary>
        [Input("awsEndpointServiceId")]
        public Input<string>? AwsEndpointServiceId { get; set; }

        /// <summary>
        /// ID of configured aws_vpc_endpoint
        /// </summary>
        [Input("awsVpcEndpointId")]
        public Input<string>? AwsVpcEndpointId { get; set; }

        /// <summary>
        /// a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
        /// </summary>
        [Input("gcpVpcEndpointInfo")]
        public Input<Inputs.MwsVpcEndpointGcpVpcEndpointInfoGetArgs>? GcpVpcEndpointInfo { get; set; }

        /// <summary>
        /// Region of AWS VPC
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (AWS Only) State of VPC Endpoint
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("useCase")]
        public Input<string>? UseCase { get; set; }

        /// <summary>
        /// Canonical unique identifier of VPC Endpoint in Databricks Account
        /// </summary>
        [Input("vpcEndpointId")]
        public Input<string>? VpcEndpointId { get; set; }

        /// <summary>
        /// Name of VPC Endpoint in Databricks Account
        /// </summary>
        [Input("vpcEndpointName")]
        public Input<string>? VpcEndpointName { get; set; }

        public MwsVpcEndpointState()
        {
        }
        public static new MwsVpcEndpointState Empty => new MwsVpcEndpointState();
    }
}
