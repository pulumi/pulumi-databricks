// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/onlineTable:OnlineTable")]
    public partial class OnlineTable : global::Pulumi.CustomResource
    {
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("spec")]
        public Output<Outputs.OnlineTableSpec?> Spec { get; private set; } = null!;

        [Output("statuses")]
        public Output<ImmutableArray<Outputs.OnlineTableStatus>> Statuses { get; private set; } = null!;

        [Output("tableServingUrl")]
        public Output<string> TableServingUrl { get; private set; } = null!;

        [Output("unityCatalogProvisioningState")]
        public Output<string> UnityCatalogProvisioningState { get; private set; } = null!;


        /// <summary>
        /// Create a OnlineTable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OnlineTable(string name, OnlineTableArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/onlineTable:OnlineTable", name, args ?? new OnlineTableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OnlineTable(string name, Input<string> id, OnlineTableState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/onlineTable:OnlineTable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OnlineTable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OnlineTable Get(string name, Input<string> id, OnlineTableState? state = null, CustomResourceOptions? options = null)
        {
            return new OnlineTable(name, id, state, options);
        }
    }

    public sealed class OnlineTableArgs : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("spec")]
        public Input<Inputs.OnlineTableSpecArgs>? Spec { get; set; }

        public OnlineTableArgs()
        {
        }
        public static new OnlineTableArgs Empty => new OnlineTableArgs();
    }

    public sealed class OnlineTableState : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("spec")]
        public Input<Inputs.OnlineTableSpecGetArgs>? Spec { get; set; }

        [Input("statuses")]
        private InputList<Inputs.OnlineTableStatusGetArgs>? _statuses;
        public InputList<Inputs.OnlineTableStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.OnlineTableStatusGetArgs>());
            set => _statuses = value;
        }

        [Input("tableServingUrl")]
        public Input<string>? TableServingUrl { get; set; }

        [Input("unityCatalogProvisioningState")]
        public Input<string>? UnityCatalogProvisioningState { get; set; }

        public OnlineTableState()
        {
        }
        public static new OnlineTableState Empty => new OnlineTableState();
    }
}
