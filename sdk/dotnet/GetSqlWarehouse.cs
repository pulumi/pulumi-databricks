// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetSqlWarehouse
    {
        public static Task<GetSqlWarehouseResult> InvokeAsync(GetSqlWarehouseArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlWarehouseResult>("databricks:index/getSqlWarehouse:getSqlWarehouse", args ?? new GetSqlWarehouseArgs(), options.WithDefaults());

        public static Output<GetSqlWarehouseResult> Invoke(GetSqlWarehouseInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlWarehouseResult>("databricks:index/getSqlWarehouse:getSqlWarehouse", args ?? new GetSqlWarehouseInvokeArgs(), options.WithDefaults());

        public static Output<GetSqlWarehouseResult> Invoke(GetSqlWarehouseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlWarehouseResult>("databricks:index/getSqlWarehouse:getSqlWarehouse", args ?? new GetSqlWarehouseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlWarehouseArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoStopMins")]
        public int? AutoStopMins { get; set; }

        [Input("channel")]
        public Inputs.GetSqlWarehouseChannelArgs? Channel { get; set; }

        [Input("clusterSize")]
        public string? ClusterSize { get; set; }

        [Input("creatorName")]
        public string? CreatorName { get; set; }

        [Input("dataSourceId")]
        public string? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public bool? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public bool? EnableServerlessCompute { get; set; }

        [Input("health")]
        public Inputs.GetSqlWarehouseHealthArgs? Health { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("instanceProfileArn")]
        public string? InstanceProfileArn { get; set; }

        [Input("jdbcUrl")]
        public string? JdbcUrl { get; set; }

        [Input("maxNumClusters")]
        public int? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public int? MinNumClusters { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("numActiveSessions")]
        public int? NumActiveSessions { get; set; }

        [Input("numClusters")]
        public int? NumClusters { get; set; }

        [Input("odbcParams")]
        public Inputs.GetSqlWarehouseOdbcParamsArgs? OdbcParams { get; set; }

        [Input("spotInstancePolicy")]
        public string? SpotInstancePolicy { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("tags")]
        public Inputs.GetSqlWarehouseTagsArgs? Tags { get; set; }

        [Input("warehouseType")]
        public string? WarehouseType { get; set; }

        public GetSqlWarehouseArgs()
        {
        }
        public static new GetSqlWarehouseArgs Empty => new GetSqlWarehouseArgs();
    }

    public sealed class GetSqlWarehouseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoStopMins")]
        public Input<int>? AutoStopMins { get; set; }

        [Input("channel")]
        public Input<Inputs.GetSqlWarehouseChannelInputArgs>? Channel { get; set; }

        [Input("clusterSize")]
        public Input<string>? ClusterSize { get; set; }

        [Input("creatorName")]
        public Input<string>? CreatorName { get; set; }

        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public Input<bool>? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("health")]
        public Input<Inputs.GetSqlWarehouseHealthInputArgs>? Health { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("jdbcUrl")]
        public Input<string>? JdbcUrl { get; set; }

        [Input("maxNumClusters")]
        public Input<int>? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public Input<int>? MinNumClusters { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numActiveSessions")]
        public Input<int>? NumActiveSessions { get; set; }

        [Input("numClusters")]
        public Input<int>? NumClusters { get; set; }

        [Input("odbcParams")]
        public Input<Inputs.GetSqlWarehouseOdbcParamsInputArgs>? OdbcParams { get; set; }

        [Input("spotInstancePolicy")]
        public Input<string>? SpotInstancePolicy { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        public Input<Inputs.GetSqlWarehouseTagsInputArgs>? Tags { get; set; }

        [Input("warehouseType")]
        public Input<string>? WarehouseType { get; set; }

        public GetSqlWarehouseInvokeArgs()
        {
        }
        public static new GetSqlWarehouseInvokeArgs Empty => new GetSqlWarehouseInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlWarehouseResult
    {
        public readonly int AutoStopMins;
        public readonly Outputs.GetSqlWarehouseChannelResult Channel;
        public readonly string ClusterSize;
        public readonly string CreatorName;
        public readonly string DataSourceId;
        public readonly bool EnablePhoton;
        public readonly bool EnableServerlessCompute;
        public readonly Outputs.GetSqlWarehouseHealthResult Health;
        public readonly string Id;
        public readonly string InstanceProfileArn;
        public readonly string JdbcUrl;
        public readonly int MaxNumClusters;
        public readonly int MinNumClusters;
        public readonly string Name;
        public readonly int NumActiveSessions;
        public readonly int NumClusters;
        public readonly Outputs.GetSqlWarehouseOdbcParamsResult OdbcParams;
        public readonly string SpotInstancePolicy;
        public readonly string State;
        public readonly Outputs.GetSqlWarehouseTagsResult Tags;
        public readonly string WarehouseType;

        [OutputConstructor]
        private GetSqlWarehouseResult(
            int autoStopMins,

            Outputs.GetSqlWarehouseChannelResult channel,

            string clusterSize,

            string creatorName,

            string dataSourceId,

            bool enablePhoton,

            bool enableServerlessCompute,

            Outputs.GetSqlWarehouseHealthResult health,

            string id,

            string instanceProfileArn,

            string jdbcUrl,

            int maxNumClusters,

            int minNumClusters,

            string name,

            int numActiveSessions,

            int numClusters,

            Outputs.GetSqlWarehouseOdbcParamsResult odbcParams,

            string spotInstancePolicy,

            string state,

            Outputs.GetSqlWarehouseTagsResult tags,

            string warehouseType)
        {
            AutoStopMins = autoStopMins;
            Channel = channel;
            ClusterSize = clusterSize;
            CreatorName = creatorName;
            DataSourceId = dataSourceId;
            EnablePhoton = enablePhoton;
            EnableServerlessCompute = enableServerlessCompute;
            Health = health;
            Id = id;
            InstanceProfileArn = instanceProfileArn;
            JdbcUrl = jdbcUrl;
            MaxNumClusters = maxNumClusters;
            MinNumClusters = minNumClusters;
            Name = name;
            NumActiveSessions = numActiveSessions;
            NumClusters = numClusters;
            OdbcParams = odbcParams;
            SpotInstancePolicy = spotInstancePolicy;
            State = state;
            Tags = tags;
            WarehouseType = warehouseType;
        }
    }
}
