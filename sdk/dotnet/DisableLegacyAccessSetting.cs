// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    [DatabricksResourceType("databricks:index/disableLegacyAccessSetting:DisableLegacyAccessSetting")]
    public partial class DisableLegacyAccessSetting : global::Pulumi.CustomResource
    {
        [Output("disableLegacyAccess")]
        public Output<Outputs.DisableLegacyAccessSettingDisableLegacyAccess> DisableLegacyAccess { get; private set; } = null!;

        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        [Output("settingName")]
        public Output<string> SettingName { get; private set; } = null!;


        /// <summary>
        /// Create a DisableLegacyAccessSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DisableLegacyAccessSetting(string name, DisableLegacyAccessSettingArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/disableLegacyAccessSetting:DisableLegacyAccessSetting", name, args ?? new DisableLegacyAccessSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DisableLegacyAccessSetting(string name, Input<string> id, DisableLegacyAccessSettingState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/disableLegacyAccessSetting:DisableLegacyAccessSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DisableLegacyAccessSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DisableLegacyAccessSetting Get(string name, Input<string> id, DisableLegacyAccessSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new DisableLegacyAccessSetting(name, id, state, options);
        }
    }

    public sealed class DisableLegacyAccessSettingArgs : global::Pulumi.ResourceArgs
    {
        [Input("disableLegacyAccess", required: true)]
        public Input<Inputs.DisableLegacyAccessSettingDisableLegacyAccessArgs> DisableLegacyAccess { get; set; } = null!;

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("settingName")]
        public Input<string>? SettingName { get; set; }

        public DisableLegacyAccessSettingArgs()
        {
        }
        public static new DisableLegacyAccessSettingArgs Empty => new DisableLegacyAccessSettingArgs();
    }

    public sealed class DisableLegacyAccessSettingState : global::Pulumi.ResourceArgs
    {
        [Input("disableLegacyAccess")]
        public Input<Inputs.DisableLegacyAccessSettingDisableLegacyAccessGetArgs>? DisableLegacyAccess { get; set; }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("settingName")]
        public Input<string>? SettingName { get; set; }

        public DisableLegacyAccessSettingState()
        {
        }
        public static new DisableLegacyAccessSettingState Empty => new DisableLegacyAccessSettingState();
    }
}
