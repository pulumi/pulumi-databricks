// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetExternalLocations
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// List all external locations in the metastore
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetExternalLocations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allExternalLocations"] = all.Apply(getExternalLocationsResult =&gt; getExternalLocationsResult.Names),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.ExternalLocation to get information about a single external location
        /// * databricks.ExternalLocation to manage external locations within Unity Catalog.
        /// </summary>
        public static Task<GetExternalLocationsResult> InvokeAsync(GetExternalLocationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalLocationsResult>("databricks:index/getExternalLocations:getExternalLocations", args ?? new GetExternalLocationsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// List all external locations in the metastore
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Databricks.GetExternalLocations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["allExternalLocations"] = all.Apply(getExternalLocationsResult =&gt; getExternalLocationsResult.Names),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Related Resources
        /// 
        /// The following resources are used in the same context:
        /// 
        /// * databricks.ExternalLocation to get information about a single external location
        /// * databricks.ExternalLocation to manage external locations within Unity Catalog.
        /// </summary>
        public static Output<GetExternalLocationsResult> Invoke(GetExternalLocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalLocationsResult>("databricks:index/getExternalLocations:getExternalLocations", args ?? new GetExternalLocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalLocationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private List<string>? _names;

        /// <summary>
        /// List of names of databricks.ExternalLocation in the metastore
        /// </summary>
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        public GetExternalLocationsArgs()
        {
        }
        public static new GetExternalLocationsArgs Empty => new GetExternalLocationsArgs();
    }

    public sealed class GetExternalLocationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// List of names of databricks.ExternalLocation in the metastore
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        public GetExternalLocationsInvokeArgs()
        {
        }
        public static new GetExternalLocationsInvokeArgs Empty => new GetExternalLocationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalLocationsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of names of databricks.ExternalLocation in the metastore
        /// </summary>
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetExternalLocationsResult(
            string id,

            ImmutableArray<string> names)
        {
            Id = id;
            Names = names;
        }
    }
}
