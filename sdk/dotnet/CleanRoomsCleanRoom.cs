// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// A Clean Room is a secure environment for data collaboration that enables multiple organizations to analyze their data together while maintaining privacy and security. Clean Rooms provide a controlled environment where data can be shared and analyzed without exposing the underlying raw data.
    /// 
    /// ## Example Usage
    /// 
    /// # Example: Clean Room Resource
    /// 
    /// ## Import
    /// 
    /// As of Pulumi v1.5, resources can be imported through configuration.
    /// 
    /// hcl
    /// 
    /// import {
    /// 
    ///   id = "name"
    /// 
    ///   to = databricks_clean_rooms_clean_room.this
    /// 
    /// }
    /// 
    /// If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
    /// 
    /// ```sh
    /// $ pulumi import databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom databricks_clean_rooms_clean_room "name"
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom")]
    public partial class CleanRoomsCleanRoom : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
        /// </summary>
        [Output("accessRestricted")]
        public Output<string> AccessRestricted { get; private set; } = null!;

        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// (integer) - When the clean room was created, in epoch milliseconds
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// (string) - The alias of the collaborator tied to the local clean room
        /// </summary>
        [Output("localCollaboratorAlias")]
        public Output<string> LocalCollaboratorAlias { get; private set; } = null!;

        /// <summary>
        /// The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
        /// using the separate CreateCleanRoomOutputCatalog API
        /// </summary>
        [Output("outputCatalog")]
        public Output<Outputs.CleanRoomsCleanRoomOutputCatalog> OutputCatalog { get; private set; } = null!;

        /// <summary>
        /// This is the Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        [Output("owner")]
        public Output<string?> Owner { get; private set; } = null!;

        /// <summary>
        /// Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        [Output("remoteDetailedInfo")]
        public Output<Outputs.CleanRoomsCleanRoomRemoteDetailedInfo?> RemoteDetailedInfo { get; private set; } = null!;

        /// <summary>
        /// (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// (integer) - When the clean room was last updated, in epoch milliseconds
        /// </summary>
        [Output("updatedAt")]
        public Output<int> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Output("workspaceId")]
        public Output<string?> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a CleanRoomsCleanRoom resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CleanRoomsCleanRoom(string name, CleanRoomsCleanRoomArgs? args = null, CustomResourceOptions? options = null)
            : base("databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom", name, args ?? new CleanRoomsCleanRoomArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CleanRoomsCleanRoom(string name, Input<string> id, CleanRoomsCleanRoomState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CleanRoomsCleanRoom resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CleanRoomsCleanRoom Get(string name, Input<string> id, CleanRoomsCleanRoomState? state = null, CustomResourceOptions? options = null)
        {
            return new CleanRoomsCleanRoom(name, id, state, options);
        }
    }

    public sealed class CleanRoomsCleanRoomArgs : global::Pulumi.ResourceArgs
    {
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// This is the Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        [Input("remoteDetailedInfo")]
        public Input<Inputs.CleanRoomsCleanRoomRemoteDetailedInfoArgs>? RemoteDetailedInfo { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public CleanRoomsCleanRoomArgs()
        {
        }
        public static new CleanRoomsCleanRoomArgs Empty => new CleanRoomsCleanRoomArgs();
    }

    public sealed class CleanRoomsCleanRoomState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
        /// </summary>
        [Input("accessRestricted")]
        public Input<string>? AccessRestricted { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// (integer) - When the clean room was created, in epoch milliseconds
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// (string) - The alias of the collaborator tied to the local clean room
        /// </summary>
        [Input("localCollaboratorAlias")]
        public Input<string>? LocalCollaboratorAlias { get; set; }

        /// <summary>
        /// The name of the clean room.
        /// It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
        /// using the separate CreateCleanRoomOutputCatalog API
        /// </summary>
        [Input("outputCatalog")]
        public Input<Inputs.CleanRoomsCleanRoomOutputCatalogGetArgs>? OutputCatalog { get; set; }

        /// <summary>
        /// This is the Databricks username of the owner of the local clean room securable for permission management
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Central clean room details. During creation, users need to specify
        /// cloud_vendor, region, and collaborators.global_metastore_id.
        /// This field will not be filled in the ListCleanRooms call
        /// </summary>
        [Input("remoteDetailedInfo")]
        public Input<Inputs.CleanRoomsCleanRoomRemoteDetailedInfoGetArgs>? RemoteDetailedInfo { get; set; }

        /// <summary>
        /// (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// (integer) - When the clean room was last updated, in epoch milliseconds
        /// </summary>
        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        /// <summary>
        /// Workspace ID of the resource
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public CleanRoomsCleanRoomState()
        {
        }
        public static new CleanRoomsCleanRoomState Empty => new CleanRoomsCleanRoomState();
    }
}
