// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Exported attributes
 *
 * Data source exposes the following attributes:
 *
 * * `id` -  The id of the calling user.
 * * `externalId` - ID of the user in an external identity provider.
 * * `userName` - Name of the user, e.g. `mr.foo@example.com`. If the currently logged-in identity is a service principal, returns the application ID, e.g. `11111111-2222-3333-4444-555666777888`
 * * `home` - Home folder of the user, e.g. `/Users/mr.foo@example.com`.
 * * `repos` - Personal Repos location of the user, e.g. `/Repos/mr.foo@example.com`.
 * * `alphanumeric` - Alphanumeric representation of user local name. e.g. `mrFoo`.
 * * `workspaceUrl` - URL of the current Databricks workspace.
 * * `aclPrincipalId` - identifier for use in databricks_access_control_rule_set, e.g. `users/mr.foo@example.com` if current user is user, or `servicePrincipals/00000000-0000-0000-0000-000000000000` if current user is service principal.
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * End to end workspace management guide
 * * databricks.Directory to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
 * * databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
 * * databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
 */
export function getCurrentUser(opts?: pulumi.InvokeOptions): Promise<GetCurrentUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getCurrentUser:getCurrentUser", {
    }, opts);
}

/**
 * A collection of values returned by getCurrentUser.
 */
export interface GetCurrentUserResult {
    readonly aclPrincipalId: string;
    readonly alphanumeric: string;
    readonly externalId: string;
    readonly home: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly repos: string;
    readonly userName: string;
    readonly workspaceUrl: string;
}
/**
 * ## Exported attributes
 *
 * Data source exposes the following attributes:
 *
 * * `id` -  The id of the calling user.
 * * `externalId` - ID of the user in an external identity provider.
 * * `userName` - Name of the user, e.g. `mr.foo@example.com`. If the currently logged-in identity is a service principal, returns the application ID, e.g. `11111111-2222-3333-4444-555666777888`
 * * `home` - Home folder of the user, e.g. `/Users/mr.foo@example.com`.
 * * `repos` - Personal Repos location of the user, e.g. `/Repos/mr.foo@example.com`.
 * * `alphanumeric` - Alphanumeric representation of user local name. e.g. `mrFoo`.
 * * `workspaceUrl` - URL of the current Databricks workspace.
 * * `aclPrincipalId` - identifier for use in databricks_access_control_rule_set, e.g. `users/mr.foo@example.com` if current user is user, or `servicePrincipals/00000000-0000-0000-0000-000000000000` if current user is service principal.
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * End to end workspace management guide
 * * databricks.Directory to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
 * * databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
 * * databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
 */
export function getCurrentUserOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetCurrentUserResult> {
    return pulumi.output(getCurrentUser(opts))
}
