// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the databricks package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'databricks';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string | undefined>;
    declare public readonly actionsIdTokenRequestToken: pulumi.Output<string | undefined>;
    declare public readonly actionsIdTokenRequestUrl: pulumi.Output<string | undefined>;
    declare public readonly audience: pulumi.Output<string | undefined>;
    declare public readonly authType: pulumi.Output<string | undefined>;
    declare public readonly azureClientId: pulumi.Output<string | undefined>;
    declare public readonly azureClientSecret: pulumi.Output<string | undefined>;
    declare public readonly azureEnvironment: pulumi.Output<string | undefined>;
    declare public readonly azureLoginAppId: pulumi.Output<string | undefined>;
    declare public readonly azureTenantId: pulumi.Output<string | undefined>;
    declare public readonly azureWorkspaceResourceId: pulumi.Output<string | undefined>;
    declare public readonly clientId: pulumi.Output<string | undefined>;
    declare public readonly clientSecret: pulumi.Output<string | undefined>;
    declare public readonly clusterId: pulumi.Output<string | undefined>;
    declare public readonly configFile: pulumi.Output<string | undefined>;
    declare public readonly databricksCliPath: pulumi.Output<string | undefined>;
    declare public readonly databricksIdTokenFilepath: pulumi.Output<string | undefined>;
    declare public readonly googleCredentials: pulumi.Output<string | undefined>;
    declare public readonly googleServiceAccount: pulumi.Output<string | undefined>;
    declare public readonly host: pulumi.Output<string | undefined>;
    declare public readonly metadataServiceUrl: pulumi.Output<string | undefined>;
    declare public readonly oidcTokenEnv: pulumi.Output<string | undefined>;
    declare public readonly password: pulumi.Output<string | undefined>;
    declare public readonly profile: pulumi.Output<string | undefined>;
    declare public readonly serverlessComputeId: pulumi.Output<string | undefined>;
    declare public readonly token: pulumi.Output<string | undefined>;
    declare public readonly username: pulumi.Output<string | undefined>;
    declare public readonly warehouseId: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["actionsIdTokenRequestToken"] = args?.actionsIdTokenRequestToken;
            resourceInputs["actionsIdTokenRequestUrl"] = args?.actionsIdTokenRequestUrl;
            resourceInputs["audience"] = args?.audience;
            resourceInputs["authType"] = args?.authType;
            resourceInputs["azureClientId"] = args?.azureClientId;
            resourceInputs["azureClientSecret"] = args?.azureClientSecret ? pulumi.secret(args.azureClientSecret) : undefined;
            resourceInputs["azureEnvironment"] = args?.azureEnvironment;
            resourceInputs["azureLoginAppId"] = args?.azureLoginAppId;
            resourceInputs["azureTenantId"] = args?.azureTenantId;
            resourceInputs["azureUseMsi"] = pulumi.output(args?.azureUseMsi).apply(JSON.stringify);
            resourceInputs["azureWorkspaceResourceId"] = args?.azureWorkspaceResourceId;
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["configFile"] = args?.configFile;
            resourceInputs["databricksCliPath"] = args?.databricksCliPath;
            resourceInputs["databricksIdTokenFilepath"] = args?.databricksIdTokenFilepath;
            resourceInputs["debugHeaders"] = pulumi.output(args?.debugHeaders).apply(JSON.stringify);
            resourceInputs["debugTruncateBytes"] = pulumi.output(args?.debugTruncateBytes).apply(JSON.stringify);
            resourceInputs["googleCredentials"] = args?.googleCredentials ? pulumi.secret(args.googleCredentials) : undefined;
            resourceInputs["googleServiceAccount"] = args?.googleServiceAccount;
            resourceInputs["host"] = args?.host;
            resourceInputs["httpTimeoutSeconds"] = pulumi.output(args?.httpTimeoutSeconds).apply(JSON.stringify);
            resourceInputs["metadataServiceUrl"] = args?.metadataServiceUrl ? pulumi.secret(args.metadataServiceUrl) : undefined;
            resourceInputs["oidcTokenEnv"] = args?.oidcTokenEnv;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["profile"] = args?.profile;
            resourceInputs["rateLimit"] = pulumi.output(args?.rateLimit).apply(JSON.stringify);
            resourceInputs["retryTimeoutSeconds"] = pulumi.output(args?.retryTimeoutSeconds).apply(JSON.stringify);
            resourceInputs["serverlessComputeId"] = args?.serverlessComputeId;
            resourceInputs["skipVerify"] = pulumi.output(args?.skipVerify).apply(JSON.stringify);
            resourceInputs["token"] = args?.token ? pulumi.secret(args.token) : undefined;
            resourceInputs["username"] = args?.username;
            resourceInputs["warehouseId"] = args?.warehouseId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["azureClientSecret", "clientSecret", "googleCredentials", "metadataServiceUrl", "password", "token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:databricks/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    accountId?: pulumi.Input<string>;
    actionsIdTokenRequestToken?: pulumi.Input<string>;
    actionsIdTokenRequestUrl?: pulumi.Input<string>;
    audience?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    azureClientId?: pulumi.Input<string>;
    azureClientSecret?: pulumi.Input<string>;
    azureEnvironment?: pulumi.Input<string>;
    azureLoginAppId?: pulumi.Input<string>;
    azureTenantId?: pulumi.Input<string>;
    azureUseMsi?: pulumi.Input<boolean>;
    azureWorkspaceResourceId?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    configFile?: pulumi.Input<string>;
    databricksCliPath?: pulumi.Input<string>;
    databricksIdTokenFilepath?: pulumi.Input<string>;
    debugHeaders?: pulumi.Input<boolean>;
    debugTruncateBytes?: pulumi.Input<number>;
    googleCredentials?: pulumi.Input<string>;
    googleServiceAccount?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    httpTimeoutSeconds?: pulumi.Input<number>;
    metadataServiceUrl?: pulumi.Input<string>;
    oidcTokenEnv?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    profile?: pulumi.Input<string>;
    rateLimit?: pulumi.Input<number>;
    retryTimeoutSeconds?: pulumi.Input<number>;
    serverlessComputeId?: pulumi.Input<string>;
    skipVerify?: pulumi.Input<boolean>;
    token?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    warehouseId?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
