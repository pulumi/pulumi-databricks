// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * Listing all volumes in a _things_ databricks.Schema of a  _sandbox_ databricks_catalog:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const this = databricks.getVolumes({
 *     catalogName: "sandbox",
 *     schemaName: "things",
 * });
 * export const allVolumes = _this;
 * ```
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Volume to manage volumes within Unity Catalog.
 * * databricks.Schema to manage schemas within Unity Catalog.
 * * databricks.Catalog to manage catalogs within Unity Catalog.
 */
export function getVolumes(args: GetVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getVolumes:getVolumes", {
        "catalogName": args.catalogName,
        "ids": args.ids,
        "schemaName": args.schemaName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolumes.
 */
export interface GetVolumesArgs {
    /**
     * Name of databricks_catalog
     */
    catalogName: string;
    /**
     * a list of databricks.Volume full names: *`catalog`.`schema`.`volume`*
     */
    ids?: string[];
    /**
     * Name of databricks_schema
     */
    schemaName: string;
}

/**
 * A collection of values returned by getVolumes.
 */
export interface GetVolumesResult {
    readonly catalogName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * a list of databricks.Volume full names: *`catalog`.`schema`.`volume`*
     */
    readonly ids: string[];
    readonly schemaName: string;
}
/**
 * ## Example Usage
 *
 * Listing all volumes in a _things_ databricks.Schema of a  _sandbox_ databricks_catalog:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const this = databricks.getVolumes({
 *     catalogName: "sandbox",
 *     schemaName: "things",
 * });
 * export const allVolumes = _this;
 * ```
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Volume to manage volumes within Unity Catalog.
 * * databricks.Schema to manage schemas within Unity Catalog.
 * * databricks.Catalog to manage catalogs within Unity Catalog.
 */
export function getVolumesOutput(args: GetVolumesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumesResult> {
    return pulumi.output(args).apply((a: any) => getVolumes(a, opts))
}

/**
 * A collection of arguments for invoking getVolumes.
 */
export interface GetVolumesOutputArgs {
    /**
     * Name of databricks_catalog
     */
    catalogName: pulumi.Input<string>;
    /**
     * a list of databricks.Volume full names: *`catalog`.`schema`.`volume`*
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of databricks_schema
     */
    schemaName: pulumi.Input<string>;
}
