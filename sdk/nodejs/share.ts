// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Share extends pulumi.CustomResource {
    /**
     * Get an existing Share resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ShareState, opts?: pulumi.CustomResourceOptions): Share {
        return new Share(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/share:Share';

    /**
     * Returns true if the given object is an instance of Share.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Share {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Share.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly createdAt!: pulumi.Output<number>;
    public readonly createdBy!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly objects!: pulumi.Output<outputs.ShareObject[] | undefined>;
    public readonly owner!: pulumi.Output<string | undefined>;
    public readonly storageLocation!: pulumi.Output<string | undefined>;
    public readonly storageRoot!: pulumi.Output<string | undefined>;
    public readonly updatedAt!: pulumi.Output<number>;
    public readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a Share resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ShareArgs | ShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ShareState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objects"] = state ? state.objects : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["storageLocation"] = state ? state.storageLocation : undefined;
            resourceInputs["storageRoot"] = state ? state.storageRoot : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as ShareArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objects"] = args ? args.objects : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["storageLocation"] = args ? args.storageLocation : undefined;
            resourceInputs["storageRoot"] = args ? args.storageRoot : undefined;
            resourceInputs["updatedAt"] = args ? args.updatedAt : undefined;
            resourceInputs["updatedBy"] = args ? args.updatedBy : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Share.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Share resources.
 */
export interface ShareState {
    comment?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objects?: pulumi.Input<pulumi.Input<inputs.ShareObject>[]>;
    owner?: pulumi.Input<string>;
    storageLocation?: pulumi.Input<string>;
    storageRoot?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<number>;
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Share resource.
 */
export interface ShareArgs {
    comment?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objects?: pulumi.Input<pulumi.Input<inputs.ShareObject>[]>;
    owner?: pulumi.Input<string>;
    storageLocation?: pulumi.Input<string>;
    storageRoot?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<number>;
    updatedBy?: pulumi.Input<string>;
}
