// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single Database Catalog.
 *
 * ## Example Usage
 *
 * Referring to a Database Catalog by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getDatabaseDatabaseCatalog({
 *     name: "my-database-catalog",
 * });
 * ```
 */
export function getDatabaseDatabaseCatalog(args: GetDatabaseDatabaseCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDatabaseCatalogResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getDatabaseDatabaseCatalog:getDatabaseDatabaseCatalog", {
        "createDatabaseIfNotExists": args.createDatabaseIfNotExists,
        "databaseInstanceName": args.databaseInstanceName,
        "databaseName": args.databaseName,
        "name": args.name,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseDatabaseCatalog.
 */
export interface GetDatabaseDatabaseCatalogArgs {
    /**
     * (boolean)
     */
    createDatabaseIfNotExists?: boolean;
    /**
     * (string) - The name of the DatabaseInstance housing the database
     */
    databaseInstanceName: string;
    /**
     * (string) - The name of the database (in a instance) associated with the catalog
     */
    databaseName: string;
    /**
     * The name of the catalog in UC
     */
    name: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getDatabaseDatabaseCatalog.
 */
export interface GetDatabaseDatabaseCatalogResult {
    /**
     * (boolean)
     */
    readonly createDatabaseIfNotExists: boolean;
    /**
     * (string) - The name of the DatabaseInstance housing the database
     */
    readonly databaseInstanceName: string;
    /**
     * (string) - The name of the database (in a instance) associated with the catalog
     */
    readonly databaseName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The name of the catalog in UC
     */
    readonly name: string;
    /**
     * (string)
     */
    readonly uid: string;
    readonly workspaceId?: string;
}
/**
 * This data source can be used to get a single Database Catalog.
 *
 * ## Example Usage
 *
 * Referring to a Database Catalog by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getDatabaseDatabaseCatalog({
 *     name: "my-database-catalog",
 * });
 * ```
 */
export function getDatabaseDatabaseCatalogOutput(args: GetDatabaseDatabaseCatalogOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseDatabaseCatalogResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getDatabaseDatabaseCatalog:getDatabaseDatabaseCatalog", {
        "createDatabaseIfNotExists": args.createDatabaseIfNotExists,
        "databaseInstanceName": args.databaseInstanceName,
        "databaseName": args.databaseName,
        "name": args.name,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseDatabaseCatalog.
 */
export interface GetDatabaseDatabaseCatalogOutputArgs {
    /**
     * (boolean)
     */
    createDatabaseIfNotExists?: pulumi.Input<boolean>;
    /**
     * (string) - The name of the DatabaseInstance housing the database
     */
    databaseInstanceName: pulumi.Input<string>;
    /**
     * (string) - The name of the database (in a instance) associated with the catalog
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the catalog in UC
     */
    name: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
