// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single clean room.
 *
 * ## Example Usage
 *
 * # Example: Datasource (Singular) Artifact
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const example = databricks.getCleanRoomsCleanRoom({
 *     name: "example-clean-room",
 * });
 * ```
 */
export function getCleanRoomsCleanRoom(args?: GetCleanRoomsCleanRoomArgs, opts?: pulumi.InvokeOptions): Promise<GetCleanRoomsCleanRoomResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getCleanRoomsCleanRoom:getCleanRoomsCleanRoom", {
        "comment": args.comment,
        "name": args.name,
        "owner": args.owner,
        "remoteDetailedInfo": args.remoteDetailedInfo,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCleanRoomsCleanRoom.
 */
export interface GetCleanRoomsCleanRoomArgs {
    /**
     * (string)
     */
    comment?: string;
    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    name?: string;
    /**
     * (string) - This is the Databricks username of the owner of the local clean room securable for permission management
     */
    owner?: string;
    /**
     * (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    remoteDetailedInfo?: inputs.GetCleanRoomsCleanRoomRemoteDetailedInfo;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getCleanRoomsCleanRoom.
 */
export interface GetCleanRoomsCleanRoomResult {
    /**
     * (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
     */
    readonly accessRestricted: string;
    /**
     * (string)
     */
    readonly comment?: string;
    /**
     * (integer) - When the clean room was created, in epoch milliseconds
     */
    readonly createdAt: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The alias of the collaborator tied to the local clean room
     */
    readonly localCollaboratorAlias: string;
    /**
     * (string) - The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    readonly name?: string;
    /**
     * (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
     * using the separate CreateCleanRoomOutputCatalog API
     */
    readonly outputCatalog: outputs.GetCleanRoomsCleanRoomOutputCatalog;
    /**
     * (string) - This is the Databricks username of the owner of the local clean room securable for permission management
     */
    readonly owner?: string;
    /**
     * (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    readonly remoteDetailedInfo?: outputs.GetCleanRoomsCleanRoomRemoteDetailedInfo;
    /**
     * (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     */
    readonly status: string;
    /**
     * (integer) - When the clean room was last updated, in epoch milliseconds
     */
    readonly updatedAt: number;
    readonly workspaceId?: string;
}
/**
 * This data source can be used to get a single clean room.
 *
 * ## Example Usage
 *
 * # Example: Datasource (Singular) Artifact
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const example = databricks.getCleanRoomsCleanRoom({
 *     name: "example-clean-room",
 * });
 * ```
 */
export function getCleanRoomsCleanRoomOutput(args?: GetCleanRoomsCleanRoomOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCleanRoomsCleanRoomResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getCleanRoomsCleanRoom:getCleanRoomsCleanRoom", {
        "comment": args.comment,
        "name": args.name,
        "owner": args.owner,
        "remoteDetailedInfo": args.remoteDetailedInfo,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCleanRoomsCleanRoom.
 */
export interface GetCleanRoomsCleanRoomOutputArgs {
    /**
     * (string)
     */
    comment?: pulumi.Input<string>;
    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    name?: pulumi.Input<string>;
    /**
     * (string) - This is the Databricks username of the owner of the local clean room securable for permission management
     */
    owner?: pulumi.Input<string>;
    /**
     * (CleanRoomRemoteDetail) - Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    remoteDetailedInfo?: pulumi.Input<inputs.GetCleanRoomsCleanRoomRemoteDetailedInfoArgs>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
