// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves details about databricks.Schema that was created by Pulumi or manually.
 * A schema can be identified by its two-level (fully qualified) name (in the form of: `catalogName`.`schemaName`) as input. This can be retrieved programmatically using databricks.getSchemas data source.
 */
export function getSchema(args: GetSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getSchema:getSchema", {
        "id": args.id,
        "name": args.name,
        "schemaInfo": args.schemaInfo,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchema.
 */
export interface GetSchemaArgs {
    /**
     * ID of this Unity Catalog Schema in form of `<catalog>.<schema>`.
     */
    id?: string;
    /**
     * a fully qualified name of databricks_schema: *`catalog`.`schema`*
     */
    name: string;
    /**
     * `SchemaInfo` object for a Unity Catalog schema. This contains the following attributes:
     */
    schemaInfo?: inputs.GetSchemaSchemaInfo;
}

/**
 * A collection of values returned by getSchema.
 */
export interface GetSchemaResult {
    /**
     * ID of this Unity Catalog Schema in form of `<catalog>.<schema>`.
     */
    readonly id: string;
    /**
     * Name of schema, relative to parent catalog.
     */
    readonly name: string;
    /**
     * `SchemaInfo` object for a Unity Catalog schema. This contains the following attributes:
     */
    readonly schemaInfo: outputs.GetSchemaSchemaInfo;
}
/**
 * Retrieves details about databricks.Schema that was created by Pulumi or manually.
 * A schema can be identified by its two-level (fully qualified) name (in the form of: `catalogName`.`schemaName`) as input. This can be retrieved programmatically using databricks.getSchemas data source.
 */
export function getSchemaOutput(args: GetSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaResult> {
    return pulumi.output(args).apply((a: any) => getSchema(a, opts))
}

/**
 * A collection of arguments for invoking getSchema.
 */
export interface GetSchemaOutputArgs {
    /**
     * ID of this Unity Catalog Schema in form of `<catalog>.<schema>`.
     */
    id?: pulumi.Input<string>;
    /**
     * a fully qualified name of databricks_schema: *`catalog`.`schema`*
     */
    name: pulumi.Input<string>;
    /**
     * `SchemaInfo` object for a Unity Catalog schema. This contains the following attributes:
     */
    schemaInfo?: pulumi.Input<inputs.GetSchemaSchemaInfoArgs>;
}
