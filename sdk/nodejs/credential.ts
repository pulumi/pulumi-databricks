// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Credential extends pulumi.CustomResource {
    /**
     * Get an existing Credential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialState, opts?: pulumi.CustomResourceOptions): Credential {
        return new Credential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/credential:Credential';

    /**
     * Returns true if the given object is an instance of Credential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Credential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Credential.__pulumiType;
    }

    public readonly awsIamRole!: pulumi.Output<outputs.CredentialAwsIamRole | undefined>;
    public readonly azureManagedIdentity!: pulumi.Output<outputs.CredentialAzureManagedIdentity | undefined>;
    public readonly azureServicePrincipal!: pulumi.Output<outputs.CredentialAzureServicePrincipal | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly createdAt!: pulumi.Output<number>;
    public readonly createdBy!: pulumi.Output<string>;
    public /*out*/ readonly credentialId!: pulumi.Output<string>;
    public readonly databricksGcpServiceAccount!: pulumi.Output<outputs.CredentialDatabricksGcpServiceAccount>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    public readonly forceUpdate!: pulumi.Output<boolean | undefined>;
    public readonly fullName!: pulumi.Output<string>;
    public readonly isolationMode!: pulumi.Output<string>;
    public readonly metastoreId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly owner!: pulumi.Output<string>;
    public readonly purpose!: pulumi.Output<string>;
    public readonly readOnly!: pulumi.Output<boolean | undefined>;
    public readonly skipValidation!: pulumi.Output<boolean | undefined>;
    public readonly updatedAt!: pulumi.Output<number>;
    public readonly updatedBy!: pulumi.Output<string>;
    public readonly usedForManagedStorage!: pulumi.Output<boolean>;

    /**
     * Create a Credential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialArgs | CredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialState | undefined;
            resourceInputs["awsIamRole"] = state ? state.awsIamRole : undefined;
            resourceInputs["azureManagedIdentity"] = state ? state.azureManagedIdentity : undefined;
            resourceInputs["azureServicePrincipal"] = state ? state.azureServicePrincipal : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["credentialId"] = state ? state.credentialId : undefined;
            resourceInputs["databricksGcpServiceAccount"] = state ? state.databricksGcpServiceAccount : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["forceUpdate"] = state ? state.forceUpdate : undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["isolationMode"] = state ? state.isolationMode : undefined;
            resourceInputs["metastoreId"] = state ? state.metastoreId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["skipValidation"] = state ? state.skipValidation : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["usedForManagedStorage"] = state ? state.usedForManagedStorage : undefined;
        } else {
            const args = argsOrState as CredentialArgs | undefined;
            if ((!args || args.purpose === undefined) && !opts.urn) {
                throw new Error("Missing required property 'purpose'");
            }
            resourceInputs["awsIamRole"] = args ? args.awsIamRole : undefined;
            resourceInputs["azureManagedIdentity"] = args ? args.azureManagedIdentity : undefined;
            resourceInputs["azureServicePrincipal"] = args ? args.azureServicePrincipal : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["databricksGcpServiceAccount"] = args ? args.databricksGcpServiceAccount : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["forceUpdate"] = args ? args.forceUpdate : undefined;
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["isolationMode"] = args ? args.isolationMode : undefined;
            resourceInputs["metastoreId"] = args ? args.metastoreId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["readOnly"] = args ? args.readOnly : undefined;
            resourceInputs["skipValidation"] = args ? args.skipValidation : undefined;
            resourceInputs["updatedAt"] = args ? args.updatedAt : undefined;
            resourceInputs["updatedBy"] = args ? args.updatedBy : undefined;
            resourceInputs["usedForManagedStorage"] = args ? args.usedForManagedStorage : undefined;
            resourceInputs["credentialId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Credential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Credential resources.
 */
export interface CredentialState {
    awsIamRole?: pulumi.Input<inputs.CredentialAwsIamRole>;
    azureManagedIdentity?: pulumi.Input<inputs.CredentialAzureManagedIdentity>;
    azureServicePrincipal?: pulumi.Input<inputs.CredentialAzureServicePrincipal>;
    comment?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    credentialId?: pulumi.Input<string>;
    databricksGcpServiceAccount?: pulumi.Input<inputs.CredentialDatabricksGcpServiceAccount>;
    forceDestroy?: pulumi.Input<boolean>;
    forceUpdate?: pulumi.Input<boolean>;
    fullName?: pulumi.Input<string>;
    isolationMode?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    purpose?: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    skipValidation?: pulumi.Input<boolean>;
    updatedAt?: pulumi.Input<number>;
    updatedBy?: pulumi.Input<string>;
    usedForManagedStorage?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Credential resource.
 */
export interface CredentialArgs {
    awsIamRole?: pulumi.Input<inputs.CredentialAwsIamRole>;
    azureManagedIdentity?: pulumi.Input<inputs.CredentialAzureManagedIdentity>;
    azureServicePrincipal?: pulumi.Input<inputs.CredentialAzureServicePrincipal>;
    comment?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    databricksGcpServiceAccount?: pulumi.Input<inputs.CredentialDatabricksGcpServiceAccount>;
    forceDestroy?: pulumi.Input<boolean>;
    forceUpdate?: pulumi.Input<boolean>;
    fullName?: pulumi.Input<string>;
    isolationMode?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    purpose: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    skipValidation?: pulumi.Input<boolean>;
    updatedAt?: pulumi.Input<number>;
    updatedBy?: pulumi.Input<string>;
    usedForManagedStorage?: pulumi.Input<boolean>;
}
