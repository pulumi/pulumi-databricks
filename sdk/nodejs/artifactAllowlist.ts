// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ArtifactAllowlist extends pulumi.CustomResource {
    /**
     * Get an existing ArtifactAllowlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArtifactAllowlistState, opts?: pulumi.CustomResourceOptions): ArtifactAllowlist {
        return new ArtifactAllowlist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/artifactAllowlist:ArtifactAllowlist';

    /**
     * Returns true if the given object is an instance of ArtifactAllowlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArtifactAllowlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArtifactAllowlist.__pulumiType;
    }

    public readonly artifactMatchers!: pulumi.Output<outputs.ArtifactAllowlistArtifactMatcher[]>;
    public readonly artifactType!: pulumi.Output<string>;
    public readonly createdAt!: pulumi.Output<number>;
    public readonly createdBy!: pulumi.Output<string>;
    public readonly metastoreId!: pulumi.Output<string>;

    /**
     * Create a ArtifactAllowlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArtifactAllowlistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArtifactAllowlistArgs | ArtifactAllowlistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArtifactAllowlistState | undefined;
            resourceInputs["artifactMatchers"] = state ? state.artifactMatchers : undefined;
            resourceInputs["artifactType"] = state ? state.artifactType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["metastoreId"] = state ? state.metastoreId : undefined;
        } else {
            const args = argsOrState as ArtifactAllowlistArgs | undefined;
            if ((!args || args.artifactMatchers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactMatchers'");
            }
            if ((!args || args.artifactType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactType'");
            }
            resourceInputs["artifactMatchers"] = args ? args.artifactMatchers : undefined;
            resourceInputs["artifactType"] = args ? args.artifactType : undefined;
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["metastoreId"] = args ? args.metastoreId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ArtifactAllowlist.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ArtifactAllowlist resources.
 */
export interface ArtifactAllowlistState {
    artifactMatchers?: pulumi.Input<pulumi.Input<inputs.ArtifactAllowlistArtifactMatcher>[]>;
    artifactType?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ArtifactAllowlist resource.
 */
export interface ArtifactAllowlistArgs {
    artifactMatchers: pulumi.Input<pulumi.Input<inputs.ArtifactAllowlistArtifactMatcher>[]>;
    artifactType: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
}
