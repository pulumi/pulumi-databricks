// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * In Databricks Runtime 13.3 and above, you can add libraries and init scripts to the allowlist in UC so that users can leverage these artifacts on compute configured with shared access mode.
 *
 * > It is required to define all allowlist for an artifact type in a single resource, otherwise Pulumi cannot guarantee config drift prevention.
 *
 * > This resource can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const initScripts = new databricks.ArtifactAllowlist("init_scripts", {
 *     artifactType: "INIT_SCRIPT",
 *     artifactMatchers: [{
 *         artifact: "/Volumes/inits",
 *         matchType: "PREFIX_MATCH",
 *     }],
 * });
 * ```
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Cluster to create [Databricks Clusters](https://docs.databricks.com/clusters/index.html).
 * * databricks.Library to install a [library](https://docs.databricks.com/libraries/index.html) on databricks_cluster.
 *
 * ## Import
 *
 * This resource can be imported by name:
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_artifact_allowlist.this
 *
 *   id = "<metastore_id>|<artifact_type>"
 *
 * }
 *
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 *
 * bash
 *
 * ```sh
 * $ pulumi import databricks:index/artifactAllowlist:ArtifactAllowlist this "<metastore_id>|<artifact_type>"
 * ```
 */
export class ArtifactAllowlist extends pulumi.CustomResource {
    /**
     * Get an existing ArtifactAllowlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArtifactAllowlistState, opts?: pulumi.CustomResourceOptions): ArtifactAllowlist {
        return new ArtifactAllowlist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/artifactAllowlist:ArtifactAllowlist';

    /**
     * Returns true if the given object is an instance of ArtifactAllowlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArtifactAllowlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArtifactAllowlist.__pulumiType;
    }

    declare public readonly artifactMatchers: pulumi.Output<outputs.ArtifactAllowlistArtifactMatcher[]>;
    /**
     * The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
     */
    declare public readonly artifactType: pulumi.Output<string>;
    /**
     * Time at which this artifact allowlist was set.
     */
    declare public readonly createdAt: pulumi.Output<number>;
    /**
     * Identity that set the artifact allowlist.
     */
    declare public readonly createdBy: pulumi.Output<string>;
    /**
     * ID of the parent metastore.
     */
    declare public readonly metastoreId: pulumi.Output<string>;

    /**
     * Create a ArtifactAllowlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArtifactAllowlistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArtifactAllowlistArgs | ArtifactAllowlistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArtifactAllowlistState | undefined;
            resourceInputs["artifactMatchers"] = state?.artifactMatchers;
            resourceInputs["artifactType"] = state?.artifactType;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["metastoreId"] = state?.metastoreId;
        } else {
            const args = argsOrState as ArtifactAllowlistArgs | undefined;
            if (args?.artifactMatchers === undefined && !opts.urn) {
                throw new Error("Missing required property 'artifactMatchers'");
            }
            if (args?.artifactType === undefined && !opts.urn) {
                throw new Error("Missing required property 'artifactType'");
            }
            resourceInputs["artifactMatchers"] = args?.artifactMatchers;
            resourceInputs["artifactType"] = args?.artifactType;
            resourceInputs["createdAt"] = args?.createdAt;
            resourceInputs["createdBy"] = args?.createdBy;
            resourceInputs["metastoreId"] = args?.metastoreId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ArtifactAllowlist.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ArtifactAllowlist resources.
 */
export interface ArtifactAllowlistState {
    artifactMatchers?: pulumi.Input<pulumi.Input<inputs.ArtifactAllowlistArtifactMatcher>[]>;
    /**
     * The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
     */
    artifactType?: pulumi.Input<string>;
    /**
     * Time at which this artifact allowlist was set.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * Identity that set the artifact allowlist.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * ID of the parent metastore.
     */
    metastoreId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ArtifactAllowlist resource.
 */
export interface ArtifactAllowlistArgs {
    artifactMatchers: pulumi.Input<pulumi.Input<inputs.ArtifactAllowlistArtifactMatcher>[]>;
    /**
     * The artifact type of the allowlist. Can be `INIT_SCRIPT`, `LIBRARY_JAR` or `LIBRARY_MAVEN`. Change forces creation of a new resource.
     */
    artifactType: pulumi.Input<string>;
    /**
     * Time at which this artifact allowlist was set.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * Identity that set the artifact allowlist.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * ID of the parent metastore.
     */
    metastoreId?: pulumi.Input<string>;
}
