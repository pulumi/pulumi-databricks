// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Service principal federation policies allow automated workloads running outside of Databricks to access Databricks APIs without the need for Databricks secrets. Your application (workload) authenticates to Databricks as a Databricks service principal using tokens issued by the workload runtime, for example Github Actions.
 *
 * A service principal federation policy is associated with a service principal in your Databricks account, and specifies:
 * * The identity provider (or issuer) from which the service principal can authenticate.
 * * The workload identity (or subject) that is permitted to authenticate as the Databricks service principal.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * As of Pulumi v1.5, resources can be imported through configuration.
 *
 * hcl
 *
 * import {
 *
 *   id = "service_principal_id,policy_id"
 *
 *   to = databricks_service_principal_federation_policy.this
 *
 * }
 *
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 *
 * ```sh
 * $ pulumi import databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy databricks_service_principal_federation_policy "service_principal_id,policy_id"
 * ```
 */
export class ServicePrincipalFederationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ServicePrincipalFederationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePrincipalFederationPolicyState, opts?: pulumi.CustomResourceOptions): ServicePrincipalFederationPolicy {
        return new ServicePrincipalFederationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/servicePrincipalFederationPolicy:ServicePrincipalFederationPolicy';

    /**
     * Returns true if the given object is an instance of ServicePrincipalFederationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePrincipalFederationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePrincipalFederationPolicy.__pulumiType;
    }

    /**
     * (string) - Creation time of the federation policy
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Description of the federation policy
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * (string) - Resource name for the federation policy. Example values include
     * `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
     * `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
     * for Service Principal Federation Policies. Typically an output parameter, which does not need to be
     * specified in create or update requests. If specified in a request, must match the value in the
     * request URL
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    declare public readonly oidcPolicy: pulumi.Output<outputs.ServicePrincipalFederationPolicyOidcPolicy | undefined>;
    /**
     * (string) - The ID of the federation policy
     */
    declare public readonly policyId: pulumi.Output<string>;
    /**
     * (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    declare public readonly servicePrincipalId: pulumi.Output<number>;
    /**
     * (string) - Unique, immutable id of the federation policy
     */
    declare public /*out*/ readonly uid: pulumi.Output<string>;
    /**
     * (string) - Last update time of the federation policy
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a ServicePrincipalFederationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServicePrincipalFederationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePrincipalFederationPolicyArgs | ServicePrincipalFederationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicePrincipalFederationPolicyState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["oidcPolicy"] = state?.oidcPolicy;
            resourceInputs["policyId"] = state?.policyId;
            resourceInputs["servicePrincipalId"] = state?.servicePrincipalId;
            resourceInputs["uid"] = state?.uid;
            resourceInputs["updateTime"] = state?.updateTime;
        } else {
            const args = argsOrState as ServicePrincipalFederationPolicyArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["oidcPolicy"] = args?.oidcPolicy;
            resourceInputs["policyId"] = args?.policyId;
            resourceInputs["servicePrincipalId"] = args?.servicePrincipalId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicePrincipalFederationPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePrincipalFederationPolicy resources.
 */
export interface ServicePrincipalFederationPolicyState {
    /**
     * (string) - Creation time of the federation policy
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the federation policy
     */
    description?: pulumi.Input<string>;
    /**
     * (string) - Resource name for the federation policy. Example values include
     * `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
     * `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
     * for Service Principal Federation Policies. Typically an output parameter, which does not need to be
     * specified in create or update requests. If specified in a request, must match the value in the
     * request URL
     */
    name?: pulumi.Input<string>;
    oidcPolicy?: pulumi.Input<inputs.ServicePrincipalFederationPolicyOidcPolicy>;
    /**
     * (string) - The ID of the federation policy
     */
    policyId?: pulumi.Input<string>;
    /**
     * (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    servicePrincipalId?: pulumi.Input<number>;
    /**
     * (string) - Unique, immutable id of the federation policy
     */
    uid?: pulumi.Input<string>;
    /**
     * (string) - Last update time of the federation policy
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePrincipalFederationPolicy resource.
 */
export interface ServicePrincipalFederationPolicyArgs {
    /**
     * Description of the federation policy
     */
    description?: pulumi.Input<string>;
    oidcPolicy?: pulumi.Input<inputs.ServicePrincipalFederationPolicyOidcPolicy>;
    /**
     * (string) - The ID of the federation policy
     */
    policyId?: pulumi.Input<string>;
    /**
     * (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    servicePrincipalId?: pulumi.Input<number>;
}
