// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNodeType(args?: GetNodeTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeTypeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getNodeType:getNodeType", {
        "category": args.category,
        "fleet": args.fleet,
        "gbPerCore": args.gbPerCore,
        "graviton": args.graviton,
        "id": args.id,
        "isIoCacheEnabled": args.isIoCacheEnabled,
        "localDisk": args.localDisk,
        "localDiskMinSize": args.localDiskMinSize,
        "minCores": args.minCores,
        "minGpus": args.minGpus,
        "minMemoryGb": args.minMemoryGb,
        "photonDriverCapable": args.photonDriverCapable,
        "photonWorkerCapable": args.photonWorkerCapable,
        "supportPortForwarding": args.supportPortForwarding,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodeType.
 */
export interface GetNodeTypeArgs {
    category?: string;
    fleet?: boolean;
    gbPerCore?: number;
    graviton?: boolean;
    id?: string;
    isIoCacheEnabled?: boolean;
    localDisk?: boolean;
    localDiskMinSize?: number;
    minCores?: number;
    minGpus?: number;
    minMemoryGb?: number;
    photonDriverCapable?: boolean;
    photonWorkerCapable?: boolean;
    supportPortForwarding?: boolean;
}

/**
 * A collection of values returned by getNodeType.
 */
export interface GetNodeTypeResult {
    readonly category?: string;
    readonly fleet?: boolean;
    readonly gbPerCore?: number;
    readonly graviton?: boolean;
    readonly id: string;
    readonly isIoCacheEnabled?: boolean;
    readonly localDisk?: boolean;
    readonly localDiskMinSize?: number;
    readonly minCores?: number;
    readonly minGpus?: number;
    readonly minMemoryGb?: number;
    readonly photonDriverCapable?: boolean;
    readonly photonWorkerCapable?: boolean;
    readonly supportPortForwarding?: boolean;
}
export function getNodeTypeOutput(args?: GetNodeTypeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNodeTypeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getNodeType:getNodeType", {
        "category": args.category,
        "fleet": args.fleet,
        "gbPerCore": args.gbPerCore,
        "graviton": args.graviton,
        "id": args.id,
        "isIoCacheEnabled": args.isIoCacheEnabled,
        "localDisk": args.localDisk,
        "localDiskMinSize": args.localDiskMinSize,
        "minCores": args.minCores,
        "minGpus": args.minGpus,
        "minMemoryGb": args.minMemoryGb,
        "photonDriverCapable": args.photonDriverCapable,
        "photonWorkerCapable": args.photonWorkerCapable,
        "supportPortForwarding": args.supportPortForwarding,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodeType.
 */
export interface GetNodeTypeOutputArgs {
    category?: pulumi.Input<string>;
    fleet?: pulumi.Input<boolean>;
    gbPerCore?: pulumi.Input<number>;
    graviton?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    isIoCacheEnabled?: pulumi.Input<boolean>;
    localDisk?: pulumi.Input<boolean>;
    localDiskMinSize?: pulumi.Input<number>;
    minCores?: pulumi.Input<number>;
    minGpus?: pulumi.Input<number>;
    minMemoryGb?: pulumi.Input<number>;
    photonDriverCapable?: pulumi.Input<boolean>;
    photonWorkerCapable?: pulumi.Input<boolean>;
    supportPortForwarding?: pulumi.Input<boolean>;
}
