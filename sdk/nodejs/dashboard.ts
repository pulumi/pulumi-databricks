// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Dashboard extends pulumi.CustomResource {
    /**
     * Get an existing Dashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DashboardState, opts?: pulumi.CustomResourceOptions): Dashboard {
        return new Dashboard(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/dashboard:Dashboard';

    /**
     * Returns true if the given object is an instance of Dashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dashboard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dashboard.__pulumiType;
    }

    public readonly createTime!: pulumi.Output<string>;
    public readonly dashboardChangeDetected!: pulumi.Output<boolean | undefined>;
    public readonly dashboardId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly embedCredentials!: pulumi.Output<boolean | undefined>;
    public readonly etag!: pulumi.Output<string>;
    public readonly filePath!: pulumi.Output<string | undefined>;
    public readonly lifecycleState!: pulumi.Output<string>;
    public readonly md5!: pulumi.Output<string>;
    public readonly parentPath!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string>;
    public readonly serializedDashboard!: pulumi.Output<string | undefined>;
    public readonly updateTime!: pulumi.Output<string>;
    public readonly warehouseId!: pulumi.Output<string>;

    /**
     * Create a Dashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DashboardArgs | DashboardState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DashboardState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dashboardChangeDetected"] = state ? state.dashboardChangeDetected : undefined;
            resourceInputs["dashboardId"] = state ? state.dashboardId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["embedCredentials"] = state ? state.embedCredentials : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["lifecycleState"] = state ? state.lifecycleState : undefined;
            resourceInputs["md5"] = state ? state.md5 : undefined;
            resourceInputs["parentPath"] = state ? state.parentPath : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["serializedDashboard"] = state ? state.serializedDashboard : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["warehouseId"] = state ? state.warehouseId : undefined;
        } else {
            const args = argsOrState as DashboardArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.parentPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentPath'");
            }
            if ((!args || args.warehouseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'warehouseId'");
            }
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["dashboardChangeDetected"] = args ? args.dashboardChangeDetected : undefined;
            resourceInputs["dashboardId"] = args ? args.dashboardId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["embedCredentials"] = args ? args.embedCredentials : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["lifecycleState"] = args ? args.lifecycleState : undefined;
            resourceInputs["md5"] = args ? args.md5 : undefined;
            resourceInputs["parentPath"] = args ? args.parentPath : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["serializedDashboard"] = args ? args.serializedDashboard : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
            resourceInputs["warehouseId"] = args ? args.warehouseId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dashboard.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dashboard resources.
 */
export interface DashboardState {
    createTime?: pulumi.Input<string>;
    dashboardChangeDetected?: pulumi.Input<boolean>;
    dashboardId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    embedCredentials?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    filePath?: pulumi.Input<string>;
    lifecycleState?: pulumi.Input<string>;
    md5?: pulumi.Input<string>;
    parentPath?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    serializedDashboard?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    warehouseId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Dashboard resource.
 */
export interface DashboardArgs {
    createTime?: pulumi.Input<string>;
    dashboardChangeDetected?: pulumi.Input<boolean>;
    dashboardId?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    embedCredentials?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    filePath?: pulumi.Input<string>;
    lifecycleState?: pulumi.Input<string>;
    md5?: pulumi.Input<string>;
    parentPath: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    serializedDashboard?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    warehouseId: pulumi.Input<string>;
}
