// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source allows you to retrieve information about Databricks [Dashboards](https://docs.databricks.com/en/dashboards/index.html).
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 */
export function getDashboards(args?: GetDashboardsArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getDashboards:getDashboards", {
        "dashboardNameContains": args.dashboardNameContains,
    }, opts);
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsArgs {
    /**
     * A **case-insensitive** substring to filter Dashboards by their name.
     */
    dashboardNameContains?: string;
}

/**
 * A collection of values returned by getDashboards.
 */
export interface GetDashboardsResult {
    readonly dashboardNameContains?: string;
    /**
     * A list of dashboards matching the specified criteria. Each element contains the following attributes:
     */
    readonly dashboards: outputs.GetDashboardsDashboard[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * This data source allows you to retrieve information about Databricks [Dashboards](https://docs.databricks.com/en/dashboards/index.html).
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 */
export function getDashboardsOutput(args?: GetDashboardsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDashboardsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getDashboards:getDashboards", {
        "dashboardNameContains": args.dashboardNameContains,
    }, opts);
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsOutputArgs {
    /**
     * A **case-insensitive** substring to filter Dashboards by their name.
     */
    dashboardNameContains?: pulumi.Input<string>;
}
