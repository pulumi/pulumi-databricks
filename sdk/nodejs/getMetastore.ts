// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetastore(args?: GetMetastoreArgs, opts?: pulumi.InvokeOptions): Promise<GetMetastoreResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getMetastore:getMetastore", {
        "id": args.id,
        "metastoreId": args.metastoreId,
        "metastoreInfo": args.metastoreInfo,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetastore.
 */
export interface GetMetastoreArgs {
    id?: string;
    metastoreId?: string;
    metastoreInfo?: inputs.GetMetastoreMetastoreInfo;
    name?: string;
    region?: string;
}

/**
 * A collection of values returned by getMetastore.
 */
export interface GetMetastoreResult {
    readonly id: string;
    readonly metastoreId: string;
    readonly metastoreInfo: outputs.GetMetastoreMetastoreInfo;
    readonly name: string;
    readonly region: string;
}
export function getMetastoreOutput(args?: GetMetastoreOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMetastoreResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getMetastore:getMetastore", {
        "id": args.id,
        "metastoreId": args.metastoreId,
        "metastoreInfo": args.metastoreInfo,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetastore.
 */
export interface GetMetastoreOutputArgs {
    id?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    metastoreInfo?: pulumi.Input<inputs.GetMetastoreMetastoreInfoArgs>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
