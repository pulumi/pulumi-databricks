// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * Retrieve all SQL warehouses on this workspace on AWS or GCP:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const all = databricks.getSqlWarehouses({});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * Retrieve all clusters with "Shared" in their cluster name on this Azure Databricks workspace:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const allShared = databricks.getSqlWarehouses({
 *     warehouseNameContains: "shared",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * End to end workspace management guide.
 * * databricks.InstanceProfile to manage AWS EC2 instance profiles that users can launch databricks.Cluster and access data, like databricks_mount.
 * * databricks.SqlDashboard to manage Databricks SQL [Dashboards](https://docs.databricks.com/sql/user/dashboards/index.html).
 * * databricks.SqlGlobalConfig to configure the security policy, databricks_instance_profile, and [data access properties](https://docs.databricks.com/sql/admin/data-access-configuration.html) for all databricks.SqlEndpoint of workspace.
 * * databricks.SqlPermissions to manage data object access control lists in Databricks workspaces for things like tables, views, databases, and [more](https://docs.databricks.com/security/access-control/table-acls/object-privileges.html).
 */
export function getSqlWarehouses(args?: GetSqlWarehousesArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlWarehousesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getSqlWarehouses:getSqlWarehouses", {
        "ids": args.ids,
        "warehouseNameContains": args.warehouseNameContains,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlWarehouses.
 */
export interface GetSqlWarehousesArgs {
    /**
     * list of databricks.SqlEndpoint ids
     */
    ids?: string[];
    /**
     * Only return databricks.SqlEndpoint ids that match the given name string.
     */
    warehouseNameContains?: string;
}

/**
 * A collection of values returned by getSqlWarehouses.
 */
export interface GetSqlWarehousesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * list of databricks.SqlEndpoint ids
     */
    readonly ids: string[];
    readonly warehouseNameContains?: string;
}
/**
 * ## Example Usage
 *
 * Retrieve all SQL warehouses on this workspace on AWS or GCP:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const all = databricks.getSqlWarehouses({});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * Retrieve all clusters with "Shared" in their cluster name on this Azure Databricks workspace:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const allShared = databricks.getSqlWarehouses({
 *     warehouseNameContains: "shared",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * End to end workspace management guide.
 * * databricks.InstanceProfile to manage AWS EC2 instance profiles that users can launch databricks.Cluster and access data, like databricks_mount.
 * * databricks.SqlDashboard to manage Databricks SQL [Dashboards](https://docs.databricks.com/sql/user/dashboards/index.html).
 * * databricks.SqlGlobalConfig to configure the security policy, databricks_instance_profile, and [data access properties](https://docs.databricks.com/sql/admin/data-access-configuration.html) for all databricks.SqlEndpoint of workspace.
 * * databricks.SqlPermissions to manage data object access control lists in Databricks workspaces for things like tables, views, databases, and [more](https://docs.databricks.com/security/access-control/table-acls/object-privileges.html).
 */
export function getSqlWarehousesOutput(args?: GetSqlWarehousesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlWarehousesResult> {
    return pulumi.output(args).apply((a: any) => getSqlWarehouses(a, opts))
}

/**
 * A collection of arguments for invoking getSqlWarehouses.
 */
export interface GetSqlWarehousesOutputArgs {
    /**
     * list of databricks.SqlEndpoint ids
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only return databricks.SqlEndpoint ids that match the given name string.
     */
    warehouseNameContains?: pulumi.Input<string>;
}
