// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseInstance(args: GetDatabaseInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getDatabaseInstance:getDatabaseInstance", {
        "adminPassword": args.adminPassword,
        "adminRolename": args.adminRolename,
        "capacity": args.capacity,
        "name": args.name,
        "stopped": args.stopped,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseInstance.
 */
export interface GetDatabaseInstanceArgs {
    /**
     * (string) - Password for admin user to create. If not provided, no user will be created
     */
    adminPassword?: string;
    /**
     * (string) - Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    adminRolename?: string;
    /**
     * (string) - The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    capacity?: string;
    /**
     * The name of the instance. This is the unique identifier for the instance
     */
    name: string;
    /**
     * (boolean) - Whether the instance is stopped
     */
    stopped?: boolean;
}

/**
 * A collection of values returned by getDatabaseInstance.
 */
export interface GetDatabaseInstanceResult {
    /**
     * (string) - Password for admin user to create. If not provided, no user will be created
     */
    readonly adminPassword?: string;
    /**
     * (string) - Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    readonly adminRolename?: string;
    /**
     * (string) - The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    readonly capacity?: string;
    /**
     * (string) - The timestamp when the instance was created
     */
    readonly creationTime: string;
    /**
     * (string) - The email of the creator of the instance
     */
    readonly creator: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The name of the instance. This is the unique identifier for the instance
     */
    readonly name: string;
    /**
     * (string) - The version of Postgres running on the instance
     */
    readonly pgVersion: string;
    /**
     * (string) - The DNS endpoint to connect to the instance for read+write access
     */
    readonly readWriteDns: string;
    /**
     * (string) - The current state of the instance. Possible values are: AVAILABLE, DELETING, FAILING_OVER, STARTING, STOPPED, UPDATING
     */
    readonly state: string;
    /**
     * (boolean) - Whether the instance is stopped
     */
    readonly stopped?: boolean;
    /**
     * (string) - An immutable UUID identifier for the instance
     */
    readonly uid: string;
}
export function getDatabaseInstanceOutput(args: GetDatabaseInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getDatabaseInstance:getDatabaseInstance", {
        "adminPassword": args.adminPassword,
        "adminRolename": args.adminRolename,
        "capacity": args.capacity,
        "name": args.name,
        "stopped": args.stopped,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseInstance.
 */
export interface GetDatabaseInstanceOutputArgs {
    /**
     * (string) - Password for admin user to create. If not provided, no user will be created
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * (string) - Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    adminRolename?: pulumi.Input<string>;
    /**
     * (string) - The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    capacity?: pulumi.Input<string>;
    /**
     * The name of the instance. This is the unique identifier for the instance
     */
    name: pulumi.Input<string>;
    /**
     * (boolean) - Whether the instance is stopped
     */
    stopped?: pulumi.Input<boolean>;
}
