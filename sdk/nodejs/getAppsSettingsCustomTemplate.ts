// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single Custom Template.
 *
 * ## Example Usage
 *
 * Referring to a Custom Template by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const myTemplate = databricks.getAppsSettingsCustomTemplate({
 *     name: "my-custom-template",
 * });
 * ```
 */
export function getAppsSettingsCustomTemplate(args: GetAppsSettingsCustomTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetAppsSettingsCustomTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getAppsSettingsCustomTemplate:getAppsSettingsCustomTemplate", {
        "description": args.description,
        "gitProvider": args.gitProvider,
        "gitRepo": args.gitRepo,
        "manifest": args.manifest,
        "name": args.name,
        "path": args.path,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppsSettingsCustomTemplate.
 */
export interface GetAppsSettingsCustomTemplateArgs {
    /**
     * (string) - Description of the App Resource
     */
    description?: string;
    /**
     * (string) - The Git provider of the template
     */
    gitProvider: string;
    /**
     * (string) - The Git repository URL that the template resides in
     */
    gitRepo: string;
    /**
     * (AppManifest) - The manifest of the template. It defines fields and default values when installing the template
     */
    manifest: inputs.GetAppsSettingsCustomTemplateManifest;
    /**
     * The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     */
    name: string;
    /**
     * (string) - The path to the template within the Git repository
     */
    path: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getAppsSettingsCustomTemplate.
 */
export interface GetAppsSettingsCustomTemplateResult {
    /**
     * (string)
     */
    readonly creator: string;
    /**
     * (string) - Description of the App Resource
     */
    readonly description?: string;
    /**
     * (string) - The Git provider of the template
     */
    readonly gitProvider: string;
    /**
     * (string) - The Git repository URL that the template resides in
     */
    readonly gitRepo: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (AppManifest) - The manifest of the template. It defines fields and default values when installing the template
     */
    readonly manifest: outputs.GetAppsSettingsCustomTemplateManifest;
    /**
     * (string) - Name of the App Resource
     */
    readonly name: string;
    /**
     * (string) - The path to the template within the Git repository
     */
    readonly path: string;
    readonly workspaceId?: string;
}
/**
 * This data source can be used to get a single Custom Template.
 *
 * ## Example Usage
 *
 * Referring to a Custom Template by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const myTemplate = databricks.getAppsSettingsCustomTemplate({
 *     name: "my-custom-template",
 * });
 * ```
 */
export function getAppsSettingsCustomTemplateOutput(args: GetAppsSettingsCustomTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAppsSettingsCustomTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getAppsSettingsCustomTemplate:getAppsSettingsCustomTemplate", {
        "description": args.description,
        "gitProvider": args.gitProvider,
        "gitRepo": args.gitRepo,
        "manifest": args.manifest,
        "name": args.name,
        "path": args.path,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppsSettingsCustomTemplate.
 */
export interface GetAppsSettingsCustomTemplateOutputArgs {
    /**
     * (string) - Description of the App Resource
     */
    description?: pulumi.Input<string>;
    /**
     * (string) - The Git provider of the template
     */
    gitProvider: pulumi.Input<string>;
    /**
     * (string) - The Git repository URL that the template resides in
     */
    gitRepo: pulumi.Input<string>;
    /**
     * (AppManifest) - The manifest of the template. It defines fields and default values when installing the template
     */
    manifest: pulumi.Input<inputs.GetAppsSettingsCustomTemplateManifestArgs>;
    /**
     * The name of the template. It must contain only alphanumeric characters, hyphens, underscores, and whitespaces.
     * It must be unique within the workspace
     */
    name: pulumi.Input<string>;
    /**
     * (string) - The path to the template within the Git repository
     */
    path: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
