// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > This feature is in [Public Preview](https://docs.databricks.com/release-notes/release-types.html).
 *
 * [Databricks Apps](https://docs.databricks.com/en/dev-tools/databricks-apps/index.html) run directly on a customerâ€™s Databricks instance, integrate with their data, use and extend Databricks services, and enable users to interact through single sign-on. This resource creates the application but does not handle app deployment, which should be handled separately as part of your CI/CD pipeline.
 *
 * ## Import
 *
 * This resource can be imported by name:
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_app.this
 *
 *   id = "<app_name>"
 *
 * }
 *
 * or using the `terraform` CLI:
 *
 * bash
 *
 * ```sh
 * $ pulumi import databricks:index/app:App this <app_name>
 * ```
 */
export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    public /*out*/ readonly activeDeployment!: pulumi.Output<outputs.AppActiveDeployment>;
    /**
     * attribute
     */
    public /*out*/ readonly appStatus!: pulumi.Output<outputs.AppAppStatus>;
    /**
     * The optional Budget Policy ID set for this resource.
     */
    public readonly budgetPolicyId!: pulumi.Output<string | undefined>;
    /**
     * attribute
     */
    public /*out*/ readonly computeStatus!: pulumi.Output<outputs.AppComputeStatus>;
    /**
     * The creation time of the app.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The email of the user that created the app.
     */
    public /*out*/ readonly creator!: pulumi.Output<string>;
    /**
     * The default workspace file system path of the source code from which app deployment are created. This field tracks the workspace source code path of the last active deployment.
     */
    public /*out*/ readonly defaultSourceCodePath!: pulumi.Output<string>;
    /**
     * The description of the app.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The effective budget policy ID.
     */
    public /*out*/ readonly effectiveBudgetPolicyId!: pulumi.Output<string>;
    public /*out*/ readonly effectiveUserApiScopes!: pulumi.Output<string[]>;
    /**
     * The name of the app. The name must contain only lowercase alphanumeric characters and hyphens. It must be unique within the workspace.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly noCompute!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly oauth2AppClientId!: pulumi.Output<string>;
    public /*out*/ readonly oauth2AppIntegrationId!: pulumi.Output<string>;
    public /*out*/ readonly pendingDeployment!: pulumi.Output<outputs.AppPendingDeployment>;
    /**
     * A list of resources that the app have access to.
     */
    public readonly resources!: pulumi.Output<outputs.AppResource[] | undefined>;
    public /*out*/ readonly servicePrincipalClientId!: pulumi.Output<string>;
    /**
     * id of the app service principal
     */
    public /*out*/ readonly servicePrincipalId!: pulumi.Output<number>;
    /**
     * name of the app service principal
     */
    public /*out*/ readonly servicePrincipalName!: pulumi.Output<string>;
    /**
     * The update time of the app.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The email of the user that last updated the app.
     */
    public /*out*/ readonly updater!: pulumi.Output<string>;
    /**
     * The URL of the app once it is deployed.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;
    public readonly userApiScopes!: pulumi.Output<string[] | undefined>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["activeDeployment"] = state ? state.activeDeployment : undefined;
            resourceInputs["appStatus"] = state ? state.appStatus : undefined;
            resourceInputs["budgetPolicyId"] = state ? state.budgetPolicyId : undefined;
            resourceInputs["computeStatus"] = state ? state.computeStatus : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["defaultSourceCodePath"] = state ? state.defaultSourceCodePath : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveBudgetPolicyId"] = state ? state.effectiveBudgetPolicyId : undefined;
            resourceInputs["effectiveUserApiScopes"] = state ? state.effectiveUserApiScopes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noCompute"] = state ? state.noCompute : undefined;
            resourceInputs["oauth2AppClientId"] = state ? state.oauth2AppClientId : undefined;
            resourceInputs["oauth2AppIntegrationId"] = state ? state.oauth2AppIntegrationId : undefined;
            resourceInputs["pendingDeployment"] = state ? state.pendingDeployment : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["servicePrincipalClientId"] = state ? state.servicePrincipalClientId : undefined;
            resourceInputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
            resourceInputs["servicePrincipalName"] = state ? state.servicePrincipalName : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["updater"] = state ? state.updater : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userApiScopes"] = state ? state.userApiScopes : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            resourceInputs["budgetPolicyId"] = args ? args.budgetPolicyId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noCompute"] = args ? args.noCompute : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["userApiScopes"] = args ? args.userApiScopes : undefined;
            resourceInputs["activeDeployment"] = undefined /*out*/;
            resourceInputs["appStatus"] = undefined /*out*/;
            resourceInputs["computeStatus"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["defaultSourceCodePath"] = undefined /*out*/;
            resourceInputs["effectiveBudgetPolicyId"] = undefined /*out*/;
            resourceInputs["effectiveUserApiScopes"] = undefined /*out*/;
            resourceInputs["oauth2AppClientId"] = undefined /*out*/;
            resourceInputs["oauth2AppIntegrationId"] = undefined /*out*/;
            resourceInputs["pendingDeployment"] = undefined /*out*/;
            resourceInputs["servicePrincipalClientId"] = undefined /*out*/;
            resourceInputs["servicePrincipalId"] = undefined /*out*/;
            resourceInputs["servicePrincipalName"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["updater"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    activeDeployment?: pulumi.Input<inputs.AppActiveDeployment>;
    /**
     * attribute
     */
    appStatus?: pulumi.Input<inputs.AppAppStatus>;
    /**
     * The optional Budget Policy ID set for this resource.
     */
    budgetPolicyId?: pulumi.Input<string>;
    /**
     * attribute
     */
    computeStatus?: pulumi.Input<inputs.AppComputeStatus>;
    /**
     * The creation time of the app.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The email of the user that created the app.
     */
    creator?: pulumi.Input<string>;
    /**
     * The default workspace file system path of the source code from which app deployment are created. This field tracks the workspace source code path of the last active deployment.
     */
    defaultSourceCodePath?: pulumi.Input<string>;
    /**
     * The description of the app.
     */
    description?: pulumi.Input<string>;
    /**
     * The effective budget policy ID.
     */
    effectiveBudgetPolicyId?: pulumi.Input<string>;
    effectiveUserApiScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the app. The name must contain only lowercase alphanumeric characters and hyphens. It must be unique within the workspace.
     */
    name?: pulumi.Input<string>;
    noCompute?: pulumi.Input<boolean>;
    oauth2AppClientId?: pulumi.Input<string>;
    oauth2AppIntegrationId?: pulumi.Input<string>;
    pendingDeployment?: pulumi.Input<inputs.AppPendingDeployment>;
    /**
     * A list of resources that the app have access to.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.AppResource>[]>;
    servicePrincipalClientId?: pulumi.Input<string>;
    /**
     * id of the app service principal
     */
    servicePrincipalId?: pulumi.Input<number>;
    /**
     * name of the app service principal
     */
    servicePrincipalName?: pulumi.Input<string>;
    /**
     * The update time of the app.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * The email of the user that last updated the app.
     */
    updater?: pulumi.Input<string>;
    /**
     * The URL of the app once it is deployed.
     */
    url?: pulumi.Input<string>;
    userApiScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * The optional Budget Policy ID set for this resource.
     */
    budgetPolicyId?: pulumi.Input<string>;
    /**
     * The description of the app.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the app. The name must contain only lowercase alphanumeric characters and hyphens. It must be unique within the workspace.
     */
    name?: pulumi.Input<string>;
    noCompute?: pulumi.Input<boolean>;
    /**
     * A list of resources that the app have access to.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.AppResource>[]>;
    userApiScopes?: pulumi.Input<pulumi.Input<string>[]>;
}
