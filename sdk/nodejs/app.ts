// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    public /*out*/ readonly activeDeployment!: pulumi.Output<outputs.AppActiveDeployment>;
    public /*out*/ readonly appStatus!: pulumi.Output<outputs.AppAppStatus>;
    public /*out*/ readonly computeStatus!: pulumi.Output<outputs.AppComputeStatus>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public /*out*/ readonly creator!: pulumi.Output<string>;
    public /*out*/ readonly defaultSourceCodePath!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly pendingDeployment!: pulumi.Output<outputs.AppPendingDeployment>;
    public readonly resources!: pulumi.Output<outputs.AppResource[] | undefined>;
    public /*out*/ readonly servicePrincipalClientId!: pulumi.Output<string>;
    public /*out*/ readonly servicePrincipalId!: pulumi.Output<number>;
    public /*out*/ readonly servicePrincipalName!: pulumi.Output<string>;
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    public /*out*/ readonly updater!: pulumi.Output<string>;
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["activeDeployment"] = state ? state.activeDeployment : undefined;
            resourceInputs["appStatus"] = state ? state.appStatus : undefined;
            resourceInputs["computeStatus"] = state ? state.computeStatus : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["defaultSourceCodePath"] = state ? state.defaultSourceCodePath : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pendingDeployment"] = state ? state.pendingDeployment : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["servicePrincipalClientId"] = state ? state.servicePrincipalClientId : undefined;
            resourceInputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
            resourceInputs["servicePrincipalName"] = state ? state.servicePrincipalName : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["updater"] = state ? state.updater : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["activeDeployment"] = undefined /*out*/;
            resourceInputs["appStatus"] = undefined /*out*/;
            resourceInputs["computeStatus"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["defaultSourceCodePath"] = undefined /*out*/;
            resourceInputs["pendingDeployment"] = undefined /*out*/;
            resourceInputs["servicePrincipalClientId"] = undefined /*out*/;
            resourceInputs["servicePrincipalId"] = undefined /*out*/;
            resourceInputs["servicePrincipalName"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["updater"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    activeDeployment?: pulumi.Input<inputs.AppActiveDeployment>;
    appStatus?: pulumi.Input<inputs.AppAppStatus>;
    computeStatus?: pulumi.Input<inputs.AppComputeStatus>;
    createTime?: pulumi.Input<string>;
    creator?: pulumi.Input<string>;
    defaultSourceCodePath?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pendingDeployment?: pulumi.Input<inputs.AppPendingDeployment>;
    resources?: pulumi.Input<pulumi.Input<inputs.AppResource>[]>;
    servicePrincipalClientId?: pulumi.Input<string>;
    servicePrincipalId?: pulumi.Input<number>;
    servicePrincipalName?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    updater?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    resources?: pulumi.Input<pulumi.Input<inputs.AppResource>[]>;
}
