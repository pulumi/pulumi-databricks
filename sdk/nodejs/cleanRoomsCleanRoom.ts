// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A Clean Room is a secure environment for data collaboration that enables multiple organizations to analyze their data together while maintaining privacy and security. Clean Rooms provide a controlled environment where data can be shared and analyzed without exposing the underlying raw data.
 *
 * ## Example Usage
 *
 * # Example: Clean Room Resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = new databricks.CleanRoomsCleanRoom("this", {
 *     name: "example-clean-room",
 *     owner: "example@databricks.com",
 *     remoteDetailedInfo: {
 *         cloud_vendor: "aws",
 *         region: "us-west-2",
 *         collaborators: [
 *             {
 *                 collaboratorAlias: "collaborator",
 *                 globalMetastoreId: "aws:us-east-1:12345678-1234-1234-1234-123456789012",
 *                 inviteRecipientEmail: "example@databricks.com",
 *                 inviteRecipientWorkspaceId: 123456789012345,
 *             },
 *             {
 *                 globalMetastoreId: "aws:us-east-1:12345678-1234-1234-1234-123456789012",
 *                 collaboratorAlias: "creator",
 *             },
 *         ],
 *         egress_network_policy: {
 *             internetAccess: {
 *                 restrictionMode: "RESTRICTED_ACCESS",
 *             },
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * As of Pulumi v1.5, resources can be imported through configuration.
 *
 * hcl
 *
 * import {
 *
 *   id = "name"
 *
 *   to = databricks_clean_rooms_clean_room.this
 *
 * }
 *
 * If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:
 *
 * ```sh
 * $ pulumi import databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom databricks_clean_rooms_clean_room "name"
 * ```
 */
export class CleanRoomsCleanRoom extends pulumi.CustomResource {
    /**
     * Get an existing CleanRoomsCleanRoom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CleanRoomsCleanRoomState, opts?: pulumi.CustomResourceOptions): CleanRoomsCleanRoom {
        return new CleanRoomsCleanRoom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/cleanRoomsCleanRoom:CleanRoomsCleanRoom';

    /**
     * Returns true if the given object is an instance of CleanRoomsCleanRoom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CleanRoomsCleanRoom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CleanRoomsCleanRoom.__pulumiType;
    }

    /**
     * (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
     */
    declare public /*out*/ readonly accessRestricted: pulumi.Output<string>;
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * (integer) - When the clean room was created, in epoch milliseconds
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<number>;
    /**
     * (string) - The alias of the collaborator tied to the local clean room
     */
    declare public /*out*/ readonly localCollaboratorAlias: pulumi.Output<string>;
    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
     * using the separate CreateCleanRoomOutputCatalog API
     */
    declare public /*out*/ readonly outputCatalog: pulumi.Output<outputs.CleanRoomsCleanRoomOutputCatalog>;
    /**
     * This is the Databricks username of the owner of the local clean room securable for permission management
     */
    declare public readonly owner: pulumi.Output<string | undefined>;
    /**
     * Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    declare public readonly remoteDetailedInfo: pulumi.Output<outputs.CleanRoomsCleanRoomRemoteDetailedInfo | undefined>;
    /**
     * (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * (integer) - When the clean room was last updated, in epoch milliseconds
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<number>;
    /**
     * Workspace ID of the resource
     */
    declare public readonly workspaceId: pulumi.Output<string | undefined>;

    /**
     * Create a CleanRoomsCleanRoom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CleanRoomsCleanRoomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CleanRoomsCleanRoomArgs | CleanRoomsCleanRoomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CleanRoomsCleanRoomState | undefined;
            resourceInputs["accessRestricted"] = state?.accessRestricted;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["localCollaboratorAlias"] = state?.localCollaboratorAlias;
            resourceInputs["name"] = state?.name;
            resourceInputs["outputCatalog"] = state?.outputCatalog;
            resourceInputs["owner"] = state?.owner;
            resourceInputs["remoteDetailedInfo"] = state?.remoteDetailedInfo;
            resourceInputs["status"] = state?.status;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as CleanRoomsCleanRoomArgs | undefined;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["name"] = args?.name;
            resourceInputs["owner"] = args?.owner;
            resourceInputs["remoteDetailedInfo"] = args?.remoteDetailedInfo;
            resourceInputs["workspaceId"] = args?.workspaceId;
            resourceInputs["accessRestricted"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["localCollaboratorAlias"] = undefined /*out*/;
            resourceInputs["outputCatalog"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CleanRoomsCleanRoom.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CleanRoomsCleanRoom resources.
 */
export interface CleanRoomsCleanRoomState {
    /**
     * (string) - Whether clean room access is restricted due to [CSP](https://docs.databricks.com/en/security/privacy/security-profile.html). Possible values are: `CSP_MISMATCH`, `NO_RESTRICTION`
     */
    accessRestricted?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * (integer) - When the clean room was created, in epoch milliseconds
     */
    createdAt?: pulumi.Input<number>;
    /**
     * (string) - The alias of the collaborator tied to the local clean room
     */
    localCollaboratorAlias?: pulumi.Input<string>;
    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    name?: pulumi.Input<string>;
    /**
     * (CleanRoomOutputCatalog) - Output catalog of the clean room. It is an output only field. Output catalog is manipulated
     * using the separate CreateCleanRoomOutputCatalog API
     */
    outputCatalog?: pulumi.Input<inputs.CleanRoomsCleanRoomOutputCatalog>;
    /**
     * This is the Databricks username of the owner of the local clean room securable for permission management
     */
    owner?: pulumi.Input<string>;
    /**
     * Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    remoteDetailedInfo?: pulumi.Input<inputs.CleanRoomsCleanRoomRemoteDetailedInfo>;
    /**
     * (string) - . Possible values are: `CREATED`, `NOT_CREATED`, `NOT_ELIGIBLE`
     */
    status?: pulumi.Input<string>;
    /**
     * (integer) - When the clean room was last updated, in epoch milliseconds
     */
    updatedAt?: pulumi.Input<number>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CleanRoomsCleanRoom resource.
 */
export interface CleanRoomsCleanRoomArgs {
    comment?: pulumi.Input<string>;
    /**
     * The name of the clean room.
     * It should follow [UC securable naming requirements](https://docs.databricks.com/en/data-governance/unity-catalog/index.html#securable-object-naming-requirements)
     */
    name?: pulumi.Input<string>;
    /**
     * This is the Databricks username of the owner of the local clean room securable for permission management
     */
    owner?: pulumi.Input<string>;
    /**
     * Central clean room details. During creation, users need to specify
     * cloud_vendor, region, and collaborators.global_metastore_id.
     * This field will not be filled in the ListCleanRooms call
     */
    remoteDetailedInfo?: pulumi.Input<inputs.CleanRoomsCleanRoomRemoteDetailedInfo>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
