// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single service principal federation policy.
 *
 * > **Note** This data source can only be used with an account-level provider!
 */
export function getServicePrincipalFederationPolicy(args?: GetServicePrincipalFederationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetServicePrincipalFederationPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getServicePrincipalFederationPolicy:getServicePrincipalFederationPolicy", {
        "description": args.description,
        "oidcPolicy": args.oidcPolicy,
        "policyId": args.policyId,
        "servicePrincipalId": args.servicePrincipalId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServicePrincipalFederationPolicy.
 */
export interface GetServicePrincipalFederationPolicyArgs {
    /**
     * (string) - Description of the federation policy
     */
    description?: string;
    /**
     * (OidcFederationPolicy)
     */
    oidcPolicy?: inputs.GetServicePrincipalFederationPolicyOidcPolicy;
    /**
     * The ID of the federation policy
     */
    policyId?: string;
    /**
     * The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    servicePrincipalId?: number;
}

/**
 * A collection of values returned by getServicePrincipalFederationPolicy.
 */
export interface GetServicePrincipalFederationPolicyResult {
    /**
     * (string) - Creation time of the federation policy
     */
    readonly createTime: string;
    /**
     * (string) - Description of the federation policy
     */
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - Resource name for the federation policy. Example values include
     * `accounts/<account-id>/federationPolicies/my-federation-policy` for Account Federation Policies, and
     * `accounts/<account-id>/servicePrincipals/<service-principal-id>/federationPolicies/my-federation-policy`
     * for Service Principal Federation Policies. Typically an output parameter, which does not need to be
     * specified in create or update requests. If specified in a request, must match the value in the
     * request URL
     */
    readonly name: string;
    /**
     * (OidcFederationPolicy)
     */
    readonly oidcPolicy?: outputs.GetServicePrincipalFederationPolicyOidcPolicy;
    /**
     * (string) - The ID of the federation policy
     */
    readonly policyId: string;
    /**
     * (integer) - The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    readonly servicePrincipalId: number;
    /**
     * (string) - Unique, immutable id of the federation policy
     */
    readonly uid: string;
    /**
     * (string) - Last update time of the federation policy
     */
    readonly updateTime: string;
}
/**
 * This data source can be used to get a single service principal federation policy.
 *
 * > **Note** This data source can only be used with an account-level provider!
 */
export function getServicePrincipalFederationPolicyOutput(args?: GetServicePrincipalFederationPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServicePrincipalFederationPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getServicePrincipalFederationPolicy:getServicePrincipalFederationPolicy", {
        "description": args.description,
        "oidcPolicy": args.oidcPolicy,
        "policyId": args.policyId,
        "servicePrincipalId": args.servicePrincipalId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServicePrincipalFederationPolicy.
 */
export interface GetServicePrincipalFederationPolicyOutputArgs {
    /**
     * (string) - Description of the federation policy
     */
    description?: pulumi.Input<string>;
    /**
     * (OidcFederationPolicy)
     */
    oidcPolicy?: pulumi.Input<inputs.GetServicePrincipalFederationPolicyOidcPolicyArgs>;
    /**
     * The ID of the federation policy
     */
    policyId?: pulumi.Input<string>;
    /**
     * The service principal ID that this federation policy applies to. Only set for service principal federation policies
     */
    servicePrincipalId?: pulumi.Input<number>;
}
