// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource allows you to get information about versions of [Model in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html).
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getRegisteredModelVersions({
 *     fullName: "main.default.my_model",
 * });
 * ```
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * databricks.RegisteredModel data source to retrieve information about a model within Unity Catalog.
 * * databricks.RegisteredModel resource to manage models within Unity Catalog.
 * * databricks.ModelServing to serve this model on a Databricks serving endpoint.
 * * databricks.MlflowExperiment to manage [MLflow experiments](https://docs.databricks.com/data/data-sources/mlflow-experiment.html) in Databricks.
 */
export function getRegisteredModelVersions(args: GetRegisteredModelVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegisteredModelVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getRegisteredModelVersions:getRegisteredModelVersions", {
        "fullName": args.fullName,
        "modelVersions": args.modelVersions,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegisteredModelVersions.
 */
export interface GetRegisteredModelVersionsArgs {
    /**
     * The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     */
    fullName: string;
    /**
     * list of objects describing the model versions. Each object consists of following attributes:
     */
    modelVersions?: inputs.GetRegisteredModelVersionsModelVersion[];
}

/**
 * A collection of values returned by getRegisteredModelVersions.
 */
export interface GetRegisteredModelVersionsResult {
    /**
     * The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     */
    readonly fullName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * list of objects describing the model versions. Each object consists of following attributes:
     */
    readonly modelVersions: outputs.GetRegisteredModelVersionsModelVersion[];
}
/**
 * This resource allows you to get information about versions of [Model in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html).
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getRegisteredModelVersions({
 *     fullName: "main.default.my_model",
 * });
 * ```
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * databricks.RegisteredModel data source to retrieve information about a model within Unity Catalog.
 * * databricks.RegisteredModel resource to manage models within Unity Catalog.
 * * databricks.ModelServing to serve this model on a Databricks serving endpoint.
 * * databricks.MlflowExperiment to manage [MLflow experiments](https://docs.databricks.com/data/data-sources/mlflow-experiment.html) in Databricks.
 */
export function getRegisteredModelVersionsOutput(args: GetRegisteredModelVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegisteredModelVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getRegisteredModelVersions:getRegisteredModelVersions", {
        "fullName": args.fullName,
        "modelVersions": args.modelVersions,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegisteredModelVersions.
 */
export interface GetRegisteredModelVersionsOutputArgs {
    /**
     * The fully-qualified name of the registered model (`catalog_name.schema_name.name`).
     */
    fullName: pulumi.Input<string>;
    /**
     * list of objects describing the model versions. Each object consists of following attributes:
     */
    modelVersions?: pulumi.Input<pulumi.Input<inputs.GetRegisteredModelVersionsModelVersionArgs>[]>;
}
