// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > This resource can only be used with a workspace-level provider!
 *
 * Lakehouse Federation is the query federation platform for Databricks. Databricks uses Unity Catalog to manage query federation. To make a dataset available for read-only querying using Lakehouse Federation, you create the following:
 *
 * - A connection, a securable object in Unity Catalog that specifies a path and credentials for accessing an external database system.
 * - A foreign catalog
 *
 * This resource manages connections in Unity Catalog. Please note that OAuth U2M is not supported as it requires user interaction for authentication.
 *
 * ## Example Usage
 *
 * Create a connection to a MySQL database
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const mysql = new databricks.Connection("mysql", {
 *     name: "mysql_connection",
 *     connectionType: "MYSQL",
 *     comment: "this is a connection to mysql db",
 *     options: {
 *         host: "test.mysql.database.azure.com",
 *         port: "3306",
 *         user: "user",
 *         password: "password",
 *     },
 *     properties: {
 *         purpose: "testing",
 *     },
 * });
 * ```
 *
 * Create a connection to a BigQuery database
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const bigquery = new databricks.Connection("bigquery", {
 *     name: "bq_connection",
 *     connectionType: "BIGQUERY",
 *     comment: "this is a connection to BQ",
 *     options: {
 *         GoogleServiceAccountKeyJson: JSON.stringify({
 *             type: "service_account",
 *             project_id: "PROJECT_ID",
 *             private_key_id: "KEY_ID",
 *             private_key: `-----BEGIN PRIVATE KEY-----
 * PRIVATE_KEY
 * -----END PRIVATE KEY-----
 * `,
 *             client_email: "SERVICE_ACCOUNT_EMAIL",
 *             client_id: "CLIENT_ID",
 *             auth_uri: "https://accounts.google.com/o/oauth2/auth",
 *             token_uri: "https://accounts.google.com/o/oauth2/token",
 *             auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs",
 *             client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL",
 *             universe_domain: "googleapis.com",
 *         }),
 *     },
 *     properties: {
 *         purpose: "testing",
 *     },
 * });
 * ```
 *
 * Create a connection to builtin Hive Metastore
 *
 * ## Import
 *
 * This resource can be imported by `id`:
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_connection.this
 *
 *   id = "<metastore_id>|<name>"
 *
 * }
 *
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 *
 * bash
 *
 * ```sh
 * $ pulumi import databricks:index/connection:Connection this "<metastore_id>|<name>"
 * ```
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * Free-form text. Change forces creation of a new resource.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Unique ID of the connection.
     */
    public /*out*/ readonly connectionId!: pulumi.Output<string>;
    /**
     * Connection type. `MYSQL`, `POSTGRESQL`, `SNOWFLAKE`, `REDSHIFT` `SQLDW`, `SQLSERVER`, `DATABRICKS`, `SALESFORCE`, `BIGQUERY`, `WORKDAY_RAAS`, `HIVE_METASTORE`, `GA4_RAW_DATA`, `SERVICENOW`, `SALESFORCE_DATA_CLOUD`, `GLUE`, `ORACLE`, `TERADATA`, `HTTP` or `POWER_BI` are supported. Up-to-date list of connection type supported is in the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources). Change forces creation of a new resource.
     */
    public readonly connectionType!: pulumi.Output<string | undefined>;
    /**
     * Time at which this connection was created, in epoch milliseconds.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    /**
     * Username of connection creator.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The type of credential for this connection.
     */
    public /*out*/ readonly credentialType!: pulumi.Output<string>;
    /**
     * Full name of connection.
     */
    public /*out*/ readonly fullName!: pulumi.Output<string>;
    /**
     * Unique ID of the UC metastore for this connection.
     */
    public /*out*/ readonly metastoreId!: pulumi.Output<string>;
    /**
     * Name of the Connection.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The key value of options required by the connection, e.g. `host`, `port`, `user`, `password`, `authorizationEndpoint`, `clientId`, `clientSecret` or `GoogleServiceAccountKeyJson`. Please consult the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources) for the required option.
     */
    public readonly options!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Name of the connection owner.
     */
    public readonly owner!: pulumi.Output<string>;
    /**
     * Free-form connection properties. Change forces creation of a new resource.
     */
    public readonly properties!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Object with the status of an asynchronously provisioned resource.
     */
    public /*out*/ readonly provisioningInfos!: pulumi.Output<outputs.ConnectionProvisioningInfo[]>;
    /**
     * Indicates whether the connection is read-only. Change forces creation of a new resource.
     */
    public readonly readOnly!: pulumi.Output<boolean>;
    public /*out*/ readonly securableType!: pulumi.Output<string>;
    /**
     * Time at which connection this was last modified, in epoch milliseconds.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<number>;
    /**
     * Username of user who last modified the connection.
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;
    /**
     * URL of the remote data source, extracted from options.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["credentialType"] = state ? state.credentialType : undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["metastoreId"] = state ? state.metastoreId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["provisioningInfos"] = state ? state.provisioningInfos : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["securableType"] = state ? state.securableType : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["options"] = args?.options ? pulumi.secret(args.options) : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["readOnly"] = args ? args.readOnly : undefined;
            resourceInputs["connectionId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["credentialType"] = undefined /*out*/;
            resourceInputs["fullName"] = undefined /*out*/;
            resourceInputs["metastoreId"] = undefined /*out*/;
            resourceInputs["provisioningInfos"] = undefined /*out*/;
            resourceInputs["securableType"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["options"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * Free-form text. Change forces creation of a new resource.
     */
    comment?: pulumi.Input<string>;
    /**
     * Unique ID of the connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * Connection type. `MYSQL`, `POSTGRESQL`, `SNOWFLAKE`, `REDSHIFT` `SQLDW`, `SQLSERVER`, `DATABRICKS`, `SALESFORCE`, `BIGQUERY`, `WORKDAY_RAAS`, `HIVE_METASTORE`, `GA4_RAW_DATA`, `SERVICENOW`, `SALESFORCE_DATA_CLOUD`, `GLUE`, `ORACLE`, `TERADATA`, `HTTP` or `POWER_BI` are supported. Up-to-date list of connection type supported is in the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources). Change forces creation of a new resource.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Time at which this connection was created, in epoch milliseconds.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * Username of connection creator.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The type of credential for this connection.
     */
    credentialType?: pulumi.Input<string>;
    /**
     * Full name of connection.
     */
    fullName?: pulumi.Input<string>;
    /**
     * Unique ID of the UC metastore for this connection.
     */
    metastoreId?: pulumi.Input<string>;
    /**
     * Name of the Connection.
     */
    name?: pulumi.Input<string>;
    /**
     * The key value of options required by the connection, e.g. `host`, `port`, `user`, `password`, `authorizationEndpoint`, `clientId`, `clientSecret` or `GoogleServiceAccountKeyJson`. Please consult the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources) for the required option.
     */
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the connection owner.
     */
    owner?: pulumi.Input<string>;
    /**
     * Free-form connection properties. Change forces creation of a new resource.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object with the status of an asynchronously provisioned resource.
     */
    provisioningInfos?: pulumi.Input<pulumi.Input<inputs.ConnectionProvisioningInfo>[]>;
    /**
     * Indicates whether the connection is read-only. Change forces creation of a new resource.
     */
    readOnly?: pulumi.Input<boolean>;
    securableType?: pulumi.Input<string>;
    /**
     * Time at which connection this was last modified, in epoch milliseconds.
     */
    updatedAt?: pulumi.Input<number>;
    /**
     * Username of user who last modified the connection.
     */
    updatedBy?: pulumi.Input<string>;
    /**
     * URL of the remote data source, extracted from options.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * Free-form text. Change forces creation of a new resource.
     */
    comment?: pulumi.Input<string>;
    /**
     * Connection type. `MYSQL`, `POSTGRESQL`, `SNOWFLAKE`, `REDSHIFT` `SQLDW`, `SQLSERVER`, `DATABRICKS`, `SALESFORCE`, `BIGQUERY`, `WORKDAY_RAAS`, `HIVE_METASTORE`, `GA4_RAW_DATA`, `SERVICENOW`, `SALESFORCE_DATA_CLOUD`, `GLUE`, `ORACLE`, `TERADATA`, `HTTP` or `POWER_BI` are supported. Up-to-date list of connection type supported is in the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources). Change forces creation of a new resource.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Name of the Connection.
     */
    name?: pulumi.Input<string>;
    /**
     * The key value of options required by the connection, e.g. `host`, `port`, `user`, `password`, `authorizationEndpoint`, `clientId`, `clientSecret` or `GoogleServiceAccountKeyJson`. Please consult the [documentation](https://docs.databricks.com/query-federation/index.html#supported-data-sources) for the required option.
     */
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the connection owner.
     */
    owner?: pulumi.Input<string>;
    /**
     * Free-form connection properties. Change forces creation of a new resource.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates whether the connection is read-only. Change forces creation of a new resource.
     */
    readOnly?: pulumi.Input<boolean>;
}
