// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > **Note** If you have a fully automated setup with workspaces created by databricks.MwsWorkspaces or azurerm_databricks_workspace, please make sure to add dependsOn attribute in order to prevent _default auth: cannot configure default credentials_ errors.
 *
 * Retrieves information about a databricks.Cluster using its id. This could be retrieved programmatically using databricks.getClusters data source.
 *
 * ## Example Usage
 *
 * Retrieve attributes of each SQL warehouses in a workspace
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const all = databricks.getClusters({});
 * const allGetCluster = all.then(all => .reduce((__obj, [__key, __value]) => ({ ...__obj, [__key]: databricks.getCluster({
 *     clusterId: __value,
 * }) })));
 * ```
 */
export function getCluster(args?: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getCluster:getCluster", {
        "clusterId": args.clusterId,
        "clusterInfo": args.clusterInfo,
        "clusterName": args.clusterName,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    /**
     * The id of the cluster.
     */
    clusterId?: string;
    /**
     * block, consisting of following fields:
     */
    clusterInfo?: inputs.GetClusterClusterInfo;
    /**
     * The exact name of the cluster to search. Can only be specified if there is exactly one cluster with the provided name.
     */
    clusterName?: string;
    /**
     * cluster ID
     */
    id?: string;
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly clusterId: string;
    /**
     * block, consisting of following fields:
     */
    readonly clusterInfo: outputs.GetClusterClusterInfo;
    /**
     * Cluster name, which doesnâ€™t have to be unique.
     */
    readonly clusterName: string;
    /**
     * cluster ID
     */
    readonly id: string;
}
/**
 * > **Note** If you have a fully automated setup with workspaces created by databricks.MwsWorkspaces or azurerm_databricks_workspace, please make sure to add dependsOn attribute in order to prevent _default auth: cannot configure default credentials_ errors.
 *
 * Retrieves information about a databricks.Cluster using its id. This could be retrieved programmatically using databricks.getClusters data source.
 *
 * ## Example Usage
 *
 * Retrieve attributes of each SQL warehouses in a workspace
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const all = databricks.getClusters({});
 * const allGetCluster = all.then(all => .reduce((__obj, [__key, __value]) => ({ ...__obj, [__key]: databricks.getCluster({
 *     clusterId: __value,
 * }) })));
 * ```
 */
export function getClusterOutput(args?: GetClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getCluster:getCluster", {
        "clusterId": args.clusterId,
        "clusterInfo": args.clusterInfo,
        "clusterName": args.clusterName,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterOutputArgs {
    /**
     * The id of the cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * block, consisting of following fields:
     */
    clusterInfo?: pulumi.Input<inputs.GetClusterClusterInfoArgs>;
    /**
     * The exact name of the cluster to search. Can only be specified if there is exactly one cluster with the provided name.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * cluster ID
     */
    id?: pulumi.Input<string>;
}
