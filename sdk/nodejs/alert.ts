// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Alert extends pulumi.CustomResource {
    /**
     * Get an existing Alert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertState, opts?: pulumi.CustomResourceOptions): Alert {
        return new Alert(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/alert:Alert';

    /**
     * Returns true if the given object is an instance of Alert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alert {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alert.__pulumiType;
    }

    public readonly condition!: pulumi.Output<outputs.AlertCondition>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly customBody!: pulumi.Output<string | undefined>;
    public readonly customSubject!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleState!: pulumi.Output<string>;
    public readonly notifyOnOk!: pulumi.Output<boolean | undefined>;
    public readonly ownerUserName!: pulumi.Output<string | undefined>;
    public readonly parentPath!: pulumi.Output<string | undefined>;
    public readonly queryId!: pulumi.Output<string>;
    public readonly secondsToRetrigger!: pulumi.Output<number | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly triggerTime!: pulumi.Output<string>;
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Alert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertArgs | AlertState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertState | undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customBody"] = state ? state.customBody : undefined;
            resourceInputs["customSubject"] = state ? state.customSubject : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["lifecycleState"] = state ? state.lifecycleState : undefined;
            resourceInputs["notifyOnOk"] = state ? state.notifyOnOk : undefined;
            resourceInputs["ownerUserName"] = state ? state.ownerUserName : undefined;
            resourceInputs["parentPath"] = state ? state.parentPath : undefined;
            resourceInputs["queryId"] = state ? state.queryId : undefined;
            resourceInputs["secondsToRetrigger"] = state ? state.secondsToRetrigger : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["triggerTime"] = state ? state.triggerTime : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AlertArgs | undefined;
            if ((!args || args.condition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'condition'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.queryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryId'");
            }
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["customBody"] = args ? args.customBody : undefined;
            resourceInputs["customSubject"] = args ? args.customSubject : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["notifyOnOk"] = args ? args.notifyOnOk : undefined;
            resourceInputs["ownerUserName"] = args ? args.ownerUserName : undefined;
            resourceInputs["parentPath"] = args ? args.parentPath : undefined;
            resourceInputs["queryId"] = args ? args.queryId : undefined;
            resourceInputs["secondsToRetrigger"] = args ? args.secondsToRetrigger : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["lifecycleState"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["triggerTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alert.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Alert resources.
 */
export interface AlertState {
    condition?: pulumi.Input<inputs.AlertCondition>;
    createTime?: pulumi.Input<string>;
    customBody?: pulumi.Input<string>;
    customSubject?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    lifecycleState?: pulumi.Input<string>;
    notifyOnOk?: pulumi.Input<boolean>;
    ownerUserName?: pulumi.Input<string>;
    parentPath?: pulumi.Input<string>;
    queryId?: pulumi.Input<string>;
    secondsToRetrigger?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    triggerTime?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Alert resource.
 */
export interface AlertArgs {
    condition: pulumi.Input<inputs.AlertCondition>;
    customBody?: pulumi.Input<string>;
    customSubject?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    notifyOnOk?: pulumi.Input<boolean>;
    ownerUserName?: pulumi.Input<string>;
    parentPath?: pulumi.Input<string>;
    queryId: pulumi.Input<string>;
    secondsToRetrigger?: pulumi.Input<number>;
}
