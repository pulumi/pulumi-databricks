// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SqlGlobalConfig extends pulumi.CustomResource {
    /**
     * Get an existing SqlGlobalConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlGlobalConfigState, opts?: pulumi.CustomResourceOptions): SqlGlobalConfig {
        return new SqlGlobalConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/sqlGlobalConfig:SqlGlobalConfig';

    /**
     * Returns true if the given object is an instance of SqlGlobalConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlGlobalConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlGlobalConfig.__pulumiType;
    }

    public readonly dataAccessConfig!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated This field is intended as an internal API and may be removed from the Databricks Terraform provider in the future
     */
    public readonly enableServerlessCompute!: pulumi.Output<boolean>;
    public readonly googleServiceAccount!: pulumi.Output<string | undefined>;
    public readonly instanceProfileArn!: pulumi.Output<string | undefined>;
    public readonly securityPolicy!: pulumi.Output<string | undefined>;
    public readonly sqlConfigParams!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a SqlGlobalConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SqlGlobalConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqlGlobalConfigArgs | SqlGlobalConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqlGlobalConfigState | undefined;
            resourceInputs["dataAccessConfig"] = state ? state.dataAccessConfig : undefined;
            resourceInputs["enableServerlessCompute"] = state ? state.enableServerlessCompute : undefined;
            resourceInputs["googleServiceAccount"] = state ? state.googleServiceAccount : undefined;
            resourceInputs["instanceProfileArn"] = state ? state.instanceProfileArn : undefined;
            resourceInputs["securityPolicy"] = state ? state.securityPolicy : undefined;
            resourceInputs["sqlConfigParams"] = state ? state.sqlConfigParams : undefined;
        } else {
            const args = argsOrState as SqlGlobalConfigArgs | undefined;
            resourceInputs["dataAccessConfig"] = args ? args.dataAccessConfig : undefined;
            resourceInputs["enableServerlessCompute"] = args ? args.enableServerlessCompute : undefined;
            resourceInputs["googleServiceAccount"] = args ? args.googleServiceAccount : undefined;
            resourceInputs["instanceProfileArn"] = args ? args.instanceProfileArn : undefined;
            resourceInputs["securityPolicy"] = args ? args.securityPolicy : undefined;
            resourceInputs["sqlConfigParams"] = args ? args.sqlConfigParams : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqlGlobalConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SqlGlobalConfig resources.
 */
export interface SqlGlobalConfigState {
    dataAccessConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated This field is intended as an internal API and may be removed from the Databricks Terraform provider in the future
     */
    enableServerlessCompute?: pulumi.Input<boolean>;
    googleServiceAccount?: pulumi.Input<string>;
    instanceProfileArn?: pulumi.Input<string>;
    securityPolicy?: pulumi.Input<string>;
    sqlConfigParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a SqlGlobalConfig resource.
 */
export interface SqlGlobalConfigArgs {
    dataAccessConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated This field is intended as an internal API and may be removed from the Databricks Terraform provider in the future
     */
    enableServerlessCompute?: pulumi.Input<boolean>;
    googleServiceAccount?: pulumi.Input<string>;
    instanceProfileArn?: pulumi.Input<string>;
    securityPolicy?: pulumi.Input<string>;
    sqlConfigParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
