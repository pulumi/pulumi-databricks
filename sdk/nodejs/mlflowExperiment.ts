// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource allows you to manage [MLflow experiments](https://docs.databricks.com/data/data-sources/mlflow-experiment.html) in Databricks.
 *
 * > This resource can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const me = databricks.getCurrentUser({});
 * const _this = new databricks.MlflowExperiment("this", {
 *     name: me.then(me => `${me.home}/Sample`),
 *     artifactLocation: "s3://bucket/my-experiment",
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Access Control
 *
 * * databricks.Permissions can control which groups or individual users can *Read*, *Edit*, or *Manage* individual experiments.
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * databricks.RegisteredModel to create [Models in Unity Catalog](https://docs.databricks.com/en/mlflow/models-in-uc.html) in Databricks.
 * * End to end workspace management guide.
 * * databricks.Directory to manage directories in [Databricks Workpace](https://docs.databricks.com/workspace/workspace-objects.html).
 * * databricks.MlflowModel to create models in the [workspace model registry](https://docs.databricks.com/en/mlflow/model-registry.html) in Databricks.
 * * databricks.Notebook to manage [Databricks Notebooks](https://docs.databricks.com/notebooks/index.html).
 * * databricks.Notebook data to export a notebook from Databricks Workspace.
 * * databricks.Repo to manage [Databricks Repos](https://docs.databricks.com/repos.html).
 *
 * ## Import
 *
 * The experiment resource can be imported using the id of the experiment:
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_mlflow_experiment.this
 *
 *   id = "<experiment-id>"
 *
 * }
 *
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 *
 * bash
 *
 * ```sh
 * $ pulumi import databricks:index/mlflowExperiment:MlflowExperiment this "<experiment-id>"
 * ```
 */
export class MlflowExperiment extends pulumi.CustomResource {
    /**
     * Get an existing MlflowExperiment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MlflowExperimentState, opts?: pulumi.CustomResourceOptions): MlflowExperiment {
        return new MlflowExperiment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/mlflowExperiment:MlflowExperiment';

    /**
     * Returns true if the given object is an instance of MlflowExperiment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MlflowExperiment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MlflowExperiment.__pulumiType;
    }

    /**
     * Path to artifact location of the MLflow experiment.
     */
    declare public readonly artifactLocation: pulumi.Output<string | undefined>;
    declare public readonly creationTime: pulumi.Output<number>;
    /**
     * @deprecated Remove the description attribute as it no longer is used and will be removed in a future version.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly experimentId: pulumi.Output<string>;
    declare public readonly lastUpdateTime: pulumi.Output<number>;
    declare public readonly lifecycleStage: pulumi.Output<string>;
    /**
     * Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/<some-username>/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Tags for the MLflow experiment.
     */
    declare public readonly tags: pulumi.Output<outputs.MlflowExperimentTag[]>;

    /**
     * Create a MlflowExperiment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MlflowExperimentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MlflowExperimentArgs | MlflowExperimentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MlflowExperimentState | undefined;
            resourceInputs["artifactLocation"] = state?.artifactLocation;
            resourceInputs["creationTime"] = state?.creationTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["experimentId"] = state?.experimentId;
            resourceInputs["lastUpdateTime"] = state?.lastUpdateTime;
            resourceInputs["lifecycleStage"] = state?.lifecycleStage;
            resourceInputs["name"] = state?.name;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as MlflowExperimentArgs | undefined;
            resourceInputs["artifactLocation"] = args?.artifactLocation;
            resourceInputs["creationTime"] = args?.creationTime;
            resourceInputs["description"] = args?.description;
            resourceInputs["experimentId"] = args?.experimentId;
            resourceInputs["lastUpdateTime"] = args?.lastUpdateTime;
            resourceInputs["lifecycleStage"] = args?.lifecycleStage;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MlflowExperiment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MlflowExperiment resources.
 */
export interface MlflowExperimentState {
    /**
     * Path to artifact location of the MLflow experiment.
     */
    artifactLocation?: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    /**
     * @deprecated Remove the description attribute as it no longer is used and will be removed in a future version.
     */
    description?: pulumi.Input<string>;
    experimentId?: pulumi.Input<string>;
    lastUpdateTime?: pulumi.Input<number>;
    lifecycleStage?: pulumi.Input<string>;
    /**
     * Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/<some-username>/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
     */
    name?: pulumi.Input<string>;
    /**
     * Tags for the MLflow experiment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.MlflowExperimentTag>[]>;
}

/**
 * The set of arguments for constructing a MlflowExperiment resource.
 */
export interface MlflowExperimentArgs {
    /**
     * Path to artifact location of the MLflow experiment.
     */
    artifactLocation?: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    /**
     * @deprecated Remove the description attribute as it no longer is used and will be removed in a future version.
     */
    description?: pulumi.Input<string>;
    experimentId?: pulumi.Input<string>;
    lastUpdateTime?: pulumi.Input<number>;
    lifecycleStage?: pulumi.Input<string>;
    /**
     * Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. `/Users/<some-username>/my-experiment`. For more information about changes to experiment naming conventions, see [mlflow docs](https://docs.databricks.com/applications/mlflow/experiments.html#experiment-migration).
     */
    name?: pulumi.Input<string>;
    /**
     * Tags for the MLflow experiment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.MlflowExperimentTag>[]>;
}
