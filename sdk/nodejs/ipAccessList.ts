// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpAccessList extends pulumi.CustomResource {
    /**
     * Get an existing IpAccessList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAccessListState, opts?: pulumi.CustomResourceOptions): IpAccessList {
        return new IpAccessList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/ipAccessList:IpAccessList';

    /**
     * Returns true if the given object is an instance of IpAccessList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAccessList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAccessList.__pulumiType;
    }

    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly ipAddresses!: pulumi.Output<string[]>;
    public readonly label!: pulumi.Output<string>;
    public readonly listType!: pulumi.Output<string>;

    /**
     * Create a IpAccessList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpAccessListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAccessListArgs | IpAccessListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAccessListState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["listType"] = state ? state.listType : undefined;
        } else {
            const args = argsOrState as IpAccessListArgs | undefined;
            if ((!args || args.ipAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddresses'");
            }
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if ((!args || args.listType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listType'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["listType"] = args ? args.listType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpAccessList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpAccessList resources.
 */
export interface IpAccessListState {
    enabled?: pulumi.Input<boolean>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    label?: pulumi.Input<string>;
    listType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpAccessList resource.
 */
export interface IpAccessListArgs {
    enabled?: pulumi.Input<boolean>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    label: pulumi.Input<string>;
    listType: pulumi.Input<string>;
}
