// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyInfos(args: GetPolicyInfosArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyInfosResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getPolicyInfos:getPolicyInfos", {
        "onSecurableFullname": args.onSecurableFullname,
        "onSecurableType": args.onSecurableType,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyInfos.
 */
export interface GetPolicyInfosArgs {
    /**
     * Required. The fully qualified name of securable to list policies for
     */
    onSecurableFullname: string;
    /**
     * Required. The type of the securable to list policies for
     */
    onSecurableType: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getPolicyInfos.
 */
export interface GetPolicyInfosResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - Full name of the securable on which the policy is defined.
     * Required on create and ignored on update
     */
    readonly onSecurableFullname: string;
    /**
     * (string) - Type of the securable on which the policy is defined.
     * Only `CATALOG`, `SCHEMA` and `TABLE` are supported at this moment.
     * Required on create and ignored on update. Possible values are: `CATALOG`, `CLEAN_ROOM`, `CONNECTION`, `CREDENTIAL`, `EXTERNAL_LOCATION`, `EXTERNAL_METADATA`, `FUNCTION`, `METASTORE`, `PIPELINE`, `PROVIDER`, `RECIPIENT`, `SCHEMA`, `SHARE`, `STAGING_TABLE`, `STORAGE_CREDENTIAL`, `TABLE`, `VOLUME`
     */
    readonly onSecurableType: string;
    readonly policies: outputs.GetPolicyInfosPolicy[];
    readonly workspaceId?: string;
}
export function getPolicyInfosOutput(args: GetPolicyInfosOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPolicyInfosResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getPolicyInfos:getPolicyInfos", {
        "onSecurableFullname": args.onSecurableFullname,
        "onSecurableType": args.onSecurableType,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyInfos.
 */
export interface GetPolicyInfosOutputArgs {
    /**
     * Required. The fully qualified name of securable to list policies for
     */
    onSecurableFullname: pulumi.Input<string>;
    /**
     * Required. The type of the securable to list policies for
     */
    onSecurableType: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
