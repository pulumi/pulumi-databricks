// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows you to create a private endpoint in a Network Connectivity Config that can be used to [configure private connectivity from serverless compute](https://learn.microsoft.com/en-us/azure/databricks/security/network/serverless-network-security/serverless-private-link).
 *
 * > This resource can only be used with an account-level provider!
 *
 * > This feature is available on Azure, and in Public Preview on AWS.
 *
 * ## Example Usage
 *
 * Create private endpoints to an Azure storage account and an Azure standard load balancer.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const config = new pulumi.Config();
 * const region = config.requireObject<any>("region");
 * const prefix = config.requireObject<any>("prefix");
 * const ncc = new databricks.MwsNetworkConnectivityConfig("ncc", {
 *     name: `ncc-for-${prefix}`,
 *     region: region,
 * });
 * const storage = new databricks.MwsNccPrivateEndpointRule("storage", {
 *     networkConnectivityConfigId: ncc.networkConnectivityConfigId,
 *     resourceId: "/subscriptions/653bb673-1234-abcd-a90b-d064d5d53ca4/resourcegroups/example-resource-group/providers/Microsoft.Storage/storageAccounts/examplesa",
 *     groupId: "blob",
 * });
 * const slb = new databricks.MwsNccPrivateEndpointRule("slb", {
 *     networkConnectivityConfigId: ncc.networkConnectivityConfigId,
 *     resourceId: "/subscriptions/653bb673-1234-abcd-a90b-d064d5d53ca4/resourcegroups/example-resource-group/providers/Microsoft.Network/privatelinkServices/example-private-link-service",
 *     domainNames: ["my-example.exampledomain.com"],
 * });
 * ```
 *
 * Create a private endpoint rule to an AWS VPC endpoint and to an S3 bucket.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const config = new pulumi.Config();
 * const region = config.requireObject<any>("region");
 * const prefix = config.requireObject<any>("prefix");
 * const ncc = new databricks.MwsNetworkConnectivityConfig("ncc", {
 *     name: `ncc-for-${prefix}`,
 *     region: region,
 * });
 * const storage = new databricks.MwsNccPrivateEndpointRule("storage", {
 *     networkConnectivityConfigId: ncc.networkConnectivityConfigId,
 *     endpointService: "com.amazonaws.us-east-1.s3",
 *     resourceNames: ["bucket"],
 * });
 * const vpce = new databricks.MwsNccPrivateEndpointRule("vpce", {
 *     networkConnectivityConfigId: ncc.networkConnectivityConfigId,
 *     endpointService: "com.amazonaws.vpce.us-west-2.vpce-svc-xyz",
 *     domainNames: ["subdomain.internal.net"],
 * });
 * ```
 *
 * ## Related Resources
 *
 * The following resources are used in the context:
 *
 * * databricks.MwsNetworkConnectivityConfig to create Network Connectivity Config objects.
 * * databricks.MwsNccBinding to attach an NCC to a workspace.
 *
 * ## Import
 *
 * This resource can be imported by Databricks account ID and Network Connectivity Config ID.
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_mws_ncc_private_endpoint_rule.this
 *
 *   id = "<network_connectivity_config_id>/<rule_id>"
 *
 * }
 *
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 *
 * ```sh
 * $ pulumi import databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule this "<network_connectivity_config_id>/<rule_id>"
 * ```
 */
export class MwsNccPrivateEndpointRule extends pulumi.CustomResource {
    /**
     * Get an existing MwsNccPrivateEndpointRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwsNccPrivateEndpointRuleState, opts?: pulumi.CustomResourceOptions): MwsNccPrivateEndpointRule {
        return new MwsNccPrivateEndpointRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/mwsNccPrivateEndpointRule:MwsNccPrivateEndpointRule';

    /**
     * Returns true if the given object is an instance of MwsNccPrivateEndpointRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwsNccPrivateEndpointRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwsNccPrivateEndpointRule.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
     * The possible values are:
     * * `PENDING`: The endpoint has been created and pending approval.
     * * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
     * * `REJECTED`: Connection was rejected by the private link resource owner.
     * * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
     * * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
     */
    public readonly connectionState!: pulumi.Output<string>;
    /**
     * Time in epoch milliseconds when this object was created.
     */
    public readonly creationTime!: pulumi.Output<number>;
    /**
     * Whether this private endpoint is deactivated.
     */
    public readonly deactivated!: pulumi.Output<boolean | undefined>;
    /**
     * Time in epoch milliseconds when this object was deactivated.
     */
    public readonly deactivatedAt!: pulumi.Output<number | undefined>;
    /**
     * * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `groupId`.
     * * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `resourceNames`.
     */
    public readonly domainNames!: pulumi.Output<string[] | undefined>;
    /**
     * Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
     */
    public readonly endpointName!: pulumi.Output<string>;
    /**
     * Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
     */
    public readonly endpointService!: pulumi.Output<string | undefined>;
    /**
     * Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource. Conflicts with `domainNames`.
     */
    public readonly groupId!: pulumi.Output<string | undefined>;
    /**
     * Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
     */
    public readonly networkConnectivityConfigId!: pulumi.Output<string>;
    /**
     * The Azure resource ID of the target resource. Change forces creation of a new resource.
     */
    public readonly resourceId!: pulumi.Output<string | undefined>;
    /**
     * Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
     */
    public readonly resourceNames!: pulumi.Output<string[] | undefined>;
    /**
     * the ID of a private endpoint rule.
     */
    public readonly ruleId!: pulumi.Output<string>;
    /**
     * Time in epoch milliseconds when this object was updated.
     */
    public readonly updatedTime!: pulumi.Output<number>;
    /**
     * The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
     */
    public readonly vpcEndpointId!: pulumi.Output<string>;

    /**
     * Create a MwsNccPrivateEndpointRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MwsNccPrivateEndpointRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwsNccPrivateEndpointRuleArgs | MwsNccPrivateEndpointRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MwsNccPrivateEndpointRuleState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["connectionState"] = state ? state.connectionState : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["deactivated"] = state ? state.deactivated : undefined;
            resourceInputs["deactivatedAt"] = state ? state.deactivatedAt : undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["endpointName"] = state ? state.endpointName : undefined;
            resourceInputs["endpointService"] = state ? state.endpointService : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["networkConnectivityConfigId"] = state ? state.networkConnectivityConfigId : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceNames"] = state ? state.resourceNames : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
        } else {
            const args = argsOrState as MwsNccPrivateEndpointRuleArgs | undefined;
            if ((!args || args.networkConnectivityConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConnectivityConfigId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["connectionState"] = args ? args.connectionState : undefined;
            resourceInputs["creationTime"] = args ? args.creationTime : undefined;
            resourceInputs["deactivated"] = args ? args.deactivated : undefined;
            resourceInputs["deactivatedAt"] = args ? args.deactivatedAt : undefined;
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["endpointName"] = args ? args.endpointName : undefined;
            resourceInputs["endpointService"] = args ? args.endpointService : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["networkConnectivityConfigId"] = args ? args.networkConnectivityConfigId : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceNames"] = args ? args.resourceNames : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["updatedTime"] = args ? args.updatedTime : undefined;
            resourceInputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MwsNccPrivateEndpointRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MwsNccPrivateEndpointRule resources.
 */
export interface MwsNccPrivateEndpointRuleState {
    accountId?: pulumi.Input<string>;
    /**
     * The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
     * The possible values are:
     * * `PENDING`: The endpoint has been created and pending approval.
     * * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
     * * `REJECTED`: Connection was rejected by the private link resource owner.
     * * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
     * * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
     */
    connectionState?: pulumi.Input<string>;
    /**
     * Time in epoch milliseconds when this object was created.
     */
    creationTime?: pulumi.Input<number>;
    /**
     * Whether this private endpoint is deactivated.
     */
    deactivated?: pulumi.Input<boolean>;
    /**
     * Time in epoch milliseconds when this object was deactivated.
     */
    deactivatedAt?: pulumi.Input<number>;
    /**
     * * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `groupId`.
     * * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `resourceNames`.
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
     */
    endpointService?: pulumi.Input<string>;
    /**
     * Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource. Conflicts with `domainNames`.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
     */
    networkConnectivityConfigId?: pulumi.Input<string>;
    /**
     * The Azure resource ID of the target resource. Change forces creation of a new resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
     */
    resourceNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the ID of a private endpoint rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Time in epoch milliseconds when this object was updated.
     */
    updatedTime?: pulumi.Input<number>;
    /**
     * The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
     */
    vpcEndpointId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MwsNccPrivateEndpointRule resource.
 */
export interface MwsNccPrivateEndpointRuleArgs {
    accountId?: pulumi.Input<string>;
    /**
     * The current status of this private endpoint. The private endpoint rules are effective only if the connection state is `ESTABLISHED`. Remember that you must approve new endpoints on your resources in the Azure portal before they take effect.
     * The possible values are:
     * * `PENDING`: The endpoint has been created and pending approval.
     * * `ESTABLISHED`: The endpoint has been approved and is ready to be used in your serverless compute resources.
     * * `REJECTED`: Connection was rejected by the private link resource owner.
     * * `DISCONNECTED`: Connection was removed by the private link resource owner, the private endpoint becomes informative and should be deleted for clean-up.
     * * `EXPIRED`: If the endpoint was created but not approved in 14 days, it will be EXPIRED.
     */
    connectionState?: pulumi.Input<string>;
    /**
     * Time in epoch milliseconds when this object was created.
     */
    creationTime?: pulumi.Input<number>;
    /**
     * Whether this private endpoint is deactivated.
     */
    deactivated?: pulumi.Input<boolean>;
    /**
     * Time in epoch milliseconds when this object was deactivated.
     */
    deactivatedAt?: pulumi.Input<number>;
    /**
     * * On Azure: List of domain names of target private link service. Only used by private endpoints to customer-managed private endpoint services. Conflicts with `groupId`.
     * * On AWS: List of target resource FQDNs accessible via the VPC endpoint service. Only used by private endpoints towards a VPC endpoint service behind a customer-managed VPC endpoint service. Conflicts with `resourceNames`.
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Activation status. Only used by private endpoints towards an AWS S3 service. Update this field to activate/deactivate this private endpoint to allow egress access from serverless compute resources. Can only be updated after a private endpoint rule towards an AWS S3 service is successfully created.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Azure private endpoint resource, e.g. "databricks-088781b3-77fa-4132-b429-1af0d91bc593-pe-3cb31234"
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Example `com.amazonaws.vpce.us-east-1.vpce-svc-123abcc1298abc123`. The full target AWS endpoint service name that connects to the destination resources of the private endpoint.
     */
    endpointService?: pulumi.Input<string>;
    /**
     * Not used by customer-managed private endpoint services. The sub-resource type (group ID) of the target resource. Must be one of supported resource types (i.e., `blob`, `dfs`, `sqlServer` , etc. Consult the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) for full list of supported resources). Note that to connect to workspace root storage (root DBFS), you need two endpoints, one for `blob` and one for `dfs`. Change forces creation of a new resource. Conflicts with `domainNames`.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Canonical unique identifier of Network Connectivity Config in Databricks Account. Change forces creation of a new resource.
     */
    networkConnectivityConfigId: pulumi.Input<string>;
    /**
     * The Azure resource ID of the target resource. Change forces creation of a new resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Only used by private endpoints towards AWS S3 service. List of globally unique S3 bucket names that will be accessed via the VPC endpoint. The bucket names must be in the same region as the NCC/endpoint service. Conflict with `domainNames`.
     */
    resourceNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the ID of a private endpoint rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Time in epoch milliseconds when this object was updated.
     */
    updatedTime?: pulumi.Input<number>;
    /**
     * The AWS VPC endpoint ID. You can use this ID to identify the VPC endpoint created by Databricks.
     */
    vpcEndpointId?: pulumi.Input<string>;
}
