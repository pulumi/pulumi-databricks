// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OnlineTable extends pulumi.CustomResource {
    /**
     * Get an existing OnlineTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OnlineTableState, opts?: pulumi.CustomResourceOptions): OnlineTable {
        return new OnlineTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/onlineTable:OnlineTable';

    /**
     * Returns true if the given object is an instance of OnlineTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OnlineTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OnlineTable.__pulumiType;
    }

    public readonly name!: pulumi.Output<string>;
    public readonly spec!: pulumi.Output<outputs.OnlineTableSpec | undefined>;
    public /*out*/ readonly statuses!: pulumi.Output<outputs.OnlineTableStatus[]>;
    public /*out*/ readonly tableServingUrl!: pulumi.Output<string>;
    public /*out*/ readonly unityCatalogProvisioningState!: pulumi.Output<string>;

    /**
     * Create a OnlineTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OnlineTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OnlineTableArgs | OnlineTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OnlineTableState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["statuses"] = state ? state.statuses : undefined;
            resourceInputs["tableServingUrl"] = state ? state.tableServingUrl : undefined;
            resourceInputs["unityCatalogProvisioningState"] = state ? state.unityCatalogProvisioningState : undefined;
        } else {
            const args = argsOrState as OnlineTableArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["statuses"] = undefined /*out*/;
            resourceInputs["tableServingUrl"] = undefined /*out*/;
            resourceInputs["unityCatalogProvisioningState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OnlineTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OnlineTable resources.
 */
export interface OnlineTableState {
    name?: pulumi.Input<string>;
    spec?: pulumi.Input<inputs.OnlineTableSpec>;
    statuses?: pulumi.Input<pulumi.Input<inputs.OnlineTableStatus>[]>;
    tableServingUrl?: pulumi.Input<string>;
    unityCatalogProvisioningState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OnlineTable resource.
 */
export interface OnlineTableArgs {
    name?: pulumi.Input<string>;
    spec?: pulumi.Input<inputs.OnlineTableSpec>;
}
