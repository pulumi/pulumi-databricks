// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEntityTagAssignment(args: GetEntityTagAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityTagAssignmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getEntityTagAssignment:getEntityTagAssignment", {
        "entityName": args.entityName,
        "entityType": args.entityType,
        "tagKey": args.tagKey,
        "tagValue": args.tagValue,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityTagAssignment.
 */
export interface GetEntityTagAssignmentArgs {
    /**
     * The fully qualified name of the entity to which the tag is assigned
     */
    entityName: string;
    /**
     * The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    entityType: string;
    /**
     * The key of the tag
     */
    tagKey: string;
    /**
     * (string) - The value of the tag
     */
    tagValue?: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getEntityTagAssignment.
 */
export interface GetEntityTagAssignmentResult {
    /**
     * (string) - The fully qualified name of the entity to which the tag is assigned
     */
    readonly entityName: string;
    /**
     * (string) - The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    readonly entityType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The key of the tag
     */
    readonly tagKey: string;
    /**
     * (string) - The value of the tag
     */
    readonly tagValue?: string;
    readonly workspaceId?: string;
}
export function getEntityTagAssignmentOutput(args: GetEntityTagAssignmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEntityTagAssignmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getEntityTagAssignment:getEntityTagAssignment", {
        "entityName": args.entityName,
        "entityType": args.entityType,
        "tagKey": args.tagKey,
        "tagValue": args.tagValue,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityTagAssignment.
 */
export interface GetEntityTagAssignmentOutputArgs {
    /**
     * The fully qualified name of the entity to which the tag is assigned
     */
    entityName: pulumi.Input<string>;
    /**
     * The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    entityType: pulumi.Input<string>;
    /**
     * The key of the tag
     */
    tagKey: pulumi.Input<string>;
    /**
     * (string) - The value of the tag
     */
    tagValue?: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
