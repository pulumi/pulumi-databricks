// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MwsCredentials extends pulumi.CustomResource {
    /**
     * Get an existing MwsCredentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwsCredentialsState, opts?: pulumi.CustomResourceOptions): MwsCredentials {
        return new MwsCredentials(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/mwsCredentials:MwsCredentials';

    /**
     * Returns true if the given object is an instance of MwsCredentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwsCredentials {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwsCredentials.__pulumiType;
    }

    /**
     * @deprecated `accountId` should be set as part of the Databricks Config, not in the resource.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    public readonly creationTime!: pulumi.Output<number>;
    public readonly credentialsId!: pulumi.Output<string>;
    public readonly credentialsName!: pulumi.Output<string>;
    public readonly externalId!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;

    /**
     * Create a MwsCredentials resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MwsCredentialsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwsCredentialsArgs | MwsCredentialsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MwsCredentialsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["credentialsId"] = state ? state.credentialsId : undefined;
            resourceInputs["credentialsName"] = state ? state.credentialsName : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as MwsCredentialsArgs | undefined;
            if ((!args || args.credentialsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentialsName'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["creationTime"] = args ? args.creationTime : undefined;
            resourceInputs["credentialsId"] = args ? args.credentialsId : undefined;
            resourceInputs["credentialsName"] = args ? args.credentialsName : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MwsCredentials.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MwsCredentials resources.
 */
export interface MwsCredentialsState {
    /**
     * @deprecated `accountId` should be set as part of the Databricks Config, not in the resource.
     */
    accountId?: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    credentialsId?: pulumi.Input<string>;
    credentialsName?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MwsCredentials resource.
 */
export interface MwsCredentialsArgs {
    /**
     * @deprecated `accountId` should be set as part of the Databricks Config, not in the resource.
     */
    accountId?: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    credentialsId?: pulumi.Input<string>;
    credentialsName: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}
