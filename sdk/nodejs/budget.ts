// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Budget extends pulumi.CustomResource {
    /**
     * Get an existing Budget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BudgetState, opts?: pulumi.CustomResourceOptions): Budget {
        return new Budget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/budget:Budget';

    /**
     * Returns true if the given object is an instance of Budget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Budget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Budget.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly alertConfigurations!: pulumi.Output<outputs.BudgetAlertConfiguration[] | undefined>;
    public readonly budgetConfigurationId!: pulumi.Output<string>;
    public readonly createTime!: pulumi.Output<number>;
    public readonly displayName!: pulumi.Output<string | undefined>;
    public readonly filter!: pulumi.Output<outputs.BudgetFilter | undefined>;
    public readonly updateTime!: pulumi.Output<number>;

    /**
     * Create a Budget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BudgetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BudgetArgs | BudgetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BudgetState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["alertConfigurations"] = state ? state.alertConfigurations : undefined;
            resourceInputs["budgetConfigurationId"] = state ? state.budgetConfigurationId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as BudgetArgs | undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["alertConfigurations"] = args ? args.alertConfigurations : undefined;
            resourceInputs["budgetConfigurationId"] = args ? args.budgetConfigurationId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Budget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Budget resources.
 */
export interface BudgetState {
    accountId?: pulumi.Input<string>;
    alertConfigurations?: pulumi.Input<pulumi.Input<inputs.BudgetAlertConfiguration>[]>;
    budgetConfigurationId?: pulumi.Input<string>;
    createTime?: pulumi.Input<number>;
    displayName?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.BudgetFilter>;
    updateTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Budget resource.
 */
export interface BudgetArgs {
    accountId?: pulumi.Input<string>;
    alertConfigurations?: pulumi.Input<pulumi.Input<inputs.BudgetAlertConfiguration>[]>;
    budgetConfigurationId?: pulumi.Input<string>;
    createTime?: pulumi.Input<number>;
    displayName?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.BudgetFilter>;
    updateTime?: pulumi.Input<number>;
}
