// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * Getting all existing shares in the metastore
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const this = databricks.getShares({});
 * export const shareName = _this.then(_this => _this.shares);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Share to create Delta Sharing shares.
 * * databricks.Recipient to create Delta Sharing recipients.
 * * databricks.Grants to manage Delta Sharing permissions.
 */
export function getShares(args?: GetSharesArgs, opts?: pulumi.InvokeOptions): Promise<GetSharesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getShares:getShares", {
        "shares": args.shares,
    }, opts);
}

/**
 * A collection of arguments for invoking getShares.
 */
export interface GetSharesArgs {
    /**
     * list of databricks.Share names.
     */
    shares?: string[];
}

/**
 * A collection of values returned by getShares.
 */
export interface GetSharesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * list of databricks.Share names.
     */
    readonly shares: string[];
}
/**
 * ## Example Usage
 *
 * Getting all existing shares in the metastore
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const this = databricks.getShares({});
 * export const shareName = _this.then(_this => _this.shares);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Share to create Delta Sharing shares.
 * * databricks.Recipient to create Delta Sharing recipients.
 * * databricks.Grants to manage Delta Sharing permissions.
 */
export function getSharesOutput(args?: GetSharesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharesResult> {
    return pulumi.output(args).apply((a: any) => getShares(a, opts))
}

/**
 * A collection of arguments for invoking getShares.
 */
export interface GetSharesOutputArgs {
    /**
     * list of databricks.Share names.
     */
    shares?: pulumi.Input<pulumi.Input<string>[]>;
}
