// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single clean room asset.
 *
 * ## Example Usage
 *
 * # Example: Clean Room Asset Datasource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = new databricks.index.CleanRoomsAsset("this", {name: "example-cleanroom-asset"});
 * ```
 */
export function getCleanRoomAsset(args: GetCleanRoomAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetCleanRoomAssetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getCleanRoomAsset:getCleanRoomAsset", {
        "assetType": args.assetType,
        "cleanRoomName": args.cleanRoomName,
        "foreignTable": args.foreignTable,
        "foreignTableLocalDetails": args.foreignTableLocalDetails,
        "name": args.name,
        "notebook": args.notebook,
        "table": args.table,
        "tableLocalDetails": args.tableLocalDetails,
        "view": args.view,
        "viewLocalDetails": args.viewLocalDetails,
        "volumeLocalDetails": args.volumeLocalDetails,
    }, opts);
}

/**
 * A collection of arguments for invoking getCleanRoomAsset.
 */
export interface GetCleanRoomAssetArgs {
    /**
     * The type of the asset. Possible values are: `FOREIGN_TABLE`, `NOTEBOOK_FILE`, `TABLE`, `VIEW`, `VOLUME`
     */
    assetType: string;
    /**
     * The name of the clean room this asset belongs to.
     * This field is required for create operations and populated by the server for responses
     */
    cleanRoomName?: string;
    /**
     * (CleanRoomAssetForeignTable) - Foreign table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    foreignTable?: inputs.GetCleanRoomAssetForeignTable;
    /**
     * (CleanRoomAssetForeignTableLocalDetails) - Local details for a foreign that are only available to its owner.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    foreignTableLocalDetails?: inputs.GetCleanRoomAssetForeignTableLocalDetails;
    /**
     * A fully qualified name that uniquely identifies the asset within the clean room.
     * This is also the name displayed in the clean room UI.
     *
     * For UC securable assets (tables, volumes, etc.), the format is *shared_catalog*.*shared_schema*.*asset_name*
     *
     * For notebooks, the name is the notebook file name.
     * For jar analyses, the name is the jar analysis name
     */
    name: string;
    /**
     * (CleanRoomAssetNotebook) - Notebook details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **NOTEBOOK_FILE**
     */
    notebook?: inputs.GetCleanRoomAssetNotebook;
    /**
     * (CleanRoomAssetTable) - Table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **TABLE**
     */
    table?: inputs.GetCleanRoomAssetTable;
    /**
     * (CleanRoomAssetTableLocalDetails) - Local details for a table that are only available to its owner.
     * Present if and only if **asset_type** is **TABLE**
     */
    tableLocalDetails?: inputs.GetCleanRoomAssetTableLocalDetails;
    /**
     * (CleanRoomAssetView) - View details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **VIEW**
     */
    view?: inputs.GetCleanRoomAssetView;
    /**
     * (CleanRoomAssetViewLocalDetails) - Local details for a view that are only available to its owner.
     * Present if and only if **asset_type** is **VIEW**
     */
    viewLocalDetails?: inputs.GetCleanRoomAssetViewLocalDetails;
    /**
     * (CleanRoomAssetVolumeLocalDetails) - Local details for a volume that are only available to its owner.
     * Present if and only if **asset_type** is **VOLUME**
     */
    volumeLocalDetails?: inputs.GetCleanRoomAssetVolumeLocalDetails;
}

/**
 * A collection of values returned by getCleanRoomAsset.
 */
export interface GetCleanRoomAssetResult {
    /**
     * (integer) - When the asset is added to the clean room, in epoch milliseconds
     */
    readonly addedAt: number;
    /**
     * (string) - The type of the asset. Possible values are: `FOREIGN_TABLE`, `NOTEBOOK_FILE`, `TABLE`, `VIEW`, `VOLUME`
     */
    readonly assetType: string;
    /**
     * (string) - The name of the clean room this asset belongs to.
     * This field is required for create operations and populated by the server for responses
     */
    readonly cleanRoomName?: string;
    /**
     * (CleanRoomAssetForeignTable) - Foreign table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    readonly foreignTable?: outputs.GetCleanRoomAssetForeignTable;
    /**
     * (CleanRoomAssetForeignTableLocalDetails) - Local details for a foreign that are only available to its owner.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    readonly foreignTableLocalDetails?: outputs.GetCleanRoomAssetForeignTableLocalDetails;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The name of the partition column
     */
    readonly name: string;
    /**
     * (CleanRoomAssetNotebook) - Notebook details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **NOTEBOOK_FILE**
     */
    readonly notebook?: outputs.GetCleanRoomAssetNotebook;
    /**
     * (string) - The alias of the collaborator who owns this asset
     */
    readonly ownerCollaboratorAlias: string;
    /**
     * (string) - Status of the asset. Possible values are: `ACTIVE`, `PENDING`, `PERMISSION_DENIED`
     */
    readonly status: string;
    /**
     * (CleanRoomAssetTable) - Table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **TABLE**
     */
    readonly table?: outputs.GetCleanRoomAssetTable;
    /**
     * (CleanRoomAssetTableLocalDetails) - Local details for a table that are only available to its owner.
     * Present if and only if **asset_type** is **TABLE**
     */
    readonly tableLocalDetails?: outputs.GetCleanRoomAssetTableLocalDetails;
    /**
     * (CleanRoomAssetView) - View details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **VIEW**
     */
    readonly view?: outputs.GetCleanRoomAssetView;
    /**
     * (CleanRoomAssetViewLocalDetails) - Local details for a view that are only available to its owner.
     * Present if and only if **asset_type** is **VIEW**
     */
    readonly viewLocalDetails?: outputs.GetCleanRoomAssetViewLocalDetails;
    /**
     * (CleanRoomAssetVolumeLocalDetails) - Local details for a volume that are only available to its owner.
     * Present if and only if **asset_type** is **VOLUME**
     */
    readonly volumeLocalDetails?: outputs.GetCleanRoomAssetVolumeLocalDetails;
}
/**
 * This data source can be used to get a single clean room asset.
 *
 * ## Example Usage
 *
 * # Example: Clean Room Asset Datasource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = new databricks.index.CleanRoomsAsset("this", {name: "example-cleanroom-asset"});
 * ```
 */
export function getCleanRoomAssetOutput(args: GetCleanRoomAssetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCleanRoomAssetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getCleanRoomAsset:getCleanRoomAsset", {
        "assetType": args.assetType,
        "cleanRoomName": args.cleanRoomName,
        "foreignTable": args.foreignTable,
        "foreignTableLocalDetails": args.foreignTableLocalDetails,
        "name": args.name,
        "notebook": args.notebook,
        "table": args.table,
        "tableLocalDetails": args.tableLocalDetails,
        "view": args.view,
        "viewLocalDetails": args.viewLocalDetails,
        "volumeLocalDetails": args.volumeLocalDetails,
    }, opts);
}

/**
 * A collection of arguments for invoking getCleanRoomAsset.
 */
export interface GetCleanRoomAssetOutputArgs {
    /**
     * The type of the asset. Possible values are: `FOREIGN_TABLE`, `NOTEBOOK_FILE`, `TABLE`, `VIEW`, `VOLUME`
     */
    assetType: pulumi.Input<string>;
    /**
     * The name of the clean room this asset belongs to.
     * This field is required for create operations and populated by the server for responses
     */
    cleanRoomName?: pulumi.Input<string>;
    /**
     * (CleanRoomAssetForeignTable) - Foreign table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    foreignTable?: pulumi.Input<inputs.GetCleanRoomAssetForeignTableArgs>;
    /**
     * (CleanRoomAssetForeignTableLocalDetails) - Local details for a foreign that are only available to its owner.
     * Present if and only if **asset_type** is **FOREIGN_TABLE**
     */
    foreignTableLocalDetails?: pulumi.Input<inputs.GetCleanRoomAssetForeignTableLocalDetailsArgs>;
    /**
     * A fully qualified name that uniquely identifies the asset within the clean room.
     * This is also the name displayed in the clean room UI.
     *
     * For UC securable assets (tables, volumes, etc.), the format is *shared_catalog*.*shared_schema*.*asset_name*
     *
     * For notebooks, the name is the notebook file name.
     * For jar analyses, the name is the jar analysis name
     */
    name: pulumi.Input<string>;
    /**
     * (CleanRoomAssetNotebook) - Notebook details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **NOTEBOOK_FILE**
     */
    notebook?: pulumi.Input<inputs.GetCleanRoomAssetNotebookArgs>;
    /**
     * (CleanRoomAssetTable) - Table details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **TABLE**
     */
    table?: pulumi.Input<inputs.GetCleanRoomAssetTableArgs>;
    /**
     * (CleanRoomAssetTableLocalDetails) - Local details for a table that are only available to its owner.
     * Present if and only if **asset_type** is **TABLE**
     */
    tableLocalDetails?: pulumi.Input<inputs.GetCleanRoomAssetTableLocalDetailsArgs>;
    /**
     * (CleanRoomAssetView) - View details available to all collaborators of the clean room.
     * Present if and only if **asset_type** is **VIEW**
     */
    view?: pulumi.Input<inputs.GetCleanRoomAssetViewArgs>;
    /**
     * (CleanRoomAssetViewLocalDetails) - Local details for a view that are only available to its owner.
     * Present if and only if **asset_type** is **VIEW**
     */
    viewLocalDetails?: pulumi.Input<inputs.GetCleanRoomAssetViewLocalDetailsArgs>;
    /**
     * (CleanRoomAssetVolumeLocalDetails) - Local details for a volume that are only available to its owner.
     * Present if and only if **asset_type** is **VOLUME**
     */
    volumeLocalDetails?: pulumi.Input<inputs.GetCleanRoomAssetVolumeLocalDetailsArgs>;
}
