// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can be used to get a single external metadata object.
 *
 * > **Note** This resource can only be used with an workspace-level provider!
 *
 * ## Example Usage
 *
 * Referring to an external metadata object by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getExternalMetadata({
 *     name: "security_events_stream",
 * });
 * ```
 */
export function getExternalMetadata(args: GetExternalMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalMetadataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getExternalMetadata:getExternalMetadata", {
        "columns": args.columns,
        "description": args.description,
        "entityType": args.entityType,
        "name": args.name,
        "owner": args.owner,
        "properties": args.properties,
        "systemType": args.systemType,
        "url": args.url,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalMetadata.
 */
export interface GetExternalMetadataArgs {
    /**
     * (list of string) - List of columns associated with the external metadata object
     */
    columns?: string[];
    /**
     * (string) - User-provided free-form text description
     */
    description?: string;
    /**
     * (string) - Type of entity within the external system
     */
    entityType: string;
    /**
     * Name of the external metadata object
     */
    name: string;
    /**
     * (string) - Owner of the external metadata object
     */
    owner?: string;
    /**
     * (object) - A map of key-value properties attached to the external metadata object
     */
    properties?: {[key: string]: string};
    /**
     * (string) - Type of external system. Possible values are: `AMAZON_REDSHIFT`, `AZURE_SYNAPSE`, `CONFLUENT`, `DATABRICKS`, `GOOGLE_BIGQUERY`, `KAFKA`, `LOOKER`, `MICROSOFT_FABRIC`, `MICROSOFT_SQL_SERVER`, `MONGODB`, `MYSQL`, `ORACLE`, `OTHER`, `POSTGRESQL`, `POWER_BI`, `SALESFORCE`, `SAP`, `SERVICENOW`, `SNOWFLAKE`, `TABLEAU`, `TERADATA`, `WORKDAY`
     */
    systemType: string;
    /**
     * (string) - URL associated with the external metadata object
     */
    url?: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getExternalMetadata.
 */
export interface GetExternalMetadataResult {
    /**
     * (list of string) - List of columns associated with the external metadata object
     */
    readonly columns?: string[];
    /**
     * (string) - Time at which this external metadata object was created
     */
    readonly createTime: string;
    /**
     * (string) - Username of external metadata object creator
     */
    readonly createdBy: string;
    /**
     * (string) - User-provided free-form text description
     */
    readonly description?: string;
    /**
     * (string) - Type of entity within the external system
     */
    readonly entityType: string;
    /**
     * (string) - Unique identifier of the external metadata object
     */
    readonly id: string;
    /**
     * (string) - Unique identifier of parent metastore
     */
    readonly metastoreId: string;
    /**
     * (string) - Name of the external metadata object
     */
    readonly name: string;
    /**
     * (string) - Owner of the external metadata object
     */
    readonly owner?: string;
    /**
     * (object) - A map of key-value properties attached to the external metadata object
     */
    readonly properties?: {[key: string]: string};
    /**
     * (string) - Type of external system. Possible values are: `AMAZON_REDSHIFT`, `AZURE_SYNAPSE`, `CONFLUENT`, `DATABRICKS`, `GOOGLE_BIGQUERY`, `KAFKA`, `LOOKER`, `MICROSOFT_FABRIC`, `MICROSOFT_SQL_SERVER`, `MONGODB`, `MYSQL`, `ORACLE`, `OTHER`, `POSTGRESQL`, `POWER_BI`, `SALESFORCE`, `SAP`, `SERVICENOW`, `SNOWFLAKE`, `TABLEAU`, `TERADATA`, `WORKDAY`
     */
    readonly systemType: string;
    /**
     * (string) - Time at which this external metadata object was last modified
     */
    readonly updateTime: string;
    /**
     * (string) - Username of user who last modified external metadata object
     */
    readonly updatedBy: string;
    /**
     * (string) - URL associated with the external metadata object
     */
    readonly url?: string;
    readonly workspaceId?: string;
}
/**
 * This data source can be used to get a single external metadata object.
 *
 * > **Note** This resource can only be used with an workspace-level provider!
 *
 * ## Example Usage
 *
 * Referring to an external metadata object by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getExternalMetadata({
 *     name: "security_events_stream",
 * });
 * ```
 */
export function getExternalMetadataOutput(args: GetExternalMetadataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalMetadataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getExternalMetadata:getExternalMetadata", {
        "columns": args.columns,
        "description": args.description,
        "entityType": args.entityType,
        "name": args.name,
        "owner": args.owner,
        "properties": args.properties,
        "systemType": args.systemType,
        "url": args.url,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalMetadata.
 */
export interface GetExternalMetadataOutputArgs {
    /**
     * (list of string) - List of columns associated with the external metadata object
     */
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (string) - User-provided free-form text description
     */
    description?: pulumi.Input<string>;
    /**
     * (string) - Type of entity within the external system
     */
    entityType: pulumi.Input<string>;
    /**
     * Name of the external metadata object
     */
    name: pulumi.Input<string>;
    /**
     * (string) - Owner of the external metadata object
     */
    owner?: pulumi.Input<string>;
    /**
     * (object) - A map of key-value properties attached to the external metadata object
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (string) - Type of external system. Possible values are: `AMAZON_REDSHIFT`, `AZURE_SYNAPSE`, `CONFLUENT`, `DATABRICKS`, `GOOGLE_BIGQUERY`, `KAFKA`, `LOOKER`, `MICROSOFT_FABRIC`, `MICROSOFT_SQL_SERVER`, `MONGODB`, `MYSQL`, `ORACLE`, `OTHER`, `POSTGRESQL`, `POWER_BI`, `SALESFORCE`, `SAP`, `SERVICENOW`, `SNOWFLAKE`, `TABLEAU`, `TERADATA`, `WORKDAY`
     */
    systemType: pulumi.Input<string>;
    /**
     * (string) - URL associated with the external metadata object
     */
    url?: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
