// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSqlWarehouse(args?: GetSqlWarehouseArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlWarehouseResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getSqlWarehouse:getSqlWarehouse", {
        "autoStopMins": args.autoStopMins,
        "channel": args.channel,
        "clusterSize": args.clusterSize,
        "creatorName": args.creatorName,
        "dataSourceId": args.dataSourceId,
        "enablePhoton": args.enablePhoton,
        "enableServerlessCompute": args.enableServerlessCompute,
        "health": args.health,
        "id": args.id,
        "instanceProfileArn": args.instanceProfileArn,
        "jdbcUrl": args.jdbcUrl,
        "maxNumClusters": args.maxNumClusters,
        "minNumClusters": args.minNumClusters,
        "name": args.name,
        "numActiveSessions": args.numActiveSessions,
        "numClusters": args.numClusters,
        "odbcParams": args.odbcParams,
        "spotInstancePolicy": args.spotInstancePolicy,
        "state": args.state,
        "tags": args.tags,
        "warehouseType": args.warehouseType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlWarehouse.
 */
export interface GetSqlWarehouseArgs {
    autoStopMins?: number;
    channel?: inputs.GetSqlWarehouseChannel;
    clusterSize?: string;
    creatorName?: string;
    dataSourceId?: string;
    enablePhoton?: boolean;
    enableServerlessCompute?: boolean;
    health?: inputs.GetSqlWarehouseHealth;
    id?: string;
    instanceProfileArn?: string;
    jdbcUrl?: string;
    maxNumClusters?: number;
    minNumClusters?: number;
    name?: string;
    numActiveSessions?: number;
    numClusters?: number;
    odbcParams?: inputs.GetSqlWarehouseOdbcParams;
    spotInstancePolicy?: string;
    state?: string;
    tags?: inputs.GetSqlWarehouseTags;
    warehouseType?: string;
}

/**
 * A collection of values returned by getSqlWarehouse.
 */
export interface GetSqlWarehouseResult {
    readonly autoStopMins: number;
    readonly channel: outputs.GetSqlWarehouseChannel;
    readonly clusterSize: string;
    readonly creatorName: string;
    readonly dataSourceId: string;
    readonly enablePhoton: boolean;
    readonly enableServerlessCompute: boolean;
    readonly health: outputs.GetSqlWarehouseHealth;
    readonly id: string;
    readonly instanceProfileArn: string;
    readonly jdbcUrl: string;
    readonly maxNumClusters: number;
    readonly minNumClusters: number;
    readonly name: string;
    readonly numActiveSessions: number;
    readonly numClusters: number;
    readonly odbcParams: outputs.GetSqlWarehouseOdbcParams;
    readonly spotInstancePolicy: string;
    readonly state: string;
    readonly tags: outputs.GetSqlWarehouseTags;
    readonly warehouseType: string;
}
export function getSqlWarehouseOutput(args?: GetSqlWarehouseOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSqlWarehouseResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getSqlWarehouse:getSqlWarehouse", {
        "autoStopMins": args.autoStopMins,
        "channel": args.channel,
        "clusterSize": args.clusterSize,
        "creatorName": args.creatorName,
        "dataSourceId": args.dataSourceId,
        "enablePhoton": args.enablePhoton,
        "enableServerlessCompute": args.enableServerlessCompute,
        "health": args.health,
        "id": args.id,
        "instanceProfileArn": args.instanceProfileArn,
        "jdbcUrl": args.jdbcUrl,
        "maxNumClusters": args.maxNumClusters,
        "minNumClusters": args.minNumClusters,
        "name": args.name,
        "numActiveSessions": args.numActiveSessions,
        "numClusters": args.numClusters,
        "odbcParams": args.odbcParams,
        "spotInstancePolicy": args.spotInstancePolicy,
        "state": args.state,
        "tags": args.tags,
        "warehouseType": args.warehouseType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlWarehouse.
 */
export interface GetSqlWarehouseOutputArgs {
    autoStopMins?: pulumi.Input<number>;
    channel?: pulumi.Input<inputs.GetSqlWarehouseChannelArgs>;
    clusterSize?: pulumi.Input<string>;
    creatorName?: pulumi.Input<string>;
    dataSourceId?: pulumi.Input<string>;
    enablePhoton?: pulumi.Input<boolean>;
    enableServerlessCompute?: pulumi.Input<boolean>;
    health?: pulumi.Input<inputs.GetSqlWarehouseHealthArgs>;
    id?: pulumi.Input<string>;
    instanceProfileArn?: pulumi.Input<string>;
    jdbcUrl?: pulumi.Input<string>;
    maxNumClusters?: pulumi.Input<number>;
    minNumClusters?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    numActiveSessions?: pulumi.Input<number>;
    numClusters?: pulumi.Input<number>;
    odbcParams?: pulumi.Input<inputs.GetSqlWarehouseOdbcParamsArgs>;
    spotInstancePolicy?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<inputs.GetSqlWarehouseTagsArgs>;
    warehouseType?: pulumi.Input<string>;
}
