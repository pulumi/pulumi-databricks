// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Entitlements extends pulumi.CustomResource {
    /**
     * Get an existing Entitlements resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntitlementsState, opts?: pulumi.CustomResourceOptions): Entitlements {
        return new Entitlements(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/entitlements:Entitlements';

    /**
     * Returns true if the given object is an instance of Entitlements.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Entitlements {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Entitlements.__pulumiType;
    }

    public readonly allowClusterCreate!: pulumi.Output<boolean | undefined>;
    public readonly allowInstancePoolCreate!: pulumi.Output<boolean | undefined>;
    public readonly databricksSqlAccess!: pulumi.Output<boolean | undefined>;
    public readonly groupId!: pulumi.Output<string | undefined>;
    public readonly servicePrincipalId!: pulumi.Output<string | undefined>;
    public readonly userId!: pulumi.Output<string | undefined>;
    public readonly workspaceAccess!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Entitlements resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EntitlementsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EntitlementsArgs | EntitlementsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EntitlementsState | undefined;
            resourceInputs["allowClusterCreate"] = state ? state.allowClusterCreate : undefined;
            resourceInputs["allowInstancePoolCreate"] = state ? state.allowInstancePoolCreate : undefined;
            resourceInputs["databricksSqlAccess"] = state ? state.databricksSqlAccess : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["workspaceAccess"] = state ? state.workspaceAccess : undefined;
        } else {
            const args = argsOrState as EntitlementsArgs | undefined;
            resourceInputs["allowClusterCreate"] = args ? args.allowClusterCreate : undefined;
            resourceInputs["allowInstancePoolCreate"] = args ? args.allowInstancePoolCreate : undefined;
            resourceInputs["databricksSqlAccess"] = args ? args.databricksSqlAccess : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["servicePrincipalId"] = args ? args.servicePrincipalId : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["workspaceAccess"] = args ? args.workspaceAccess : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Entitlements.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Entitlements resources.
 */
export interface EntitlementsState {
    allowClusterCreate?: pulumi.Input<boolean>;
    allowInstancePoolCreate?: pulumi.Input<boolean>;
    databricksSqlAccess?: pulumi.Input<boolean>;
    groupId?: pulumi.Input<string>;
    servicePrincipalId?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    workspaceAccess?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Entitlements resource.
 */
export interface EntitlementsArgs {
    allowClusterCreate?: pulumi.Input<boolean>;
    allowInstancePoolCreate?: pulumi.Input<boolean>;
    databricksSqlAccess?: pulumi.Input<boolean>;
    groupId?: pulumi.Input<string>;
    servicePrincipalId?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    workspaceAccess?: pulumi.Input<boolean>;
}
