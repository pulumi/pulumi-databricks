// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Retrieves a list of databricks.Schema ids, that were created by Pulumi or manually, so that special handling could be applied.
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * Listing all schemas in a _sandbox_ databricks_catalog:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const sandbox = databricks.getSchemas({
 *     catalogName: "sandbox",
 * });
 * export const allSandboxSchemas = sandbox;
 * ```
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Schema to manage schemas within Unity Catalog.
 * * databricks.Catalog to manage catalogs within Unity Catalog.
 */
export function getSchemas(args: GetSchemasArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemasResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getSchemas:getSchemas", {
        "catalogName": args.catalogName,
        "ids": args.ids,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasArgs {
    /**
     * Name of databricks_catalog
     */
    catalogName: string;
    /**
     * set of databricks.Schema full names: *`catalog`.`schema`*
     */
    ids?: string[];
}

/**
 * A collection of values returned by getSchemas.
 */
export interface GetSchemasResult {
    readonly catalogName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * set of databricks.Schema full names: *`catalog`.`schema`*
     */
    readonly ids: string[];
}
/**
 * Retrieves a list of databricks.Schema ids, that were created by Pulumi or manually, so that special handling could be applied.
 *
 * > This data source can only be used with a workspace-level provider!
 *
 * ## Example Usage
 *
 * Listing all schemas in a _sandbox_ databricks_catalog:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const sandbox = databricks.getSchemas({
 *     catalogName: "sandbox",
 * });
 * export const allSandboxSchemas = sandbox;
 * ```
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * databricks.Schema to manage schemas within Unity Catalog.
 * * databricks.Catalog to manage catalogs within Unity Catalog.
 */
export function getSchemasOutput(args: GetSchemasOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemasResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getSchemas:getSchemas", {
        "catalogName": args.catalogName,
        "ids": args.ids,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasOutputArgs {
    /**
     * Name of databricks_catalog
     */
    catalogName: pulumi.Input<string>;
    /**
     * set of databricks.Schema full names: *`catalog`.`schema`*
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}
