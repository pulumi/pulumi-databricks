// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MwsCustomerManagedKeys extends pulumi.CustomResource {
    /**
     * Get an existing MwsCustomerManagedKeys resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwsCustomerManagedKeysState, opts?: pulumi.CustomResourceOptions): MwsCustomerManagedKeys {
        return new MwsCustomerManagedKeys(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/mwsCustomerManagedKeys:MwsCustomerManagedKeys';

    /**
     * Returns true if the given object is an instance of MwsCustomerManagedKeys.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwsCustomerManagedKeys {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwsCustomerManagedKeys.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly awsKeyInfo!: pulumi.Output<outputs.MwsCustomerManagedKeysAwsKeyInfo | undefined>;
    public readonly creationTime!: pulumi.Output<number>;
    public readonly customerManagedKeyId!: pulumi.Output<string>;
    public readonly gcpKeyInfo!: pulumi.Output<outputs.MwsCustomerManagedKeysGcpKeyInfo | undefined>;
    public readonly useCases!: pulumi.Output<string[]>;

    /**
     * Create a MwsCustomerManagedKeys resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MwsCustomerManagedKeysArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwsCustomerManagedKeysArgs | MwsCustomerManagedKeysState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MwsCustomerManagedKeysState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["awsKeyInfo"] = state ? state.awsKeyInfo : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["customerManagedKeyId"] = state ? state.customerManagedKeyId : undefined;
            resourceInputs["gcpKeyInfo"] = state ? state.gcpKeyInfo : undefined;
            resourceInputs["useCases"] = state ? state.useCases : undefined;
        } else {
            const args = argsOrState as MwsCustomerManagedKeysArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.useCases === undefined) && !opts.urn) {
                throw new Error("Missing required property 'useCases'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["awsKeyInfo"] = args ? args.awsKeyInfo : undefined;
            resourceInputs["creationTime"] = args ? args.creationTime : undefined;
            resourceInputs["customerManagedKeyId"] = args ? args.customerManagedKeyId : undefined;
            resourceInputs["gcpKeyInfo"] = args ? args.gcpKeyInfo : undefined;
            resourceInputs["useCases"] = args ? args.useCases : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MwsCustomerManagedKeys.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MwsCustomerManagedKeys resources.
 */
export interface MwsCustomerManagedKeysState {
    accountId?: pulumi.Input<string>;
    awsKeyInfo?: pulumi.Input<inputs.MwsCustomerManagedKeysAwsKeyInfo>;
    creationTime?: pulumi.Input<number>;
    customerManagedKeyId?: pulumi.Input<string>;
    gcpKeyInfo?: pulumi.Input<inputs.MwsCustomerManagedKeysGcpKeyInfo>;
    useCases?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a MwsCustomerManagedKeys resource.
 */
export interface MwsCustomerManagedKeysArgs {
    accountId: pulumi.Input<string>;
    awsKeyInfo?: pulumi.Input<inputs.MwsCustomerManagedKeysAwsKeyInfo>;
    creationTime?: pulumi.Input<number>;
    customerManagedKeyId?: pulumi.Input<string>;
    gcpKeyInfo?: pulumi.Input<inputs.MwsCustomerManagedKeysGcpKeyInfo>;
    useCases: pulumi.Input<pulumi.Input<string>[]>;
}
