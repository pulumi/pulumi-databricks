// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ### Creating a Databricks on GCP workspace
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 * import * as google from "@pulumi/google";
 *
 * const config = new pulumi.Config();
 * // Account Id that could be found in the top right corner of https://accounts.cloud.databricks.com/
 * const databricksAccountId = config.requireObject<any>("databricksAccountId");
 * const dbxPrivateVpc = new google.index.ComputeNetwork("dbx_private_vpc", {
 *     project: googleProject,
 *     name: `tf-network-${suffix.result}`,
 *     autoCreateSubnetworks: false,
 * });
 * const network_with_private_secondary_ip_ranges = new google.index.ComputeSubnetwork("network-with-private-secondary-ip-ranges", {
 *     name: `test-dbx-${suffix.result}`,
 *     ipCidrRange: "10.0.0.0/16",
 *     region: "us-central1",
 *     network: dbxPrivateVpc.id,
 *     privateIpGoogleAccess: true,
 * });
 * const router = new google.index.ComputeRouter("router", {
 *     name: `my-router-${suffix.result}`,
 *     region: network_with_private_secondary_ip_ranges.region,
 *     network: dbxPrivateVpc.id,
 * });
 * const nat = new google.index.ComputeRouterNat("nat", {
 *     name: `my-router-nat-${suffix.result}`,
 *     router: router.name,
 *     region: router.region,
 *     natIpAllocateOption: "AUTO_ONLY",
 *     sourceSubnetworkIpRangesToNat: "ALL_SUBNETWORKS_ALL_IP_RANGES",
 * });
 * const _this = new databricks.MwsNetworks("this", {
 *     accountId: databricksAccountId,
 *     networkName: `test-demo-${suffix.result}`,
 *     gcpNetworkInfo: {
 *         networkProjectId: googleProject,
 *         vpcId: dbxPrivateVpc.name,
 *         subnetId: networkWithPrivateSecondaryIpRanges.name,
 *         subnetRegion: networkWithPrivateSecondaryIpRanges.region,
 *     },
 * });
 * ```
 *
 * In order to create a VPC [that leverages GCP Private Service Connect](https://docs.gcp.databricks.com/administration-guide/cloud-configurations/gcp/private-service-connect.html) you would need to add the `vpcEndpointId` Attributes from mwsVpcEndpoint resources into the databricks.MwsNetworks resource. For example:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = new databricks.MwsNetworks("this", {
 *     accountId: databricksAccountId,
 *     networkName: `test-demo-${suffix.result}`,
 *     gcpNetworkInfo: {
 *         networkProjectId: googleProject,
 *         vpcId: dbxPrivateVpc.name,
 *         subnetId: networkWithPrivateSecondaryIpRanges.name,
 *         subnetRegion: networkWithPrivateSecondaryIpRanges.region,
 *     },
 *     vpcEndpoints: {
 *         dataplaneRelays: [relay.vpcEndpointId],
 *         restApis: [workspace.vpcEndpointId],
 *     },
 * });
 * ```
 *
 * ## Modifying networks on running workspaces (AWS only)
 *
 * Due to specifics of platform APIs, changing any attribute of network configuration would cause `databricks.MwsNetworks` to be re-created - deleted & added again with special case for running workspaces. Once network configuration is attached to a running databricks_mws_workspaces, you cannot delete it and `pulumi up` would result in `INVALID_STATE: Unable to delete, Network is being used by active workspace X` error. In order to modify any attributes of a network, you have to perform three different `pulumi up` steps:
 *
 * 1. Create a new `databricks.MwsNetworks` resource.
 * 2. Update the `databricks.MwsWorkspaces` to point to the new `networkId`.
 * 3. Delete the old `databricks.MwsNetworks` resource.
 *
 * ## Related Resources
 *
 * The following resources are used in the same context:
 *
 * * Provisioning Databricks on AWS guide.
 * * Provisioning Databricks on AWS with Private Link guide.
 * * Provisioning AWS Databricks workspaces with a Hub & Spoke firewall for data exfiltration protection guide.
 * * Provisioning Databricks on GCP guide.
 * * Provisioning Databricks workspaces on GCP with Private Service Connect guide.
 * * databricks.MwsVpcEndpoint to register awsVpcEndpoint resources with Databricks such that they can be used as part of a databricks.MwsNetworks configuration.
 * * databricks.MwsPrivateAccessSettings to create a Private Access Setting that can be used as part of a databricks.MwsWorkspaces resource to create a [Databricks Workspace that leverages AWS PrivateLink](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html) or [GCP Private Service Connect](https://docs.gcp.databricks.com/administration-guide/cloud-configurations/gcp/private-service-connect.html).
 * * databricks.MwsWorkspaces to set up [AWS and GCP workspaces](https://docs.databricks.com/getting-started/overview.html#e2-architecture-1).
 *
 * ## Import
 *
 * This resource can be imported by Databricks account ID and network ID.
 *
 * hcl
 *
 * import {
 *
 *   to = databricks_mws_networks.this
 *
 *   id = "<account_id>/<network_id>"
 *
 * }
 *
 * Alternatively, when using `terraform` version 1.4 or earlier, import using the `pulumi import` command:
 *
 * ```sh
 * $ pulumi import databricks:index/mwsNetworks:MwsNetworks this '<account_id>/<network_id>'
 * ```
 *
 * ~> This resource does not support updates. If your configuration does not match the existing resource,
 *
 *    the next `pulumi up` will cause the resource to be destroyed and recreated. After importing,
 *
 *    verify that the configuration matches the existing resource by running `pulumi preview`.
 */
export class MwsNetworks extends pulumi.CustomResource {
    /**
     * Get an existing MwsNetworks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwsNetworksState, opts?: pulumi.CustomResourceOptions): MwsNetworks {
        return new MwsNetworks(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/mwsNetworks:MwsNetworks';

    /**
     * Returns true if the given object is an instance of MwsNetworks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwsNetworks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwsNetworks.__pulumiType;
    }

    /**
     * Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
     */
    declare public readonly accountId: pulumi.Output<string>;
    declare public readonly creationTime: pulumi.Output<number>;
    declare public readonly errorMessages: pulumi.Output<outputs.MwsNetworksErrorMessage[]>;
    /**
     * a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
     */
    declare public readonly gcpNetworkInfo: pulumi.Output<outputs.MwsNetworksGcpNetworkInfo | undefined>;
    /**
     * (String) id of network to be used for databricks.MwsWorkspaces resource.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * name under which this network is registered
     */
    declare public readonly networkName: pulumi.Output<string>;
    /**
     * ids of aws_security_group
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * ids of aws_subnet
     */
    declare public readonly subnetIds: pulumi.Output<string[] | undefined>;
    /**
     * mapping of databricks.MwsVpcEndpoint for PrivateLink or Private Service Connect connections
     */
    declare public readonly vpcEndpoints: pulumi.Output<outputs.MwsNetworksVpcEndpoints>;
    /**
     * aws_vpc id
     */
    declare public readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * (String) VPC attachment status
     */
    declare public readonly vpcStatus: pulumi.Output<string>;
    /**
     * (Integer) id of associated workspace
     */
    declare public readonly workspaceId: pulumi.Output<string>;

    /**
     * Create a MwsNetworks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MwsNetworksArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwsNetworksArgs | MwsNetworksState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MwsNetworksState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["creationTime"] = state?.creationTime;
            resourceInputs["errorMessages"] = state?.errorMessages;
            resourceInputs["gcpNetworkInfo"] = state?.gcpNetworkInfo;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["networkName"] = state?.networkName;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["subnetIds"] = state?.subnetIds;
            resourceInputs["vpcEndpoints"] = state?.vpcEndpoints;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vpcStatus"] = state?.vpcStatus;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as MwsNetworksArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.networkName === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkName'");
            }
            resourceInputs["accountId"] = args?.accountId ? pulumi.secret(args.accountId) : undefined;
            resourceInputs["creationTime"] = args?.creationTime;
            resourceInputs["errorMessages"] = args?.errorMessages;
            resourceInputs["gcpNetworkInfo"] = args?.gcpNetworkInfo;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["networkName"] = args?.networkName;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["subnetIds"] = args?.subnetIds;
            resourceInputs["vpcEndpoints"] = args?.vpcEndpoints;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vpcStatus"] = args?.vpcStatus;
            resourceInputs["workspaceId"] = args?.workspaceId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MwsNetworks.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MwsNetworks resources.
 */
export interface MwsNetworksState {
    /**
     * Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
     */
    accountId?: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    errorMessages?: pulumi.Input<pulumi.Input<inputs.MwsNetworksErrorMessage>[]>;
    /**
     * a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
     */
    gcpNetworkInfo?: pulumi.Input<inputs.MwsNetworksGcpNetworkInfo>;
    /**
     * (String) id of network to be used for databricks.MwsWorkspaces resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * name under which this network is registered
     */
    networkName?: pulumi.Input<string>;
    /**
     * ids of aws_security_group
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ids of aws_subnet
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * mapping of databricks.MwsVpcEndpoint for PrivateLink or Private Service Connect connections
     */
    vpcEndpoints?: pulumi.Input<inputs.MwsNetworksVpcEndpoints>;
    /**
     * aws_vpc id
     */
    vpcId?: pulumi.Input<string>;
    /**
     * (String) VPC attachment status
     */
    vpcStatus?: pulumi.Input<string>;
    /**
     * (Integer) id of associated workspace
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MwsNetworks resource.
 */
export interface MwsNetworksArgs {
    /**
     * Account Id that could be found in the top right corner of [Accounts Console](https://accounts.cloud.databricks.com/)
     */
    accountId: pulumi.Input<string>;
    creationTime?: pulumi.Input<number>;
    errorMessages?: pulumi.Input<pulumi.Input<inputs.MwsNetworksErrorMessage>[]>;
    /**
     * a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
     */
    gcpNetworkInfo?: pulumi.Input<inputs.MwsNetworksGcpNetworkInfo>;
    /**
     * (String) id of network to be used for databricks.MwsWorkspaces resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * name under which this network is registered
     */
    networkName: pulumi.Input<string>;
    /**
     * ids of aws_security_group
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ids of aws_subnet
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * mapping of databricks.MwsVpcEndpoint for PrivateLink or Private Service Connect connections
     */
    vpcEndpoints?: pulumi.Input<inputs.MwsNetworksVpcEndpoints>;
    /**
     * aws_vpc id
     */
    vpcId?: pulumi.Input<string>;
    /**
     * (String) VPC attachment status
     */
    vpcStatus?: pulumi.Input<string>;
    /**
     * (Integer) id of associated workspace
     */
    workspaceId?: pulumi.Input<string>;
}
