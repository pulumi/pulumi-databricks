// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource allows you to manage access rules on Databricks account level resources. For convenience we allow accessing this resource through the Databricks account and workspace.
 *
 * > **Note** Currently, we only support managing access rules on service principal resources through `databricks.AccessControlRuleSet`.
 *
 * > **Warning** `databricks.AccessControlRuleSet` cannot be used to manage access rules for resources supported by databricks_permissions. Refer to its documentation for more information.
 *
 * ## Related Resources
 *
 * The following resources are often used in the same context:
 *
 * * databricks.Group
 * * databricks.User
 * * databricks.ServicePrincipal
 */
export class AccessControlRuleSet extends pulumi.CustomResource {
    /**
     * Get an existing AccessControlRuleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessControlRuleSetState, opts?: pulumi.CustomResourceOptions): AccessControlRuleSet {
        return new AccessControlRuleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/accessControlRuleSet:AccessControlRuleSet';

    /**
     * Returns true if the given object is an instance of AccessControlRuleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessControlRuleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessControlRuleSet.__pulumiType;
    }

    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
     *
     * !> **Warning** Name uniquely identifies a rule set resource. Ensure all the grantRules blocks for a rule set name are present in one `databricks.AccessControlRuleSet` resource block. Otherwise, after applying changes, users might lose their role assignment even if that was not intended.
     */
    public readonly grantRules!: pulumi.Output<outputs.AccessControlRuleSetGrantRule[] | undefined>;
    /**
     * Unique identifier of a rule set. The name determines the resource to which the rule set applies. Currently, only default rule sets are supported. The following rule set formats are supported:
     * * `accounts/{account_id}/servicePrincipals/{service_principal_application_id}/ruleSets/default`
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AccessControlRuleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessControlRuleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessControlRuleSetArgs | AccessControlRuleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessControlRuleSetState | undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["grantRules"] = state ? state.grantRules : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AccessControlRuleSetArgs | undefined;
            resourceInputs["grantRules"] = args ? args.grantRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessControlRuleSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessControlRuleSet resources.
 */
export interface AccessControlRuleSetState {
    etag?: pulumi.Input<string>;
    /**
     * The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
     *
     * !> **Warning** Name uniquely identifies a rule set resource. Ensure all the grantRules blocks for a rule set name are present in one `databricks.AccessControlRuleSet` resource block. Otherwise, after applying changes, users might lose their role assignment even if that was not intended.
     */
    grantRules?: pulumi.Input<pulumi.Input<inputs.AccessControlRuleSetGrantRule>[]>;
    /**
     * Unique identifier of a rule set. The name determines the resource to which the rule set applies. Currently, only default rule sets are supported. The following rule set formats are supported:
     * * `accounts/{account_id}/servicePrincipals/{service_principal_application_id}/ruleSets/default`
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessControlRuleSet resource.
 */
export interface AccessControlRuleSetArgs {
    /**
     * The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
     *
     * !> **Warning** Name uniquely identifies a rule set resource. Ensure all the grantRules blocks for a rule set name are present in one `databricks.AccessControlRuleSet` resource block. Otherwise, after applying changes, users might lose their role assignment even if that was not intended.
     */
    grantRules?: pulumi.Input<pulumi.Input<inputs.AccessControlRuleSetGrantRule>[]>;
    /**
     * Unique identifier of a rule set. The name determines the resource to which the rule set applies. Currently, only default rule sets are supported. The following rule set formats are supported:
     * * `accounts/{account_id}/servicePrincipals/{service_principal_application_id}/ruleSets/default`
     */
    name?: pulumi.Input<string>;
}
