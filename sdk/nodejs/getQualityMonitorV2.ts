// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can be used to fetch a quality monitors v2.
 *
 * > **Note** This data source can only be used with an workspace-level provider!
 *
 * ## Example Usage
 *
 * Referring to a quality monitor by uc object type (currently only support `schema`) and object id:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getSchema({
 *     name: "my_catalog.my_schema",
 * });
 * const thisGetQualityMonitorV2 = _this.then(_this => databricks.getQualityMonitorV2({
 *     objectType: "schema",
 *     objectId: _this.schemaInfo?.schemaId,
 * }));
 * ```
 */
export function getQualityMonitorV2(args: GetQualityMonitorV2Args, opts?: pulumi.InvokeOptions): Promise<GetQualityMonitorV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getQualityMonitorV2:getQualityMonitorV2", {
        "objectId": args.objectId,
        "objectType": args.objectType,
    }, opts);
}

/**
 * A collection of arguments for invoking getQualityMonitorV2.
 */
export interface GetQualityMonitorV2Args {
    /**
     * The uuid of the request object. For example, schema id
     */
    objectId: string;
    /**
     * The type of the monitored object. Can be one of the following: schema
     */
    objectType: string;
}

/**
 * A collection of values returned by getQualityMonitorV2.
 */
export interface GetQualityMonitorV2Result {
    /**
     * (AnomalyDetectionConfig)
     */
    readonly anomalyDetectionConfig: outputs.GetQualityMonitorV2AnomalyDetectionConfig;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (string) - The uuid of the request object. For example, schema id
     */
    readonly objectId: string;
    /**
     * (string) - The type of the monitored object. Can be one of the following: schema
     */
    readonly objectType: string;
}
/**
 * This data source can be used to fetch a quality monitors v2.
 *
 * > **Note** This data source can only be used with an workspace-level provider!
 *
 * ## Example Usage
 *
 * Referring to a quality monitor by uc object type (currently only support `schema`) and object id:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as databricks from "@pulumi/databricks";
 *
 * const _this = databricks.getSchema({
 *     name: "my_catalog.my_schema",
 * });
 * const thisGetQualityMonitorV2 = _this.then(_this => databricks.getQualityMonitorV2({
 *     objectType: "schema",
 *     objectId: _this.schemaInfo?.schemaId,
 * }));
 * ```
 */
export function getQualityMonitorV2Output(args: GetQualityMonitorV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetQualityMonitorV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getQualityMonitorV2:getQualityMonitorV2", {
        "objectId": args.objectId,
        "objectType": args.objectType,
    }, opts);
}

/**
 * A collection of arguments for invoking getQualityMonitorV2.
 */
export interface GetQualityMonitorV2OutputArgs {
    /**
     * The uuid of the request object. For example, schema id
     */
    objectId: pulumi.Input<string>;
    /**
     * The type of the monitored object. Can be one of the following: schema
     */
    objectType: pulumi.Input<string>;
}
