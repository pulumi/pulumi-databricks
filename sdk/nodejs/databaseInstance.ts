// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * As of terraform v1.5, resources can be imported through configuration.
 *
 * hcl
 *
 * import {
 *
 *   id = name
 *
 *   to = databricks_database_instance.this
 *
 * }
 *
 * If you are using an older version of terraform, you can import the resource using cli as follows:
 *
 * ```sh
 * $ pulumi import databricks:index/databaseInstance:DatabaseInstance databricks_database_instance name
 * ```
 */
export class DatabaseInstance extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseInstanceState, opts?: pulumi.CustomResourceOptions): DatabaseInstance {
        return new DatabaseInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/databaseInstance:DatabaseInstance';

    /**
     * Returns true if the given object is an instance of DatabaseInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseInstance.__pulumiType;
    }

    /**
     * Password for admin user to create. If not provided, no user will be created
     */
    public readonly adminPassword!: pulumi.Output<string | undefined>;
    /**
     * Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    public readonly adminRolename!: pulumi.Output<string | undefined>;
    /**
     * The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    public readonly capacity!: pulumi.Output<string | undefined>;
    /**
     * (string) - The timestamp when the instance was created
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * (string) - The email of the creator of the instance
     */
    public /*out*/ readonly creator!: pulumi.Output<string>;
    /**
     * The name of the instance. This is the unique identifier for the instance
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (string) - The version of Postgres running on the instance
     */
    public /*out*/ readonly pgVersion!: pulumi.Output<string>;
    /**
     * (string) - The DNS endpoint to connect to the instance for read+write access
     */
    public /*out*/ readonly readWriteDns!: pulumi.Output<string>;
    /**
     * (string) - The current state of the instance. Possible values are: AVAILABLE, DELETING, FAILING_OVER, STARTING, STOPPED, UPDATING
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Whether the instance is stopped
     */
    public readonly stopped!: pulumi.Output<boolean | undefined>;
    /**
     * (string) - An immutable UUID identifier for the instance
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;

    /**
     * Create a DatabaseInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatabaseInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseInstanceArgs | DatabaseInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseInstanceState | undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["adminRolename"] = state ? state.adminRolename : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pgVersion"] = state ? state.pgVersion : undefined;
            resourceInputs["readWriteDns"] = state ? state.readWriteDns : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stopped"] = state ? state.stopped : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
        } else {
            const args = argsOrState as DatabaseInstanceArgs | undefined;
            resourceInputs["adminPassword"] = args ? args.adminPassword : undefined;
            resourceInputs["adminRolename"] = args ? args.adminRolename : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["stopped"] = args ? args.stopped : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["pgVersion"] = undefined /*out*/;
            resourceInputs["readWriteDns"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseInstance resources.
 */
export interface DatabaseInstanceState {
    /**
     * Password for admin user to create. If not provided, no user will be created
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    adminRolename?: pulumi.Input<string>;
    /**
     * The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    capacity?: pulumi.Input<string>;
    /**
     * (string) - The timestamp when the instance was created
     */
    creationTime?: pulumi.Input<string>;
    /**
     * (string) - The email of the creator of the instance
     */
    creator?: pulumi.Input<string>;
    /**
     * The name of the instance. This is the unique identifier for the instance
     */
    name?: pulumi.Input<string>;
    /**
     * (string) - The version of Postgres running on the instance
     */
    pgVersion?: pulumi.Input<string>;
    /**
     * (string) - The DNS endpoint to connect to the instance for read+write access
     */
    readWriteDns?: pulumi.Input<string>;
    /**
     * (string) - The current state of the instance. Possible values are: AVAILABLE, DELETING, FAILING_OVER, STARTING, STOPPED, UPDATING
     */
    state?: pulumi.Input<string>;
    /**
     * Whether the instance is stopped
     */
    stopped?: pulumi.Input<boolean>;
    /**
     * (string) - An immutable UUID identifier for the instance
     */
    uid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseInstance resource.
 */
export interface DatabaseInstanceArgs {
    /**
     * Password for admin user to create. If not provided, no user will be created
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Name of the admin role for the instance. If not provided, defaults to 'databricks_admin'
     */
    adminRolename?: pulumi.Input<string>;
    /**
     * The sku of the instance. Valid values are "CU_1", "CU_2", "CU_4"
     */
    capacity?: pulumi.Input<string>;
    /**
     * The name of the instance. This is the unique identifier for the instance
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the instance is stopped
     */
    stopped?: pulumi.Input<boolean>;
}
