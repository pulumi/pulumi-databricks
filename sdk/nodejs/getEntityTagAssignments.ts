// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEntityTagAssignments(args: GetEntityTagAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityTagAssignmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getEntityTagAssignments:getEntityTagAssignments", {
        "entityName": args.entityName,
        "entityType": args.entityType,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityTagAssignments.
 */
export interface GetEntityTagAssignmentsArgs {
    /**
     * The fully qualified name of the entity to which the tag is assigned
     */
    entityName: string;
    /**
     * The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    entityType: string;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getEntityTagAssignments.
 */
export interface GetEntityTagAssignmentsResult {
    /**
     * (string) - The fully qualified name of the entity to which the tag is assigned
     */
    readonly entityName: string;
    /**
     * (string) - The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    readonly entityType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly tagAssignments: outputs.GetEntityTagAssignmentsTagAssignment[];
    readonly workspaceId?: string;
}
export function getEntityTagAssignmentsOutput(args: GetEntityTagAssignmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEntityTagAssignmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("databricks:index/getEntityTagAssignments:getEntityTagAssignments", {
        "entityName": args.entityName,
        "entityType": args.entityType,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityTagAssignments.
 */
export interface GetEntityTagAssignmentsOutputArgs {
    /**
     * The fully qualified name of the entity to which the tag is assigned
     */
    entityName: pulumi.Input<string>;
    /**
     * The type of the entity to which the tag is assigned. Allowed values are: catalogs, schemas, tables, columns, volumes
     */
    entityType: pulumi.Input<string>;
    /**
     * Workspace ID of the resource
     */
    workspaceId?: pulumi.Input<string>;
}
