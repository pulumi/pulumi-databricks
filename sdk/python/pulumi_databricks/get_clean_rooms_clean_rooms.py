# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetCleanRoomsCleanRoomsResult',
    'AwaitableGetCleanRoomsCleanRoomsResult',
    'get_clean_rooms_clean_rooms',
    'get_clean_rooms_clean_rooms_output',
]

@pulumi.output_type
class GetCleanRoomsCleanRoomsResult:
    """
    A collection of values returned by getCleanRoomsCleanRooms.
    """
    def __init__(__self__, clean_rooms=None, id=None):
        if clean_rooms and not isinstance(clean_rooms, list):
            raise TypeError("Expected argument 'clean_rooms' to be a list")
        pulumi.set(__self__, "clean_rooms", clean_rooms)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="cleanRooms")
    def clean_rooms(self) -> Sequence['outputs.GetCleanRoomsCleanRoomsCleanRoomResult']:
        return pulumi.get(self, "clean_rooms")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetCleanRoomsCleanRoomsResult(GetCleanRoomsCleanRoomsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCleanRoomsCleanRoomsResult(
            clean_rooms=self.clean_rooms,
            id=self.id)


def get_clean_rooms_clean_rooms(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCleanRoomsCleanRoomsResult:
    """
    This data source can be used to fetch the list of clean rooms.

    ## Example Usage

    # Example: Clean Room Datasource (Plural)

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_clean_rooms_clean_room()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('databricks:index/getCleanRoomsCleanRooms:getCleanRoomsCleanRooms', __args__, opts=opts, typ=GetCleanRoomsCleanRoomsResult).value

    return AwaitableGetCleanRoomsCleanRoomsResult(
        clean_rooms=pulumi.get(__ret__, 'clean_rooms'),
        id=pulumi.get(__ret__, 'id'))
def get_clean_rooms_clean_rooms_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCleanRoomsCleanRoomsResult]:
    """
    This data source can be used to fetch the list of clean rooms.

    ## Example Usage

    # Example: Clean Room Datasource (Plural)

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_clean_rooms_clean_room()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('databricks:index/getCleanRoomsCleanRooms:getCleanRoomsCleanRooms', __args__, opts=opts, typ=GetCleanRoomsCleanRoomsResult)
    return __ret__.apply(lambda __response__: GetCleanRoomsCleanRoomsResult(
        clean_rooms=pulumi.get(__response__, 'clean_rooms'),
        id=pulumi.get(__response__, 'id')))
