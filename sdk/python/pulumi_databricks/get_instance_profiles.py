# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetInstanceProfilesResult',
    'AwaitableGetInstanceProfilesResult',
    'get_instance_profiles',
    'get_instance_profiles_output',
]

@pulumi.output_type
class GetInstanceProfilesResult:
    """
    A collection of values returned by getInstanceProfiles.
    """
    def __init__(__self__, id=None, instance_profiles=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_profiles and not isinstance(instance_profiles, list):
            raise TypeError("Expected argument 'instance_profiles' to be a list")
        pulumi.set(__self__, "instance_profiles", instance_profiles)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceProfiles")
    def instance_profiles(self) -> Sequence['outputs.GetInstanceProfilesInstanceProfileResult']:
        """
        Set of objects for a databricks_instance_profile. This contains the following attributes:
        """
        return pulumi.get(self, "instance_profiles")


class AwaitableGetInstanceProfilesResult(GetInstanceProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceProfilesResult(
            id=self.id,
            instance_profiles=self.instance_profiles)


def get_instance_profiles(instance_profiles: Optional[Sequence[pulumi.InputType['GetInstanceProfilesInstanceProfileArgs']]] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceProfilesResult:
    """
    Lists all available databricks_instance_profiles.

    ## Example Usage

    Get all instance profiles:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_instance_profiles()
    pulumi.export("allInstanceProfiles", all.instance_profiles)
    ```


    :param Sequence[pulumi.InputType['GetInstanceProfilesInstanceProfileArgs']] instance_profiles: Set of objects for a databricks_instance_profile. This contains the following attributes:
    """
    __args__ = dict()
    __args__['instanceProfiles'] = instance_profiles
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('databricks:index/getInstanceProfiles:getInstanceProfiles', __args__, opts=opts, typ=GetInstanceProfilesResult).value

    return AwaitableGetInstanceProfilesResult(
        id=pulumi.get(__ret__, 'id'),
        instance_profiles=pulumi.get(__ret__, 'instance_profiles'))


@_utilities.lift_output_func(get_instance_profiles)
def get_instance_profiles_output(instance_profiles: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetInstanceProfilesInstanceProfileArgs']]]]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceProfilesResult]:
    """
    Lists all available databricks_instance_profiles.

    ## Example Usage

    Get all instance profiles:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_instance_profiles()
    pulumi.export("allInstanceProfiles", all.instance_profiles)
    ```


    :param Sequence[pulumi.InputType['GetInstanceProfilesInstanceProfileArgs']] instance_profiles: Set of objects for a databricks_instance_profile. This contains the following attributes:
    """
    ...
