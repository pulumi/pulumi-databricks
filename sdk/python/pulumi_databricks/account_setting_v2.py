# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AccountSettingV2Args', 'AccountSettingV2']

@pulumi.input_type
class AccountSettingV2Args:
    def __init__(__self__, *,
                 aibi_dashboard_embedding_access_policy: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']] = None,
                 aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']] = None,
                 automatic_cluster_update_workspace: Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']] = None,
                 boolean_val: Optional[pulumi.Input['AccountSettingV2BooleanValArgs']] = None,
                 default_data_security_mode: Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']] = None,
                 effective_aibi_dashboard_embedding_access_policy: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']] = None,
                 effective_aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']] = None,
                 effective_automatic_cluster_update_workspace: Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']] = None,
                 effective_default_data_security_mode: Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']] = None,
                 effective_personal_compute: Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']] = None,
                 effective_restrict_workspace_admins: Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']] = None,
                 integer_val: Optional[pulumi.Input['AccountSettingV2IntegerValArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 personal_compute: Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']] = None,
                 restrict_workspace_admins: Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']] = None,
                 string_val: Optional[pulumi.Input['AccountSettingV2StringValArgs']] = None):
        """
        The set of arguments for constructing a AccountSettingV2 resource.
        :param pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs'] automatic_cluster_update_workspace: todo: Mark these Public after onboarded to DSL
        :param pulumi.Input[_builtins.str] name: Name of the setting
        """
        if aibi_dashboard_embedding_access_policy is not None:
            pulumi.set(__self__, "aibi_dashboard_embedding_access_policy", aibi_dashboard_embedding_access_policy)
        if aibi_dashboard_embedding_approved_domains is not None:
            pulumi.set(__self__, "aibi_dashboard_embedding_approved_domains", aibi_dashboard_embedding_approved_domains)
        if automatic_cluster_update_workspace is not None:
            pulumi.set(__self__, "automatic_cluster_update_workspace", automatic_cluster_update_workspace)
        if boolean_val is not None:
            pulumi.set(__self__, "boolean_val", boolean_val)
        if default_data_security_mode is not None:
            pulumi.set(__self__, "default_data_security_mode", default_data_security_mode)
        if effective_aibi_dashboard_embedding_access_policy is not None:
            pulumi.set(__self__, "effective_aibi_dashboard_embedding_access_policy", effective_aibi_dashboard_embedding_access_policy)
        if effective_aibi_dashboard_embedding_approved_domains is not None:
            pulumi.set(__self__, "effective_aibi_dashboard_embedding_approved_domains", effective_aibi_dashboard_embedding_approved_domains)
        if effective_automatic_cluster_update_workspace is not None:
            pulumi.set(__self__, "effective_automatic_cluster_update_workspace", effective_automatic_cluster_update_workspace)
        if effective_default_data_security_mode is not None:
            pulumi.set(__self__, "effective_default_data_security_mode", effective_default_data_security_mode)
        if effective_personal_compute is not None:
            pulumi.set(__self__, "effective_personal_compute", effective_personal_compute)
        if effective_restrict_workspace_admins is not None:
            pulumi.set(__self__, "effective_restrict_workspace_admins", effective_restrict_workspace_admins)
        if integer_val is not None:
            pulumi.set(__self__, "integer_val", integer_val)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if personal_compute is not None:
            pulumi.set(__self__, "personal_compute", personal_compute)
        if restrict_workspace_admins is not None:
            pulumi.set(__self__, "restrict_workspace_admins", restrict_workspace_admins)
        if string_val is not None:
            pulumi.set(__self__, "string_val", string_val)

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingAccessPolicy")
    def aibi_dashboard_embedding_access_policy(self) -> Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']]:
        return pulumi.get(self, "aibi_dashboard_embedding_access_policy")

    @aibi_dashboard_embedding_access_policy.setter
    def aibi_dashboard_embedding_access_policy(self, value: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']]):
        pulumi.set(self, "aibi_dashboard_embedding_access_policy", value)

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingApprovedDomains")
    def aibi_dashboard_embedding_approved_domains(self) -> Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']]:
        return pulumi.get(self, "aibi_dashboard_embedding_approved_domains")

    @aibi_dashboard_embedding_approved_domains.setter
    def aibi_dashboard_embedding_approved_domains(self, value: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']]):
        pulumi.set(self, "aibi_dashboard_embedding_approved_domains", value)

    @_builtins.property
    @pulumi.getter(name="automaticClusterUpdateWorkspace")
    def automatic_cluster_update_workspace(self) -> Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']]:
        """
        todo: Mark these Public after onboarded to DSL
        """
        return pulumi.get(self, "automatic_cluster_update_workspace")

    @automatic_cluster_update_workspace.setter
    def automatic_cluster_update_workspace(self, value: Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']]):
        pulumi.set(self, "automatic_cluster_update_workspace", value)

    @_builtins.property
    @pulumi.getter(name="booleanVal")
    def boolean_val(self) -> Optional[pulumi.Input['AccountSettingV2BooleanValArgs']]:
        return pulumi.get(self, "boolean_val")

    @boolean_val.setter
    def boolean_val(self, value: Optional[pulumi.Input['AccountSettingV2BooleanValArgs']]):
        pulumi.set(self, "boolean_val", value)

    @_builtins.property
    @pulumi.getter(name="defaultDataSecurityMode")
    def default_data_security_mode(self) -> Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']]:
        return pulumi.get(self, "default_data_security_mode")

    @default_data_security_mode.setter
    def default_data_security_mode(self, value: Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']]):
        pulumi.set(self, "default_data_security_mode", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingAccessPolicy")
    def effective_aibi_dashboard_embedding_access_policy(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_access_policy")

    @effective_aibi_dashboard_embedding_access_policy.setter
    def effective_aibi_dashboard_embedding_access_policy(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']]):
        pulumi.set(self, "effective_aibi_dashboard_embedding_access_policy", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingApprovedDomains")
    def effective_aibi_dashboard_embedding_approved_domains(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_approved_domains")

    @effective_aibi_dashboard_embedding_approved_domains.setter
    def effective_aibi_dashboard_embedding_approved_domains(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']]):
        pulumi.set(self, "effective_aibi_dashboard_embedding_approved_domains", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAutomaticClusterUpdateWorkspace")
    def effective_automatic_cluster_update_workspace(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']]:
        return pulumi.get(self, "effective_automatic_cluster_update_workspace")

    @effective_automatic_cluster_update_workspace.setter
    def effective_automatic_cluster_update_workspace(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']]):
        pulumi.set(self, "effective_automatic_cluster_update_workspace", value)

    @_builtins.property
    @pulumi.getter(name="effectiveDefaultDataSecurityMode")
    def effective_default_data_security_mode(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']]:
        return pulumi.get(self, "effective_default_data_security_mode")

    @effective_default_data_security_mode.setter
    def effective_default_data_security_mode(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']]):
        pulumi.set(self, "effective_default_data_security_mode", value)

    @_builtins.property
    @pulumi.getter(name="effectivePersonalCompute")
    def effective_personal_compute(self) -> Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']]:
        return pulumi.get(self, "effective_personal_compute")

    @effective_personal_compute.setter
    def effective_personal_compute(self, value: Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']]):
        pulumi.set(self, "effective_personal_compute", value)

    @_builtins.property
    @pulumi.getter(name="effectiveRestrictWorkspaceAdmins")
    def effective_restrict_workspace_admins(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']]:
        return pulumi.get(self, "effective_restrict_workspace_admins")

    @effective_restrict_workspace_admins.setter
    def effective_restrict_workspace_admins(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']]):
        pulumi.set(self, "effective_restrict_workspace_admins", value)

    @_builtins.property
    @pulumi.getter(name="integerVal")
    def integer_val(self) -> Optional[pulumi.Input['AccountSettingV2IntegerValArgs']]:
        return pulumi.get(self, "integer_val")

    @integer_val.setter
    def integer_val(self, value: Optional[pulumi.Input['AccountSettingV2IntegerValArgs']]):
        pulumi.set(self, "integer_val", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the setting
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="personalCompute")
    def personal_compute(self) -> Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']]:
        return pulumi.get(self, "personal_compute")

    @personal_compute.setter
    def personal_compute(self, value: Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']]):
        pulumi.set(self, "personal_compute", value)

    @_builtins.property
    @pulumi.getter(name="restrictWorkspaceAdmins")
    def restrict_workspace_admins(self) -> Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']]:
        return pulumi.get(self, "restrict_workspace_admins")

    @restrict_workspace_admins.setter
    def restrict_workspace_admins(self, value: Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']]):
        pulumi.set(self, "restrict_workspace_admins", value)

    @_builtins.property
    @pulumi.getter(name="stringVal")
    def string_val(self) -> Optional[pulumi.Input['AccountSettingV2StringValArgs']]:
        return pulumi.get(self, "string_val")

    @string_val.setter
    def string_val(self, value: Optional[pulumi.Input['AccountSettingV2StringValArgs']]):
        pulumi.set(self, "string_val", value)


@pulumi.input_type
class _AccountSettingV2State:
    def __init__(__self__, *,
                 aibi_dashboard_embedding_access_policy: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']] = None,
                 aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']] = None,
                 automatic_cluster_update_workspace: Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']] = None,
                 boolean_val: Optional[pulumi.Input['AccountSettingV2BooleanValArgs']] = None,
                 default_data_security_mode: Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']] = None,
                 effective_aibi_dashboard_embedding_access_policy: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']] = None,
                 effective_aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']] = None,
                 effective_automatic_cluster_update_workspace: Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']] = None,
                 effective_boolean_val: Optional[pulumi.Input['AccountSettingV2EffectiveBooleanValArgs']] = None,
                 effective_default_data_security_mode: Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']] = None,
                 effective_integer_val: Optional[pulumi.Input['AccountSettingV2EffectiveIntegerValArgs']] = None,
                 effective_personal_compute: Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']] = None,
                 effective_restrict_workspace_admins: Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']] = None,
                 effective_string_val: Optional[pulumi.Input['AccountSettingV2EffectiveStringValArgs']] = None,
                 integer_val: Optional[pulumi.Input['AccountSettingV2IntegerValArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 personal_compute: Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']] = None,
                 restrict_workspace_admins: Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']] = None,
                 string_val: Optional[pulumi.Input['AccountSettingV2StringValArgs']] = None):
        """
        Input properties used for looking up and filtering AccountSettingV2 resources.
        :param pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs'] automatic_cluster_update_workspace: todo: Mark these Public after onboarded to DSL
        :param pulumi.Input['AccountSettingV2EffectiveBooleanValArgs'] effective_boolean_val: (BooleanMessage)
        :param pulumi.Input['AccountSettingV2EffectiveIntegerValArgs'] effective_integer_val: (IntegerMessage)
        :param pulumi.Input['AccountSettingV2EffectiveStringValArgs'] effective_string_val: (StringMessage)
        :param pulumi.Input[_builtins.str] name: Name of the setting
        """
        if aibi_dashboard_embedding_access_policy is not None:
            pulumi.set(__self__, "aibi_dashboard_embedding_access_policy", aibi_dashboard_embedding_access_policy)
        if aibi_dashboard_embedding_approved_domains is not None:
            pulumi.set(__self__, "aibi_dashboard_embedding_approved_domains", aibi_dashboard_embedding_approved_domains)
        if automatic_cluster_update_workspace is not None:
            pulumi.set(__self__, "automatic_cluster_update_workspace", automatic_cluster_update_workspace)
        if boolean_val is not None:
            pulumi.set(__self__, "boolean_val", boolean_val)
        if default_data_security_mode is not None:
            pulumi.set(__self__, "default_data_security_mode", default_data_security_mode)
        if effective_aibi_dashboard_embedding_access_policy is not None:
            pulumi.set(__self__, "effective_aibi_dashboard_embedding_access_policy", effective_aibi_dashboard_embedding_access_policy)
        if effective_aibi_dashboard_embedding_approved_domains is not None:
            pulumi.set(__self__, "effective_aibi_dashboard_embedding_approved_domains", effective_aibi_dashboard_embedding_approved_domains)
        if effective_automatic_cluster_update_workspace is not None:
            pulumi.set(__self__, "effective_automatic_cluster_update_workspace", effective_automatic_cluster_update_workspace)
        if effective_boolean_val is not None:
            pulumi.set(__self__, "effective_boolean_val", effective_boolean_val)
        if effective_default_data_security_mode is not None:
            pulumi.set(__self__, "effective_default_data_security_mode", effective_default_data_security_mode)
        if effective_integer_val is not None:
            pulumi.set(__self__, "effective_integer_val", effective_integer_val)
        if effective_personal_compute is not None:
            pulumi.set(__self__, "effective_personal_compute", effective_personal_compute)
        if effective_restrict_workspace_admins is not None:
            pulumi.set(__self__, "effective_restrict_workspace_admins", effective_restrict_workspace_admins)
        if effective_string_val is not None:
            pulumi.set(__self__, "effective_string_val", effective_string_val)
        if integer_val is not None:
            pulumi.set(__self__, "integer_val", integer_val)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if personal_compute is not None:
            pulumi.set(__self__, "personal_compute", personal_compute)
        if restrict_workspace_admins is not None:
            pulumi.set(__self__, "restrict_workspace_admins", restrict_workspace_admins)
        if string_val is not None:
            pulumi.set(__self__, "string_val", string_val)

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingAccessPolicy")
    def aibi_dashboard_embedding_access_policy(self) -> Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']]:
        return pulumi.get(self, "aibi_dashboard_embedding_access_policy")

    @aibi_dashboard_embedding_access_policy.setter
    def aibi_dashboard_embedding_access_policy(self, value: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs']]):
        pulumi.set(self, "aibi_dashboard_embedding_access_policy", value)

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingApprovedDomains")
    def aibi_dashboard_embedding_approved_domains(self) -> Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']]:
        return pulumi.get(self, "aibi_dashboard_embedding_approved_domains")

    @aibi_dashboard_embedding_approved_domains.setter
    def aibi_dashboard_embedding_approved_domains(self, value: Optional[pulumi.Input['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs']]):
        pulumi.set(self, "aibi_dashboard_embedding_approved_domains", value)

    @_builtins.property
    @pulumi.getter(name="automaticClusterUpdateWorkspace")
    def automatic_cluster_update_workspace(self) -> Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']]:
        """
        todo: Mark these Public after onboarded to DSL
        """
        return pulumi.get(self, "automatic_cluster_update_workspace")

    @automatic_cluster_update_workspace.setter
    def automatic_cluster_update_workspace(self, value: Optional[pulumi.Input['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs']]):
        pulumi.set(self, "automatic_cluster_update_workspace", value)

    @_builtins.property
    @pulumi.getter(name="booleanVal")
    def boolean_val(self) -> Optional[pulumi.Input['AccountSettingV2BooleanValArgs']]:
        return pulumi.get(self, "boolean_val")

    @boolean_val.setter
    def boolean_val(self, value: Optional[pulumi.Input['AccountSettingV2BooleanValArgs']]):
        pulumi.set(self, "boolean_val", value)

    @_builtins.property
    @pulumi.getter(name="defaultDataSecurityMode")
    def default_data_security_mode(self) -> Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']]:
        return pulumi.get(self, "default_data_security_mode")

    @default_data_security_mode.setter
    def default_data_security_mode(self, value: Optional[pulumi.Input['AccountSettingV2DefaultDataSecurityModeArgs']]):
        pulumi.set(self, "default_data_security_mode", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingAccessPolicy")
    def effective_aibi_dashboard_embedding_access_policy(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_access_policy")

    @effective_aibi_dashboard_embedding_access_policy.setter
    def effective_aibi_dashboard_embedding_access_policy(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs']]):
        pulumi.set(self, "effective_aibi_dashboard_embedding_access_policy", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingApprovedDomains")
    def effective_aibi_dashboard_embedding_approved_domains(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_approved_domains")

    @effective_aibi_dashboard_embedding_approved_domains.setter
    def effective_aibi_dashboard_embedding_approved_domains(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs']]):
        pulumi.set(self, "effective_aibi_dashboard_embedding_approved_domains", value)

    @_builtins.property
    @pulumi.getter(name="effectiveAutomaticClusterUpdateWorkspace")
    def effective_automatic_cluster_update_workspace(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']]:
        return pulumi.get(self, "effective_automatic_cluster_update_workspace")

    @effective_automatic_cluster_update_workspace.setter
    def effective_automatic_cluster_update_workspace(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs']]):
        pulumi.set(self, "effective_automatic_cluster_update_workspace", value)

    @_builtins.property
    @pulumi.getter(name="effectiveBooleanVal")
    def effective_boolean_val(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveBooleanValArgs']]:
        """
        (BooleanMessage)
        """
        return pulumi.get(self, "effective_boolean_val")

    @effective_boolean_val.setter
    def effective_boolean_val(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveBooleanValArgs']]):
        pulumi.set(self, "effective_boolean_val", value)

    @_builtins.property
    @pulumi.getter(name="effectiveDefaultDataSecurityMode")
    def effective_default_data_security_mode(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']]:
        return pulumi.get(self, "effective_default_data_security_mode")

    @effective_default_data_security_mode.setter
    def effective_default_data_security_mode(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveDefaultDataSecurityModeArgs']]):
        pulumi.set(self, "effective_default_data_security_mode", value)

    @_builtins.property
    @pulumi.getter(name="effectiveIntegerVal")
    def effective_integer_val(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveIntegerValArgs']]:
        """
        (IntegerMessage)
        """
        return pulumi.get(self, "effective_integer_val")

    @effective_integer_val.setter
    def effective_integer_val(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveIntegerValArgs']]):
        pulumi.set(self, "effective_integer_val", value)

    @_builtins.property
    @pulumi.getter(name="effectivePersonalCompute")
    def effective_personal_compute(self) -> Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']]:
        return pulumi.get(self, "effective_personal_compute")

    @effective_personal_compute.setter
    def effective_personal_compute(self, value: Optional[pulumi.Input['AccountSettingV2EffectivePersonalComputeArgs']]):
        pulumi.set(self, "effective_personal_compute", value)

    @_builtins.property
    @pulumi.getter(name="effectiveRestrictWorkspaceAdmins")
    def effective_restrict_workspace_admins(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']]:
        return pulumi.get(self, "effective_restrict_workspace_admins")

    @effective_restrict_workspace_admins.setter
    def effective_restrict_workspace_admins(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs']]):
        pulumi.set(self, "effective_restrict_workspace_admins", value)

    @_builtins.property
    @pulumi.getter(name="effectiveStringVal")
    def effective_string_val(self) -> Optional[pulumi.Input['AccountSettingV2EffectiveStringValArgs']]:
        """
        (StringMessage)
        """
        return pulumi.get(self, "effective_string_val")

    @effective_string_val.setter
    def effective_string_val(self, value: Optional[pulumi.Input['AccountSettingV2EffectiveStringValArgs']]):
        pulumi.set(self, "effective_string_val", value)

    @_builtins.property
    @pulumi.getter(name="integerVal")
    def integer_val(self) -> Optional[pulumi.Input['AccountSettingV2IntegerValArgs']]:
        return pulumi.get(self, "integer_val")

    @integer_val.setter
    def integer_val(self, value: Optional[pulumi.Input['AccountSettingV2IntegerValArgs']]):
        pulumi.set(self, "integer_val", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the setting
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="personalCompute")
    def personal_compute(self) -> Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']]:
        return pulumi.get(self, "personal_compute")

    @personal_compute.setter
    def personal_compute(self, value: Optional[pulumi.Input['AccountSettingV2PersonalComputeArgs']]):
        pulumi.set(self, "personal_compute", value)

    @_builtins.property
    @pulumi.getter(name="restrictWorkspaceAdmins")
    def restrict_workspace_admins(self) -> Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']]:
        return pulumi.get(self, "restrict_workspace_admins")

    @restrict_workspace_admins.setter
    def restrict_workspace_admins(self, value: Optional[pulumi.Input['AccountSettingV2RestrictWorkspaceAdminsArgs']]):
        pulumi.set(self, "restrict_workspace_admins", value)

    @_builtins.property
    @pulumi.getter(name="stringVal")
    def string_val(self) -> Optional[pulumi.Input['AccountSettingV2StringValArgs']]:
        return pulumi.get(self, "string_val")

    @string_val.setter
    def string_val(self, value: Optional[pulumi.Input['AccountSettingV2StringValArgs']]):
        pulumi.set(self, "string_val", value)


@pulumi.type_token("databricks:index/accountSettingV2:AccountSettingV2")
class AccountSettingV2(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
                 aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
                 automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2AutomaticClusterUpdateWorkspaceArgsDict']]] = None,
                 boolean_val: Optional[pulumi.Input[Union['AccountSettingV2BooleanValArgs', 'AccountSettingV2BooleanValArgsDict']]] = None,
                 default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2DefaultDataSecurityModeArgs', 'AccountSettingV2DefaultDataSecurityModeArgsDict']]] = None,
                 effective_aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
                 effective_aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
                 effective_automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgsDict']]] = None,
                 effective_default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2EffectiveDefaultDataSecurityModeArgs', 'AccountSettingV2EffectiveDefaultDataSecurityModeArgsDict']]] = None,
                 effective_personal_compute: Optional[pulumi.Input[Union['AccountSettingV2EffectivePersonalComputeArgs', 'AccountSettingV2EffectivePersonalComputeArgsDict']]] = None,
                 effective_restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs', 'AccountSettingV2EffectiveRestrictWorkspaceAdminsArgsDict']]] = None,
                 integer_val: Optional[pulumi.Input[Union['AccountSettingV2IntegerValArgs', 'AccountSettingV2IntegerValArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 personal_compute: Optional[pulumi.Input[Union['AccountSettingV2PersonalComputeArgs', 'AccountSettingV2PersonalComputeArgsDict']]] = None,
                 restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2RestrictWorkspaceAdminsArgs', 'AccountSettingV2RestrictWorkspaceAdminsArgsDict']]] = None,
                 string_val: Optional[pulumi.Input[Union['AccountSettingV2StringValArgs', 'AccountSettingV2StringValArgsDict']]] = None,
                 __props__=None):
        """
        ## Import

        As of Pulumi v1.5, resources can be imported through configuration.

        hcl

        import {

          id = "name"

          to = databricks_account_setting_v2.this

        }

        If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:

        ```sh
        $ pulumi import databricks:index/accountSettingV2:AccountSettingV2 databricks_account_setting_v2 "name"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2AutomaticClusterUpdateWorkspaceArgsDict']] automatic_cluster_update_workspace: todo: Mark these Public after onboarded to DSL
        :param pulumi.Input[_builtins.str] name: Name of the setting
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AccountSettingV2Args] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Import

        As of Pulumi v1.5, resources can be imported through configuration.

        hcl

        import {

          id = "name"

          to = databricks_account_setting_v2.this

        }

        If you are using an older version of Pulumi, import the resource using the `pulumi import` command as follows:

        ```sh
        $ pulumi import databricks:index/accountSettingV2:AccountSettingV2 databricks_account_setting_v2 "name"
        ```

        :param str resource_name: The name of the resource.
        :param AccountSettingV2Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AccountSettingV2Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
                 aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
                 automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2AutomaticClusterUpdateWorkspaceArgsDict']]] = None,
                 boolean_val: Optional[pulumi.Input[Union['AccountSettingV2BooleanValArgs', 'AccountSettingV2BooleanValArgsDict']]] = None,
                 default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2DefaultDataSecurityModeArgs', 'AccountSettingV2DefaultDataSecurityModeArgsDict']]] = None,
                 effective_aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
                 effective_aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
                 effective_automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgsDict']]] = None,
                 effective_default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2EffectiveDefaultDataSecurityModeArgs', 'AccountSettingV2EffectiveDefaultDataSecurityModeArgsDict']]] = None,
                 effective_personal_compute: Optional[pulumi.Input[Union['AccountSettingV2EffectivePersonalComputeArgs', 'AccountSettingV2EffectivePersonalComputeArgsDict']]] = None,
                 effective_restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs', 'AccountSettingV2EffectiveRestrictWorkspaceAdminsArgsDict']]] = None,
                 integer_val: Optional[pulumi.Input[Union['AccountSettingV2IntegerValArgs', 'AccountSettingV2IntegerValArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 personal_compute: Optional[pulumi.Input[Union['AccountSettingV2PersonalComputeArgs', 'AccountSettingV2PersonalComputeArgsDict']]] = None,
                 restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2RestrictWorkspaceAdminsArgs', 'AccountSettingV2RestrictWorkspaceAdminsArgsDict']]] = None,
                 string_val: Optional[pulumi.Input[Union['AccountSettingV2StringValArgs', 'AccountSettingV2StringValArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AccountSettingV2Args.__new__(AccountSettingV2Args)

            __props__.__dict__["aibi_dashboard_embedding_access_policy"] = aibi_dashboard_embedding_access_policy
            __props__.__dict__["aibi_dashboard_embedding_approved_domains"] = aibi_dashboard_embedding_approved_domains
            __props__.__dict__["automatic_cluster_update_workspace"] = automatic_cluster_update_workspace
            __props__.__dict__["boolean_val"] = boolean_val
            __props__.__dict__["default_data_security_mode"] = default_data_security_mode
            __props__.__dict__["effective_aibi_dashboard_embedding_access_policy"] = effective_aibi_dashboard_embedding_access_policy
            __props__.__dict__["effective_aibi_dashboard_embedding_approved_domains"] = effective_aibi_dashboard_embedding_approved_domains
            __props__.__dict__["effective_automatic_cluster_update_workspace"] = effective_automatic_cluster_update_workspace
            __props__.__dict__["effective_default_data_security_mode"] = effective_default_data_security_mode
            __props__.__dict__["effective_personal_compute"] = effective_personal_compute
            __props__.__dict__["effective_restrict_workspace_admins"] = effective_restrict_workspace_admins
            __props__.__dict__["integer_val"] = integer_val
            __props__.__dict__["name"] = name
            __props__.__dict__["personal_compute"] = personal_compute
            __props__.__dict__["restrict_workspace_admins"] = restrict_workspace_admins
            __props__.__dict__["string_val"] = string_val
            __props__.__dict__["effective_boolean_val"] = None
            __props__.__dict__["effective_integer_val"] = None
            __props__.__dict__["effective_string_val"] = None
        super(AccountSettingV2, __self__).__init__(
            'databricks:index/accountSettingV2:AccountSettingV2',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2AibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
            aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2AibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
            automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2AutomaticClusterUpdateWorkspaceArgsDict']]] = None,
            boolean_val: Optional[pulumi.Input[Union['AccountSettingV2BooleanValArgs', 'AccountSettingV2BooleanValArgsDict']]] = None,
            default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2DefaultDataSecurityModeArgs', 'AccountSettingV2DefaultDataSecurityModeArgsDict']]] = None,
            effective_aibi_dashboard_embedding_access_policy: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicyArgsDict']]] = None,
            effective_aibi_dashboard_embedding_approved_domains: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgs', 'AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomainsArgsDict']]] = None,
            effective_automatic_cluster_update_workspace: Optional[pulumi.Input[Union['AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2EffectiveAutomaticClusterUpdateWorkspaceArgsDict']]] = None,
            effective_boolean_val: Optional[pulumi.Input[Union['AccountSettingV2EffectiveBooleanValArgs', 'AccountSettingV2EffectiveBooleanValArgsDict']]] = None,
            effective_default_data_security_mode: Optional[pulumi.Input[Union['AccountSettingV2EffectiveDefaultDataSecurityModeArgs', 'AccountSettingV2EffectiveDefaultDataSecurityModeArgsDict']]] = None,
            effective_integer_val: Optional[pulumi.Input[Union['AccountSettingV2EffectiveIntegerValArgs', 'AccountSettingV2EffectiveIntegerValArgsDict']]] = None,
            effective_personal_compute: Optional[pulumi.Input[Union['AccountSettingV2EffectivePersonalComputeArgs', 'AccountSettingV2EffectivePersonalComputeArgsDict']]] = None,
            effective_restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2EffectiveRestrictWorkspaceAdminsArgs', 'AccountSettingV2EffectiveRestrictWorkspaceAdminsArgsDict']]] = None,
            effective_string_val: Optional[pulumi.Input[Union['AccountSettingV2EffectiveStringValArgs', 'AccountSettingV2EffectiveStringValArgsDict']]] = None,
            integer_val: Optional[pulumi.Input[Union['AccountSettingV2IntegerValArgs', 'AccountSettingV2IntegerValArgsDict']]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            personal_compute: Optional[pulumi.Input[Union['AccountSettingV2PersonalComputeArgs', 'AccountSettingV2PersonalComputeArgsDict']]] = None,
            restrict_workspace_admins: Optional[pulumi.Input[Union['AccountSettingV2RestrictWorkspaceAdminsArgs', 'AccountSettingV2RestrictWorkspaceAdminsArgsDict']]] = None,
            string_val: Optional[pulumi.Input[Union['AccountSettingV2StringValArgs', 'AccountSettingV2StringValArgsDict']]] = None) -> 'AccountSettingV2':
        """
        Get an existing AccountSettingV2 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['AccountSettingV2AutomaticClusterUpdateWorkspaceArgs', 'AccountSettingV2AutomaticClusterUpdateWorkspaceArgsDict']] automatic_cluster_update_workspace: todo: Mark these Public after onboarded to DSL
        :param pulumi.Input[Union['AccountSettingV2EffectiveBooleanValArgs', 'AccountSettingV2EffectiveBooleanValArgsDict']] effective_boolean_val: (BooleanMessage)
        :param pulumi.Input[Union['AccountSettingV2EffectiveIntegerValArgs', 'AccountSettingV2EffectiveIntegerValArgsDict']] effective_integer_val: (IntegerMessage)
        :param pulumi.Input[Union['AccountSettingV2EffectiveStringValArgs', 'AccountSettingV2EffectiveStringValArgsDict']] effective_string_val: (StringMessage)
        :param pulumi.Input[_builtins.str] name: Name of the setting
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AccountSettingV2State.__new__(_AccountSettingV2State)

        __props__.__dict__["aibi_dashboard_embedding_access_policy"] = aibi_dashboard_embedding_access_policy
        __props__.__dict__["aibi_dashboard_embedding_approved_domains"] = aibi_dashboard_embedding_approved_domains
        __props__.__dict__["automatic_cluster_update_workspace"] = automatic_cluster_update_workspace
        __props__.__dict__["boolean_val"] = boolean_val
        __props__.__dict__["default_data_security_mode"] = default_data_security_mode
        __props__.__dict__["effective_aibi_dashboard_embedding_access_policy"] = effective_aibi_dashboard_embedding_access_policy
        __props__.__dict__["effective_aibi_dashboard_embedding_approved_domains"] = effective_aibi_dashboard_embedding_approved_domains
        __props__.__dict__["effective_automatic_cluster_update_workspace"] = effective_automatic_cluster_update_workspace
        __props__.__dict__["effective_boolean_val"] = effective_boolean_val
        __props__.__dict__["effective_default_data_security_mode"] = effective_default_data_security_mode
        __props__.__dict__["effective_integer_val"] = effective_integer_val
        __props__.__dict__["effective_personal_compute"] = effective_personal_compute
        __props__.__dict__["effective_restrict_workspace_admins"] = effective_restrict_workspace_admins
        __props__.__dict__["effective_string_val"] = effective_string_val
        __props__.__dict__["integer_val"] = integer_val
        __props__.__dict__["name"] = name
        __props__.__dict__["personal_compute"] = personal_compute
        __props__.__dict__["restrict_workspace_admins"] = restrict_workspace_admins
        __props__.__dict__["string_val"] = string_val
        return AccountSettingV2(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingAccessPolicy")
    def aibi_dashboard_embedding_access_policy(self) -> pulumi.Output[Optional['outputs.AccountSettingV2AibiDashboardEmbeddingAccessPolicy']]:
        return pulumi.get(self, "aibi_dashboard_embedding_access_policy")

    @_builtins.property
    @pulumi.getter(name="aibiDashboardEmbeddingApprovedDomains")
    def aibi_dashboard_embedding_approved_domains(self) -> pulumi.Output[Optional['outputs.AccountSettingV2AibiDashboardEmbeddingApprovedDomains']]:
        return pulumi.get(self, "aibi_dashboard_embedding_approved_domains")

    @_builtins.property
    @pulumi.getter(name="automaticClusterUpdateWorkspace")
    def automatic_cluster_update_workspace(self) -> pulumi.Output[Optional['outputs.AccountSettingV2AutomaticClusterUpdateWorkspace']]:
        """
        todo: Mark these Public after onboarded to DSL
        """
        return pulumi.get(self, "automatic_cluster_update_workspace")

    @_builtins.property
    @pulumi.getter(name="booleanVal")
    def boolean_val(self) -> pulumi.Output[Optional['outputs.AccountSettingV2BooleanVal']]:
        return pulumi.get(self, "boolean_val")

    @_builtins.property
    @pulumi.getter(name="defaultDataSecurityMode")
    def default_data_security_mode(self) -> pulumi.Output[Optional['outputs.AccountSettingV2DefaultDataSecurityMode']]:
        return pulumi.get(self, "default_data_security_mode")

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingAccessPolicy")
    def effective_aibi_dashboard_embedding_access_policy(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectiveAibiDashboardEmbeddingAccessPolicy']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_access_policy")

    @_builtins.property
    @pulumi.getter(name="effectiveAibiDashboardEmbeddingApprovedDomains")
    def effective_aibi_dashboard_embedding_approved_domains(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectiveAibiDashboardEmbeddingApprovedDomains']]:
        return pulumi.get(self, "effective_aibi_dashboard_embedding_approved_domains")

    @_builtins.property
    @pulumi.getter(name="effectiveAutomaticClusterUpdateWorkspace")
    def effective_automatic_cluster_update_workspace(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectiveAutomaticClusterUpdateWorkspace']]:
        return pulumi.get(self, "effective_automatic_cluster_update_workspace")

    @_builtins.property
    @pulumi.getter(name="effectiveBooleanVal")
    def effective_boolean_val(self) -> pulumi.Output['outputs.AccountSettingV2EffectiveBooleanVal']:
        """
        (BooleanMessage)
        """
        return pulumi.get(self, "effective_boolean_val")

    @_builtins.property
    @pulumi.getter(name="effectiveDefaultDataSecurityMode")
    def effective_default_data_security_mode(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectiveDefaultDataSecurityMode']]:
        return pulumi.get(self, "effective_default_data_security_mode")

    @_builtins.property
    @pulumi.getter(name="effectiveIntegerVal")
    def effective_integer_val(self) -> pulumi.Output['outputs.AccountSettingV2EffectiveIntegerVal']:
        """
        (IntegerMessage)
        """
        return pulumi.get(self, "effective_integer_val")

    @_builtins.property
    @pulumi.getter(name="effectivePersonalCompute")
    def effective_personal_compute(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectivePersonalCompute']]:
        return pulumi.get(self, "effective_personal_compute")

    @_builtins.property
    @pulumi.getter(name="effectiveRestrictWorkspaceAdmins")
    def effective_restrict_workspace_admins(self) -> pulumi.Output[Optional['outputs.AccountSettingV2EffectiveRestrictWorkspaceAdmins']]:
        return pulumi.get(self, "effective_restrict_workspace_admins")

    @_builtins.property
    @pulumi.getter(name="effectiveStringVal")
    def effective_string_val(self) -> pulumi.Output['outputs.AccountSettingV2EffectiveStringVal']:
        """
        (StringMessage)
        """
        return pulumi.get(self, "effective_string_val")

    @_builtins.property
    @pulumi.getter(name="integerVal")
    def integer_val(self) -> pulumi.Output[Optional['outputs.AccountSettingV2IntegerVal']]:
        return pulumi.get(self, "integer_val")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Name of the setting
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="personalCompute")
    def personal_compute(self) -> pulumi.Output[Optional['outputs.AccountSettingV2PersonalCompute']]:
        return pulumi.get(self, "personal_compute")

    @_builtins.property
    @pulumi.getter(name="restrictWorkspaceAdmins")
    def restrict_workspace_admins(self) -> pulumi.Output[Optional['outputs.AccountSettingV2RestrictWorkspaceAdmins']]:
        return pulumi.get(self, "restrict_workspace_admins")

    @_builtins.property
    @pulumi.getter(name="stringVal")
    def string_val(self) -> pulumi.Output[Optional['outputs.AccountSettingV2StringVal']]:
        return pulumi.get(self, "string_val")

