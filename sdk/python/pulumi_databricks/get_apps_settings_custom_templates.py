# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetAppsSettingsCustomTemplatesResult',
    'AwaitableGetAppsSettingsCustomTemplatesResult',
    'get_apps_settings_custom_templates',
    'get_apps_settings_custom_templates_output',
]

@pulumi.output_type
class GetAppsSettingsCustomTemplatesResult:
    """
    A collection of values returned by getAppsSettingsCustomTemplates.
    """
    def __init__(__self__, id=None, templates=None, workspace_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if templates and not isinstance(templates, list):
            raise TypeError("Expected argument 'templates' to be a list")
        pulumi.set(__self__, "templates", templates)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def templates(self) -> Sequence['outputs.GetAppsSettingsCustomTemplatesTemplateResult']:
        return pulumi.get(self, "templates")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "workspace_id")


class AwaitableGetAppsSettingsCustomTemplatesResult(GetAppsSettingsCustomTemplatesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppsSettingsCustomTemplatesResult(
            id=self.id,
            templates=self.templates,
            workspace_id=self.workspace_id)


def get_apps_settings_custom_templates(workspace_id: Optional[_builtins.str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppsSettingsCustomTemplatesResult:
    """
    This data source can be used to fetch the list of Custom Templates within the workspace.
    The list can then be accessed via the data object's `templates` field.

    ## Example Usage

    Getting a list of all Custom Templates:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_apps_settings_custom_templates()
    pulumi.export("allCustomTemplates", all.templates)
    ```


    :param _builtins.str workspace_id: Workspace ID of the resource
    """
    __args__ = dict()
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('databricks:index/getAppsSettingsCustomTemplates:getAppsSettingsCustomTemplates', __args__, opts=opts, typ=GetAppsSettingsCustomTemplatesResult).value

    return AwaitableGetAppsSettingsCustomTemplatesResult(
        id=pulumi.get(__ret__, 'id'),
        templates=pulumi.get(__ret__, 'templates'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))
def get_apps_settings_custom_templates_output(workspace_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppsSettingsCustomTemplatesResult]:
    """
    This data source can be used to fetch the list of Custom Templates within the workspace.
    The list can then be accessed via the data object's `templates` field.

    ## Example Usage

    Getting a list of all Custom Templates:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_apps_settings_custom_templates()
    pulumi.export("allCustomTemplates", all.templates)
    ```


    :param _builtins.str workspace_id: Workspace ID of the resource
    """
    __args__ = dict()
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('databricks:index/getAppsSettingsCustomTemplates:getAppsSettingsCustomTemplates', __args__, opts=opts, typ=GetAppsSettingsCustomTemplatesResult)
    return __ret__.apply(lambda __response__: GetAppsSettingsCustomTemplatesResult(
        id=pulumi.get(__response__, 'id'),
        templates=pulumi.get(__response__, 'templates'),
        workspace_id=pulumi.get(__response__, 'workspace_id')))
