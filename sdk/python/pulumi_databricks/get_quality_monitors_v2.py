# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetQualityMonitorsV2Result',
    'AwaitableGetQualityMonitorsV2Result',
    'get_quality_monitors_v2',
    'get_quality_monitors_v2_output',
]

@pulumi.output_type
class GetQualityMonitorsV2Result:
    """
    A collection of values returned by getQualityMonitorsV2.
    """
    def __init__(__self__, id=None, quality_monitors=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if quality_monitors and not isinstance(quality_monitors, list):
            raise TypeError("Expected argument 'quality_monitors' to be a list")
        pulumi.set(__self__, "quality_monitors", quality_monitors)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="qualityMonitors")
    def quality_monitors(self) -> Sequence['outputs.GetQualityMonitorsV2QualityMonitorResult']:
        return pulumi.get(self, "quality_monitors")


class AwaitableGetQualityMonitorsV2Result(GetQualityMonitorsV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetQualityMonitorsV2Result(
            id=self.id,
            quality_monitors=self.quality_monitors)


def get_quality_monitors_v2(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetQualityMonitorsV2Result:
    """
    This data source can be used to fetch the list of quality monitors v2.

    > **Note** This data source can only be used with an workspace-level provider!

    ## Example Usage

    Getting a list of all quality monitors:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_quality_monitors_v2()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('databricks:index/getQualityMonitorsV2:getQualityMonitorsV2', __args__, opts=opts, typ=GetQualityMonitorsV2Result).value

    return AwaitableGetQualityMonitorsV2Result(
        id=pulumi.get(__ret__, 'id'),
        quality_monitors=pulumi.get(__ret__, 'quality_monitors'))
def get_quality_monitors_v2_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetQualityMonitorsV2Result]:
    """
    This data source can be used to fetch the list of quality monitors v2.

    > **Note** This data source can only be used with an workspace-level provider!

    ## Example Usage

    Getting a list of all quality monitors:

    ```python
    import pulumi
    import pulumi_databricks as databricks

    all = databricks.get_quality_monitors_v2()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('databricks:index/getQualityMonitorsV2:getQualityMonitorsV2', __args__, opts=opts, typ=GetQualityMonitorsV2Result)
    return __ret__.apply(lambda __response__: GetQualityMonitorsV2Result(
        id=pulumi.get(__response__, 'id'),
        quality_monitors=pulumi.get(__response__, 'quality_monitors')))
